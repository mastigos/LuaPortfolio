<?xml version="1.0" encoding="UTF-8"?>
<!DOCTYPE MudletPackage>
<MudletPackage version="1.001">
	<TriggerPackage>
		<TriggerGroup isActive="yes" isFolder="yes" isTempTrigger="no" isMultiline="no" isPerlSlashGOption="no" isColorizerTrigger="no" isFilterTrigger="no" isSoundTrigger="no" isColorTrigger="no" isColorTriggerFg="no" isColorTriggerBg="no">
			<name>mudlet-mapper</name>
			<script></script>
			<triggerType>0</triggerType>
			<conditonLineDelta>0</conditonLineDelta>
			<mStayOpen>0</mStayOpen>
			<mCommand></mCommand>
			<packageName>mudlet-mapper</packageName>
			<mFgColor>#ff0000</mFgColor>
			<mBgColor>#ffff00</mBgColor>
			<mSoundFile></mSoundFile>
			<colorTriggerFgColor>#000000</colorTriggerFgColor>
			<colorTriggerBgColor>#000000</colorTriggerBgColor>
			<regexCodeList />
			<regexCodePropertyList />
			<TriggerGroup isActive="yes" isFolder="yes" isTempTrigger="no" isMultiline="no" isPerlSlashGOption="no" isColorizerTrigger="no" isFilterTrigger="no" isSoundTrigger="no" isColorTrigger="no" isColorTriggerFg="no" isColorTriggerBg="no">
				<name>Mudlet Mapper</name>
				<script></script>
				<triggerType>0</triggerType>
				<conditonLineDelta>0</conditonLineDelta>
				<mStayOpen>0</mStayOpen>
				<mCommand></mCommand>
				<packageName></packageName>
				<mFgColor>#ff0000</mFgColor>
				<mBgColor>#ffff00</mBgColor>
				<mSoundFile></mSoundFile>
				<colorTriggerFgColor>#000000</colorTriggerFgColor>
				<colorTriggerBgColor>#000000</colorTriggerBgColor>
				<regexCodeList />
				<regexCodePropertyList />
				<Trigger isActive="yes" isFolder="no" isTempTrigger="no" isMultiline="no" isPerlSlashGOption="no" isColorizerTrigger="no" isFilterTrigger="no" isSoundTrigger="no" isColorTrigger="no" isColorTriggerFg="no" isColorTriggerBg="no">
					<name>Have to swim</name>
					<script>mmp.swim()</script>
					<triggerType>0</triggerType>
					<conditonLineDelta>0</conditonLineDelta>
					<mStayOpen>0</mStayOpen>
					<mCommand></mCommand>
					<packageName></packageName>
					<mFgColor>#ff0000</mFgColor>
					<mBgColor>#ffff00</mBgColor>
					<mSoundFile></mSoundFile>
					<colorTriggerFgColor>#000000</colorTriggerFgColor>
					<colorTriggerBgColor>#000000</colorTriggerBgColor>
					<regexCodeList>
						<string>There's water ahead of you. You'll have to swim in that direction to make it through.</string>
						<string>There's water ahead of you. You'll have to swim in that direction to make it </string>
						<string>There's water ahead of you. You'll have to SWIM </string>
						<string>You'll have to swim to make it through the water in that direction.</string>
						<string>The water is too deep for you to walk that way, you must swim.</string>
						<string>You'll have to SWIM</string>
					</regexCodeList>
					<regexCodePropertyList>
						<integer>3</integer>
						<integer>3</integer>
						<integer>2</integer>
						<integer>3</integer>
						<integer>3</integer>
						<integer>2</integer>
					</regexCodePropertyList>
				</Trigger>
				<Trigger isActive="yes" isFolder="no" isTempTrigger="no" isMultiline="no" isPerlSlashGOption="no" isColorizerTrigger="no" isFilterTrigger="no" isSoundTrigger="no" isColorTrigger="no" isColorTriggerFg="no" isColorTriggerBg="no">
					<name>Rubble at the exit</name>
					<script>mmp.customwalkdelay(2)</script>
					<triggerType>0</triggerType>
					<conditonLineDelta>0</conditonLineDelta>
					<mStayOpen>0</mStayOpen>
					<mCommand></mCommand>
					<packageName></packageName>
					<mFgColor>#ff0000</mFgColor>
					<mBgColor>#ffff00</mBgColor>
					<mSoundFile></mSoundFile>
					<colorTriggerFgColor>#000000</colorTriggerFgColor>
					<colorTriggerBgColor>#000000</colorTriggerBgColor>
					<regexCodeList>
						<string>You begin to slowly clamber over the rubble that blocks your way.</string>
						<string>You begin to slowly clamber over a pile of rubble that blocks your way.</string>
						<string>You start plodding carefully across the constructed trenches.</string>
						<string>You struggle to climb over the snow drift in your way.</string>
						<string>You struggle to climb over the sand dune in your way.</string>
					</regexCodeList>
					<regexCodePropertyList>
						<integer>3</integer>
						<integer>3</integer>
						<integer>3</integer>
						<integer>3</integer>
						<integer>3</integer>
					</regexCodePropertyList>
				</Trigger>
				<Trigger isActive="yes" isFolder="no" isTempTrigger="no" isMultiline="no" isPerlSlashGOption="no" isColorizerTrigger="no" isFilterTrigger="no" isSoundTrigger="no" isColorTrigger="no" isColorTriggerFg="no" isColorTriggerBg="no">
					<name>Too quick</name>
					<script>if mmp.autowalking then
  mmp.deleteLineP()
end</script>
					<triggerType>0</triggerType>
					<conditonLineDelta>99</conditonLineDelta>
					<mStayOpen>0</mStayOpen>
					<mCommand></mCommand>
					<packageName></packageName>
					<mFgColor>#ff0000</mFgColor>
					<mBgColor>#ffff00</mBgColor>
					<mSoundFile></mSoundFile>
					<colorTriggerFgColor>#000000</colorTriggerFgColor>
					<colorTriggerBgColor>#000000</colorTriggerBgColor>
					<regexCodeList>
						<string>Now now, don't be so hasty!</string>
						<string>You can not move that fast!</string>
						<string>You cannot move that fast, slow down!</string>
					</regexCodeList>
					<regexCodePropertyList>
						<integer>3</integer>
						<integer>3</integer>
						<integer>3</integer>
					</regexCodePropertyList>
				</Trigger>
				<Trigger isActive="yes" isFolder="no" isTempTrigger="no" isMultiline="no" isPerlSlashGOption="no" isColorizerTrigger="no" isFilterTrigger="no" isSoundTrigger="no" isColorTrigger="no" isColorTriggerFg="no" isColorTriggerBg="no">
					<name>Hobbling</name>
					<script>mmp.customwalkdelay(2)</script>
					<triggerType>0</triggerType>
					<conditonLineDelta>0</conditonLineDelta>
					<mStayOpen>0</mStayOpen>
					<mCommand></mCommand>
					<packageName></packageName>
					<mFgColor>#ff0000</mFgColor>
					<mBgColor>#ffff00</mBgColor>
					<mSoundFile></mSoundFile>
					<colorTriggerFgColor>#000000</colorTriggerFgColor>
					<colorTriggerBgColor>#000000</colorTriggerBgColor>
					<regexCodeList>
						<string>You slowly hobble</string>
						<string>The shot in your leg slows you as you hobble away.</string>
					</regexCodeList>
					<regexCodePropertyList>
						<integer>2</integer>
						<integer>3</integer>
					</regexCodePropertyList>
				</Trigger>
				<Trigger isActive="yes" isFolder="no" isTempTrigger="no" isMultiline="no" isPerlSlashGOption="no" isColorizerTrigger="no" isFilterTrigger="no" isSoundTrigger="no" isColorTrigger="no" isColorTriggerFg="no" isColorTriggerBg="no">
					<name>Frozen</name>
					<script>mmp.customwalkdelay(2)</script>
					<triggerType>0</triggerType>
					<conditonLineDelta>0</conditonLineDelta>
					<mStayOpen>0</mStayOpen>
					<mCommand></mCommand>
					<packageName></packageName>
					<mFgColor>#ff0000</mFgColor>
					<mBgColor>#ffff00</mBgColor>
					<mSoundFile></mSoundFile>
					<colorTriggerFgColor>#000000</colorTriggerFgColor>
					<colorTriggerBgColor>#000000</colorTriggerBgColor>
					<regexCodeList>
						<string>You begin moving your frozen body slowly</string>
					</regexCodeList>
					<regexCodePropertyList>
						<integer>2</integer>
					</regexCodePropertyList>
				</Trigger>
				<Trigger isActive="yes" isFolder="no" isTempTrigger="no" isMultiline="yes" isPerlSlashGOption="no" isColorizerTrigger="no" isFilterTrigger="no" isSoundTrigger="no" isColorTrigger="no" isColorTriggerFg="no" isColorTriggerBg="no">
					<name>People here</name>
					<script>mmp.pdb_lastupdate = {}</script>
					<triggerType>0</triggerType>
					<conditonLineDelta>1</conditonLineDelta>
					<mStayOpen>0</mStayOpen>
					<mCommand></mCommand>
					<packageName></packageName>
					<mFgColor>#ff0000</mFgColor>
					<mBgColor>#ffff00</mBgColor>
					<mSoundFile></mSoundFile>
					<colorTriggerFgColor>#000000</colorTriggerFgColor>
					<colorTriggerBgColor>#000000</colorTriggerBgColor>
					<regexCodeList>
						<string>You see the following people here:</string>
						<string>1</string>
					</regexCodeList>
					<regexCodePropertyList>
						<integer>3</integer>
						<integer>5</integer>
					</regexCodePropertyList>
					<Trigger isActive="yes" isFolder="no" isTempTrigger="no" isMultiline="no" isPerlSlashGOption="yes" isColorizerTrigger="no" isFilterTrigger="no" isSoundTrigger="no" isColorTrigger="no" isColorTriggerFg="no" isColorTriggerBg="no">
						<name>Person</name>
						<script>for i = 1, #matches, 2 do
  mmp.pdb[matches[i]] = mmp.currentroomname
  mmp.pdb_lastupdate[matches[i]] = true
  raiseEvent("mmapper updated pdb")
end</script>
						<triggerType>0</triggerType>
						<conditonLineDelta>0</conditonLineDelta>
						<mStayOpen>0</mStayOpen>
						<mCommand></mCommand>
						<packageName></packageName>
						<mFgColor>#aaff00</mFgColor>
						<mBgColor>#ffff00</mBgColor>
						<mSoundFile></mSoundFile>
						<colorTriggerFgColor>#000000</colorTriggerFgColor>
						<colorTriggerBgColor>#000000</colorTriggerBgColor>
						<regexCodeList>
							<string>([A-Z][a-z]+)</string>
						</regexCodeList>
						<regexCodePropertyList>
							<integer>1</integer>
						</regexCodePropertyList>
					</Trigger>
				</Trigger>
				<Trigger isActive="yes" isFolder="no" isTempTrigger="no" isMultiline="no" isPerlSlashGOption="no" isColorizerTrigger="no" isFilterTrigger="no" isSoundTrigger="no" isColorTrigger="no" isColorTriggerFg="no" isColorTriggerBg="no">
					<name>Retardation/aeon walk delay</name>
					<script>mmp.customwalkdelay(2)</script>
					<triggerType>0</triggerType>
					<conditonLineDelta>0</conditonLineDelta>
					<mStayOpen>0</mStayOpen>
					<mCommand></mCommand>
					<packageName></packageName>
					<mFgColor>#ff0000</mFgColor>
					<mBgColor>#ffff00</mBgColor>
					<mSoundFile></mSoundFile>
					<colorTriggerFgColor>#000000</colorTriggerFgColor>
					<colorTriggerBgColor>#000000</colorTriggerBgColor>
					<regexCodeList>
						<string>You move sluggishly into action.</string>
					</regexCodeList>
					<regexCodePropertyList>
						<integer>3</integer>
					</regexCodePropertyList>
				</Trigger>
				<Trigger isActive="yes" isFolder="no" isTempTrigger="no" isMultiline="no" isPerlSlashGOption="no" isColorizerTrigger="no" isFilterTrigger="no" isSoundTrigger="no" isColorTrigger="no" isColorTriggerFg="no" isColorTriggerBg="no">
					<name>Scent (Achaea+Imperian)</name>
					<script>mmp.roomEcho(matches[2]) </script>
					<triggerType>0</triggerType>
					<conditonLineDelta>0</conditonLineDelta>
					<mStayOpen>0</mStayOpen>
					<mCommand></mCommand>
					<packageName></packageName>
					<mFgColor>#ff0000</mFgColor>
					<mBgColor>#ffff00</mBgColor>
					<mSoundFile></mSoundFile>
					<colorTriggerFgColor>#000000</colorTriggerFgColor>
					<colorTriggerBgColor>#000000</colorTriggerBgColor>
					<regexCodeList>
						<string>^You detect traces of scent from (.+)\.$</string>
					</regexCodeList>
					<regexCodePropertyList>
						<integer>1</integer>
					</regexCodePropertyList>
				</Trigger>
				<Trigger isActive="yes" isFolder="no" isTempTrigger="no" isMultiline="no" isPerlSlashGOption="no" isColorizerTrigger="no" isFilterTrigger="no" isSoundTrigger="no" isColorTrigger="no" isColorTriggerFg="no" isColorTriggerBg="no">
					<name>Alertness (Achaea+Imperian)</name>
					<script>mmp.alertness = mmp.alertness or {}
local alertness = mmp.alertness
 
local roomexists, getRoomName, anytolong, matches, deleteLine = mmp.roomexists, getRoomName, mmp.anytolong, matches, deleteLine
 
if mmp.debug then
 mmp.alertnessTime = mmp.alertnessTime or createStopWatch()
 startStopWatch(mmp.alertnessTime)
end
 
if matches[4] ~= "location" then
  local longexitname = matches[4]
  alertness[longexitname] = alertness[longexitname] or {}
  alertness[longexitname][#alertness[longexitname]+1] = matches[2]
  deleteLine()
elseif matches[4] == "location" then
  local currentroomname = mmp.cleanroomname(mmp.currentroomname)
  if matches[3] == currentroomname then
    alertness.here = alertness.here or {}
    alertness.here[#alertness.here+1] = matches[2]
    deleteLine()
  end
end


if not mmp.firstAlert then
	mmp.firstAlert = true
	mmp.pdb_lastupdate = {}
end
 
mmp.pdb[matches[2]] = matches[3]
mmp.pdb_lastupdate[matches[2]] = true
 
enableTrigger"Mudlet Mapper prompt trigger"
 
if mmp.debug then mmp.echo("alertness trigger for "..matches[2].." took "..stopStopWatch(mmp.alertnessTime).."s.") end</script>
					<triggerType>0</triggerType>
					<conditonLineDelta>0</conditonLineDelta>
					<mStayOpen>0</mStayOpen>
					<mCommand></mCommand>
					<packageName></packageName>
					<mFgColor>#ff0000</mFgColor>
					<mBgColor>#ffff00</mBgColor>
					<mSoundFile></mSoundFile>
					<colorTriggerFgColor>#000000</colorTriggerFgColor>
					<colorTriggerBgColor>#000000</colorTriggerBgColor>
					<regexCodeList>
						<string>^Your enhanced senses inform you that (\w+) has entered (.+?)(?:, to the| at your) (\w+)\.$</string>
					</regexCodeList>
					<regexCodePropertyList>
						<integer>1</integer>
					</regexCodePropertyList>
				</Trigger>
				<Trigger isActive="no" isFolder="no" isTempTrigger="no" isMultiline="no" isPerlSlashGOption="no" isColorizerTrigger="no" isFilterTrigger="no" isSoundTrigger="no" isColorTrigger="no" isColorTriggerFg="no" isColorTriggerBg="no">
					<name>Mudlet Mapper prompt trigger</name>
					<script>-- to be enabled by functions that need it and disabled after it's done. Sort of like a cheap prompttrigger from Svo.
mmp.firstAlert = false
-- handle alertness
if mmp.alertness and next(mmp.alertness) then

  local dirs = {}
  for direction, _ in pairs(mmp.alertness) do dirs[#dirs+1] = direction end
  local people = select(2, next(mmp.alertness)) or {}

  moveCursor(0, getLineNumber())

  if ndb then
    local getcolor = ndb.getcolor
    for i = 1, #people do
      people[i] = getcolor(people[i])..people[i]
    end
  end

  cinsertText("&lt;red&gt;[&lt;cyan&gt;" .. table.concat(dirs, ', ') .. " &lt;red&gt;-"..(#dirs &gt; 1 and ("\n  ") or '').." &lt;white&gt;" .. ((svo and svo.concatand) and svo.concatand(people) or table.concat(people, ', ')) .. "&lt;cyan&gt; ("..#people..")&lt;red&gt;]\n")

  moveCursorEnd()

  mmp.alertness = nil

  raiseEvent("mmapper updated pdb")
end

-- reset names we last seen, so scripts can be efficient
-- not finished yet
--if next(mmp.pdb_lastupdate) then
--  mmp.pdb_lastupdate = {}
--end

disableTrigger"Mudlet Mapper prompt trigger"</script>
					<triggerType>0</triggerType>
					<conditonLineDelta>0</conditonLineDelta>
					<mStayOpen>0</mStayOpen>
					<mCommand></mCommand>
					<packageName></packageName>
					<mFgColor>#ff0000</mFgColor>
					<mBgColor>#ffff00</mBgColor>
					<mSoundFile></mSoundFile>
					<colorTriggerFgColor>#000000</colorTriggerFgColor>
					<colorTriggerBgColor>#000000</colorTriggerBgColor>
					<regexCodeList>
						<string>return isPrompt()</string>
					</regexCodeList>
					<regexCodePropertyList>
						<integer>4</integer>
					</regexCodePropertyList>
				</Trigger>
				<Trigger isActive="yes" isFolder="no" isTempTrigger="no" isMultiline="no" isPerlSlashGOption="no" isColorizerTrigger="no" isFilterTrigger="no" isSoundTrigger="no" isColorTrigger="no" isColorTriggerFg="no" isColorTriggerBg="no">
					<name>Wormhole</name>
					<script>mmp.customwalkdelay(4)</script>
					<triggerType>0</triggerType>
					<conditonLineDelta>0</conditonLineDelta>
					<mStayOpen>0</mStayOpen>
					<mCommand></mCommand>
					<packageName></packageName>
					<mFgColor>#ff0000</mFgColor>
					<mBgColor>#ffff00</mBgColor>
					<mSoundFile></mSoundFile>
					<colorTriggerFgColor>#000000</colorTriggerFgColor>
					<colorTriggerBgColor>#000000</colorTriggerBgColor>
					<regexCodeList>
						<string>You hurl yourself forwards through the air, and sure enough a swirling vortex of colours springs into existence to swallow you.</string>
						<string>You reach out with the vibrating stick to probe for a wormhole, and as it connects with one, you are sucked through.</string>
					</regexCodeList>
					<regexCodePropertyList>
						<integer>3</integer>
						<integer>3</integer>
					</regexCodePropertyList>
				</Trigger>
				<Trigger isActive="yes" isFolder="no" isTempTrigger="no" isMultiline="no" isPerlSlashGOption="no" isColorizerTrigger="no" isFilterTrigger="no" isSoundTrigger="no" isColorTrigger="no" isColorTriggerFg="no" isColorTriggerBg="no">
					<name>No wormhole</name>
					<script>if mmp.speedWalkDir and mmp.speedWalkDir[speedWalkCounter] and mmp.speedWalkDir[speedWalkCounter]=="worm warp" then
  mmp.echo("Missing wormhole detected, locking wormhole and trying new path...")

  lockSpecialExit(mmp.currentroom, mmp.speedWalkPath[speedWalkCounter], "worm warp", true)

  local destination = mmp.speedWalkPath[#mmp.speedWalkPath]

  mmp.stop()

  mmp.clearpathcache() -- clear cache so mmp.getPath accounts for the new way

  if not mmp.getPath(mmp.currentroom, destination) then
    mmp.echo(string.format("Don't know how to get to %d (%s) anymore :( Move into a room we know of to continue", destination, getRoomName(destination)))
  else
    mmp.gotoRoom(destination)
  end
end</script>
					<triggerType>0</triggerType>
					<conditonLineDelta>0</conditonLineDelta>
					<mStayOpen>0</mStayOpen>
					<mCommand></mCommand>
					<packageName></packageName>
					<mFgColor>#ff0000</mFgColor>
					<mBgColor>#ffff00</mBgColor>
					<mSoundFile></mSoundFile>
					<colorTriggerFgColor>#000000</colorTriggerFgColor>
					<colorTriggerBgColor>#000000</colorTriggerBgColor>
					<regexCodeList>
						<string>There is no wormhole here.</string>
					</regexCodeList>
					<regexCodePropertyList>
						<integer>3</integer>
					</regexCodePropertyList>
				</Trigger>
				<TriggerGroup isActive="yes" isFolder="yes" isTempTrigger="no" isMultiline="no" isPerlSlashGOption="no" isColorizerTrigger="no" isFilterTrigger="no" isSoundTrigger="no" isColorTrigger="no" isColorTriggerFg="no" isColorTriggerBg="no">
					<name>Achaea</name>
					<script></script>
					<triggerType>0</triggerType>
					<conditonLineDelta>0</conditonLineDelta>
					<mStayOpen>0</mStayOpen>
					<mCommand></mCommand>
					<packageName></packageName>
					<mFgColor>#ff0000</mFgColor>
					<mBgColor>#ffff00</mBgColor>
					<mSoundFile></mSoundFile>
					<colorTriggerFgColor>#000000</colorTriggerFgColor>
					<colorTriggerBgColor>#000000</colorTriggerBgColor>
					<regexCodeList />
					<regexCodePropertyList />
					<Trigger isActive="yes" isFolder="no" isTempTrigger="no" isMultiline="no" isPerlSlashGOption="no" isColorizerTrigger="no" isFilterTrigger="no" isSoundTrigger="no" isColorTrigger="no" isColorTriggerFg="no" isColorTriggerBg="no">
						<name>Login</name>
						<script>raiseEvent("mmp logged in", "Achaea")
mmp.game = "achaea"
mmp.echo("We're connected to Achaea.")</script>
						<triggerType>0</triggerType>
						<conditonLineDelta>0</conditonLineDelta>
						<mStayOpen>0</mStayOpen>
						<mCommand></mCommand>
						<packageName></packageName>
						<mFgColor>#ff0000</mFgColor>
						<mBgColor>#ffff00</mBgColor>
						<mSoundFile></mSoundFile>
						<colorTriggerFgColor>#000000</colorTriggerFgColor>
						<colorTriggerBgColor>#000000</colorTriggerBgColor>
						<regexCodeList>
							<string>Password correct. Welcome to Achaea.</string>
						</regexCodeList>
						<regexCodePropertyList>
							<integer>0</integer>
						</regexCodePropertyList>
					</Trigger>
					<Trigger isActive="yes" isFolder="no" isTempTrigger="no" isMultiline="no" isPerlSlashGOption="no" isColorizerTrigger="no" isFilterTrigger="no" isSoundTrigger="no" isColorTrigger="no" isColorTriggerFg="no" isColorTriggerBg="no">
						<name>Farsee initial</name>
						<script></script>
						<triggerType>0</triggerType>
						<conditonLineDelta>0</conditonLineDelta>
						<mStayOpen>0</mStayOpen>
						<mCommand></mCommand>
						<packageName></packageName>
						<mFgColor>#ff0000</mFgColor>
						<mBgColor>#ffff00</mBgColor>
						<mSoundFile></mSoundFile>
						<colorTriggerFgColor>#000000</colorTriggerFgColor>
						<colorTriggerBgColor>#000000</colorTriggerBgColor>
						<regexCodeList>
							<string>You see that </string>
						</regexCodeList>
						<regexCodePropertyList>
							<integer>2</integer>
						</regexCodePropertyList>
						<Trigger isActive="yes" isFolder="no" isTempTrigger="no" isMultiline="no" isPerlSlashGOption="no" isColorizerTrigger="no" isFilterTrigger="no" isSoundTrigger="no" isColorTrigger="no" isColorTriggerFg="no" isColorTriggerBg="no">
							<name>Local farsee</name>
							<script>mmp.locateAndEcho(matches[3], matches[2])</script>
							<triggerType>0</triggerType>
							<conditonLineDelta>0</conditonLineDelta>
							<mStayOpen>0</mStayOpen>
							<mCommand></mCommand>
							<packageName></packageName>
							<mFgColor>#ff0000</mFgColor>
							<mBgColor>#ffff00</mBgColor>
							<mSoundFile></mSoundFile>
							<colorTriggerFgColor>#000000</colorTriggerFgColor>
							<colorTriggerBgColor>#000000</colorTriggerBgColor>
							<regexCodeList>
								<string>^You see that (\w+) is at (.+)\.$</string>
							</regexCodeList>
							<regexCodePropertyList>
								<integer>1</integer>
							</regexCodePropertyList>
						</Trigger>
						<Trigger isActive="yes" isFolder="no" isTempTrigger="no" isMultiline="no" isPerlSlashGOption="no" isColorizerTrigger="no" isFilterTrigger="no" isSoundTrigger="no" isColorTrigger="no" isColorTriggerFg="no" isColorTriggerBg="no">
							<name>Veil farsee</name>
							<script>mmp.locateAndEcho(matches[3], matches[2], matches[4])</script>
							<triggerType>0</triggerType>
							<conditonLineDelta>0</conditonLineDelta>
							<mStayOpen>0</mStayOpen>
							<mCommand></mCommand>
							<packageName></packageName>
							<mFgColor>#ff0000</mFgColor>
							<mBgColor>#ffff00</mBgColor>
							<mSoundFile></mSoundFile>
							<colorTriggerFgColor>#000000</colorTriggerFgColor>
							<colorTriggerBgColor>#000000</colorTriggerBgColor>
							<regexCodeList>
								<string>^You see that (\w+) is located at (.+) in (.+)\.$</string>
							</regexCodeList>
							<regexCodePropertyList>
								<integer>1</integer>
							</regexCodePropertyList>
						</Trigger>
					</Trigger>
					<Trigger isActive="yes" isFolder="no" isTempTrigger="no" isMultiline="no" isPerlSlashGOption="no" isColorizerTrigger="no" isFilterTrigger="no" isSoundTrigger="no" isColorTrigger="no" isColorTriggerFg="no" isColorTriggerBg="no">
						<name>Entering wilderness</name>
						<script>mmp.customwalkdelay(6)</script>
						<triggerType>0</triggerType>
						<conditonLineDelta>99</conditonLineDelta>
						<mStayOpen>0</mStayOpen>
						<mCommand></mCommand>
						<packageName></packageName>
						<mFgColor>#ff0000</mFgColor>
						<mBgColor>#ffff00</mBgColor>
						<mSoundFile></mSoundFile>
						<colorTriggerFgColor>#000000</colorTriggerFgColor>
						<colorTriggerBgColor>#000000</colorTriggerBgColor>
						<regexCodeList>
							<string>You begin to look for that place to enter the wilderness. It's around here somewhere!</string>
						</regexCodeList>
						<regexCodePropertyList>
							<integer>3</integer>
						</regexCodePropertyList>
					</Trigger>
					<Trigger isActive="yes" isFolder="no" isTempTrigger="no" isMultiline="no" isPerlSlashGOption="no" isColorizerTrigger="no" isFilterTrigger="no" isSoundTrigger="no" isColorTrigger="no" isColorTriggerFg="no" isColorTriggerBg="no">
						<name>Icon enter/leave</name>
						<script>mmp.customwalkdelay(10)</script>
						<triggerType>0</triggerType>
						<conditonLineDelta>1</conditonLineDelta>
						<mStayOpen>0</mStayOpen>
						<mCommand></mCommand>
						<packageName></packageName>
						<mFgColor>#ff0000</mFgColor>
						<mBgColor>#ffff00</mBgColor>
						<mSoundFile></mSoundFile>
						<colorTriggerFgColor>#000000</colorTriggerFgColor>
						<colorTriggerBgColor>#000000</colorTriggerBgColor>
						<regexCodeList>
							<string>You reach out and touch a powerful Icon. For a moment, nothing happens, but soon you feel a humming deep inside you.</string>
						</regexCodeList>
						<regexCodePropertyList>
							<integer>3</integer>
						</regexCodePropertyList>
					</Trigger>
					<Trigger isActive="yes" isFolder="no" isTempTrigger="no" isMultiline="no" isPerlSlashGOption="no" isColorizerTrigger="no" isFilterTrigger="no" isSoundTrigger="no" isColorTrigger="no" isColorTriggerFg="no" isColorTriggerBg="no">
						<name>Underworld root</name>
						<script>mmp.customwalkdelay(2)</script>
						<triggerType>0</triggerType>
						<conditonLineDelta>0</conditonLineDelta>
						<mStayOpen>0</mStayOpen>
						<mCommand></mCommand>
						<packageName></packageName>
						<mFgColor>#ff0000</mFgColor>
						<mBgColor>#ffff00</mBgColor>
						<mSoundFile></mSoundFile>
						<colorTriggerFgColor>#000000</colorTriggerFgColor>
						<colorTriggerBgColor>#000000</colorTriggerBgColor>
						<regexCodeList>
							<string>As you touch a huge grey root, you feel dark energies coursing up your hand and throughout your body.</string>
						</regexCodeList>
						<regexCodePropertyList>
							<integer>3</integer>
						</regexCodePropertyList>
					</Trigger>
					<Trigger isActive="yes" isFolder="no" isTempTrigger="no" isMultiline="yes" isPerlSlashGOption="no" isColorizerTrigger="no" isFilterTrigger="no" isSoundTrigger="no" isColorTrigger="no" isColorTriggerFg="no" isColorTriggerBg="no">
						<name>Mindsense</name>
						<script>mmp.locateAndEchoSide(multimatches[2][3], multimatches[2][2])</script>
						<triggerType>0</triggerType>
						<conditonLineDelta>0</conditonLineDelta>
						<mStayOpen>0</mStayOpen>
						<mCommand></mCommand>
						<packageName></packageName>
						<mFgColor>#ff0000</mFgColor>
						<mBgColor>#ffff00</mBgColor>
						<mSoundFile></mSoundFile>
						<colorTriggerFgColor>#000000</colorTriggerFgColor>
						<colorTriggerBgColor>#000000</colorTriggerBgColor>
						<regexCodeList>
							<string>You seek out the mind of</string>
							<string>^You seek out the mind of (\w+) and an image of (.+) appears in your mind\.$</string>
						</regexCodeList>
						<regexCodePropertyList>
							<integer>2</integer>
							<integer>1</integer>
						</regexCodePropertyList>
					</Trigger>
					<Trigger isActive="yes" isFolder="no" isTempTrigger="no" isMultiline="no" isPerlSlashGOption="no" isColorizerTrigger="no" isFilterTrigger="no" isSoundTrigger="no" isColorTrigger="no" isColorTriggerFg="no" isColorTriggerBg="no">
						<name>Destroyed room</name>
						<script>mmp.customwalkdelay(3)</script>
						<triggerType>0</triggerType>
						<conditonLineDelta>0</conditonLineDelta>
						<mStayOpen>0</mStayOpen>
						<mCommand></mCommand>
						<packageName></packageName>
						<mFgColor>#ff0000</mFgColor>
						<mBgColor>#ffff00</mBgColor>
						<mSoundFile></mSoundFile>
						<colorTriggerFgColor>#000000</colorTriggerFgColor>
						<colorTriggerBgColor>#000000</colorTriggerBgColor>
						<regexCodeList>
							<string>Your movement is slowed as you move through the decimated remains.</string>
						</regexCodeList>
						<regexCodePropertyList>
							<integer>3</integer>
						</regexCodePropertyList>
					</Trigger>
					<Trigger isActive="yes" isFolder="no" isTempTrigger="no" isMultiline="no" isPerlSlashGOption="no" isColorizerTrigger="no" isFilterTrigger="no" isSoundTrigger="no" isColorTrigger="no" isColorTriggerFg="no" isColorTriggerBg="no">
						<name>Underworld entry</name>
						<script>mmp.customwalkdelay(3)</script>
						<triggerType>0</triggerType>
						<conditonLineDelta>0</conditonLineDelta>
						<mStayOpen>0</mStayOpen>
						<mCommand></mCommand>
						<packageName></packageName>
						<mFgColor>#ff0000</mFgColor>
						<mBgColor>#ffff00</mBgColor>
						<mSoundFile></mSoundFile>
						<colorTriggerFgColor>#000000</colorTriggerFgColor>
						<colorTriggerBgColor>#000000</colorTriggerBgColor>
						<regexCodeList>
							<string>A huge grey root numbs your fingertips as you reach out to touch it.</string>
						</regexCodeList>
						<regexCodePropertyList>
							<integer>3</integer>
						</regexCodePropertyList>
					</Trigger>
					<Trigger isActive="yes" isFolder="no" isTempTrigger="no" isMultiline="yes" isPerlSlashGOption="no" isColorizerTrigger="no" isFilterTrigger="no" isSoundTrigger="no" isColorTrigger="no" isColorTriggerFg="no" isColorTriggerBg="no">
						<name>Angel sense</name>
						<script>local t = mmp.getnums(multimatches[2][2], true)
if not t then return end
if #t == 1 then
	cecho(" &lt;orange_red&gt;("..mmp.cleanAreaName(mmp.areatabler[getRoomArea(t[1])])..")")
else
	cecho(" &lt;orange_red&gt;Maybe ("..mmp.cleanAreaName(mmp.areatabler[getRoomArea(t[1])])..")")
end
echo " "; mmp.echonums(multimatches[2][2])

mmp.temp_room = multimatches[2][2]</script>
						<triggerType>0</triggerType>
						<conditonLineDelta>0</conditonLineDelta>
						<mStayOpen>100</mStayOpen>
						<mCommand></mCommand>
						<packageName></packageName>
						<mFgColor>#ff0000</mFgColor>
						<mBgColor>#ffff00</mBgColor>
						<mSoundFile></mSoundFile>
						<colorTriggerFgColor>#000000</colorTriggerFgColor>
						<colorTriggerBgColor>#000000</colorTriggerBgColor>
						<regexCodeList>
							<string>Your guardian angel senses </string>
							<string>^Your guardian angel senses .+? at (.+?),</string>
						</regexCodeList>
						<regexCodePropertyList>
							<integer>2</integer>
							<integer>1</integer>
						</regexCodePropertyList>
						<Trigger isActive="yes" isFolder="no" isTempTrigger="no" isMultiline="no" isPerlSlashGOption="no" isColorizerTrigger="no" isFilterTrigger="no" isSoundTrigger="no" isColorTrigger="no" isColorTriggerFg="no" isColorTriggerBg="no">
							<name>Each person</name>
							<script>mmp.pdb[matches[2]] = mmp.temp_room
mmp.pdb_lastupdate[matches[2]] = true</script>
							<triggerType>0</triggerType>
							<conditonLineDelta>0</conditonLineDelta>
							<mStayOpen>0</mStayOpen>
							<mCommand></mCommand>
							<packageName></packageName>
							<mFgColor>#ff0000</mFgColor>
							<mBgColor>#ffff00</mBgColor>
							<mSoundFile></mSoundFile>
							<colorTriggerFgColor>#000000</colorTriggerFgColor>
							<colorTriggerBgColor>#000000</colorTriggerBgColor>
							<regexCodeList>
								<string> is with (\w+)\.$</string>
							</regexCodeList>
							<regexCodePropertyList>
								<integer>1</integer>
							</regexCodePropertyList>
						</Trigger>
						<Trigger isActive="yes" isFolder="no" isTempTrigger="no" isMultiline="no" isPerlSlashGOption="no" isColorizerTrigger="no" isFilterTrigger="no" isSoundTrigger="no" isColorTrigger="no" isColorTriggerFg="no" isColorTriggerBg="no">
							<name>Stop</name>
							<script>setTriggerStayOpen("Angel sense", 0)
mmp.temp_room = nil
raiseEvent("mmapper updated pdb")</script>
							<triggerType>0</triggerType>
							<conditonLineDelta>99</conditonLineDelta>
							<mStayOpen>0</mStayOpen>
							<mCommand></mCommand>
							<packageName></packageName>
							<mFgColor>#ff0000</mFgColor>
							<mBgColor>#ffff00</mBgColor>
							<mSoundFile></mSoundFile>
							<colorTriggerFgColor>#000000</colorTriggerFgColor>
							<colorTriggerBgColor>#000000</colorTriggerBgColor>
							<regexCodeList>
								<string>return isPrompt()</string>
							</regexCodeList>
							<regexCodePropertyList>
								<integer>4</integer>
							</regexCodePropertyList>
						</Trigger>
					</Trigger>
					<Trigger isActive="yes" isFolder="no" isTempTrigger="no" isMultiline="yes" isPerlSlashGOption="no" isColorizerTrigger="no" isFilterTrigger="no" isSoundTrigger="no" isColorTrigger="no" isColorTriggerFg="no" isColorTriggerBg="no">
						<name>Dragonsense</name>
						<script>mmp.locateAndEcho(multimatches[2][3], multimatches[2][2], multimatches[2][4])</script>
						<triggerType>0</triggerType>
						<conditonLineDelta>1</conditonLineDelta>
						<mStayOpen>0</mStayOpen>
						<mCommand></mCommand>
						<packageName></packageName>
						<mFgColor>#ff0000</mFgColor>
						<mBgColor>#ffff00</mBgColor>
						<mSoundFile></mSoundFile>
						<colorTriggerFgColor>#000000</colorTriggerFgColor>
						<colorTriggerBgColor>#000000</colorTriggerBgColor>
						<regexCodeList>
							<string>Tapping into the unfathomable depths of your power, you sense that</string>
							<string>Tapping into the unfathomable depths of your power, you sense that (\w+) is at (.+), in (.+)\.$</string>
						</regexCodeList>
						<regexCodePropertyList>
							<integer>2</integer>
							<integer>1</integer>
						</regexCodePropertyList>
					</Trigger>
					<Trigger isActive="yes" isFolder="no" isTempTrigger="no" isMultiline="yes" isPerlSlashGOption="no" isColorizerTrigger="no" isFilterTrigger="no" isSoundTrigger="no" isColorTrigger="no" isColorTriggerFg="no" isColorTriggerBg="no">
						<name>Defilement</name>
						<script>mmp.locateAndEchoSide(multimatches[2][2])</script>
						<triggerType>0</triggerType>
						<conditonLineDelta>0</conditonLineDelta>
						<mStayOpen>0</mStayOpen>
						<mCommand></mCommand>
						<packageName></packageName>
						<mFgColor>#ff0000</mFgColor>
						<mBgColor>#ffff00</mBgColor>
						<mSoundFile></mSoundFile>
						<colorTriggerFgColor>#000000</colorTriggerFgColor>
						<colorTriggerBgColor>#000000</colorTriggerBgColor>
						<regexCodeList>
							<string>(Order): </string>
							<string>^\(Order\): \w+'s Herald says, "A shrine is being defiled at (.+)!"$</string>
						</regexCodeList>
						<regexCodePropertyList>
							<integer>2</integer>
							<integer>1</integer>
						</regexCodePropertyList>
					</Trigger>
					<Trigger isActive="yes" isFolder="no" isTempTrigger="no" isMultiline="yes" isPerlSlashGOption="no" isColorizerTrigger="no" isFilterTrigger="no" isSoundTrigger="no" isColorTrigger="no" isColorTriggerFg="no" isColorTriggerBg="no">
						<name>Defiled</name>
						<script>mmp.locateAndEcho(multimatches[2][2])</script>
						<triggerType>0</triggerType>
						<conditonLineDelta>0</conditonLineDelta>
						<mStayOpen>0</mStayOpen>
						<mCommand></mCommand>
						<packageName></packageName>
						<mFgColor>#ff0000</mFgColor>
						<mBgColor>#ffff00</mBgColor>
						<mSoundFile></mSoundFile>
						<colorTriggerFgColor>#000000</colorTriggerFgColor>
						<colorTriggerBgColor>#000000</colorTriggerBgColor>
						<regexCodeList>
							<string>(Order):</string>
							<string>^\(Order\): \w+'s Herald says, "A shrine has been destroyed at (.+)!"$</string>
						</regexCodeList>
						<regexCodePropertyList>
							<integer>2</integer>
							<integer>1</integer>
						</regexCodePropertyList>
					</Trigger>
					<Trigger isActive="yes" isFolder="no" isTempTrigger="no" isMultiline="yes" isPerlSlashGOption="no" isColorizerTrigger="no" isFilterTrigger="no" isSoundTrigger="no" isColorTrigger="no" isColorTriggerFg="no" isColorTriggerBg="no">
						<name>View</name>
						<script>mmp.locateAndEcho(multimatches[2][3], multimatches[2][2])</script>
						<triggerType>0</triggerType>
						<conditonLineDelta>0</conditonLineDelta>
						<mStayOpen>0</mStayOpen>
						<mCommand></mCommand>
						<packageName></packageName>
						<mFgColor>#ff0000</mFgColor>
						<mBgColor>#ffff00</mBgColor>
						<mSoundFile></mSoundFile>
						<colorTriggerFgColor>#000000</colorTriggerFgColor>
						<colorTriggerBgColor>#000000</colorTriggerBgColor>
						<regexCodeList>
							<string>You see</string>
							<string>^You see (\w+) at (.+)\.$</string>
						</regexCodeList>
						<regexCodePropertyList>
							<integer>2</integer>
							<integer>1</integer>
						</regexCodePropertyList>
					</Trigger>
					<Trigger isActive="yes" isFolder="no" isTempTrigger="no" isMultiline="yes" isPerlSlashGOption="no" isColorizerTrigger="no" isFilterTrigger="no" isSoundTrigger="no" isColorTrigger="no" isColorTriggerFg="no" isColorTriggerBg="no">
						<name>Elementalism scry</name>
						<script>mmp.locateAndEcho(multimatches[2][3], multimatches[2][2])</script>
						<triggerType>0</triggerType>
						<conditonLineDelta>0</conditonLineDelta>
						<mStayOpen>0</mStayOpen>
						<mCommand></mCommand>
						<packageName></packageName>
						<mFgColor>#ff0000</mFgColor>
						<mBgColor>#ffff00</mBgColor>
						<mSoundFile></mSoundFile>
						<colorTriggerFgColor>#000000</colorTriggerFgColor>
						<colorTriggerBgColor>#000000</colorTriggerBgColor>
						<regexCodeList>
							<string>You create a pool of water in the air in front of you and look through it, sensing</string>
							<string>You create a pool of water in the air in front of you and look through it, sensing (\w+) at (.+)\.$</string>
						</regexCodeList>
						<regexCodePropertyList>
							<integer>2</integer>
							<integer>1</integer>
						</regexCodePropertyList>
					</Trigger>
					<Trigger isActive="no" isFolder="no" isTempTrigger="no" isMultiline="no" isPerlSlashGOption="no" isColorizerTrigger="no" isFilterTrigger="no" isSoundTrigger="no" isColorTrigger="no" isColorTriggerFg="no" isColorTriggerBg="no">
						<name>Parse wholist</name>
						<script>-- this trigger should be off by default. It's inefficient and gets auto-enabled
-- when you check 'who'
mmp.locateAndEcho(matches[3], matches[2])</script>
						<triggerType>0</triggerType>
						<conditonLineDelta>99</conditonLineDelta>
						<mStayOpen>0</mStayOpen>
						<mCommand></mCommand>
						<packageName></packageName>
						<mFgColor>#ff0000</mFgColor>
						<mBgColor>#ffff00</mBgColor>
						<mSoundFile></mSoundFile>
						<colorTriggerFgColor>#000000</colorTriggerFgColor>
						<colorTriggerBgColor>#000000</colorTriggerBgColor>
						<regexCodeList>
							<string>^(\w+) +\((.+)\)$</string>
						</regexCodeList>
						<regexCodePropertyList>
							<integer>1</integer>
						</regexCodePropertyList>
					</Trigger>
					<Trigger isActive="yes" isFolder="no" isTempTrigger="no" isMultiline="no" isPerlSlashGOption="no" isColorizerTrigger="no" isFilterTrigger="no" isSoundTrigger="no" isColorTrigger="no" isColorTriggerFg="no" isColorTriggerBg="no">
						<name>Piety on astralform</name>
						<script>mmp.customwalkdelay(3)</script>
						<triggerType>0</triggerType>
						<conditonLineDelta>0</conditonLineDelta>
						<mStayOpen>0</mStayOpen>
						<mCommand></mCommand>
						<packageName></packageName>
						<mFgColor>#ff0000</mFgColor>
						<mBgColor>#ffff00</mBgColor>
						<mSoundFile></mSoundFile>
						<colorTriggerFgColor>#000000</colorTriggerFgColor>
						<colorTriggerBgColor>#000000</colorTriggerBgColor>
						<regexCodeList>
							<string>A rite of piety slows your movement as it pulls at your ephemeral body.</string>
						</regexCodeList>
						<regexCodePropertyList>
							<integer>3</integer>
						</regexCodePropertyList>
					</Trigger>
					<Trigger isActive="yes" isFolder="no" isTempTrigger="no" isMultiline="no" isPerlSlashGOption="no" isColorizerTrigger="no" isFilterTrigger="no" isSoundTrigger="no" isColorTrigger="no" isColorTriggerFg="no" isColorTriggerBg="no">
						<name>Angel/Demon presences</name>
						<script>disableTrigger("Angel sense")

mmp.pdb_lastupdate = {}</script>
						<triggerType>0</triggerType>
						<conditonLineDelta>0</conditonLineDelta>
						<mStayOpen>100</mStayOpen>
						<mCommand></mCommand>
						<packageName></packageName>
						<mFgColor>#ff0000</mFgColor>
						<mBgColor>#ffff00</mBgColor>
						<mSoundFile></mSoundFile>
						<colorTriggerFgColor>#000000</colorTriggerFgColor>
						<colorTriggerBgColor>#000000</colorTriggerBgColor>
						<regexCodeList>
							<string>You bid your guardian angel to seek out life presences nearby.</string>
							<string>You bid your Baalzadeen to seek out life presences nearby.</string>
						</regexCodeList>
						<regexCodePropertyList>
							<integer>3</integer>
							<integer>3</integer>
						</regexCodePropertyList>
						<Trigger isActive="yes" isFolder="no" isTempTrigger="no" isMultiline="no" isPerlSlashGOption="no" isColorizerTrigger="no" isFilterTrigger="no" isSoundTrigger="no" isColorTrigger="no" isColorTriggerFg="no" isColorTriggerBg="no">
							<name>Each person</name>
							<script>mmp.locateAndEchoSide(matches[3], matches[2])</script>
							<triggerType>0</triggerType>
							<conditonLineDelta>0</conditonLineDelta>
							<mStayOpen>0</mStayOpen>
							<mCommand></mCommand>
							<packageName></packageName>
							<mFgColor>#ff0000</mFgColor>
							<mBgColor>#ffff00</mBgColor>
							<mSoundFile></mSoundFile>
							<colorTriggerFgColor>#000000</colorTriggerFgColor>
							<colorTriggerBgColor>#000000</colorTriggerBgColor>
							<regexCodeList>
								<string>^Your guardian angel senses (\w+) at (.+?),</string>
								<string>^Your Baalzadeen senses (\w+) at (.+?),</string>
							</regexCodeList>
							<regexCodePropertyList>
								<integer>1</integer>
								<integer>1</integer>
							</regexCodePropertyList>
						</Trigger>
						<Trigger isActive="yes" isFolder="no" isTempTrigger="no" isMultiline="no" isPerlSlashGOption="no" isColorizerTrigger="no" isFilterTrigger="no" isSoundTrigger="no" isColorTrigger="no" isColorTriggerFg="no" isColorTriggerBg="no">
							<name>Stop (angel presences)</name>
							<script>setTriggerStayOpen("Angel/Demon presences", 0)
enableTrigger("Angel sense")</script>
							<triggerType>0</triggerType>
							<conditonLineDelta>0</conditonLineDelta>
							<mStayOpen>0</mStayOpen>
							<mCommand></mCommand>
							<packageName></packageName>
							<mFgColor>#ff0000</mFgColor>
							<mBgColor>#ffff00</mBgColor>
							<mSoundFile></mSoundFile>
							<colorTriggerFgColor>#000000</colorTriggerFgColor>
							<colorTriggerBgColor>#000000</colorTriggerBgColor>
							<regexCodeList>
								<string>return isPrompt()</string>
							</regexCodeList>
							<regexCodePropertyList>
								<integer>4</integer>
							</regexCodePropertyList>
						</Trigger>
					</Trigger>
					<Trigger isActive="yes" isFolder="no" isTempTrigger="no" isMultiline="yes" isPerlSlashGOption="no" isColorizerTrigger="no" isFilterTrigger="no" isSoundTrigger="no" isColorTrigger="no" isColorTriggerFg="no" isColorTriggerBg="no">
						<name>Demon sense</name>
						<script>mmp.locateAndEchoSide(multimatches[2][3], multimatches[2][2])</script>
						<triggerType>0</triggerType>
						<conditonLineDelta>0</conditonLineDelta>
						<mStayOpen>0</mStayOpen>
						<mCommand></mCommand>
						<packageName></packageName>
						<mFgColor>#ff0000</mFgColor>
						<mBgColor>#ffff00</mBgColor>
						<mSoundFile></mSoundFile>
						<colorTriggerFgColor>#000000</colorTriggerFgColor>
						<colorTriggerBgColor>#000000</colorTriggerBgColor>
						<regexCodeList>
							<string>Your Baalzadeen senses </string>
							<string>^Your Baalzadeen senses (\w+) at (.+), on a health of</string>
						</regexCodeList>
						<regexCodePropertyList>
							<integer>2</integer>
							<integer>1</integer>
						</regexCodePropertyList>
					</Trigger>
					<Trigger isActive="yes" isFolder="no" isTempTrigger="no" isMultiline="no" isPerlSlashGOption="no" isColorizerTrigger="no" isFilterTrigger="no" isSoundTrigger="no" isColorTrigger="no" isColorTriggerFg="no" isColorTriggerBg="no">
						<name>Annwyn circle</name>
						<script>mmp.customwalkdelay(12)</script>
						<triggerType>0</triggerType>
						<conditonLineDelta>0</conditonLineDelta>
						<mStayOpen>0</mStayOpen>
						<mCommand></mCommand>
						<packageName></packageName>
						<mFgColor>#ff0000</mFgColor>
						<mBgColor>#ffff00</mBgColor>
						<mSoundFile></mSoundFile>
						<colorTriggerFgColor>#000000</colorTriggerFgColor>
						<colorTriggerBgColor>#000000</colorTriggerBgColor>
						<regexCodeList>
							<string>The melody of a strange song rises unbidden to your lips as you skip around the circle of mushrooms.</string>
						</regexCodeList>
						<regexCodePropertyList>
							<integer>2</integer>
						</regexCodePropertyList>
					</Trigger>
					<Trigger isActive="yes" isFolder="no" isTempTrigger="no" isMultiline="yes" isPerlSlashGOption="no" isColorizerTrigger="no" isFilterTrigger="no" isSoundTrigger="no" isColorTrigger="no" isColorTriggerFg="no" isColorTriggerBg="no">
						<name>Scrying bowl</name>
						<script>mmp.locateAndEcho(multimatches[3][3], multimatches[2][2], multimatches[3][2])</script>
						<triggerType>0</triggerType>
						<conditonLineDelta>1</conditonLineDelta>
						<mStayOpen>0</mStayOpen>
						<mCommand></mCommand>
						<packageName></packageName>
						<mFgColor>#ff0000</mFgColor>
						<mBgColor>#ffff00</mBgColor>
						<mSoundFile></mSoundFile>
						<colorTriggerFgColor>#000000</colorTriggerFgColor>
						<colorTriggerBgColor>#000000</colorTriggerBgColor>
						<regexCodeList>
							<string>You dip your fingers into the cool water of the bowl, willing it to reveal the location of</string>
							<string>^You dip your fingers into the cool water of the bowl, willing it to reveal the location of (\w+)\.$</string>
							<string>^An image of (.+) appears reflected within the bowl, shifting with the rippling water to display (.+)\.$</string>
						</regexCodeList>
						<regexCodePropertyList>
							<integer>2</integer>
							<integer>1</integer>
							<integer>1</integer>
						</regexCodePropertyList>
					</Trigger>
					<Trigger isActive="yes" isFolder="no" isTempTrigger="no" isMultiline="no" isPerlSlashGOption="no" isColorizerTrigger="no" isFilterTrigger="no" isSoundTrigger="no" isColorTrigger="no" isColorTriggerFg="no" isColorTriggerBg="no">
						<name>Occultist entities</name>
						<script></script>
						<triggerType>0</triggerType>
						<conditonLineDelta>0</conditonLineDelta>
						<mStayOpen>1000</mStayOpen>
						<mCommand></mCommand>
						<packageName></packageName>
						<mFgColor>#ff0000</mFgColor>
						<mBgColor>#ffff00</mBgColor>
						<mSoundFile></mSoundFile>
						<colorTriggerFgColor>#000000</colorTriggerFgColor>
						<colorTriggerBgColor>#000000</colorTriggerBgColor>
						<regexCodeList>
							<string>The following entities reside on the Prime Material plane:</string>
						</regexCodeList>
						<regexCodePropertyList>
							<integer>3</integer>
						</regexCodePropertyList>
						<Trigger isActive="yes" isFolder="no" isTempTrigger="no" isMultiline="no" isPerlSlashGOption="no" isColorizerTrigger="no" isFilterTrigger="no" isSoundTrigger="no" isColorTrigger="no" isColorTriggerFg="no" isColorTriggerBg="no">
							<name>Each doppleganger</name>
							<script>mmp.locateAndEcho(matches[3], matches[2])</script>
							<triggerType>0</triggerType>
							<conditonLineDelta>0</conditonLineDelta>
							<mStayOpen>0</mStayOpen>
							<mCommand></mCommand>
							<packageName></packageName>
							<mFgColor>#ff0000</mFgColor>
							<mBgColor>#ffff00</mBgColor>
							<mSoundFile></mSoundFile>
							<colorTriggerFgColor>#000000</colorTriggerFgColor>
							<colorTriggerBgColor>#000000</colorTriggerBgColor>
							<regexCodeList>
								<string>^(\w+) is at (.+)\.$</string>
							</regexCodeList>
							<regexCodePropertyList>
								<integer>1</integer>
							</regexCodePropertyList>
						</Trigger>
						<Trigger isActive="yes" isFolder="no" isTempTrigger="no" isMultiline="no" isPerlSlashGOption="no" isColorizerTrigger="no" isFilterTrigger="no" isSoundTrigger="no" isColorTrigger="no" isColorTriggerFg="no" isColorTriggerBg="no">
							<name>Stop</name>
							<script>setTriggerStayOpen("Occultist entities", 0)</script>
							<triggerType>0</triggerType>
							<conditonLineDelta>0</conditonLineDelta>
							<mStayOpen>0</mStayOpen>
							<mCommand></mCommand>
							<packageName></packageName>
							<mFgColor>#ff0000</mFgColor>
							<mBgColor>#ffff00</mBgColor>
							<mSoundFile></mSoundFile>
							<colorTriggerFgColor>#000000</colorTriggerFgColor>
							<colorTriggerBgColor>#000000</colorTriggerBgColor>
							<regexCodeList>
								<string>return isPrompt()</string>
							</regexCodeList>
							<regexCodePropertyList>
								<integer>4</integer>
							</regexCodePropertyList>
						</Trigger>
					</Trigger>
					<Trigger isActive="yes" isFolder="no" isTempTrigger="no" isMultiline="no" isPerlSlashGOption="no" isColorizerTrigger="no" isFilterTrigger="no" isSoundTrigger="no" isColorTrigger="no" isColorTriggerFg="no" isColorTriggerBg="no">
						<name>Party traces/locaters</name>
						<script></script>
						<triggerType>0</triggerType>
						<conditonLineDelta>0</conditonLineDelta>
						<mStayOpen>0</mStayOpen>
						<mCommand></mCommand>
						<packageName></packageName>
						<mFgColor>#ff0000</mFgColor>
						<mBgColor>#ffff00</mBgColor>
						<mSoundFile></mSoundFile>
						<colorTriggerFgColor>#000000</colorTriggerFgColor>
						<colorTriggerBgColor>#000000</colorTriggerBgColor>
						<regexCodeList>
							<string>(Party):</string>
						</regexCodeList>
						<regexCodePropertyList>
							<integer>2</integer>
						</regexCodePropertyList>
						<Trigger isActive="yes" isFolder="no" isTempTrigger="no" isMultiline="no" isPerlSlashGOption="no" isColorizerTrigger="no" isFilterTrigger="no" isSoundTrigger="no" isColorTrigger="no" isColorTriggerFg="no" isColorTriggerBg="no">
							<name>regex (party locate)</name>
							<script>mmp.locateAndEcho(matches[3], matches[2], matches[4])</script>
							<triggerType>0</triggerType>
							<conditonLineDelta>0</conditonLineDelta>
							<mStayOpen>0</mStayOpen>
							<mCommand></mCommand>
							<packageName></packageName>
							<mFgColor>#ff0000</mFgColor>
							<mBgColor>#ffff00</mBgColor>
							<mSoundFile></mSoundFile>
							<colorTriggerFgColor>#000000</colorTriggerFgColor>
							<colorTriggerBgColor>#000000</colorTriggerBgColor>
							<regexCodeList>
								<string>^\(Party\): \w+ says, "(\w+) moved to (.+)\."$</string>
								<string>^\(Party\): \w+ says, "(\w+) is at (.+), in (.+)\."</string>
								<string>^\(Party\): \w+ says, "Trace: (\w+) moved to (.+)\."</string>
								<string>^\(Party\): \w+ says, "(\w+) - (.+), in (.+)\."$</string>
								<string>^\(Party\): \w+ says, "(\w+) is at (.+) \(.+\)\."</string>
								<string>^\(Party\): \w+ says, "Trace: (\w+) entered (.+) in (.+)\."</string>
								<string>^\(Party\): \w+ says, "Trace: (\w+) entered (.+)\."</string>
							</regexCodeList>
							<regexCodePropertyList>
								<integer>1</integer>
								<integer>1</integer>
								<integer>1</integer>
								<integer>1</integer>
								<integer>1</integer>
								<integer>1</integer>
								<integer>1</integer>
							</regexCodePropertyList>
						</Trigger>
					</Trigger>
					<Trigger isActive="yes" isFolder="no" isTempTrigger="no" isMultiline="yes" isPerlSlashGOption="no" isColorizerTrigger="no" isFilterTrigger="no" isSoundTrigger="no" isColorTrigger="no" isColorTriggerFg="no" isColorTriggerBg="no">
						<name>Arena event (Achaea)</name>
						<script>mmp.pdb_lastupdate = {}</script>
						<triggerType>0</triggerType>
						<conditonLineDelta>3</conditonLineDelta>
						<mStayOpen>1000</mStayOpen>
						<mCommand></mCommand>
						<packageName></packageName>
						<mFgColor>#ff0000</mFgColor>
						<mBgColor>#ffff00</mBgColor>
						<mSoundFile></mSoundFile>
						<colorTriggerFgColor>#000000</colorTriggerFgColor>
						<colorTriggerBgColor>#000000</colorTriggerBgColor>
						<regexCodeList>
							<string>Current event</string>
							<string>Player               Location</string>
							<string>----------------------------------------------------------------------</string>
						</regexCodeList>
						<regexCodePropertyList>
							<integer>2</integer>
							<integer>3</integer>
							<integer>3</integer>
						</regexCodePropertyList>
						<Trigger isActive="yes" isFolder="no" isTempTrigger="no" isMultiline="no" isPerlSlashGOption="no" isColorizerTrigger="no" isFilterTrigger="no" isSoundTrigger="no" isColorTrigger="no" isColorTriggerFg="no" isColorTriggerBg="no">
							<name>Each person</name>
							<script>echo((" "):rep(60-#line))
echo"(" mmp.echonums(matches[3]) echo")"

mmp.pdb[matches[2]] = matches[3]
mmp.pdb_lastupdate[matches[2]] = true</script>
							<triggerType>0</triggerType>
							<conditonLineDelta>0</conditonLineDelta>
							<mStayOpen>0</mStayOpen>
							<mCommand></mCommand>
							<packageName></packageName>
							<mFgColor>#ff0000</mFgColor>
							<mBgColor>#ffff00</mBgColor>
							<mSoundFile></mSoundFile>
							<colorTriggerFgColor>#000000</colorTriggerFgColor>
							<colorTriggerBgColor>#000000</colorTriggerBgColor>
							<regexCodeList>
								<string>^(\w+) +(.+)$</string>
							</regexCodeList>
							<regexCodePropertyList>
								<integer>1</integer>
							</regexCodePropertyList>
						</Trigger>
						<Trigger isActive="yes" isFolder="no" isTempTrigger="no" isMultiline="no" isPerlSlashGOption="no" isColorizerTrigger="no" isFilterTrigger="no" isSoundTrigger="no" isColorTrigger="no" isColorTriggerFg="no" isColorTriggerBg="no">
							<name>Stop (arena event)</name>
							<script>setTriggerStayOpen("Arena event (Achaea)", 0)

raiseEvent("mmapper updated pdb")</script>
							<triggerType>0</triggerType>
							<conditonLineDelta>0</conditonLineDelta>
							<mStayOpen>0</mStayOpen>
							<mCommand></mCommand>
							<packageName></packageName>
							<mFgColor>#ff0000</mFgColor>
							<mBgColor>#ffff00</mBgColor>
							<mSoundFile></mSoundFile>
							<colorTriggerFgColor>#000000</colorTriggerFgColor>
							<colorTriggerBgColor>#000000</colorTriggerBgColor>
							<regexCodeList>
								<string>return isPrompt()</string>
							</regexCodeList>
							<regexCodePropertyList>
								<integer>4</integer>
							</regexCodePropertyList>
						</Trigger>
					</Trigger>
					<Trigger isActive="yes" isFolder="no" isTempTrigger="no" isMultiline="yes" isPerlSlashGOption="no" isColorizerTrigger="no" isFilterTrigger="no" isSoundTrigger="no" isColorTrigger="no" isColorTriggerFg="no" isColorTriggerBg="no">
						<name>Angel trace</name>
						<script>selectCurrentLine() replace("")
cecho("&lt;grey&gt;Angel trace: &lt;a_darkcyan&gt;"..multimatches[2][2].."&lt;grey&gt; moved to &lt;a_darkcyan&gt;" .. multimatches[2][3])
mmp.locateAndEchoInternal(multimatches[2][3], multimatches[2][2])</script>
						<triggerType>0</triggerType>
						<conditonLineDelta>0</conditonLineDelta>
						<mStayOpen>0</mStayOpen>
						<mCommand></mCommand>
						<packageName></packageName>
						<mFgColor>#ff0000</mFgColor>
						<mBgColor>#ffff00</mBgColor>
						<mSoundFile></mSoundFile>
						<colorTriggerFgColor>#000000</colorTriggerFgColor>
						<colorTriggerBgColor>#000000</colorTriggerBgColor>
						<regexCodeList>
							<string>Your guardian angel reports that</string>
							<string>^Your guardian angel reports that (\w+) has moved to (.+)\.$</string>
						</regexCodeList>
						<regexCodePropertyList>
							<integer>2</integer>
							<integer>1</integer>
						</regexCodePropertyList>
					</Trigger>
					<Trigger isActive="no" isFolder="no" isTempTrigger="no" isMultiline="yes" isPerlSlashGOption="no" isColorizerTrigger="no" isFilterTrigger="no" isSoundTrigger="no" isColorTrigger="no" isColorTriggerFg="no" isColorTriggerBg="no">
						<name>KoTH (mudlet mapper)</name>
						<script>mmp.pdb_lastupdate = {}</script>
						<triggerType>0</triggerType>
						<conditonLineDelta>5</conditonLineDelta>
						<mStayOpen>1000</mStayOpen>
						<mCommand></mCommand>
						<packageName></packageName>
						<mFgColor>#ff0000</mFgColor>
						<mBgColor>#ffff00</mBgColor>
						<mSoundFile></mSoundFile>
						<colorTriggerFgColor>#000000</colorTriggerFgColor>
						<colorTriggerBgColor>#000000</colorTriggerBgColor>
						<regexCodeList>
							<string>Current event: King of the Hill</string>
							<string>5</string>
						</regexCodeList>
						<regexCodePropertyList>
							<integer>3</integer>
							<integer>5</integer>
						</regexCodePropertyList>
						<Trigger isActive="yes" isFolder="no" isTempTrigger="no" isMultiline="no" isPerlSlashGOption="no" isColorizerTrigger="no" isFilterTrigger="no" isSoundTrigger="no" isColorTrigger="no" isColorTriggerFg="no" isColorTriggerBg="no">
							<name>Each person</name>
							<script>echo((" "):rep(60-#line))
echo"(" mmp.echonums(matches[3]) echo")"

mmp.pdb[matches[2]] = matches[3]
mmp.pdb_lastupdate[matches[2]] = true</script>
							<triggerType>0</triggerType>
							<conditonLineDelta>0</conditonLineDelta>
							<mStayOpen>0</mStayOpen>
							<mCommand></mCommand>
							<packageName></packageName>
							<mFgColor>#ff0000</mFgColor>
							<mBgColor>#ffff00</mBgColor>
							<mSoundFile></mSoundFile>
							<colorTriggerFgColor>#000000</colorTriggerFgColor>
							<colorTriggerBgColor>#000000</colorTriggerBgColor>
							<regexCodeList>
								<string>^(\w+) .+? ([A-Z][a-z ]+?)$</string>
							</regexCodeList>
							<regexCodePropertyList>
								<integer>1</integer>
							</regexCodePropertyList>
						</Trigger>
						<Trigger isActive="yes" isFolder="no" isTempTrigger="no" isMultiline="no" isPerlSlashGOption="no" isColorizerTrigger="no" isFilterTrigger="no" isSoundTrigger="no" isColorTrigger="no" isColorTriggerFg="no" isColorTriggerBg="no">
							<name>Stop (koth)</name>
							<script>setTriggerStayOpen("KoTH (mudlet mapper)", 0)

raiseEvent("mmapper updated pdb")</script>
							<triggerType>0</triggerType>
							<conditonLineDelta>0</conditonLineDelta>
							<mStayOpen>0</mStayOpen>
							<mCommand></mCommand>
							<packageName></packageName>
							<mFgColor>#ff0000</mFgColor>
							<mBgColor>#ffff00</mBgColor>
							<mSoundFile></mSoundFile>
							<colorTriggerFgColor>#000000</colorTriggerFgColor>
							<colorTriggerBgColor>#000000</colorTriggerBgColor>
							<regexCodeList>
								<string>return isPrompt()</string>
							</regexCodeList>
							<regexCodePropertyList>
								<integer>4</integer>
							</regexCodePropertyList>
						</Trigger>
					</Trigger>
					<Trigger isActive="yes" isFolder="no" isTempTrigger="no" isMultiline="no" isPerlSlashGOption="no" isColorizerTrigger="no" isFilterTrigger="no" isSoundTrigger="no" isColorTrigger="no" isColorTriggerFg="no" isColorTriggerBg="no">
						<name>Fullsense (mudlet mapper)</name>
						<script>mmp.pdb_lastupdate = {}</script>
						<triggerType>0</triggerType>
						<conditonLineDelta>0</conditonLineDelta>
						<mStayOpen>100</mStayOpen>
						<mCommand></mCommand>
						<packageName></packageName>
						<mFgColor>#ff0000</mFgColor>
						<mBgColor>#ffff00</mBgColor>
						<mSoundFile></mSoundFile>
						<colorTriggerFgColor>#000000</colorTriggerFgColor>
						<colorTriggerBgColor>#000000</colorTriggerBgColor>
						<regexCodeList>
							<string>You seek out all mental presences within your reach:</string>
						</regexCodeList>
						<regexCodePropertyList>
							<integer>3</integer>
						</regexCodePropertyList>
						<Trigger isActive="yes" isFolder="no" isTempTrigger="no" isMultiline="no" isPerlSlashGOption="no" isColorizerTrigger="no" isFilterTrigger="no" isSoundTrigger="no" isColorTrigger="no" isColorTriggerFg="no" isColorTriggerBg="no">
							<name>Each person</name>
							<script>echo((" "):rep(60-#line))
echo"(" mmp.echonums(matches[3]) echo")"

mmp.pdb[matches[2]] = matches[3]
mmp.pdb_lastupdate[matches[2]] = true</script>
							<triggerType>0</triggerType>
							<conditonLineDelta>0</conditonLineDelta>
							<mStayOpen>0</mStayOpen>
							<mCommand></mCommand>
							<packageName></packageName>
							<mFgColor>#ff0000</mFgColor>
							<mBgColor>#ffff00</mBgColor>
							<mSoundFile></mSoundFile>
							<colorTriggerFgColor>#000000</colorTriggerFgColor>
							<colorTriggerBgColor>#000000</colorTriggerBgColor>
							<regexCodeList>
								<string>^You sense (\w+) at (.+)\.$</string>
							</regexCodeList>
							<regexCodePropertyList>
								<integer>1</integer>
							</regexCodePropertyList>
						</Trigger>
						<Trigger isActive="yes" isFolder="no" isTempTrigger="no" isMultiline="no" isPerlSlashGOption="no" isColorizerTrigger="no" isFilterTrigger="no" isSoundTrigger="no" isColorTrigger="no" isColorTriggerFg="no" isColorTriggerBg="no">
							<name>Stop</name>
							<script>setTriggerStayOpen("Fullsense (mudlet mapper)", 0)

raiseEvent("mmapper updated pdb")</script>
							<triggerType>0</triggerType>
							<conditonLineDelta>0</conditonLineDelta>
							<mStayOpen>0</mStayOpen>
							<mCommand></mCommand>
							<packageName></packageName>
							<mFgColor>#ff0000</mFgColor>
							<mBgColor>#ffff00</mBgColor>
							<mSoundFile></mSoundFile>
							<colorTriggerFgColor>#000000</colorTriggerFgColor>
							<colorTriggerBgColor>#000000</colorTriggerBgColor>
							<regexCodeList>
								<string>return isPrompt()</string>
							</regexCodeList>
							<regexCodePropertyList>
								<integer>4</integer>
							</regexCodePropertyList>
						</Trigger>
					</Trigger>
					<Trigger isActive="yes" isFolder="no" isTempTrigger="no" isMultiline="yes" isPerlSlashGOption="no" isColorizerTrigger="no" isFilterTrigger="no" isSoundTrigger="no" isColorTrigger="no" isColorTriggerFg="no" isColorTriggerBg="no">
						<name>Alchemist ether seek</name>
						<script>mmp.locateAndEcho(multimatches[2][3], multimatches[2][2])</script>
						<triggerType>0</triggerType>
						<conditonLineDelta>0</conditonLineDelta>
						<mStayOpen>0</mStayOpen>
						<mCommand></mCommand>
						<packageName></packageName>
						<mFgColor>#ff0000</mFgColor>
						<mBgColor>#ffff00</mBgColor>
						<mSoundFile></mSoundFile>
						<colorTriggerFgColor>#000000</colorTriggerFgColor>
						<colorTriggerBgColor>#000000</colorTriggerBgColor>
						<regexCodeList>
							<string>You reach out into the ether, folding it aside to reveal</string>
							<string>^You reach out into the ether, folding it aside to reveal (\w+)\. As you peer into the opening, the image of (.+) swims into view, then fades away as the ether seeps back into place\.$</string>
						</regexCodeList>
						<regexCodePropertyList>
							<integer>2</integer>
							<integer>1</integer>
						</regexCodePropertyList>
					</Trigger>
					<Trigger isActive="yes" isFolder="no" isTempTrigger="no" isMultiline="yes" isPerlSlashGOption="no" isColorizerTrigger="no" isFilterTrigger="no" isSoundTrigger="no" isColorTrigger="no" isColorTriggerFg="no" isColorTriggerBg="no">
						<name>Allsight</name>
						<script>mmp.locateAndEcho(multimatches[2][3], multimatches[2][2])</script>
						<triggerType>0</triggerType>
						<conditonLineDelta>0</conditonLineDelta>
						<mStayOpen>0</mStayOpen>
						<mCommand></mCommand>
						<packageName></packageName>
						<mFgColor>#ff0000</mFgColor>
						<mBgColor>#ffff00</mBgColor>
						<mSoundFile></mSoundFile>
						<colorTriggerFgColor>#000000</colorTriggerFgColor>
						<colorTriggerBgColor>#000000</colorTriggerBgColor>
						<regexCodeList>
							<string>Allsight:</string>
							<string>^Allsight: (\w+) enters (.+)\.$</string>
						</regexCodeList>
						<regexCodePropertyList>
							<integer>2</integer>
							<integer>1</integer>
						</regexCodePropertyList>
					</Trigger>
					<Trigger isActive="yes" isFolder="no" isTempTrigger="no" isMultiline="no" isPerlSlashGOption="no" isColorizerTrigger="no" isFilterTrigger="no" isSoundTrigger="no" isColorTrigger="no" isColorTriggerFg="no" isColorTriggerBg="no">
						<name>Polished skull locater</name>
						<script>mmp.locateAndEcho(matches[2])</script>
						<triggerType>0</triggerType>
						<conditonLineDelta>0</conditonLineDelta>
						<mStayOpen>0</mStayOpen>
						<mCommand></mCommand>
						<packageName></packageName>
						<mFgColor>#ff0000</mFgColor>
						<mBgColor>#ffff00</mBgColor>
						<mSoundFile></mSoundFile>
						<colorTriggerFgColor>#000000</colorTriggerFgColor>
						<colorTriggerBgColor>#000000</colorTriggerBgColor>
						<regexCodeList>
							<string>^An image of (.*) appears in your mind\.$</string>
						</regexCodeList>
						<regexCodePropertyList>
							<integer>1</integer>
						</regexCodePropertyList>
					</Trigger>
					<Trigger isActive="yes" isFolder="no" isTempTrigger="no" isMultiline="yes" isPerlSlashGOption="no" isColorizerTrigger="no" isFilterTrigger="no" isSoundTrigger="no" isColorTrigger="no" isColorTriggerFg="no" isColorTriggerBg="no">
						<name>Downed shrine in Order logs</name>
						<script>local room = multimatches[2][2]

mmp.locateAndEcho(room)</script>
						<triggerType>0</triggerType>
						<conditonLineDelta>0</conditonLineDelta>
						<mStayOpen>0</mStayOpen>
						<mCommand></mCommand>
						<packageName></packageName>
						<mFgColor>#ff0000</mFgColor>
						<mBgColor>#ffff00</mBgColor>
						<mSoundFile></mSoundFile>
						<colorTriggerFgColor>#000000</colorTriggerFgColor>
						<colorTriggerBgColor>#000000</colorTriggerBgColor>
						<regexCodeList>
							<string>- A shrine at</string>
							<string>- A shrine at '(.+)' was destroyed\.$</string>
						</regexCodeList>
						<regexCodePropertyList>
							<integer>0</integer>
							<integer>1</integer>
						</regexCodePropertyList>
					</Trigger>
					<Trigger isActive="yes" isFolder="no" isTempTrigger="no" isMultiline="yes" isPerlSlashGOption="no" isColorizerTrigger="no" isFilterTrigger="no" isSoundTrigger="no" isColorTrigger="no" isColorTriggerFg="no" isColorTriggerBg="no">
						<name>chrono divine</name>
						<script>mmp.locateAndEcho(multimatches[3][2], multimatches[2][2])</script>
						<triggerType>0</triggerType>
						<conditonLineDelta>1</conditonLineDelta>
						<mStayOpen>0</mStayOpen>
						<mCommand></mCommand>
						<packageName></packageName>
						<mFgColor>#ff0000</mFgColor>
						<mBgColor>#ffff00</mBgColor>
						<mSoundFile></mSoundFile>
						<colorTriggerFgColor>#000000</colorTriggerFgColor>
						<colorTriggerBgColor>#000000</colorTriggerBgColor>
						<regexCodeList>
							<string>Tapping into the timelines, you trace them to locate</string>
							<string>^Tapping into the timelines, you trace them to locate (\w+)\.$</string>
							<string>^You determine that s?he is at (.+)\.$</string>
						</regexCodeList>
						<regexCodePropertyList>
							<integer>2</integer>
							<integer>1</integer>
							<integer>1</integer>
						</regexCodePropertyList>
					</Trigger>
					<Trigger isActive="yes" isFolder="no" isTempTrigger="no" isMultiline="no" isPerlSlashGOption="no" isColorizerTrigger="no" isFilterTrigger="no" isSoundTrigger="no" isColorTrigger="no" isColorTriggerFg="no" isColorTriggerBg="no">
						<name>Shadow preeminence</name>
						<script>mmp.pdb_lastupdate = {}</script>
						<triggerType>0</triggerType>
						<conditonLineDelta>0</conditonLineDelta>
						<mStayOpen>100</mStayOpen>
						<mCommand></mCommand>
						<packageName></packageName>
						<mFgColor>#ff0000</mFgColor>
						<mBgColor>#ffff00</mBgColor>
						<mSoundFile></mSoundFile>
						<colorTriggerFgColor>#000000</colorTriggerFgColor>
						<colorTriggerBgColor>#000000</colorTriggerBgColor>
						<regexCodeList>
							<string>You cast your will out across the land, surveying all that stand within shadow's embrace.</string>
						</regexCodeList>
						<regexCodePropertyList>
							<integer>3</integer>
						</regexCodePropertyList>
						<Trigger isActive="yes" isFolder="no" isTempTrigger="no" isMultiline="no" isPerlSlashGOption="no" isColorizerTrigger="no" isFilterTrigger="no" isSoundTrigger="no" isColorTrigger="no" isColorTriggerFg="no" isColorTriggerBg="no">
							<name>Each person</name>
							<script>mmp.locateAndEchoSide(matches[3], matches[2])</script>
							<triggerType>0</triggerType>
							<conditonLineDelta>0</conditonLineDelta>
							<mStayOpen>0</mStayOpen>
							<mCommand></mCommand>
							<packageName></packageName>
							<mFgColor>#ff0000</mFgColor>
							<mBgColor>#ffff00</mBgColor>
							<mSoundFile></mSoundFile>
							<colorTriggerFgColor>#000000</colorTriggerFgColor>
							<colorTriggerBgColor>#000000</colorTriggerBgColor>
							<regexCodeList>
								<string>^You sense (\w+) at (.+?)\.$</string>
							</regexCodeList>
							<regexCodePropertyList>
								<integer>1</integer>
							</regexCodePropertyList>
						</Trigger>
						<Trigger isActive="yes" isFolder="no" isTempTrigger="no" isMultiline="no" isPerlSlashGOption="no" isColorizerTrigger="no" isFilterTrigger="no" isSoundTrigger="no" isColorTrigger="no" isColorTriggerFg="no" isColorTriggerBg="no">
							<name>prompt</name>
							<script>setTriggerStayOpen("Shadow preeminence", 0)
enableTrigger("Shadow preeminence")</script>
							<triggerType>0</triggerType>
							<conditonLineDelta>0</conditonLineDelta>
							<mStayOpen>0</mStayOpen>
							<mCommand></mCommand>
							<packageName></packageName>
							<mFgColor>#ff0000</mFgColor>
							<mBgColor>#ffff00</mBgColor>
							<mSoundFile></mSoundFile>
							<colorTriggerFgColor>#000000</colorTriggerFgColor>
							<colorTriggerBgColor>#000000</colorTriggerBgColor>
							<regexCodeList>
								<string>return isPrompt()</string>
							</regexCodeList>
							<regexCodePropertyList>
								<integer>4</integer>
							</regexCodePropertyList>
						</Trigger>
					</Trigger>
					<Trigger isActive="yes" isFolder="no" isTempTrigger="no" isMultiline="no" isPerlSlashGOption="no" isColorizerTrigger="no" isFilterTrigger="yes" isSoundTrigger="no" isColorTrigger="no" isColorTriggerFg="no" isColorTriggerBg="no">
						<name>Directory - Catch shop entry</name>
						<script></script>
						<triggerType>0</triggerType>
						<conditonLineDelta>0</conditonLineDelta>
						<mStayOpen>0</mStayOpen>
						<mCommand></mCommand>
						<packageName></packageName>
						<mFgColor>#ff0000</mFgColor>
						<mBgColor>#ffff00</mBgColor>
						<mSoundFile></mSoundFile>
						<colorTriggerFgColor>#000000</colorTriggerFgColor>
						<colorTriggerBgColor>#000000</colorTriggerBgColor>
						<regexCodeList>
							<string>^((?:\d+)(?:mc|gp|cr).+)$</string>
						</regexCodeList>
						<regexCodePropertyList>
							<integer>1</integer>
						</regexCodePropertyList>
						<Trigger isActive="yes" isFolder="no" isTempTrigger="no" isMultiline="no" isPerlSlashGOption="no" isColorizerTrigger="no" isFilterTrigger="no" isSoundTrigger="no" isColorTrigger="no" isColorTriggerFg="no" isColorTriggerBg="no">
							<name>Make shop name clickable</name>
							<script>selectCaptureGroup(2)
replace("")
rooms = mmp.searchRoomExact(matches[2])
local roomnum=next(rooms,nil)
if roomnum == nil or next(rooms, roomnum) then
  cecho("&lt;white&gt;(&lt;sky_blue&gt;" .. matches[2] .. "&lt;white&gt;)")
else
  local r, g, b = unpack(color_table["cyan"])
  cecho("&lt;white&gt;(")
  setTextFormat("", 0, 0, 0, r, g, b, false, true, false)
  echoLink(matches[2], [[mmp.gotoRoom(]] .. roomnum .. [[)]], "Walk to " .. matches[2] .. ".", true)
  cecho("&lt;white&gt;)")
  resetFormat()
end</script>
							<triggerType>0</triggerType>
							<conditonLineDelta>0</conditonLineDelta>
							<mStayOpen>0</mStayOpen>
							<mCommand></mCommand>
							<packageName></packageName>
							<mFgColor>#ff0000</mFgColor>
							<mBgColor>#ffff00</mBgColor>
							<mSoundFile></mSoundFile>
							<colorTriggerFgColor>#000000</colorTriggerFgColor>
							<colorTriggerBgColor>#000000</colorTriggerBgColor>
							<regexCodeList>
								<string>^.{45} (.+)$</string>
							</regexCodeList>
							<regexCodePropertyList>
								<integer>1</integer>
							</regexCodePropertyList>
						</Trigger>
					</Trigger>
				</TriggerGroup>
				<TriggerGroup isActive="yes" isFolder="yes" isTempTrigger="no" isMultiline="no" isPerlSlashGOption="no" isColorizerTrigger="no" isFilterTrigger="no" isSoundTrigger="no" isColorTrigger="no" isColorTriggerFg="no" isColorTriggerBg="no">
					<name>Aetolia</name>
					<script></script>
					<triggerType>0</triggerType>
					<conditonLineDelta>1</conditonLineDelta>
					<mStayOpen>0</mStayOpen>
					<mCommand></mCommand>
					<packageName></packageName>
					<mFgColor>#ff0000</mFgColor>
					<mBgColor>#ffff00</mBgColor>
					<mSoundFile></mSoundFile>
					<colorTriggerFgColor>#000000</colorTriggerFgColor>
					<colorTriggerBgColor>#000000</colorTriggerBgColor>
					<regexCodeList />
					<regexCodePropertyList />
					<Trigger isActive="yes" isFolder="no" isTempTrigger="no" isMultiline="no" isPerlSlashGOption="no" isColorizerTrigger="no" isFilterTrigger="no" isSoundTrigger="no" isColorTrigger="no" isColorTriggerFg="no" isColorTriggerBg="no">
						<name>Login</name>
						<script>raiseEvent("mmp logged in", "Aetolia")
mmp.game = "aetolia"</script>
						<triggerType>0</triggerType>
						<conditonLineDelta>99</conditonLineDelta>
						<mStayOpen>0</mStayOpen>
						<mCommand></mCommand>
						<packageName></packageName>
						<mFgColor>#ff0000</mFgColor>
						<mBgColor>#ffff00</mBgColor>
						<mSoundFile></mSoundFile>
						<colorTriggerFgColor>#000000</colorTriggerFgColor>
						<colorTriggerBgColor>#000000</colorTriggerBgColor>
						<regexCodeList>
							<string>Password correct. Welcome to Aetolia.</string>
						</regexCodeList>
						<regexCodePropertyList>
							<integer>3</integer>
						</regexCodePropertyList>
					</Trigger>
				</TriggerGroup>
				<TriggerGroup isActive="yes" isFolder="yes" isTempTrigger="no" isMultiline="no" isPerlSlashGOption="no" isColorizerTrigger="no" isFilterTrigger="no" isSoundTrigger="no" isColorTrigger="no" isColorTriggerFg="no" isColorTriggerBg="no">
					<name>Lusternia</name>
					<script></script>
					<triggerType>0</triggerType>
					<conditonLineDelta>0</conditonLineDelta>
					<mStayOpen>0</mStayOpen>
					<mCommand></mCommand>
					<packageName></packageName>
					<mFgColor>#ff0000</mFgColor>
					<mBgColor>#ffff00</mBgColor>
					<mSoundFile></mSoundFile>
					<colorTriggerFgColor>#000000</colorTriggerFgColor>
					<colorTriggerBgColor>#000000</colorTriggerBgColor>
					<regexCodeList />
					<regexCodePropertyList />
					<Trigger isActive="yes" isFolder="no" isTempTrigger="no" isMultiline="no" isPerlSlashGOption="no" isColorizerTrigger="no" isFilterTrigger="no" isSoundTrigger="no" isColorTrigger="no" isColorTriggerFg="no" isColorTriggerBg="no">
						<name>Login</name>
						<script>raiseEvent("mmp logged in", "Lusternia")
mmp.game = "lusternia"</script>
						<triggerType>0</triggerType>
						<conditonLineDelta>5</conditonLineDelta>
						<mStayOpen>0</mStayOpen>
						<mCommand></mCommand>
						<packageName></packageName>
						<mFgColor>#ff0000</mFgColor>
						<mBgColor>#ffff00</mBgColor>
						<mSoundFile></mSoundFile>
						<colorTriggerFgColor>#000000</colorTriggerFgColor>
						<colorTriggerBgColor>#000000</colorTriggerBgColor>
						<regexCodeList>
							<string>                        A G E  O F  A S C E N S I O N</string>
						</regexCodeList>
						<regexCodePropertyList>
							<integer>3</integer>
						</regexCodePropertyList>
					</Trigger>
					<Trigger isActive="yes" isFolder="no" isTempTrigger="no" isMultiline="no" isPerlSlashGOption="no" isColorizerTrigger="no" isFilterTrigger="no" isSoundTrigger="no" isColorTrigger="no" isColorTriggerFg="no" isColorTriggerBg="no">
						<name>mmp Lusternia Scent</name>
						<script>mmp.tempscent = {}
mmp.pdb_lastupdate = {}</script>
						<triggerType>0</triggerType>
						<conditonLineDelta>99</conditonLineDelta>
						<mStayOpen>100</mStayOpen>
						<mCommand></mCommand>
						<packageName></packageName>
						<mFgColor>#ff0000</mFgColor>
						<mBgColor>#ffff00</mBgColor>
						<mSoundFile></mSoundFile>
						<colorTriggerFgColor>#000000</colorTriggerFgColor>
						<colorTriggerBgColor>#000000</colorTriggerBgColor>
						<regexCodeList>
							<string>You scent at the air, your skilled nose picking up the faint traces of others in the surrounding area.</string>
							<string>You snort and snuffle at the air, sensing through a ridiculous pig nose upon your face the faint traces of others in the surrounding area.</string>
							<string>A pert little nose takes in a delicate whiff of your surroundings, sensing the faint traces of others in the nearby area.</string>
							<string>You tilt back your head and inhale deeply through your nose, the whiskers of a wolf's snout upon your face twitching as you sense the faint traces of others in the surrounding area.</string>
							<string>You flutter your nose at the air, sensing through a cute little rabbit nose upon your face the faint traces of others in the surrounding area.</string>
							<string>You sniff disdainfully at the air with a snobby snoot, wrinkling your nose as you sense the faint traces of others in the nearby area.</string>
							<string>Your snout twitches and trembles at the air, sensing through a striped badger nose upon your face the faint traces of others in the surrounding area.</string>
							<string>You twitch your snout and scent the air, sensing through a scaled fink nose upon your face the faint traces of others in the surrounding area.</string>
						</regexCodeList>
						<regexCodePropertyList>
							<integer>3</integer>
							<integer>3</integer>
							<integer>3</integer>
							<integer>3</integer>
							<integer>3</integer>
							<integer>3</integer>
							<integer>3</integer>
							<integer>3</integer>
						</regexCodePropertyList>
						<Trigger isActive="yes" isFolder="no" isTempTrigger="no" isMultiline="no" isPerlSlashGOption="no" isColorizerTrigger="no" isFilterTrigger="no" isSoundTrigger="no" isColorTrigger="no" isColorTriggerFg="no" isColorTriggerBg="no">
							<name>Got line</name>
							<script>--deleteLine()

selectString(line, 1) replace""

-- get the name
cecho("&lt;green&gt;"..matches[2].."&lt;reset&gt;: ")

-- ids
mmp.echonums(matches[3])

-- pad spaces so we have aligned roomname
echo(string.rep(" ", 25 - #getCurrentLine()))

-- and finally, the roomname
echo(matches[3])


if mmp.tempscent[matches[3]] then
	mmp.tempscent[matches[3]][#mmp.tempscent[matches[3]]+1] = matches[2]
else
	mmp.tempscent[matches[3]] = {matches[2]}
end

-- save in our person tracking db
mmp.pdb[matches[2]] = matches[3]
mmp.pdb_lastupdate[matches[2]] = true</script>
							<triggerType>0</triggerType>
							<conditonLineDelta>0</conditonLineDelta>
							<mStayOpen>0</mStayOpen>
							<mCommand></mCommand>
							<packageName></packageName>
							<mFgColor>#ff0000</mFgColor>
							<mBgColor>#ffff00</mBgColor>
							<mSoundFile></mSoundFile>
							<colorTriggerFgColor>#000000</colorTriggerFgColor>
							<colorTriggerBgColor>#000000</colorTriggerBgColor>
							<regexCodeList>
								<string>^You make out the scent of (\w+) coming from (.+)\.$</string>
							</regexCodeList>
							<regexCodePropertyList>
								<integer>1</integer>
							</regexCodePropertyList>
						</Trigger>
						<Trigger isActive="yes" isFolder="no" isTempTrigger="no" isMultiline="no" isPerlSlashGOption="no" isColorizerTrigger="no" isFilterTrigger="no" isSoundTrigger="no" isColorTrigger="no" isColorTriggerFg="no" isColorTriggerBg="no">
							<name>Stop capturing</name>
							<script>setTriggerStayOpen("mmp Lusternia Scent", 0)

--[[for area, names in pairs(mmp.tempscent) do
	for _, name in ipairs(names) do

-- get the name
cecho("\n&lt;green&gt;"..name.."&lt;reset&gt;: ")

-- ids
mmp.echonums(area)

-- pad spaces so we have aligned roomname
echo(string.rep(" ", 25))

-- and finally, the roomname
echo(area)
end
end]]


raiseEvent("mmapper updated pdb")</script>
							<triggerType>0</triggerType>
							<conditonLineDelta>0</conditonLineDelta>
							<mStayOpen>0</mStayOpen>
							<mCommand></mCommand>
							<packageName></packageName>
							<mFgColor>#ff0000</mFgColor>
							<mBgColor>#ffff00</mBgColor>
							<mSoundFile></mSoundFile>
							<colorTriggerFgColor>#000000</colorTriggerFgColor>
							<colorTriggerBgColor>#000000</colorTriggerBgColor>
							<regexCodeList>
								<string>return isPrompt()</string>
							</regexCodeList>
							<regexCodePropertyList>
								<integer>4</integer>
							</regexCodePropertyList>
						</Trigger>
					</Trigger>
					<Trigger isActive="yes" isFolder="no" isTempTrigger="no" isMultiline="yes" isPerlSlashGOption="no" isColorizerTrigger="no" isFilterTrigger="no" isSoundTrigger="no" isColorTrigger="no" isColorTriggerFg="no" isColorTriggerBg="no">
						<name>mmp Lusternia kaleidoscope</name>
						<script>mmp.tempscent = {}
mmp.pdb_lastupdate = {}

</script>
						<triggerType>0</triggerType>
						<conditonLineDelta>1</conditonLineDelta>
						<mStayOpen>100</mStayOpen>
						<mCommand></mCommand>
						<packageName></packageName>
						<mFgColor>#ff0000</mFgColor>
						<mBgColor>#ffff00</mBgColor>
						<mSoundFile></mSoundFile>
						<colorTriggerFgColor>#000000</colorTriggerFgColor>
						<colorTriggerBgColor>#000000</colorTriggerBgColor>
						<regexCodeList>
							<string>You hold a kaleidoscopic telescope to your eye, you twist the end and stare intently through its twinkling surfaces.</string>
							<string>Through the glittering faceted planes, you see:</string>
						</regexCodeList>
						<regexCodePropertyList>
							<integer>3</integer>
							<integer>3</integer>
						</regexCodePropertyList>
						<Trigger isActive="yes" isFolder="no" isTempTrigger="no" isMultiline="no" isPerlSlashGOption="no" isColorizerTrigger="no" isFilterTrigger="no" isSoundTrigger="no" isColorTrigger="no" isColorTriggerFg="no" isColorTriggerBg="no">
							<name>Got line</name>
							<script>local person, room = matches[2], matches[3]:trim()


selectString(line, 1) replace""

-- get the name
cecho("&lt;green&gt;"..person.."&lt;reset&gt;: ")

-- ids
--mmp.echonums()

-- pad spaces so we have aligned roomname
echo(string.rep(" ", 13 - #getCurrentLine()))

-- and finally, the roomname
echo(room)

mmp.locateAndEchoSide(room, person)


if mmp.tempscent[room] then
	mmp.tempscent[room][#mmp.tempscent[room]+1] = person
else
	mmp.tempscent[room] = {person}
end

-- save in our person tracking db
mmp.pdb[person] = room
mmp.pdb_lastupdate[person] = true</script>
							<triggerType>0</triggerType>
							<conditonLineDelta>0</conditonLineDelta>
							<mStayOpen>0</mStayOpen>
							<mCommand></mCommand>
							<packageName></packageName>
							<mFgColor>#ff0000</mFgColor>
							<mBgColor>#ffff00</mBgColor>
							<mSoundFile></mSoundFile>
							<colorTriggerFgColor>#000000</colorTriggerFgColor>
							<colorTriggerBgColor>#000000</colorTriggerBgColor>
							<regexCodeList>
								<string>^(\w+) - ([^\(]+)</string>
							</regexCodeList>
							<regexCodePropertyList>
								<integer>1</integer>
							</regexCodePropertyList>
						</Trigger>
						<Trigger isActive="yes" isFolder="no" isTempTrigger="no" isMultiline="no" isPerlSlashGOption="no" isColorizerTrigger="no" isFilterTrigger="no" isSoundTrigger="no" isColorTrigger="no" isColorTriggerFg="no" isColorTriggerBg="no">
							<name>Stop capturing</name>
							<script>setTriggerStayOpen("mmp Lusternia kaleidoscope", 0)

--[[for area, names in pairs(mmp.tempscent) do
	for _, name in ipairs(names) do

-- get the name
cecho("\n&lt;green&gt;"..name.."&lt;reset&gt;: ")

-- ids
mmp.echonums(area)

-- pad spaces so we have aligned roomname
echo(string.rep(" ", 25))

-- and finally, the roomname
echo(area)
end
end]]


raiseEvent("mmapper updated pdb")</script>
							<triggerType>0</triggerType>
							<conditonLineDelta>0</conditonLineDelta>
							<mStayOpen>0</mStayOpen>
							<mCommand></mCommand>
							<packageName></packageName>
							<mFgColor>#ff0000</mFgColor>
							<mBgColor>#ffff00</mBgColor>
							<mSoundFile></mSoundFile>
							<colorTriggerFgColor>#000000</colorTriggerFgColor>
							<colorTriggerBgColor>#000000</colorTriggerBgColor>
							<regexCodeList>
								<string>return isPrompt()</string>
							</regexCodeList>
							<regexCodePropertyList>
								<integer>4</integer>
							</regexCodePropertyList>
						</Trigger>
					</Trigger>
					<Trigger isActive="yes" isFolder="no" isTempTrigger="no" isMultiline="yes" isPerlSlashGOption="no" isColorizerTrigger="no" isFilterTrigger="no" isSoundTrigger="no" isColorTrigger="no" isColorTriggerFg="no" isColorTriggerBg="no">
						<name>Deathsight</name>
						<script>mmp.locateAndEcho(multimatches[2][2])</script>
						<triggerType>0</triggerType>
						<conditonLineDelta>0</conditonLineDelta>
						<mStayOpen>0</mStayOpen>
						<mCommand></mCommand>
						<packageName></packageName>
						<mFgColor>#ff0000</mFgColor>
						<mBgColor>#ffff00</mBgColor>
						<mSoundFile></mSoundFile>
						<colorTriggerFgColor>#000000</colorTriggerFgColor>
						<colorTriggerBgColor>#000000</colorTriggerBgColor>
						<regexCodeList>
							<string>You see the death occur at</string>
							<string>^You see the death occur at (.+)\.$</string>
						</regexCodeList>
						<regexCodePropertyList>
							<integer>2</integer>
							<integer>1</integer>
						</regexCodePropertyList>
					</Trigger>
					<Trigger isActive="yes" isFolder="no" isTempTrigger="no" isMultiline="no" isPerlSlashGOption="no" isColorizerTrigger="no" isFilterTrigger="no" isSoundTrigger="no" isColorTrigger="no" isColorTriggerFg="no" isColorTriggerBg="no">
						<name>Wildnodes nodes</name>
						<script>mmp.locateAndEcho(matches[2]:sub(1,1):lower()..string.sub(matches[2], 2))</script>
						<triggerType>0</triggerType>
						<conditonLineDelta>99</conditonLineDelta>
						<mStayOpen>0</mStayOpen>
						<mCommand></mCommand>
						<packageName></packageName>
						<mFgColor>#ff0000</mFgColor>
						<mBgColor>#ffff00</mBgColor>
						<mSoundFile></mSoundFile>
						<colorTriggerFgColor>#000000</colorTriggerFgColor>
						<colorTriggerBgColor>#000000</colorTriggerBgColor>
						<regexCodeList>
							<string>^\(Planted\) Node \d+ - (.*)\.$</string>
							<string>^ +Node \d+ - (.*)\.$</string>
						</regexCodeList>
						<regexCodePropertyList>
							<integer>1</integer>
							<integer>1</integer>
						</regexCodePropertyList>
					</Trigger>
					<Trigger isActive="yes" isFolder="no" isTempTrigger="no" isMultiline="no" isPerlSlashGOption="no" isColorizerTrigger="no" isFilterTrigger="no" isSoundTrigger="no" isColorTrigger="no" isColorTriggerFg="no" isColorTriggerBg="no">
						<name>Window search</name>
						<script>mmp.locateAndEcho(matches[4], matches[2])</script>
						<triggerType>0</triggerType>
						<conditonLineDelta>39</conditonLineDelta>
						<mStayOpen>0</mStayOpen>
						<mCommand></mCommand>
						<packageName></packageName>
						<mFgColor>#ff0000</mFgColor>
						<mBgColor>#ffff00</mBgColor>
						<mSoundFile></mSoundFile>
						<colorTriggerFgColor>#000000</colorTriggerFgColor>
						<colorTriggerBgColor>#000000</colorTriggerBgColor>
						<regexCodeList>
							<string>^You open up a window in the cosmic fabric and search out (\w+). Through the cosmic window, you see (\w+) at (.+?)(?: \(.*\))?\.</string>
						</regexCodeList>
						<regexCodePropertyList>
							<integer>1</integer>
						</regexCodePropertyList>
					</Trigger>
					<Trigger isActive="yes" isFolder="no" isTempTrigger="no" isMultiline="yes" isPerlSlashGOption="no" isColorizerTrigger="no" isFilterTrigger="no" isSoundTrigger="no" isColorTrigger="no" isColorTriggerFg="no" isColorTriggerBg="no">
						<name>Scry search</name>
						<script>mmp.locateAndEcho(multimatches[2][3], multimatches[2][2])</script>
						<triggerType>0</triggerType>
						<conditonLineDelta>1</conditonLineDelta>
						<mStayOpen>0</mStayOpen>
						<mCommand></mCommand>
						<packageName></packageName>
						<mFgColor>#ff0000</mFgColor>
						<mBgColor>#ffff00</mBgColor>
						<mSoundFile></mSoundFile>
						<colorTriggerFgColor>#000000</colorTriggerFgColor>
						<colorTriggerBgColor>#000000</colorTriggerBgColor>
						<regexCodeList>
							<string>^You rub .* and it begins to glow with a pulsating light\.$</string>
							<string>Within the enchanted item, an image forms of (\w+) at (.+?)(?: \(.*\))?\.</string>
						</regexCodeList>
						<regexCodePropertyList>
							<integer>1</integer>
							<integer>1</integer>
						</regexCodePropertyList>
					</Trigger>
					<Trigger isActive="no" isFolder="no" isTempTrigger="no" isMultiline="yes" isPerlSlashGOption="no" isColorizerTrigger="no" isFilterTrigger="no" isSoundTrigger="no" isColorTrigger="no" isColorTriggerFg="no" isColorTriggerBg="no">
						<name>Map artefact</name>
						<script>mmp.gotoRoom(multimatches[4][2])</script>
						<triggerType>0</triggerType>
						<conditonLineDelta>3</conditonLineDelta>
						<mStayOpen>0</mStayOpen>
						<mCommand></mCommand>
						<packageName></packageName>
						<mFgColor>#ff0000</mFgColor>
						<mBgColor>#ffff00</mBgColor>
						<mSoundFile></mSoundFile>
						<colorTriggerFgColor>#000000</colorTriggerFgColor>
						<colorTriggerBgColor>#000000</colorTriggerBgColor>
						<regexCodeList>
							<string>As you inscribe the name of </string>
							<string>^As you inscribe the name of \w+ with a flourish, lines crawl across the surface of the map, centered upon (.*)\.$</string>
							<string>You see the following in detail:</string>
							<string>v(\d+)</string>
						</regexCodeList>
						<regexCodePropertyList>
							<integer>2</integer>
							<integer>1</integer>
							<integer>3</integer>
							<integer>1</integer>
						</regexCodePropertyList>
					</Trigger>
					<Trigger isActive="yes" isFolder="no" isTempTrigger="no" isMultiline="yes" isPerlSlashGOption="no" isColorizerTrigger="no" isFilterTrigger="no" isSoundTrigger="no" isColorTrigger="no" isColorTriggerFg="no" isColorTriggerBg="no">
						<name>Masquerade ball snowglobe</name>
						<script>mmp.gotoRoom(multimatches[3][2])</script>
						<triggerType>0</triggerType>
						<conditonLineDelta>2</conditonLineDelta>
						<mStayOpen>0</mStayOpen>
						<mCommand></mCommand>
						<packageName></packageName>
						<mFgColor>#ff0000</mFgColor>
						<mBgColor>#ffff00</mBgColor>
						<mSoundFile></mSoundFile>
						<colorTriggerFgColor>#000000</colorTriggerFgColor>
						<colorTriggerBgColor>#000000</colorTriggerBgColor>
						<regexCodeList>
							<string>^You trace the name of \w+ on the surface of a splendid masquerade ball snowglobe, and then shake the globe vigorously\. As the swirling particles within clear, you see the vague outline of .+?\.$</string>
							<string>You see the following in detail:</string>
							<string>v(\d+)</string>
						</regexCodeList>
						<regexCodePropertyList>
							<integer>1</integer>
							<integer>3</integer>
							<integer>1</integer>
						</regexCodePropertyList>
					</Trigger>
					<Trigger isActive="yes" isFolder="no" isTempTrigger="no" isMultiline="yes" isPerlSlashGOption="no" isColorizerTrigger="no" isFilterTrigger="no" isSoundTrigger="no" isColorTrigger="no" isColorTriggerFg="no" isColorTriggerBg="no">
						<name>map scry</name>
						<script>mmp.locateAndEcho(multimatches[2][3], multimatches[2][2])</script>
						<triggerType>0</triggerType>
						<conditonLineDelta>0</conditonLineDelta>
						<mStayOpen>0</mStayOpen>
						<mCommand></mCommand>
						<packageName></packageName>
						<mFgColor>#ff0000</mFgColor>
						<mBgColor>#ffff00</mBgColor>
						<mSoundFile></mSoundFile>
						<colorTriggerFgColor>#000000</colorTriggerFgColor>
						<colorTriggerBgColor>#000000</colorTriggerBgColor>
						<regexCodeList>
							<string>As you inscribe the name of</string>
							<string>^As you inscribe the name of (\w+) with a flourish, lines crawl across the surface of the map, centered upon (.*)\.</string>
						</regexCodeList>
						<regexCodePropertyList>
							<integer>2</integer>
							<integer>1</integer>
						</regexCodePropertyList>
					</Trigger>
					<Trigger isActive="yes" isFolder="no" isTempTrigger="no" isMultiline="no" isPerlSlashGOption="no" isColorizerTrigger="no" isFilterTrigger="no" isSoundTrigger="no" isColorTrigger="no" isColorTriggerFg="no" isColorTriggerBg="no">
						<name>World events</name>
						<script>mmp.locateAndEcho(matches[2])</script>
						<triggerType>0</triggerType>
						<conditonLineDelta>0</conditonLineDelta>
						<mStayOpen>0</mStayOpen>
						<mCommand></mCommand>
						<packageName></packageName>
						<mFgColor>#ff0000</mFgColor>
						<mBgColor>#ffff00</mBgColor>
						<mSoundFile></mSoundFile>
						<colorTriggerFgColor>#000000</colorTriggerFgColor>
						<colorTriggerBgColor>#000000</colorTriggerBgColor>
						<regexCodeList>
							<string>^The Staff of Ascension is at (.*)\.$</string>
							<string>^The Purple Hamster of Chaos is at (.*)\.$</string>
						</regexCodeList>
						<regexCodePropertyList>
							<integer>1</integer>
							<integer>1</integer>
						</regexCodePropertyList>
					</Trigger>
					<Trigger isActive="yes" isFolder="no" isTempTrigger="no" isMultiline="yes" isPerlSlashGOption="no" isColorizerTrigger="no" isFilterTrigger="no" isSoundTrigger="no" isColorTrigger="no" isColorTriggerFg="no" isColorTriggerBg="no">
						<name>Seeing stone</name>
						<script>mmp.locateAndEcho(multimatches[3][2])</script>
						<triggerType>0</triggerType>
						<conditonLineDelta>3</conditonLineDelta>
						<mStayOpen>0</mStayOpen>
						<mCommand></mCommand>
						<packageName></packageName>
						<mFgColor>#ff0000</mFgColor>
						<mBgColor>#ffff00</mBgColor>
						<mSoundFile></mSoundFile>
						<colorTriggerFgColor>#000000</colorTriggerFgColor>
						<colorTriggerBgColor>#000000</colorTriggerBgColor>
						<regexCodeList>
							<string>You gaze into a seeing stone.</string>
							<string>1</string>
							<string>^(.*)\.$</string>
						</regexCodeList>
						<regexCodePropertyList>
							<integer>3</integer>
							<integer>5</integer>
							<integer>1</integer>
						</regexCodePropertyList>
					</Trigger>
					<Trigger isActive="yes" isFolder="no" isTempTrigger="no" isMultiline="yes" isPerlSlashGOption="no" isColorizerTrigger="no" isFilterTrigger="no" isSoundTrigger="no" isColorTrigger="no" isColorTriggerFg="no" isColorTriggerBg="no">
						<name>Birdseye</name>
						<script>mmp.locateAndEcho(multimatches[2][3], multimatches[2][2])</script>
						<triggerType>0</triggerType>
						<conditonLineDelta>0</conditonLineDelta>
						<mStayOpen>0</mStayOpen>
						<mCommand></mCommand>
						<packageName></packageName>
						<mFgColor>#ff0000</mFgColor>
						<mBgColor>#ffff00</mBgColor>
						<mSoundFile></mSoundFile>
						<colorTriggerFgColor>#000000</colorTriggerFgColor>
						<colorTriggerBgColor>#000000</colorTriggerBgColor>
						<regexCodeList>
							<string>From your vantage point in the sky, your crow senses perceive that</string>
							<string>^From your vantage point in the sky, your crow senses perceive that (\w+) is (.*) within the vicinity of (.*)\.$</string>
						</regexCodeList>
						<regexCodePropertyList>
							<integer>2</integer>
							<integer>1</integer>
						</regexCodePropertyList>
					</Trigger>
					<Trigger isActive="yes" isFolder="no" isTempTrigger="no" isMultiline="yes" isPerlSlashGOption="no" isColorizerTrigger="no" isFilterTrigger="no" isSoundTrigger="no" isColorTrigger="no" isColorTriggerFg="no" isColorTriggerBg="no">
						<name>Bond look</name>
						<script>mmp.locateAndEcho(multimatches[3][2])</script>
						<triggerType>0</triggerType>
						<conditonLineDelta>3</conditonLineDelta>
						<mStayOpen>0</mStayOpen>
						<mCommand></mCommand>
						<packageName></packageName>
						<mFgColor>#ff0000</mFgColor>
						<mBgColor>#ffff00</mBgColor>
						<mSoundFile></mSoundFile>
						<colorTriggerFgColor>#000000</colorTriggerFgColor>
						<colorTriggerBgColor>#000000</colorTriggerBgColor>
						<regexCodeList>
							<string>^You look through the mind of (.*)\:$</string>
							<string>1</string>
							<string>^(.*)\.$</string>
						</regexCodeList>
						<regexCodePropertyList>
							<integer>1</integer>
							<integer>5</integer>
							<integer>1</integer>
						</regexCodePropertyList>
					</Trigger>
					<Trigger isActive="yes" isFolder="no" isTempTrigger="no" isMultiline="yes" isPerlSlashGOption="no" isColorizerTrigger="no" isFilterTrigger="no" isSoundTrigger="no" isColorTrigger="no" isColorTriggerFg="no" isColorTriggerBg="no">
						<name>Pyramid probe #</name>
						<script>local t = mmp.getnums(multimatches[2][2])
if not t then return end

echo"\n"

if #t == 1 then
	cecho("&lt;red&gt;From your knowledge, that room is in &lt;orange_red&gt;"..mmp.areatabler[getRoomArea(t[1])].."&lt;red&gt;.")
else
	cecho("&lt;red&gt;From your knowledge, that room might be in &lt;orange_red&gt;"..mmp.areatabler[getRoomArea(t[1])].."&lt;red&gt;.")
end</script>
						<triggerType>0</triggerType>
						<conditonLineDelta>0</conditonLineDelta>
						<mStayOpen>0</mStayOpen>
						<mCommand></mCommand>
						<packageName></packageName>
						<mFgColor>#ff0000</mFgColor>
						<mBgColor>#ffff00</mBgColor>
						<mSoundFile></mSoundFile>
						<colorTriggerFgColor>#000000</colorTriggerFgColor>
						<colorTriggerBgColor>#000000</colorTriggerBgColor>
						<regexCodeList>
							<string>You lightly caress a button on a paradox puzzle pyramid and suddenly a hazy image of</string>
							<string>^You lightly caress a button on a paradox puzzle pyramid and suddenly a hazy image of (.*) flashes momentarily in front of you\.$</string>
						</regexCodeList>
						<regexCodePropertyList>
							<integer>2</integer>
							<integer>1</integer>
						</regexCodePropertyList>
					</Trigger>
					<Trigger isActive="yes" isFolder="no" isTempTrigger="no" isMultiline="yes" isPerlSlashGOption="no" isColorizerTrigger="no" isFilterTrigger="no" isSoundTrigger="no" isColorTrigger="no" isColorTriggerFg="no" isColorTriggerBg="no">
						<name>Pentagon probe #</name>
						<script>local t = mmp.getnums(multimatches[2][2])
if not t then return end

echo"\n"

if #t == 1 then
	cecho("&lt;red&gt;From your knowledge, that room is in &lt;orange_red&gt;"..mmp.areatabler[getRoomArea(t[1])].."&lt;red&gt;.")
else
	cecho("&lt;red&gt;From your knowledge, that room might be in &lt;orange_red&gt;"..mmp.areatabler[getRoomArea(t[1])].."&lt;red&gt;.")
end</script>
						<triggerType>0</triggerType>
						<conditonLineDelta>0</conditonLineDelta>
						<mStayOpen>0</mStayOpen>
						<mCommand></mCommand>
						<packageName></packageName>
						<mFgColor>#ff0000</mFgColor>
						<mBgColor>#ffff00</mBgColor>
						<mSoundFile></mSoundFile>
						<colorTriggerFgColor>#000000</colorTriggerFgColor>
						<colorTriggerBgColor>#000000</colorTriggerBgColor>
						<regexCodeList>
							<string>You lightly caress a button on a paradox puzzle pentagon and suddenly a hazy image of</string>
							<string>^You lightly caress a button on a paradox puzzle pentagon and suddenly a hazy image of (.+) \(room \#\d+\) flashes momentarily in front of you\.$</string>
						</regexCodeList>
						<regexCodePropertyList>
							<integer>2</integer>
							<integer>1</integer>
						</regexCodePropertyList>
					</Trigger>
					<Trigger isActive="yes" isFolder="no" isTempTrigger="no" isMultiline="yes" isPerlSlashGOption="no" isColorizerTrigger="no" isFilterTrigger="no" isSoundTrigger="no" isColorTrigger="no" isColorTriggerFg="no" isColorTriggerBg="no">
						<name>Pyramid port</name>
						<script>local t = mmp.getnums(multimatches[2][2])
if not t then return end

echo"\n"

if #t == 1 then
	cecho("&lt;red&gt;Porting to &lt;orange_red&gt;"..mmp.areatabler[getRoomArea(t[1])].."&lt;red&gt;.")
else
	cecho("&lt;red&gt;Might be porting to &lt;orange_red&gt;"..mmp.areatabler[getRoomArea(t[1])].."&lt;red&gt;.")
end	</script>
						<triggerType>0</triggerType>
						<conditonLineDelta>0</conditonLineDelta>
						<mStayOpen>0</mStayOpen>
						<mCommand></mCommand>
						<packageName></packageName>
						<mFgColor>#ff0000</mFgColor>
						<mBgColor>#ffff00</mBgColor>
						<mSoundFile></mSoundFile>
						<colorTriggerFgColor>#000000</colorTriggerFgColor>
						<colorTriggerBgColor>#000000</colorTriggerBgColor>
						<regexCodeList>
							<string>Your hands become a blur as you twist and turn a paradox puzzle pyramid until each side is made up of the same colour, solving the puzzle in mere moments. Suddenly the image of</string>
							<string>^Your hands become a blur as you twist and turn a paradox puzzle pyramid until each side is made up of the same colour, solving the puzzle in mere moments. Suddenly the image of (.*) appears in the back of your mind and you feel drawn towards it\.$</string>
						</regexCodeList>
						<regexCodePropertyList>
							<integer>2</integer>
							<integer>1</integer>
						</regexCodePropertyList>
					</Trigger>
					<Trigger isActive="yes" isFolder="no" isTempTrigger="no" isMultiline="no" isPerlSlashGOption="no" isColorizerTrigger="no" isFilterTrigger="no" isSoundTrigger="no" isColorTrigger="no" isColorTriggerFg="no" isColorTriggerBg="no">
						<name>Pyramid probe</name>
						<script></script>
						<triggerType>0</triggerType>
						<conditonLineDelta>99</conditonLineDelta>
						<mStayOpen>4</mStayOpen>
						<mCommand></mCommand>
						<packageName></packageName>
						<mFgColor>#ff0000</mFgColor>
						<mBgColor>#ffff00</mBgColor>
						<mSoundFile></mSoundFile>
						<colorTriggerFgColor>#000000</colorTriggerFgColor>
						<colorTriggerBgColor>#000000</colorTriggerBgColor>
						<regexCodeList>
							<string>You lightly caress a few buttons on a paradox puzzle pyramid and suddenly a series of hazy images flashes momentarily in front of you.</string>
						</regexCodeList>
						<regexCodePropertyList>
							<integer>3</integer>
						</regexCodePropertyList>
						<Trigger isActive="yes" isFolder="no" isTempTrigger="no" isMultiline="no" isPerlSlashGOption="no" isColorizerTrigger="no" isFilterTrigger="no" isSoundTrigger="no" isColorTrigger="no" isColorTriggerFg="no" isColorTriggerBg="no">
							<name>Each location</name>
							<script>local t = mmp.getnums(matches[2])
if not t then return end

if #t == 1 then
	cecho("&lt;red&gt; (in &lt;orange_red&gt;"..mmp.areatabler[getRoomArea(t[1])].."&lt;red&gt;)")
else
	cecho("&lt;red&gt; (might be in &lt;orange_red&gt;"..mmp.areatabler[getRoomArea(t[1])].."&lt;red&gt;)")
end</script>
							<triggerType>0</triggerType>
							<conditonLineDelta>0</conditonLineDelta>
							<mStayOpen>0</mStayOpen>
							<mCommand></mCommand>
							<packageName></packageName>
							<mFgColor>#ff0000</mFgColor>
							<mBgColor>#ffff00</mBgColor>
							<mSoundFile></mSoundFile>
							<colorTriggerFgColor>#000000</colorTriggerFgColor>
							<colorTriggerBgColor>#000000</colorTriggerBgColor>
							<regexCodeList>
								<string>^Puzzle point \d+ is set to (.+) \(</string>
							</regexCodeList>
							<regexCodePropertyList>
								<integer>1</integer>
							</regexCodePropertyList>
						</Trigger>
					</Trigger>
					<Trigger isActive="yes" isFolder="no" isTempTrigger="no" isMultiline="yes" isPerlSlashGOption="no" isColorizerTrigger="no" isFilterTrigger="no" isSoundTrigger="no" isColorTrigger="no" isColorTriggerFg="no" isColorTriggerBg="no">
						<name>Astrology scry</name>
						<script>mmp.locateAndEcho(multimatches[2][3], multimatches[2][2])</script>
						<triggerType>0</triggerType>
						<conditonLineDelta>0</conditonLineDelta>
						<mStayOpen>0</mStayOpen>
						<mCommand></mCommand>
						<packageName></packageName>
						<mFgColor>#ff0000</mFgColor>
						<mBgColor>#ffff00</mBgColor>
						<mSoundFile></mSoundFile>
						<colorTriggerFgColor>#000000</colorTriggerFgColor>
						<colorTriggerBgColor>#000000</colorTriggerBgColor>
						<regexCodeList>
							<string>Gazing up at the sky, you bring the image of</string>
							<string>^Gazing up at the sky, you bring the image of (\w+) into your mind's eye and overlay it on the constellations\. The power of the stars manifests as an image of (.+?) forms before your eyes\.$</string>
						</regexCodeList>
						<regexCodePropertyList>
							<integer>2</integer>
							<integer>1</integer>
						</regexCodePropertyList>
					</Trigger>
					<Trigger isActive="yes" isFolder="no" isTempTrigger="no" isMultiline="yes" isPerlSlashGOption="no" isColorizerTrigger="no" isFilterTrigger="no" isSoundTrigger="no" isColorTrigger="no" isColorTriggerFg="no" isColorTriggerBg="no">
						<name>Tierstone</name>
						<script>mmp.locateAndEcho(multimatches[2][2])</script>
						<triggerType>0</triggerType>
						<conditonLineDelta>1</conditonLineDelta>
						<mStayOpen>0</mStayOpen>
						<mCommand></mCommand>
						<packageName></packageName>
						<mFgColor>#ff0000</mFgColor>
						<mBgColor>#ffff00</mBgColor>
						<mSoundFile></mSoundFile>
						<colorTriggerFgColor>#000000</colorTriggerFgColor>
						<colorTriggerBgColor>#000000</colorTriggerBgColor>
						<regexCodeList>
							<string>You gaze into a glittering tierstone.</string>
							<string>^\w+ is at (.+?) in (.*)\.$</string>
						</regexCodeList>
						<regexCodePropertyList>
							<integer>3</integer>
							<integer>1</integer>
						</regexCodePropertyList>
					</Trigger>
					<Trigger isActive="yes" isFolder="no" isTempTrigger="no" isMultiline="no" isPerlSlashGOption="no" isColorizerTrigger="no" isFilterTrigger="no" isSoundTrigger="no" isColorTrigger="no" isColorTriggerFg="no" isColorTriggerBg="no">
						<name>Quicksand</name>
						<script>mmp.customwalkdelay(4)</script>
						<triggerType>0</triggerType>
						<conditonLineDelta>0</conditonLineDelta>
						<mStayOpen>0</mStayOpen>
						<mCommand></mCommand>
						<packageName></packageName>
						<mFgColor>#ff0000</mFgColor>
						<mBgColor>#ffff00</mBgColor>
						<mSoundFile></mSoundFile>
						<colorTriggerFgColor>#000000</colorTriggerFgColor>
						<colorTriggerBgColor>#000000</colorTriggerBgColor>
						<regexCodeList>
							<string>You struggle slowly through the quicksand as you move</string>
						</regexCodeList>
						<regexCodePropertyList>
							<integer>2</integer>
						</regexCodePropertyList>
					</Trigger>
					<Trigger isActive="yes" isFolder="no" isTempTrigger="no" isMultiline="no" isPerlSlashGOption="no" isColorizerTrigger="no" isFilterTrigger="no" isSoundTrigger="no" isColorTrigger="no" isColorTriggerFg="no" isColorTriggerBg="no">
						<name>Gravity</name>
						<script>mmp.customwalkdelay(4)</script>
						<triggerType>0</triggerType>
						<conditonLineDelta>0</conditonLineDelta>
						<mStayOpen>0</mStayOpen>
						<mCommand></mCommand>
						<packageName></packageName>
						<mFgColor>#ff0000</mFgColor>
						<mBgColor>#ffff00</mBgColor>
						<mSoundFile></mSoundFile>
						<colorTriggerFgColor>#000000</colorTriggerFgColor>
						<colorTriggerBgColor>#000000</colorTriggerBgColor>
						<regexCodeList>
							<string>The dragging force of a war shrine of</string>
						</regexCodeList>
						<regexCodePropertyList>
							<integer>2</integer>
						</regexCodePropertyList>
					</Trigger>
					<Trigger isActive="yes" isFolder="no" isTempTrigger="no" isMultiline="yes" isPerlSlashGOption="no" isColorizerTrigger="no" isFilterTrigger="no" isSoundTrigger="no" isColorTrigger="no" isColorTriggerFg="no" isColorTriggerBg="no">
						<name>Crow spy</name>
						<script>mmp.locateAndEcho(multimatches[2][2])</script>
						<triggerType>0</triggerType>
						<conditonLineDelta>0</conditonLineDelta>
						<mStayOpen>0</mStayOpen>
						<mCommand></mCommand>
						<packageName></packageName>
						<mFgColor>#ff0000</mFgColor>
						<mBgColor>#ffff00</mBgColor>
						<mSoundFile></mSoundFile>
						<colorTriggerFgColor>#000000</colorTriggerFgColor>
						<colorTriggerBgColor>#000000</colorTriggerBgColor>
						<regexCodeList>
							<string>An image of</string>
							<string>^An image of \w+ (?:entering|leaving) (.+?) appears in the centre of the nest\.$</string>
						</regexCodeList>
						<regexCodePropertyList>
							<integer>2</integer>
							<integer>1</integer>
						</regexCodePropertyList>
					</Trigger>
					<Trigger isActive="yes" isFolder="no" isTempTrigger="no" isMultiline="yes" isPerlSlashGOption="no" isColorizerTrigger="no" isFilterTrigger="no" isSoundTrigger="no" isColorTrigger="no" isColorTriggerFg="no" isColorTriggerBg="no">
						<name>Crow spy remote</name>
						<script>mmp.locateAndEcho(multimatches[2][2])</script>
						<triggerType>0</triggerType>
						<conditonLineDelta>0</conditonLineDelta>
						<mStayOpen>0</mStayOpen>
						<mCommand></mCommand>
						<packageName></packageName>
						<mFgColor>#ff0000</mFgColor>
						<mBgColor>#ffff00</mBgColor>
						<mSoundFile></mSoundFile>
						<colorTriggerFgColor>#000000</colorTriggerFgColor>
						<colorTriggerBgColor>#000000</colorTriggerBgColor>
						<regexCodeList>
							<string>Your nest projects into your head an image</string>
							<string>^Your nest projects into your head an image of \w+ (?:entering|exiting) (.+)\.$</string>
						</regexCodeList>
						<regexCodePropertyList>
							<integer>2</integer>
							<integer>1</integer>
						</regexCodePropertyList>
					</Trigger>
					<Trigger isActive="yes" isFolder="no" isTempTrigger="no" isMultiline="no" isPerlSlashGOption="no" isColorizerTrigger="no" isFilterTrigger="no" isSoundTrigger="no" isColorTrigger="no" isColorTriggerFg="no" isColorTriggerBg="no">
						<name>Chemwood walk delay</name>
						<script>mmp.customwalkdelay(2)</script>
						<triggerType>0</triggerType>
						<conditonLineDelta>0</conditonLineDelta>
						<mStayOpen>0</mStayOpen>
						<mCommand></mCommand>
						<packageName></packageName>
						<mFgColor>#ff0000</mFgColor>
						<mBgColor>#ffff00</mBgColor>
						<mSoundFile></mSoundFile>
						<colorTriggerFgColor>#000000</colorTriggerFgColor>
						<colorTriggerBgColor>#000000</colorTriggerBgColor>
						<regexCodeList>
							<string>^You struggle to push through \w+'s thick, swirling mists\.$</string>
							<string>^You struggle to move with \w+'s amplified fields disrupting your muscular impulses, but you stumble determinedly in an effort to leave\.$</string>
							<string>^\w+'s whirling leaves harry you as you try to leave, slowing your egress\.$</string>
							<string>^You begin moving through the thick, swirling flurries of \w+'s spores\.$</string>
							<string>You stumble through the thick smog, coughing and sputtering as you try to find cleaner air.</string>
							<string>^You stumble around stupidly as \w+'s mind-dulling effluvia seeps into you, fighting against a strangely dull mind to make your legs take you out of here\.$</string>
						</regexCodeList>
						<regexCodePropertyList>
							<integer>1</integer>
							<integer>1</integer>
							<integer>1</integer>
							<integer>1</integer>
							<integer>3</integer>
							<integer>1</integer>
						</regexCodePropertyList>
					</Trigger>
					<Trigger isActive="yes" isFolder="no" isTempTrigger="no" isMultiline="yes" isPerlSlashGOption="no" isColorizerTrigger="no" isFilterTrigger="no" isSoundTrigger="no" isColorTrigger="no" isColorTriggerFg="no" isColorTriggerBg="no">
						<name>City/commune shops menu</name>
						<script></script>
						<triggerType>0</triggerType>
						<conditonLineDelta>3</conditonLineDelta>
						<mStayOpen>500</mStayOpen>
						<mCommand></mCommand>
						<packageName></packageName>
						<mFgColor>#ff0000</mFgColor>
						<mBgColor>#ffff00</mBgColor>
						<mSoundFile></mSoundFile>
						<colorTriggerFgColor>#000000</colorTriggerFgColor>
						<colorTriggerBgColor>#000000</colorTriggerBgColor>
						<regexCodeList>
							<string>[ Local shops selling</string>
							<string>3</string>
						</regexCodeList>
						<regexCodePropertyList>
							<integer>0</integer>
							<integer>5</integer>
						</regexCodePropertyList>
						<Trigger isActive="yes" isFolder="no" isTempTrigger="no" isMultiline="no" isPerlSlashGOption="no" isColorizerTrigger="no" isFilterTrigger="no" isSoundTrigger="no" isColorTrigger="no" isColorTriggerFg="no" isColorTriggerBg="no">
							<name>Shop</name>
							<script>local shop = line:sub(1, 25):trim()
if shop:sub(1,1) == '*' then return end

cecho("  &lt;orange_red&gt;(")
mmp.echonums(shop)
cecho("&lt;orange_red&gt;)")</script>
							<triggerType>0</triggerType>
							<conditonLineDelta>0</conditonLineDelta>
							<mStayOpen>0</mStayOpen>
							<mCommand></mCommand>
							<packageName></packageName>
							<mFgColor>#ff0000</mFgColor>
							<mBgColor>#ffff00</mBgColor>
							<mSoundFile></mSoundFile>
							<colorTriggerFgColor>#000000</colorTriggerFgColor>
							<colorTriggerBgColor>#000000</colorTriggerBgColor>
							<regexCodeList>
								<string>^</string>
							</regexCodeList>
							<regexCodePropertyList>
								<integer>1</integer>
							</regexCodePropertyList>
						</Trigger>
						<Trigger isActive="yes" isFolder="no" isTempTrigger="no" isMultiline="no" isPerlSlashGOption="no" isColorizerTrigger="no" isFilterTrigger="no" isSoundTrigger="no" isColorTrigger="no" isColorTriggerFg="no" isColorTriggerBg="no">
							<name>Stop (city/commune shops menu)</name>
							<script>setTriggerStayOpen("City/commune shops menu", 0)</script>
							<triggerType>0</triggerType>
							<conditonLineDelta>0</conditonLineDelta>
							<mStayOpen>0</mStayOpen>
							<mCommand></mCommand>
							<packageName></packageName>
							<mFgColor>#ff0000</mFgColor>
							<mBgColor>#ffff00</mBgColor>
							<mSoundFile></mSoundFile>
							<colorTriggerFgColor>#000000</colorTriggerFgColor>
							<colorTriggerBgColor>#000000</colorTriggerBgColor>
							<regexCodeList>
								<string>return isPrompt()</string>
							</regexCodeList>
							<regexCodePropertyList>
								<integer>4</integer>
							</regexCodePropertyList>
						</Trigger>
					</Trigger>
					<TriggerGroup isActive="yes" isFolder="yes" isTempTrigger="no" isMultiline="no" isPerlSlashGOption="no" isColorizerTrigger="no" isFilterTrigger="no" isSoundTrigger="no" isColorTrigger="no" isColorTriggerFg="no" isColorTriggerBg="no">
						<name>Rifts and Paths</name>
						<script></script>
						<triggerType>0</triggerType>
						<conditonLineDelta>0</conditonLineDelta>
						<mStayOpen>0</mStayOpen>
						<mCommand></mCommand>
						<packageName></packageName>
						<mFgColor>#ff0000</mFgColor>
						<mBgColor>#ffff00</mBgColor>
						<mSoundFile></mSoundFile>
						<colorTriggerFgColor>#000000</colorTriggerFgColor>
						<colorTriggerBgColor>#000000</colorTriggerBgColor>
						<regexCodeList />
						<regexCodePropertyList />
						<Trigger isActive="yes" isFolder="no" isTempTrigger="no" isMultiline="no" isPerlSlashGOption="no" isColorizerTrigger="no" isFilterTrigger="no" isSoundTrigger="no" isColorTrigger="no" isColorTriggerFg="no" isColorTriggerBg="no">
							<name>Succesful transverse</name>
							<script>if mmp.game~= "lusternia" then return end
if validTransverse then
  mmp.registerTransverseExit()
end</script>
							<triggerType>0</triggerType>
							<conditonLineDelta>0</conditonLineDelta>
							<mStayOpen>0</mStayOpen>
							<mCommand></mCommand>
							<packageName></packageName>
							<mFgColor>#ff0000</mFgColor>
							<mBgColor>#ffff00</mBgColor>
							<mSoundFile></mSoundFile>
							<colorTriggerFgColor>#000000</colorTriggerFgColor>
							<colorTriggerBgColor>#000000</colorTriggerBgColor>
							<regexCodeList>
								<string>^You (place your hands on|reach out to) .+ and find the link to .+\. Pulsating energy flares throughout your field of vision, and you find yourself tumbling through the aether pathways\.$</string>
							</regexCodeList>
							<regexCodePropertyList>
								<integer>1</integer>
							</regexCodePropertyList>
						</Trigger>
						<Trigger isActive="yes" isFolder="no" isTempTrigger="no" isMultiline="no" isPerlSlashGOption="no" isColorizerTrigger="no" isFilterTrigger="no" isSoundTrigger="no" isColorTrigger="no" isColorTriggerFg="no" isColorTriggerBg="no">
							<name>Failed transverse</name>
							<script>if mmp.game~= "lusternia" then return end
mmp.clearTransverse()
validTransverse = false</script>
							<triggerType>0</triggerType>
							<conditonLineDelta>0</conditonLineDelta>
							<mStayOpen>0</mStayOpen>
							<mCommand></mCommand>
							<packageName></packageName>
							<mFgColor>#ff0000</mFgColor>
							<mBgColor>#ffff00</mBgColor>
							<mSoundFile></mSoundFile>
							<colorTriggerFgColor>#000000</colorTriggerFgColor>
							<colorTriggerBgColor>#000000</colorTriggerBgColor>
							<regexCodeList>
								<string>You cannot find a planar gate here.</string>
							</regexCodeList>
							<regexCodePropertyList>
								<integer>3</integer>
							</regexCodePropertyList>
						</Trigger>
						<Trigger isActive="yes" isFolder="no" isTempTrigger="no" isMultiline="no" isPerlSlashGOption="no" isColorizerTrigger="no" isFilterTrigger="no" isSoundTrigger="no" isColorTrigger="no" isColorTriggerFg="no" isColorTriggerBg="no">
							<name>Succesful pathfind</name>
							<script>if mmp.game~= "lusternia" then return end
if validTransverse then
  mmp.clearPathfind()
  mmp.registerPathfind()
end</script>
							<triggerType>0</triggerType>
							<conditonLineDelta>0</conditonLineDelta>
							<mStayOpen>0</mStayOpen>
							<mCommand></mCommand>
							<packageName></packageName>
							<mFgColor>#ff0000</mFgColor>
							<mBgColor>#ffff00</mBgColor>
							<mSoundFile></mSoundFile>
							<colorTriggerFgColor>#000000</colorTriggerFgColor>
							<colorTriggerBgColor>#000000</colorTriggerBgColor>
							<regexCodeList>
								<string>You squat down and narrow your eyes, finally finding a mystic pathway that twists and turns in the distance. Before it slips away, you dash forward and rush along its winding tracks.</string>
							</regexCodeList>
							<regexCodePropertyList>
								<integer>3</integer>
							</regexCodePropertyList>
						</Trigger>
						<Trigger isActive="yes" isFolder="no" isTempTrigger="no" isMultiline="no" isPerlSlashGOption="no" isColorizerTrigger="no" isFilterTrigger="no" isSoundTrigger="no" isColorTrigger="no" isColorTriggerFg="no" isColorTriggerBg="no">
							<name>failed pathfind</name>
							<script>if mmp.game~= "lusternia" then return end
mmp.clearPathfind()
validTransverse = false</script>
							<triggerType>0</triggerType>
							<conditonLineDelta>0</conditonLineDelta>
							<mStayOpen>0</mStayOpen>
							<mCommand></mCommand>
							<packageName></packageName>
							<mFgColor>#ff0000</mFgColor>
							<mBgColor>#ffff00</mBgColor>
							<mSoundFile></mSoundFile>
							<colorTriggerFgColor>#000000</colorTriggerFgColor>
							<colorTriggerBgColor>#000000</colorTriggerBgColor>
							<regexCodeList>
								<string>You cannot find a pathway here.</string>
							</regexCodeList>
							<regexCodePropertyList>
								<integer>3</integer>
							</regexCodePropertyList>
						</Trigger>
					</TriggerGroup>
				</TriggerGroup>
				<TriggerGroup isActive="yes" isFolder="yes" isTempTrigger="no" isMultiline="no" isPerlSlashGOption="no" isColorizerTrigger="no" isFilterTrigger="no" isSoundTrigger="no" isColorTrigger="no" isColorTriggerFg="no" isColorTriggerBg="no">
					<name>Imperian</name>
					<script></script>
					<triggerType>0</triggerType>
					<conditonLineDelta>99</conditonLineDelta>
					<mStayOpen>0</mStayOpen>
					<mCommand></mCommand>
					<packageName></packageName>
					<mFgColor>#ff0000</mFgColor>
					<mBgColor>#ffff00</mBgColor>
					<mSoundFile></mSoundFile>
					<colorTriggerFgColor>#000000</colorTriggerFgColor>
					<colorTriggerBgColor>#000000</colorTriggerBgColor>
					<regexCodeList />
					<regexCodePropertyList />
					<Trigger isActive="yes" isFolder="no" isTempTrigger="no" isMultiline="no" isPerlSlashGOption="no" isColorizerTrigger="no" isFilterTrigger="no" isSoundTrigger="no" isColorTrigger="no" isColorTriggerFg="no" isColorTriggerBg="no">
						<name>Login</name>
						<script>raiseEvent("mmp logged in", "Imperian")
mmp.game = "imperian"</script>
						<triggerType>0</triggerType>
						<conditonLineDelta>0</conditonLineDelta>
						<mStayOpen>0</mStayOpen>
						<mCommand></mCommand>
						<packageName></packageName>
						<mFgColor>#ff0000</mFgColor>
						<mBgColor>#ffff00</mBgColor>
						<mSoundFile></mSoundFile>
						<colorTriggerFgColor>#000000</colorTriggerFgColor>
						<colorTriggerBgColor>#000000</colorTriggerBgColor>
						<regexCodeList>
							<string>Password correct. Welcome to Imperian.</string>
						</regexCodeList>
						<regexCodePropertyList>
							<integer>3</integer>
						</regexCodePropertyList>
					</Trigger>
					<Trigger isActive="yes" isFolder="no" isTempTrigger="no" isMultiline="yes" isPerlSlashGOption="no" isColorizerTrigger="no" isFilterTrigger="no" isSoundTrigger="no" isColorTrigger="no" isColorTriggerFg="no" isColorTriggerBg="no">
						<name>Wormholes</name>
						<script>local room1 = mmp.roomEcho(multimatches[2][2])
local room2 = mmp.roomEcho(multimatches[2][3])
selectCurrentLine()
replace("")
mmp.echon("Stable wormhole between " .. room1)
mmp.roomEcho(room1)
echo(" and " .. room2)
mmp.roomEcho(room2)
echo(".\n")</script>
						<triggerType>0</triggerType>
						<conditonLineDelta>0</conditonLineDelta>
						<mStayOpen>0</mStayOpen>
						<mCommand></mCommand>
						<packageName></packageName>
						<mFgColor>#ff0000</mFgColor>
						<mBgColor>#ffff00</mBgColor>
						<mSoundFile></mSoundFile>
						<colorTriggerFgColor>#000000</colorTriggerFgColor>
						<colorTriggerBgColor>#000000</colorTriggerBgColor>
						<regexCodeList>
							<string>You sense a stable wormhole between</string>
							<string>^You sense a stable wormhole between (.+?) and (.+)\.$</string>
						</regexCodeList>
						<regexCodePropertyList>
							<integer>2</integer>
							<integer>1</integer>
						</regexCodePropertyList>
					</Trigger>
					<Trigger isActive="yes" isFolder="no" isTempTrigger="no" isMultiline="yes" isPerlSlashGOption="no" isColorizerTrigger="no" isFilterTrigger="no" isSoundTrigger="no" isColorTrigger="no" isColorTriggerFg="no" isColorTriggerBg="no">
						<name>Personal wormholes</name>
						<script>selectCurrentLine()
replace("")
mmp.echon("Personal wormhole at " .. multimatches[2][2])
mmp.roomEcho(multimatches[2][2])
echo(". It is attached to " .. multimatches[2][3] .. ".\n")</script>
						<triggerType>0</triggerType>
						<conditonLineDelta>0</conditonLineDelta>
						<mStayOpen>0</mStayOpen>
						<mCommand></mCommand>
						<packageName></packageName>
						<mFgColor>#ff0000</mFgColor>
						<mBgColor>#ffff00</mBgColor>
						<mSoundFile></mSoundFile>
						<colorTriggerFgColor>#000000</colorTriggerFgColor>
						<colorTriggerBgColor>#000000</colorTriggerBgColor>
						<regexCodeList>
							<string>You sense a personal wormhole at</string>
							<string>^You sense a personal wormhole at (.+). It is attached to (.+)\.$</string>
						</regexCodeList>
						<regexCodePropertyList>
							<integer>2</integer>
							<integer>1</integer>
						</regexCodePropertyList>
					</Trigger>
					<Trigger isActive="no" isFolder="no" isTempTrigger="no" isMultiline="no" isPerlSlashGOption="no" isColorizerTrigger="no" isFilterTrigger="no" isSoundTrigger="no" isColorTrigger="no" isColorTriggerFg="no" isColorTriggerBg="no">
						<name>Parse wholist</name>
						<script>selectCaptureGroup(2)
replace("")
mmp.roomEcho(matches[3])
 </script>
						<triggerType>0</triggerType>
						<conditonLineDelta>0</conditonLineDelta>
						<mStayOpen>0</mStayOpen>
						<mCommand></mCommand>
						<packageName></packageName>
						<mFgColor>#ff0000</mFgColor>
						<mBgColor>#ffff00</mBgColor>
						<mSoundFile></mSoundFile>
						<colorTriggerFgColor>#000000</colorTriggerFgColor>
						<colorTriggerBgColor>#000000</colorTriggerBgColor>
						<regexCodeList>
							<string>.+( \- [A-Z].+?\s*?) \- (.+)</string>
						</regexCodeList>
						<regexCodePropertyList>
							<integer>1</integer>
						</regexCodePropertyList>
					</Trigger>
					<Trigger isActive="yes" isFolder="no" isTempTrigger="no" isMultiline="yes" isPerlSlashGOption="no" isColorizerTrigger="no" isFilterTrigger="no" isSoundTrigger="no" isColorTrigger="no" isColorTriggerFg="no" isColorTriggerBg="no">
						<name>Trap went off</name>
						<script>selectCurrentLine()
replace("")
mmp.echon("Your trap at " .. multimatches[2][2])
mmp.roomEcho(multimatches[2][2])
echo(" was set off by " .. multimatches[2][3] .. "!!!\n")</script>
						<triggerType>0</triggerType>
						<conditonLineDelta>0</conditonLineDelta>
						<mStayOpen>0</mStayOpen>
						<mCommand></mCommand>
						<packageName></packageName>
						<mFgColor>#ff0000</mFgColor>
						<mBgColor>#ffff00</mBgColor>
						<mSoundFile></mSoundFile>
						<colorTriggerFgColor>#000000</colorTriggerFgColor>
						<colorTriggerBgColor>#000000</colorTriggerBgColor>
						<regexCodeList>
							<string>Your alarm at</string>
							<string>^Your alarm at \'(.+)\' has been set off by (\w+)\!$</string>
						</regexCodeList>
						<regexCodePropertyList>
							<integer>2</integer>
							<integer>1</integer>
						</regexCodePropertyList>
					</Trigger>
					<Trigger isActive="yes" isFolder="no" isTempTrigger="no" isMultiline="yes" isPerlSlashGOption="no" isColorizerTrigger="no" isFilterTrigger="no" isSoundTrigger="no" isColorTrigger="no" isColorTriggerFg="no" isColorTriggerBg="no">
						<name>Trap List</name>
						<script>-- the first pattern is not blank, there are spaces there

selectCurrentLine()
replace("")
echo("[" .. multimatches[2][2] .. "] (" .. multimatches[2][3] .. ") at " .. multimatches[2][4])
mmp.roomEcho(multimatches[2][4]) </script>
						<triggerType>0</triggerType>
						<conditonLineDelta>0</conditonLineDelta>
						<mStayOpen>0</mStayOpen>
						<mCommand></mCommand>
						<packageName></packageName>
						<mFgColor>#ff0000</mFgColor>
						<mBgColor>#ffff00</mBgColor>
						<mSoundFile></mSoundFile>
						<colorTriggerFgColor>#000000</colorTriggerFgColor>
						<colorTriggerBgColor>#000000</colorTriggerBgColor>
						<regexCodeList>
							<string>   </string>
							<string>^   (\w+) \((\w+)\) at (.+)$</string>
						</regexCodeList>
						<regexCodePropertyList>
							<integer>2</integer>
							<integer>1</integer>
						</regexCodePropertyList>
					</Trigger>
					<Trigger isActive="no" isFolder="no" isTempTrigger="no" isMultiline="yes" isPerlSlashGOption="no" isColorizerTrigger="no" isFilterTrigger="no" isSoundTrigger="no" isColorTrigger="no" isColorTriggerFg="no" isColorTriggerBg="no">
						<name>Scout</name>
						<script>-- bad, overzealous trigger - the pattern needs to be improved
mmp.roomEcho(multimatches[2][2]) </script>
						<triggerType>0</triggerType>
						<conditonLineDelta>0</conditonLineDelta>
						<mStayOpen>0</mStayOpen>
						<mCommand></mCommand>
						<packageName></packageName>
						<mFgColor>#ff0000</mFgColor>
						<mBgColor>#ffff00</mBgColor>
						<mSoundFile></mSoundFile>
						<colorTriggerFgColor>#000000</colorTriggerFgColor>
						<colorTriggerBgColor>#000000</colorTriggerBgColor>
						<regexCodeList>
							<string>   </string>
							<string>^   .+ at (.+)$</string>
						</regexCodeList>
						<regexCodePropertyList>
							<integer>2</integer>
							<integer>1</integer>
						</regexCodePropertyList>
					</Trigger>
					<Trigger isActive="yes" isFolder="no" isTempTrigger="no" isMultiline="no" isPerlSlashGOption="no" isColorizerTrigger="no" isFilterTrigger="no" isSoundTrigger="no" isColorTrigger="no" isColorTriggerFg="no" isColorTriggerBg="no">
						<name>Hunt</name>
						<script>selectCurrentLine()
replace("")
cecho("&lt;chocolate&gt;" .. matches[2] .. "&lt;grey&gt; moved to &lt;sienna&gt;" .. matches[3] .. ", &lt;white&gt;" ..matches[4])
mmp.roomEcho(matches[3]) </script>
						<triggerType>0</triggerType>
						<conditonLineDelta>0</conditonLineDelta>
						<mStayOpen>0</mStayOpen>
						<mCommand></mCommand>
						<packageName></packageName>
						<mFgColor>#ff0000</mFgColor>
						<mBgColor>#ffff00</mBgColor>
						<mSoundFile></mSoundFile>
						<colorTriggerFgColor>#000000</colorTriggerFgColor>
						<colorTriggerBgColor>#000000</colorTriggerBgColor>
						<regexCodeList>
							<string>^You sense that (\w+) has entered (.+)\, (.+)\.$</string>
						</regexCodeList>
						<regexCodePropertyList>
							<integer>1</integer>
						</regexCodePropertyList>
					</Trigger>
					<Trigger isActive="yes" isFolder="no" isTempTrigger="no" isMultiline="no" isPerlSlashGOption="no" isColorizerTrigger="no" isFilterTrigger="no" isSoundTrigger="no" isColorTrigger="no" isColorTriggerFg="no" isColorTriggerBg="no">
						<name>Sewer grate</name>
						<script>mmp.enterGrate()</script>
						<triggerType>0</triggerType>
						<conditonLineDelta>0</conditonLineDelta>
						<mStayOpen>0</mStayOpen>
						<mCommand></mCommand>
						<packageName></packageName>
						<mFgColor>#ff0000</mFgColor>
						<mBgColor>#ffff00</mBgColor>
						<mSoundFile></mSoundFile>
						<colorTriggerFgColor>#000000</colorTriggerFgColor>
						<colorTriggerBgColor>#000000</colorTriggerBgColor>
						<regexCodeList>
							<string>A sewer grate prevents you from moving down into the sewers.</string>
						</regexCodeList>
						<regexCodePropertyList>
							<integer>3</integer>
						</regexCodePropertyList>
					</Trigger>
					<Trigger isActive="yes" isFolder="no" isTempTrigger="no" isMultiline="no" isPerlSlashGOption="no" isColorizerTrigger="no" isFilterTrigger="no" isSoundTrigger="no" isColorTrigger="no" isColorTriggerFg="no" isColorTriggerBg="no">
						<name>Caravan</name>
						<script>mmp.customwalkdelay(15)</script>
						<triggerType>0</triggerType>
						<conditonLineDelta>0</conditonLineDelta>
						<mStayOpen>0</mStayOpen>
						<mCommand></mCommand>
						<packageName></packageName>
						<mFgColor>#ff0000</mFgColor>
						<mBgColor>#ffff00</mBgColor>
						<mSoundFile></mSoundFile>
						<colorTriggerFgColor>#000000</colorTriggerFgColor>
						<colorTriggerBgColor>#000000</colorTriggerBgColor>
						<regexCodeList>
							<string>You begin leading a caravan</string>
						</regexCodeList>
						<regexCodePropertyList>
							<integer>2</integer>
						</regexCodePropertyList>
					</Trigger>
				</TriggerGroup>
				<TriggerGroup isActive="yes" isFolder="yes" isTempTrigger="no" isMultiline="no" isPerlSlashGOption="no" isColorizerTrigger="no" isFilterTrigger="no" isSoundTrigger="no" isColorTrigger="no" isColorTriggerFg="no" isColorTriggerBg="no">
					<name>Starmourn</name>
					<script></script>
					<triggerType>0</triggerType>
					<conditonLineDelta>99</conditonLineDelta>
					<mStayOpen>0</mStayOpen>
					<mCommand></mCommand>
					<packageName></packageName>
					<mFgColor>#ff0000</mFgColor>
					<mBgColor>#ffff00</mBgColor>
					<mSoundFile></mSoundFile>
					<colorTriggerFgColor>#000000</colorTriggerFgColor>
					<colorTriggerBgColor>#000000</colorTriggerBgColor>
					<regexCodeList />
					<regexCodePropertyList />
					<TriggerGroup isActive="yes" isFolder="yes" isTempTrigger="no" isMultiline="no" isPerlSlashGOption="no" isColorizerTrigger="no" isFilterTrigger="no" isSoundTrigger="no" isColorTrigger="no" isColorTriggerFg="no" isColorTriggerBg="no">
						<name>Lifts</name>
						<script></script>
						<triggerType>0</triggerType>
						<conditonLineDelta>0</conditonLineDelta>
						<mStayOpen>0</mStayOpen>
						<mCommand></mCommand>
						<packageName></packageName>
						<mFgColor>#ff0000</mFgColor>
						<mBgColor>#ffff00</mBgColor>
						<mSoundFile></mSoundFile>
						<colorTriggerFgColor>#000000</colorTriggerFgColor>
						<colorTriggerBgColor>#000000</colorTriggerBgColor>
						<regexCodeList />
						<regexCodePropertyList />
						<Trigger isActive="yes" isFolder="no" isTempTrigger="no" isMultiline="no" isPerlSlashGOption="no" isColorizerTrigger="no" isFilterTrigger="no" isSoundTrigger="no" isColorTrigger="no" isColorTriggerFg="no" isColorTriggerBg="no">
							<name>No Lift to ENTER</name>
							<script>mmp.customwalkdelay(15)</script>
							<triggerType>0</triggerType>
							<conditonLineDelta>0</conditonLineDelta>
							<mStayOpen>0</mStayOpen>
							<mCommand></mCommand>
							<packageName></packageName>
							<mFgColor>#ff0000</mFgColor>
							<mBgColor>#ffff00</mBgColor>
							<mSoundFile></mSoundFile>
							<colorTriggerFgColor>#000000</colorTriggerFgColor>
							<colorTriggerBgColor>#000000</colorTriggerBgColor>
							<regexCodeList>
								<string>The interface changes color, calling the lift car to your location.</string>
							</regexCodeList>
							<regexCodePropertyList>
								<integer>3</integer>
							</regexCodePropertyList>
						</Trigger>
						<Trigger isActive="yes" isFolder="no" isTempTrigger="no" isMultiline="no" isPerlSlashGOption="no" isColorizerTrigger="no" isFilterTrigger="no" isSoundTrigger="no" isColorTrigger="no" isColorTriggerFg="no" isColorTriggerBg="no">
							<name>Lift moving</name>
							<script>if mmp.autowalking then
	mmp.customwalkdelay(15)
end</script>
							<triggerType>0</triggerType>
							<conditonLineDelta>0</conditonLineDelta>
							<mStayOpen>0</mStayOpen>
							<mCommand></mCommand>
							<packageName></packageName>
							<mFgColor>#ff0000</mFgColor>
							<mBgColor>#ffff00</mBgColor>
							<mSoundFile></mSoundFile>
							<colorTriggerFgColor>#000000</colorTriggerFgColor>
							<colorTriggerBgColor>#000000</colorTriggerBgColor>
							<regexCodeList>
								<string>The ground beneath your feet seems to shift for a split second as the lift begins to move.</string>
							</regexCodeList>
							<regexCodePropertyList>
								<integer>3</integer>
							</regexCodePropertyList>
						</Trigger>
						<Trigger isActive="yes" isFolder="no" isTempTrigger="no" isMultiline="no" isPerlSlashGOption="no" isColorizerTrigger="no" isFilterTrigger="no" isSoundTrigger="no" isColorTrigger="no" isColorTriggerFg="no" isColorTriggerBg="no">
							<name>Lift at correct floor</name>
							<script>if mmp.autowalking then 
	mmp.liftFloor(nil,nil,true)
	mmp.customwalkdelay(0)
	mmp.deleteLineP()
end</script>
							<triggerType>0</triggerType>
							<conditonLineDelta>0</conditonLineDelta>
							<mStayOpen>0</mStayOpen>
							<mCommand></mCommand>
							<packageName></packageName>
							<mFgColor>#ff0000</mFgColor>
							<mBgColor>#ffff00</mBgColor>
							<mSoundFile></mSoundFile>
							<colorTriggerFgColor>#000000</colorTriggerFgColor>
							<colorTriggerBgColor>#000000</colorTriggerBgColor>
							<regexCodeList>
								<string>Nothing happens, as the lift is already at the requested destination.</string>
							</regexCodeList>
							<regexCodePropertyList>
								<integer>3</integer>
							</regexCodePropertyList>
						</Trigger>
						<Trigger isActive="yes" isFolder="no" isTempTrigger="no" isMultiline="no" isPerlSlashGOption="no" isColorizerTrigger="no" isFilterTrigger="no" isSoundTrigger="no" isColorTrigger="no" isColorTriggerFg="no" isColorTriggerBg="no">
							<name>Lift arrival (inside)</name>
							<script>if mmp.autowalking then
	send("KEY LIFT", false)
end</script>
							<triggerType>0</triggerType>
							<conditonLineDelta>0</conditonLineDelta>
							<mStayOpen>0</mStayOpen>
							<mCommand></mCommand>
							<packageName></packageName>
							<mFgColor>#ff0000</mFgColor>
							<mBgColor>#ffff00</mBgColor>
							<mSoundFile></mSoundFile>
							<colorTriggerFgColor>#000000</colorTriggerFgColor>
							<colorTriggerBgColor>#000000</colorTriggerBgColor>
							<regexCodeList>
								<string>The lift comes to a complete stop, a ping echoing from the control interface. You can now EXIT LIFT.</string>
							</regexCodeList>
							<regexCodePropertyList>
								<integer>3</integer>
							</regexCodePropertyList>
						</Trigger>
						<Trigger isActive="yes" isFolder="no" isTempTrigger="no" isMultiline="no" isPerlSlashGOption="no" isColorizerTrigger="no" isFilterTrigger="no" isSoundTrigger="no" isColorTrigger="no" isColorTriggerFg="no" isColorTriggerBg="no">
							<name>Lift arrival (outside)</name>
							<script>mmp.customwalkdelay(0)
mmp.move()</script>
							<triggerType>0</triggerType>
							<conditonLineDelta>0</conditonLineDelta>
							<mStayOpen>0</mStayOpen>
							<mCommand></mCommand>
							<packageName></packageName>
							<mFgColor>#ff0000</mFgColor>
							<mBgColor>#ffff00</mBgColor>
							<mSoundFile></mSoundFile>
							<colorTriggerFgColor>#000000</colorTriggerFgColor>
							<colorTriggerBgColor>#000000</colorTriggerBgColor>
							<regexCodeList>
								<string>An indicator light flashes above the lift as it arrives at this floor. You can ENTER LIFT to board the lift.</string>
							</regexCodeList>
							<regexCodePropertyList>
								<integer>3</integer>
							</regexCodePropertyList>
						</Trigger>
						<Trigger isActive="yes" isFolder="no" isTempTrigger="no" isMultiline="no" isPerlSlashGOption="no" isColorizerTrigger="no" isFilterTrigger="no" isSoundTrigger="no" isColorTrigger="no" isColorTriggerFg="no" isColorTriggerBg="no">
							<name>Lift interaction failed</name>
							<script>mmp.customwalkdelay(6)
mmp.deleteLineP()</script>
							<triggerType>0</triggerType>
							<conditonLineDelta>0</conditonLineDelta>
							<mStayOpen>0</mStayOpen>
							<mCommand></mCommand>
							<packageName></packageName>
							<mFgColor>#ff0000</mFgColor>
							<mBgColor>#ffff00</mBgColor>
							<mSoundFile></mSoundFile>
							<colorTriggerFgColor>#000000</colorTriggerFgColor>
							<colorTriggerBgColor>#000000</colorTriggerBgColor>
							<regexCodeList>
								<string>The lift is currently in motion and the interface is locked down.</string>
								<string>You may not exit the lift while it is in motion if you wish to remain in one piece.</string>
								<string>The lift is already moving, further attempts will not speed up the process.</string>
							</regexCodeList>
							<regexCodePropertyList>
								<integer>3</integer>
								<integer>3</integer>
								<integer>3</integer>
							</regexCodePropertyList>
						</Trigger>
						<Trigger isActive="yes" isFolder="no" isTempTrigger="no" isMultiline="no" isPerlSlashGOption="no" isColorizerTrigger="no" isFilterTrigger="no" isSoundTrigger="no" isColorTrigger="no" isColorTriggerFg="no" isColorTriggerBg="no">
							<name>KEY LIFT table</name>
							<script>if mmp.autowalking then
	mmp.deleteLineP()
end</script>
							<triggerType>0</triggerType>
							<conditonLineDelta>0</conditonLineDelta>
							<mStayOpen>30</mStayOpen>
							<mCommand></mCommand>
							<packageName></packageName>
							<mFgColor>#ff0000</mFgColor>
							<mBgColor>#ffff00</mBgColor>
							<mSoundFile></mSoundFile>
							<colorTriggerFgColor>#000000</colorTriggerFgColor>
							<colorTriggerBgColor>#000000</colorTriggerBgColor>
							<regexCodeList>
								<string>Linking into the interface of lift network</string>
							</regexCodeList>
							<regexCodePropertyList>
								<integer>2</integer>
							</regexCodePropertyList>
							<Trigger isActive="yes" isFolder="no" isTempTrigger="no" isMultiline="no" isPerlSlashGOption="no" isColorizerTrigger="no" isFilterTrigger="no" isSoundTrigger="no" isColorTrigger="no" isColorTriggerFg="no" isColorTriggerBg="no">
								<name>each lift floor</name>
								<script>if mmp.autowalking then
  if matches[4] == "HERE" then 
  	mmp.liftFloor(matches[3],matches[2],true)
		mmp.correctLiftFloor = true
  else
		if not mmp.correctLiftFloor then
  		mmp.liftFloor(matches[3],matches[2],false)
		end
  end
	mmp.deleteLineP()
end</script>
								<triggerType>0</triggerType>
								<conditonLineDelta>0</conditonLineDelta>
								<mStayOpen>0</mStayOpen>
								<mCommand></mCommand>
								<packageName></packageName>
								<mFgColor>#ff0000</mFgColor>
								<mBgColor>#ffff00</mBgColor>
								<mSoundFile></mSoundFile>
								<colorTriggerFgColor>#000000</colorTriggerFgColor>
								<colorTriggerBgColor>#000000</colorTriggerBgColor>
								<regexCodeList>
									<string>\((\d)\).+"(.+)"(?:\s\[)?(HERE)?(?:]\s)?</string>
								</regexCodeList>
								<regexCodePropertyList>
									<integer>1</integer>
								</regexCodePropertyList>
							</Trigger>
							<Trigger isActive="yes" isFolder="no" isTempTrigger="no" isMultiline="no" isPerlSlashGOption="no" isColorizerTrigger="yes" isFilterTrigger="no" isSoundTrigger="no" isColorTrigger="no" isColorTriggerFg="no" isColorTriggerBg="no">
								<name>Stop (Key Lift)</name>
								<script>setTriggerStayOpen("KEY LIFT table", 0)
mmp.correctLiftFloor = nil</script>
								<triggerType>0</triggerType>
								<conditonLineDelta>0</conditonLineDelta>
								<mStayOpen>0</mStayOpen>
								<mCommand></mCommand>
								<packageName></packageName>
								<mFgColor>#ff0000</mFgColor>
								<mBgColor>#ffff00</mBgColor>
								<mSoundFile></mSoundFile>
								<colorTriggerFgColor>#000000</colorTriggerFgColor>
								<colorTriggerBgColor>#000000</colorTriggerBgColor>
								<regexCodeList>
									<string>return isPrompt()</string>
								</regexCodeList>
								<regexCodePropertyList>
									<integer>4</integer>
								</regexCodePropertyList>
							</Trigger>
						</Trigger>
					</TriggerGroup>
					<Trigger isActive="yes" isFolder="no" isTempTrigger="no" isMultiline="no" isPerlSlashGOption="no" isColorizerTrigger="no" isFilterTrigger="no" isSoundTrigger="no" isColorTrigger="no" isColorTriggerFg="no" isColorTriggerBg="no">
						<name>Login</name>
						<script>raiseEvent("mmp logged in", "Starmourn")
mmp.game = "starmourn"</script>
						<triggerType>0</triggerType>
						<conditonLineDelta>0</conditonLineDelta>
						<mStayOpen>0</mStayOpen>
						<mCommand></mCommand>
						<packageName></packageName>
						<mFgColor>#ff0000</mFgColor>
						<mBgColor>#ffff00</mBgColor>
						<mSoundFile></mSoundFile>
						<colorTriggerFgColor>#000000</colorTriggerFgColor>
						<colorTriggerBgColor>#000000</colorTriggerBgColor>
						<regexCodeList>
							<string>Please enter the name of your Starmourn character.</string>
						</regexCodeList>
						<regexCodePropertyList>
							<integer>2</integer>
						</regexCodePropertyList>
					</Trigger>
					<Trigger isActive="yes" isFolder="no" isTempTrigger="no" isMultiline="no" isPerlSlashGOption="no" isColorizerTrigger="no" isFilterTrigger="no" isSoundTrigger="no" isColorTrigger="no" isColorTriggerFg="no" isColorTriggerBg="no">
						<name>Path Blocked</name>
						<script>mmp.failpath()</script>
						<triggerType>0</triggerType>
						<conditonLineDelta>0</conditonLineDelta>
						<mStayOpen>0</mStayOpen>
						<mCommand></mCommand>
						<packageName></packageName>
						<mFgColor>#ff0000</mFgColor>
						<mBgColor>#ffff00</mBgColor>
						<mSoundFile></mSoundFile>
						<colorTriggerFgColor>#000000</colorTriggerFgColor>
						<colorTriggerBgColor>#000000</colorTriggerBgColor>
						<regexCodeList>
							<string>^.+ blocks your attempt to leave. You can attempt to CRASH \w+ to escape\.$</string>
						</regexCodeList>
						<regexCodePropertyList>
							<integer>1</integer>
						</regexCodePropertyList>
					</Trigger>
				</TriggerGroup>
				<TriggerGroup isActive="yes" isFolder="yes" isTempTrigger="no" isMultiline="no" isPerlSlashGOption="no" isColorizerTrigger="no" isFilterTrigger="no" isSoundTrigger="no" isColorTrigger="no" isColorTriggerFg="no" isColorTriggerBg="no">
					<name>Flying</name>
					<script></script>
					<triggerType>0</triggerType>
					<conditonLineDelta>0</conditonLineDelta>
					<mStayOpen>0</mStayOpen>
					<mCommand></mCommand>
					<packageName></packageName>
					<mFgColor>#ff0000</mFgColor>
					<mBgColor>#ffff00</mBgColor>
					<mSoundFile></mSoundFile>
					<colorTriggerFgColor>#000000</colorTriggerFgColor>
					<colorTriggerBgColor>#000000</colorTriggerBgColor>
					<regexCodeList />
					<regexCodePropertyList />
					<Trigger isActive="yes" isFolder="no" isTempTrigger="no" isMultiline="no" isPerlSlashGOption="no" isColorizerTrigger="no" isFilterTrigger="no" isSoundTrigger="no" isColorTrigger="no" isColorTriggerFg="no" isColorTriggerBg="no">
						<name>move indoors failed by flying</name>
						<script>--this will force land
--may be preferable to fail pathfinding or have option to determine users desire

if mmp.game == "starmourn" then
		send("queue land")
		mmp.customwalkdelay(4)
end
</script>
						<triggerType>0</triggerType>
						<conditonLineDelta>0</conditonLineDelta>
						<mStayOpen>0</mStayOpen>
						<mCommand></mCommand>
						<packageName></packageName>
						<mFgColor>#ff0000</mFgColor>
						<mBgColor>#ffff00</mBgColor>
						<mSoundFile></mSoundFile>
						<colorTriggerFgColor>#000000</colorTriggerFgColor>
						<colorTriggerBgColor>#000000</colorTriggerBgColor>
						<regexCodeList>
							<string>You must land before you can move indoors.</string>
						</regexCodeList>
						<regexCodePropertyList>
							<integer>3</integer>
						</regexCodePropertyList>
					</Trigger>
					<Trigger isActive="yes" isFolder="no" isTempTrigger="no" isMultiline="no" isPerlSlashGOption="no" isColorizerTrigger="no" isFilterTrigger="no" isSoundTrigger="no" isColorTrigger="no" isColorTriggerFg="no" isColorTriggerBg="no">
						<name>Wait for landing</name>
						<script>mmp.customwalkdelay(4)</script>
						<triggerType>0</triggerType>
						<conditonLineDelta>0</conditonLineDelta>
						<mStayOpen>0</mStayOpen>
						<mCommand></mCommand>
						<packageName></packageName>
						<mFgColor>#ff0000</mFgColor>
						<mBgColor>#ffff00</mBgColor>
						<mSoundFile></mSoundFile>
						<colorTriggerFgColor>#000000</colorTriggerFgColor>
						<colorTriggerBgColor>#000000</colorTriggerBgColor>
						<regexCodeList>
							<string>You continue your descent.</string>
						</regexCodeList>
						<regexCodePropertyList>
							<integer>3</integer>
						</regexCodePropertyList>
					</Trigger>
				</TriggerGroup>
				<TriggerGroup isActive="yes" isFolder="yes" isTempTrigger="no" isMultiline="no" isPerlSlashGOption="no" isColorizerTrigger="no" isFilterTrigger="no" isSoundTrigger="no" isColorTrigger="no" isColorTriggerFg="no" isColorTriggerBg="no">
					<name>Lithmeria</name>
					<script></script>
					<triggerType>0</triggerType>
					<conditonLineDelta>0</conditonLineDelta>
					<mStayOpen>0</mStayOpen>
					<mCommand></mCommand>
					<packageName></packageName>
					<mFgColor>#ff0000</mFgColor>
					<mBgColor>#ffff00</mBgColor>
					<mSoundFile></mSoundFile>
					<colorTriggerFgColor>#000000</colorTriggerFgColor>
					<colorTriggerBgColor>#000000</colorTriggerBgColor>
					<regexCodeList />
					<regexCodePropertyList />
					<Trigger isActive="yes" isFolder="no" isTempTrigger="no" isMultiline="no" isPerlSlashGOption="no" isColorizerTrigger="no" isFilterTrigger="no" isSoundTrigger="no" isColorTrigger="no" isColorTriggerFg="no" isColorTriggerBg="no">
						<name>Login</name>
						<script>raiseEvent("mmp logged in", "Lithmeria")
mmp.game = "lithmeria"
mmp.echo("We're connected to Lithmeria.")</script>
						<triggerType>0</triggerType>
						<conditonLineDelta>0</conditonLineDelta>
						<mStayOpen>0</mStayOpen>
						<mCommand></mCommand>
						<packageName></packageName>
						<mFgColor>#ff0000</mFgColor>
						<mBgColor>#ffff00</mBgColor>
						<mSoundFile></mSoundFile>
						<colorTriggerFgColor>#000000</colorTriggerFgColor>
						<colorTriggerBgColor>#000000</colorTriggerBgColor>
						<regexCodeList>
							<string>Welcome to your account!</string>
						</regexCodeList>
						<regexCodePropertyList>
							<integer>3</integer>
						</regexCodePropertyList>
					</Trigger>
				</TriggerGroup>
				<Trigger isActive="yes" isFolder="no" isTempTrigger="no" isMultiline="no" isPerlSlashGOption="no" isColorizerTrigger="no" isFilterTrigger="no" isSoundTrigger="no" isColorTrigger="no" isColorTriggerFg="no" isColorTriggerBg="no">
					<name>Wall</name>
					<script>mmp.failpath()</script>
					<triggerType>0</triggerType>
					<conditonLineDelta>0</conditonLineDelta>
					<mStayOpen>0</mStayOpen>
					<mCommand></mCommand>
					<packageName></packageName>
					<mFgColor>#ff0000</mFgColor>
					<mBgColor>#ffff00</mBgColor>
					<mSoundFile></mSoundFile>
					<colorTriggerFgColor>#000000</colorTriggerFgColor>
					<colorTriggerBgColor>#000000</colorTriggerBgColor>
					<regexCodeList>
						<string>A wall blocks your way.</string>
					</regexCodeList>
					<regexCodePropertyList>
						<integer>3</integer>
					</regexCodePropertyList>
				</Trigger>
				<TriggerGroup isActive="yes" isFolder="yes" isTempTrigger="no" isMultiline="no" isPerlSlashGOption="no" isColorizerTrigger="no" isFilterTrigger="no" isSoundTrigger="no" isColorTrigger="no" isColorTriggerFg="no" isColorTriggerBg="no">
					<name>Doors</name>
					<script></script>
					<triggerType>0</triggerType>
					<conditonLineDelta>0</conditonLineDelta>
					<mStayOpen>0</mStayOpen>
					<mCommand></mCommand>
					<packageName></packageName>
					<mFgColor>#ff0000</mFgColor>
					<mBgColor>#ffff00</mBgColor>
					<mSoundFile></mSoundFile>
					<colorTriggerFgColor>#000000</colorTriggerFgColor>
					<colorTriggerBgColor>#000000</colorTriggerBgColor>
					<regexCodeList />
					<regexCodePropertyList />
					<Trigger isActive="yes" isFolder="no" isTempTrigger="no" isMultiline="no" isPerlSlashGOption="no" isColorizerTrigger="no" isFilterTrigger="no" isSoundTrigger="no" isColorTrigger="no" isColorTriggerFg="no" isColorTriggerBg="no">
						<name>Closing doors</name>
						<script></script>
						<triggerType>0</triggerType>
						<conditonLineDelta>1</conditonLineDelta>
						<mStayOpen>1</mStayOpen>
						<mCommand></mCommand>
						<packageName></packageName>
						<mFgColor>#ff0000</mFgColor>
						<mBgColor>#ffff00</mBgColor>
						<mSoundFile></mSoundFile>
						<colorTriggerFgColor>#000000</colorTriggerFgColor>
						<colorTriggerBgColor>#000000</colorTriggerBgColor>
						<regexCodeList>
							<string>You open the door to the</string>
						</regexCodeList>
						<regexCodePropertyList>
							<integer>2</integer>
						</regexCodePropertyList>
						<Trigger isActive="yes" isFolder="no" isTempTrigger="no" isMultiline="no" isPerlSlashGOption="no" isColorizerTrigger="no" isFilterTrigger="no" isSoundTrigger="no" isColorTrigger="no" isColorTriggerFg="no" isColorTriggerBg="no">
							<name>Lack of piety</name>
							<script>mmp.failpath()</script>
							<triggerType>0</triggerType>
							<conditonLineDelta>0</conditonLineDelta>
							<mStayOpen>0</mStayOpen>
							<mCommand></mCommand>
							<packageName></packageName>
							<mFgColor>#ff0000</mFgColor>
							<mBgColor>#ffff00</mBgColor>
							<mSoundFile></mSoundFile>
							<colorTriggerFgColor>#000000</colorTriggerFgColor>
							<colorTriggerBgColor>#000000</colorTriggerBgColor>
							<regexCodeList>
								<string>^You try to open the door to the (\w+) but find it slams closed in your face, symbolic of your lack of piety\.$</string>
							</regexCodeList>
							<regexCodePropertyList>
								<integer>1</integer>
							</regexCodePropertyList>
						</Trigger>
						<Trigger isActive="yes" isFolder="no" isTempTrigger="no" isMultiline="no" isPerlSlashGOption="no" isColorizerTrigger="no" isFilterTrigger="no" isSoundTrigger="no" isColorTrigger="no" isColorTriggerFg="no" isColorTriggerBg="no">
							<name>Slam Shut</name>
							<script>mmp.failpath()</script>
							<triggerType>0</triggerType>
							<conditonLineDelta>1</conditonLineDelta>
							<mStayOpen>0</mStayOpen>
							<mCommand></mCommand>
							<packageName></packageName>
							<mFgColor>#ff0000</mFgColor>
							<mBgColor>#ffff00</mBgColor>
							<mSoundFile></mSoundFile>
							<colorTriggerFgColor>#000000</colorTriggerFgColor>
							<colorTriggerBgColor>#000000</colorTriggerBgColor>
							<regexCodeList>
								<string>The door slams shut!</string>
							</regexCodeList>
							<regexCodePropertyList>
								<integer>3</integer>
							</regexCodePropertyList>
						</Trigger>
						<Trigger isActive="yes" isFolder="no" isTempTrigger="no" isMultiline="no" isPerlSlashGOption="no" isColorizerTrigger="no" isFilterTrigger="no" isSoundTrigger="no" isColorTrigger="no" isColorTriggerFg="no" isColorTriggerBg="no">
							<name>Denied entry</name>
							<script>mmp.failpath()</script>
							<triggerType>0</triggerType>
							<conditonLineDelta>0</conditonLineDelta>
							<mStayOpen>0</mStayOpen>
							<mCommand></mCommand>
							<packageName></packageName>
							<mFgColor>#ff0000</mFgColor>
							<mBgColor>#ffff00</mBgColor>
							<mSoundFile></mSoundFile>
							<colorTriggerFgColor>#000000</colorTriggerFgColor>
							<colorTriggerBgColor>#000000</colorTriggerBgColor>
							<regexCodeList>
								<string>The door suddenly slams shut, denying you entry.</string>
							</regexCodeList>
							<regexCodePropertyList>
								<integer>3</integer>
							</regexCodePropertyList>
						</Trigger>
						<Trigger isActive="yes" isFolder="no" isTempTrigger="no" isMultiline="no" isPerlSlashGOption="no" isColorizerTrigger="no" isFilterTrigger="no" isSoundTrigger="no" isColorTrigger="no" isColorTriggerFg="no" isColorTriggerBg="no">
							<name>CIJ</name>
							<script>mmp.failpath()</script>
							<triggerType>0</triggerType>
							<conditonLineDelta>0</conditonLineDelta>
							<mStayOpen>0</mStayOpen>
							<mCommand></mCommand>
							<packageName></packageName>
							<mFgColor>#ff0000</mFgColor>
							<mBgColor>#ffff00</mBgColor>
							<mSoundFile></mSoundFile>
							<colorTriggerFgColor>#000000</colorTriggerFgColor>
							<colorTriggerBgColor>#000000</colorTriggerBgColor>
							<regexCodeList>
								<string>A section of the door slides aside, and a rubber-gloved fist on a spring pops out and punches you in the nose!</string>
							</regexCodeList>
							<regexCodePropertyList>
								<integer>3</integer>
							</regexCodePropertyList>
						</Trigger>
						<Trigger isActive="yes" isFolder="no" isTempTrigger="no" isMultiline="no" isPerlSlashGOption="no" isColorizerTrigger="no" isFilterTrigger="no" isSoundTrigger="no" isColorTrigger="no" isColorTriggerFg="no" isColorTriggerBg="no">
							<name>Springs back</name>
							<script>mmp.failpath()</script>
							<triggerType>0</triggerType>
							<conditonLineDelta>0</conditonLineDelta>
							<mStayOpen>0</mStayOpen>
							<mCommand></mCommand>
							<packageName></packageName>
							<mFgColor>#ff0000</mFgColor>
							<mBgColor>#ffff00</mBgColor>
							<mSoundFile></mSoundFile>
							<colorTriggerFgColor>#000000</colorTriggerFgColor>
							<colorTriggerBgColor>#000000</colorTriggerBgColor>
							<regexCodeList>
								<string>The door budges, and then springs immediately back into place.</string>
							</regexCodeList>
							<regexCodePropertyList>
								<integer>3</integer>
							</regexCodePropertyList>
						</Trigger>
						<Trigger isActive="yes" isFolder="no" isTempTrigger="no" isMultiline="no" isPerlSlashGOption="no" isColorizerTrigger="no" isFilterTrigger="no" isSoundTrigger="no" isColorTrigger="no" isColorTriggerFg="no" isColorTriggerBg="no">
							<name>Bolted</name>
							<script>mmp.failpath()</script>
							<triggerType>0</triggerType>
							<conditonLineDelta>0</conditonLineDelta>
							<mStayOpen>0</mStayOpen>
							<mCommand></mCommand>
							<packageName></packageName>
							<mFgColor>#ff0000</mFgColor>
							<mBgColor>#ffff00</mBgColor>
							<mSoundFile></mSoundFile>
							<colorTriggerFgColor>#000000</colorTriggerFgColor>
							<colorTriggerBgColor>#000000</colorTriggerBgColor>
							<regexCodeList>
								<string>^The door to the (\w+) is closed forcefully fromthe other side and the sound of a bolt being slammed home makes your lack of admittance clear\.$</string>
							</regexCodeList>
							<regexCodePropertyList>
								<integer>1</integer>
							</regexCodePropertyList>
						</Trigger>
						<Trigger isActive="yes" isFolder="no" isTempTrigger="no" isMultiline="no" isPerlSlashGOption="no" isColorizerTrigger="no" isFilterTrigger="no" isSoundTrigger="no" isColorTrigger="no" isColorTriggerFg="no" isColorTriggerBg="no">
							<name>Self-closing door</name>
							<script>mmp.failpath()</script>
							<triggerType>0</triggerType>
							<conditonLineDelta>0</conditonLineDelta>
							<mStayOpen>0</mStayOpen>
							<mCommand></mCommand>
							<packageName></packageName>
							<mFgColor>#ff0000</mFgColor>
							<mBgColor>#ffff00</mBgColor>
							<mSoundFile></mSoundFile>
							<colorTriggerFgColor>#000000</colorTriggerFgColor>
							<colorTriggerBgColor>#000000</colorTriggerBgColor>
							<regexCodeList>
								<string>The door closes swiftly with a loud 'BANG'!</string>
							</regexCodeList>
							<regexCodePropertyList>
								<integer>3</integer>
							</regexCodePropertyList>
						</Trigger>
					</Trigger>
					<Trigger isActive="yes" isFolder="no" isTempTrigger="no" isMultiline="yes" isPerlSlashGOption="no" isColorizerTrigger="no" isFilterTrigger="no" isSoundTrigger="no" isColorTrigger="no" isColorTriggerFg="no" isColorTriggerBg="no">
						<name>Door closed</name>
						<script>mmp.failpath()</script>
						<triggerType>0</triggerType>
						<conditonLineDelta>2</conditonLineDelta>
						<mStayOpen>0</mStayOpen>
						<mCommand></mCommand>
						<packageName></packageName>
						<mFgColor>#ff0000</mFgColor>
						<mBgColor>#ffff00</mBgColor>
						<mSoundFile></mSoundFile>
						<colorTriggerFgColor>#000000</colorTriggerFgColor>
						<colorTriggerBgColor>#000000</colorTriggerBgColor>
						<regexCodeList>
							<string>You open the door to the</string>
							<string>return isPrompt()</string>
							<string>^The door to the \w+ closes with a click\.$</string>
						</regexCodeList>
						<regexCodePropertyList>
							<integer>2</integer>
							<integer>4</integer>
							<integer>1</integer>
						</regexCodePropertyList>
					</Trigger>
					<Trigger isActive="yes" isFolder="no" isTempTrigger="no" isMultiline="no" isPerlSlashGOption="no" isColorizerTrigger="no" isFilterTrigger="no" isSoundTrigger="no" isColorTrigger="no" isColorTriggerFg="no" isColorTriggerBg="no">
						<name>Failed to open door</name>
						<script>mmp.failpath()

</script>
						<triggerType>0</triggerType>
						<conditonLineDelta>0</conditonLineDelta>
						<mStayOpen>0</mStayOpen>
						<mCommand></mCommand>
						<packageName></packageName>
						<mFgColor>#ff0000</mFgColor>
						<mBgColor>#ffff00</mBgColor>
						<mSoundFile></mSoundFile>
						<colorTriggerFgColor>#000000</colorTriggerFgColor>
						<colorTriggerBgColor>#000000</colorTriggerBgColor>
						<regexCodeList>
							<string>You are not carrying a key for this door.</string>
							<string>This door has been magically locked shut.</string>
							<string>Not recognising you as cast or crew, stagehands firmly close the door on you.</string>
							<string>You push against the door in vain as you try to open it.</string>
							<string>You do not have access to open this door.</string>
							<string>The door beeps quietly. It appears to be locked.</string>
						</regexCodeList>
						<regexCodePropertyList>
							<integer>3</integer>
							<integer>3</integer>
							<integer>3</integer>
							<integer>3</integer>
							<integer>3</integer>
							<integer>3</integer>
						</regexCodePropertyList>
					</Trigger>
					<Trigger isActive="yes" isFolder="no" isTempTrigger="no" isMultiline="no" isPerlSlashGOption="no" isColorizerTrigger="no" isFilterTrigger="no" isSoundTrigger="no" isColorTrigger="no" isColorTriggerFg="no" isColorTriggerBg="no">
						<name>Door Locked</name>
						<script>mmp.unlockDoor()</script>
						<triggerType>0</triggerType>
						<conditonLineDelta>0</conditonLineDelta>
						<mStayOpen>0</mStayOpen>
						<mCommand></mCommand>
						<packageName></packageName>
						<mFgColor>#ff0000</mFgColor>
						<mBgColor>#ffff00</mBgColor>
						<mSoundFile></mSoundFile>
						<colorTriggerFgColor>#000000</colorTriggerFgColor>
						<colorTriggerBgColor>#000000</colorTriggerBgColor>
						<regexCodeList>
							<string>The door is locked.</string>
						</regexCodeList>
						<regexCodePropertyList>
							<integer>3</integer>
						</regexCodePropertyList>
					</Trigger>
					<Trigger isActive="yes" isFolder="no" isTempTrigger="no" isMultiline="no" isPerlSlashGOption="no" isColorizerTrigger="no" isFilterTrigger="no" isSoundTrigger="no" isColorTrigger="no" isColorTriggerFg="no" isColorTriggerBg="no">
						<name>Door in the way</name>
						<script>mmp.openDoor()</script>
						<triggerType>0</triggerType>
						<conditonLineDelta>0</conditonLineDelta>
						<mStayOpen>0</mStayOpen>
						<mCommand></mCommand>
						<packageName></packageName>
						<mFgColor>#ff0000</mFgColor>
						<mBgColor>#ffff00</mBgColor>
						<mSoundFile></mSoundFile>
						<colorTriggerFgColor>#000000</colorTriggerFgColor>
						<colorTriggerBgColor>#000000</colorTriggerBgColor>
						<regexCodeList>
							<string>There is a door in the way, to the</string>
							<string>There is a door in the way.</string>
							<string>A closed door is in the way. You need to OPEN DOOR</string>
							<string>There is an? (walnut|pine|oak|iron|reinforced) door in the way.</string>
						</regexCodeList>
						<regexCodePropertyList>
							<integer>2</integer>
							<integer>3</integer>
							<integer>2</integer>
							<integer>1</integer>
						</regexCodePropertyList>
					</Trigger>
				</TriggerGroup>
				<TriggerGroup isActive="yes" isFolder="yes" isTempTrigger="no" isMultiline="no" isPerlSlashGOption="no" isColorizerTrigger="no" isFilterTrigger="no" isSoundTrigger="no" isColorTrigger="no" isColorTriggerFg="no" isColorTriggerBg="no">
					<name>Wormholes</name>
					<script></script>
					<triggerType>0</triggerType>
					<conditonLineDelta>0</conditonLineDelta>
					<mStayOpen>0</mStayOpen>
					<mCommand></mCommand>
					<packageName></packageName>
					<mFgColor>#ff0000</mFgColor>
					<mBgColor>#ffff00</mBgColor>
					<mSoundFile></mSoundFile>
					<colorTriggerFgColor>#000000</colorTriggerFgColor>
					<colorTriggerBgColor>#000000</colorTriggerBgColor>
					<regexCodeList />
					<regexCodePropertyList />
					<Trigger isActive="yes" isFolder="no" isTempTrigger="no" isMultiline="yes" isPerlSlashGOption="no" isColorizerTrigger="no" isFilterTrigger="no" isSoundTrigger="no" isColorTrigger="no" isColorTriggerFg="no" isColorTriggerBg="no">
						<name>Worm sources</name>
						<script>deleteLine()
local from = multimatches[2][2]
local to = multimatches[2][3]

cecho("\nYou see connections between "..from.." (")
mmp.echonums(from)
cecho(") and "..to.." (")
mmp.echonums(to)
cecho(")")
</script>
						<triggerType>0</triggerType>
						<conditonLineDelta>0</conditonLineDelta>
						<mStayOpen>0</mStayOpen>
						<mCommand></mCommand>
						<packageName></packageName>
						<mFgColor>#ff0000</mFgColor>
						<mBgColor>#ffff00</mBgColor>
						<mSoundFile></mSoundFile>
						<colorTriggerFgColor>#000000</colorTriggerFgColor>
						<colorTriggerBgColor>#000000</colorTriggerBgColor>
						<regexCodeList>
							<string>You sense a connection between</string>
							<string>^You sense a connection between (.*) and (.*).$</string>
						</regexCodeList>
						<regexCodePropertyList>
							<integer>2</integer>
							<integer>1</integer>
						</regexCodePropertyList>
					</Trigger>
					<Trigger isActive="yes" isFolder="no" isTempTrigger="no" isMultiline="yes" isPerlSlashGOption="no" isColorizerTrigger="no" isFilterTrigger="no" isSoundTrigger="no" isColorTrigger="no" isColorTriggerFg="no" isColorTriggerBg="no">
						<name>Worm seek</name>
						<script>mmp.locateAndEcho(multimatches[2][2])</script>
						<triggerType>0</triggerType>
						<conditonLineDelta>0</conditonLineDelta>
						<mStayOpen>0</mStayOpen>
						<mCommand></mCommand>
						<packageName></packageName>
						<mFgColor>#ff0000</mFgColor>
						<mBgColor>#ffff00</mBgColor>
						<mSoundFile></mSoundFile>
						<colorTriggerFgColor>#000000</colorTriggerFgColor>
						<colorTriggerBgColor>#000000</colorTriggerBgColor>
						<regexCodeList>
							<string>You sense a wormhole leading to</string>
							<string>^You sense a wormhole leading to (.*).$</string>
						</regexCodeList>
						<regexCodePropertyList>
							<integer>2</integer>
							<integer>1</integer>
						</regexCodePropertyList>
					</Trigger>
					<Trigger isActive="yes" isFolder="no" isTempTrigger="no" isMultiline="no" isPerlSlashGOption="no" isColorizerTrigger="no" isFilterTrigger="no" isSoundTrigger="no" isColorTrigger="no" isColorTriggerFg="no" isColorTriggerBg="no">
						<name>Wormhole Vision™</name>
						<script>--if not getSpecialExitsSwap or mmp.settings.lockwormholes then return end
if not getSpecialExitsSwap then return end

local exits = getSpecialExitsSwap(mmp.currentroom)
if exits and exits["worm warp"] then
  cecho(string.format("\n&lt;DarkSlateGrey&gt;A wormhole is here, leading to: &lt;orange_red&gt;%s (#%d)&lt;DarkSlateGrey&gt; in %s.\n", getRoomName(exits["worm warp"]), exits["worm warp"], mmp.cleanAreaName(mmp.getAreaName(exits["worm warp"]))))
end</script>
						<triggerType>0</triggerType>
						<conditonLineDelta>0</conditonLineDelta>
						<mStayOpen>0</mStayOpen>
						<mCommand></mCommand>
						<packageName></packageName>
						<mFgColor>#ff0000</mFgColor>
						<mBgColor>#ffff00</mBgColor>
						<mSoundFile></mSoundFile>
						<colorTriggerFgColor>#000000</colorTriggerFgColor>
						<colorTriggerBgColor>#000000</colorTriggerBgColor>
						<regexCodeList>
							<string>You see exits</string>
							<string>You see a single exit</string>
						</regexCodeList>
						<regexCodePropertyList>
							<integer>2</integer>
							<integer>2</integer>
						</regexCodePropertyList>
					</Trigger>
				</TriggerGroup>
				<Trigger isActive="yes" isFolder="no" isTempTrigger="no" isMultiline="yes" isPerlSlashGOption="no" isColorizerTrigger="no" isFilterTrigger="no" isSoundTrigger="no" isColorTrigger="no" isColorTriggerFg="no" isColorTriggerBg="no">
					<name>City has orb of confinement</name>
					<script>local areaID = getRoomArea(mmp.currentroom) or 0

if areaID == 0 or not (mmp.game == "achaea") then return end --don't know where we are

local area = mmp.cleanAreaName(areaID):lower()
if not mmp.settings["orb"..area] then
	mmp.settings:setOption("orb"..area,true)
	mmp.inside = true
	raiseEvent("mmapper went inside")
end
</script>
					<triggerType>0</triggerType>
					<conditonLineDelta>0</conditonLineDelta>
					<mStayOpen>0</mStayOpen>
					<mCommand></mCommand>
					<packageName></packageName>
					<mFgColor>#ff0000</mFgColor>
					<mBgColor>#ffff00</mBgColor>
					<mSoundFile></mSoundFile>
					<colorTriggerFgColor>#000000</colorTriggerFgColor>
					<colorTriggerBgColor>#000000</colorTriggerBgColor>
					<regexCodeList>
						<string>A shimmering orb covers the city</string>
						<string>A shimmering orb covers the city, preventing you from rising to the skies.</string>
					</regexCodeList>
					<regexCodePropertyList>
						<integer>2</integer>
						<integer>3</integer>
					</regexCodePropertyList>
				</Trigger>
			</TriggerGroup>
		</TriggerGroup>
		<TriggerGroup isActive="yes" isFolder="yes" isTempTrigger="no" isMultiline="no" isPerlSlashGOption="no" isColorizerTrigger="no" isFilterTrigger="no" isSoundTrigger="no" isColorTrigger="no" isColorTriggerFg="no" isColorTriggerBg="no">
			<name>Sunder v4.181</name>
			<script></script>
			<triggerType>0</triggerType>
			<conditonLineDelta>0</conditonLineDelta>
			<mStayOpen>0</mStayOpen>
			<mCommand></mCommand>
			<packageName>Sunder v4.181</packageName>
			<mFgColor>#ff0000</mFgColor>
			<mBgColor>#ffff00</mBgColor>
			<mSoundFile></mSoundFile>
			<colorTriggerFgColor>#000000</colorTriggerFgColor>
			<colorTriggerBgColor>#000000</colorTriggerBgColor>
			<regexCodeList />
			<regexCodePropertyList />
			<TriggerGroup isActive="yes" isFolder="yes" isTempTrigger="no" isMultiline="no" isPerlSlashGOption="no" isColorizerTrigger="no" isFilterTrigger="no" isSoundTrigger="no" isColorTrigger="no" isColorTriggerFg="no" isColorTriggerBg="no">
				<name>Sunder</name>
				<script></script>
				<triggerType>0</triggerType>
				<conditonLineDelta>0</conditonLineDelta>
				<mStayOpen>0</mStayOpen>
				<mCommand></mCommand>
				<packageName></packageName>
				<mFgColor>#ff0000</mFgColor>
				<mBgColor>#ffff00</mBgColor>
				<mSoundFile></mSoundFile>
				<colorTriggerFgColor>#000000</colorTriggerFgColor>
				<colorTriggerBgColor>#000000</colorTriggerBgColor>
				<regexCodeList />
				<regexCodePropertyList />
				<TriggerGroup isActive="yes" isFolder="yes" isTempTrigger="no" isMultiline="no" isPerlSlashGOption="no" isColorizerTrigger="no" isFilterTrigger="no" isSoundTrigger="no" isColorTrigger="no" isColorTriggerFg="no" isColorTriggerBg="no">
					<name>Core</name>
					<script></script>
					<triggerType>0</triggerType>
					<conditonLineDelta>0</conditonLineDelta>
					<mStayOpen>0</mStayOpen>
					<mCommand></mCommand>
					<packageName></packageName>
					<mFgColor>#ff0000</mFgColor>
					<mBgColor>#ffff00</mBgColor>
					<mSoundFile></mSoundFile>
					<colorTriggerFgColor>#000000</colorTriggerFgColor>
					<colorTriggerBgColor>#000000</colorTriggerBgColor>
					<regexCodeList />
					<regexCodePropertyList />
					<Trigger isActive="yes" isFolder="no" isTempTrigger="no" isMultiline="yes" isPerlSlashGOption="no" isColorizerTrigger="no" isFilterTrigger="no" isSoundTrigger="no" isColorTrigger="yes" isColorTriggerFg="no" isColorTriggerBg="no">
						<name>prompt</name>
						<script>cecho(" &lt;red&gt;[&lt;white&gt;" .. snd.target .. "&lt;red&gt;]")
if snd.offense_loaded then
  local msg
  snd.battle_aff = "none"
  snd.chasten_aff = "none"
  snd.last_cured = ""
  snd.rebounded = false
  snd.run_alerts()
  if #snd.alertness &gt;= 1 and snd.toggles.affcalling then
    dir = snd.parseDir(snd.alertnessDir)
    msg = "wt [" .. string.upper(snd.alertType) .. "] -" .. string.upper(dir) .. "- "
    for i in pairs(snd.alertness) do
      msg = msg .. snd.alertness[i] .. " "
    end
    snd.send(msg)
  end
  snd.alertness = {}
  snd.alertnessDir = "none"
end
snd.last_affs = {}
snd.last_aff = ""
snd.maybe_affs = {}
snd.last_limb_dmg = 0
snd.last_hit_limb = "none"
snd.defended = false
snd.core()
if snd.delete_prompt then
  deleteLine()
  snd.delete_prompt = false
end
if snd.bashing_loaded then
  if snd.new.area then
    if gmcp.Room.Info.area == "the Shattered Vortex" then
      x, y = string.match(gmcp.Char.Status.level, "(.*) (.*)")
      level = tonumber(x)
      if level &lt; 100 then
        area = "the Shattered Vortex (Low Level)"
      elseif snd.faction == "spirit" then
        area = "the Shattered Vortex (Spirit)"
      elseif snd.faction == "shadow" then
        area = "the Shattered Vortex (Shadow)"
      end
      if area ~= snd.my.area then
        cecho("\n&lt;green&gt;Entering: " .. area)
        snd.load_targets(area)
        send(" ")
      end
    else
      cecho("\n&lt;green&gt;Entering: " .. gmcp.Room.Info.area)
      snd.load_targets(gmcp.Room.Info.area)
      send(" ")
    end
    snd.new.area = false
  end
  if snd.new.room and snd.toggles.fasthunt then
    if bot.going and (snd.pathing or speedWalkCounter ~= 0) then
      return
    end
    send("who here", false)
  end
end
snd.new.room = false
if snd.gui_loaded then
  snd.aff_list = {}
  for maff in pairs(snd.afflictions) do
    if snd.have_aff(maff) then
      if not table.contains(snd.aff_list, maff) then
        --if string.find(maff, "aff_") then
        -- maff = string.gsub(maff, "aff_")
        --end
        if
          snd.afflictions[maff]["cures"]["herb"] ~= nil or
          snd.afflictions[maff]["cures"]["salve"] ~= nil or
          snd.afflictions[maff]["cures"]["smoke"] ~= nil
        then
          table.insert(snd.aff_list, maff)
        end
      end
    end
  end
  if #snd.aff_list &gt;= 1 then
    display_my_affs()
  else
    myaffs:echo("&lt;center&gt;" .. "my affs" .. "&lt;/center&gt;")
  end
  toggles:clear()
  toggles2:clear()
  local tgs = {"attacking", "bashing", "fasthunt", "dispersing"}
  for tog in pairs(tgs) do
    if snd.toggles[tgs[tog]] then
      toggles:cecho("\n&lt;green&gt;" .. tgs[tog])
    else
      toggles:cecho("\n&lt;red&gt;" .. tgs[tog])
    end
  end
  local tgs = {"affcalling", "calling", "listening", "chameleon"}
  for tog in pairs(tgs) do
    if snd.toggles[tgs[tog]] then
      toggles2:cecho("\n&lt;green&gt;" .. tgs[tog])
    else
      toggles2:cecho("\n&lt;red&gt;" .. tgs[tog])
    end
  end
  if snd.toggles.dispersing then
    if snd.disperse == "callers" then
			toggles:cecho("\n&lt;white&gt;-&gt;&lt;yellow&gt;callers")
		else
			toggles:cecho("\n&lt;white&gt;-&gt;&lt;green&gt;all")
    end
  end
end</script>
						<triggerType>0</triggerType>
						<conditonLineDelta>0</conditonLineDelta>
						<mStayOpen>0</mStayOpen>
						<mCommand></mCommand>
						<packageName></packageName>
						<mFgColor>#ff0000</mFgColor>
						<mBgColor>#ffff00</mBgColor>
						<mSoundFile></mSoundFile>
						<colorTriggerFgColor>#00b300</colorTriggerFgColor>
						<colorTriggerBgColor>#000000</colorTriggerBgColor>
						<regexCodeList>
							<string>return isPrompt()</string>
							<string>^.+</string>
						</regexCodeList>
						<regexCodePropertyList>
							<integer>4</integer>
							<integer>1</integer>
						</regexCodePropertyList>
					</Trigger>
					<TriggerGroup isActive="yes" isFolder="yes" isTempTrigger="no" isMultiline="no" isPerlSlashGOption="no" isColorizerTrigger="no" isFilterTrigger="no" isSoundTrigger="no" isColorTrigger="no" isColorTriggerFg="no" isColorTriggerBg="no">
						<name>Tracking</name>
						<script></script>
						<triggerType>0</triggerType>
						<conditonLineDelta>0</conditonLineDelta>
						<mStayOpen>0</mStayOpen>
						<mCommand></mCommand>
						<packageName></packageName>
						<mFgColor>#ff0000</mFgColor>
						<mBgColor>#ffff00</mBgColor>
						<mSoundFile></mSoundFile>
						<colorTriggerFgColor>#000000</colorTriggerFgColor>
						<colorTriggerBgColor>#000000</colorTriggerBgColor>
						<regexCodeList />
						<regexCodePropertyList />
						<TriggerGroup isActive="yes" isFolder="yes" isTempTrigger="no" isMultiline="no" isPerlSlashGOption="no" isColorizerTrigger="no" isFilterTrigger="no" isSoundTrigger="no" isColorTrigger="no" isColorTriggerFg="no" isColorTriggerBg="no">
							<name>Defenses</name>
							<script></script>
							<triggerType>0</triggerType>
							<conditonLineDelta>0</conditonLineDelta>
							<mStayOpen>0</mStayOpen>
							<mCommand></mCommand>
							<packageName></packageName>
							<mFgColor>#ff0000</mFgColor>
							<mBgColor>#ffff00</mBgColor>
							<mSoundFile></mSoundFile>
							<colorTriggerFgColor>#000000</colorTriggerFgColor>
							<colorTriggerBgColor>#000000</colorTriggerBgColor>
							<regexCodeList />
							<regexCodePropertyList />
							<Trigger isActive="yes" isFolder="no" isTempTrigger="no" isMultiline="no" isPerlSlashGOption="no" isColorizerTrigger="no" isFilterTrigger="no" isSoundTrigger="no" isColorTrigger="no" isColorTriggerFg="no" isColorTriggerBg="no">
								<name>def start</name>
								<script>for i in pairs(snd.defenses) do
 snd.def_remove(i)
end
snd.parrying = "none"</script>
								<triggerType>0</triggerType>
								<conditonLineDelta>0</conditonLineDelta>
								<mStayOpen>99</mStayOpen>
								<mCommand></mCommand>
								<packageName></packageName>
								<mFgColor>#ff0000</mFgColor>
								<mBgColor>#ffff00</mBgColor>
								<mSoundFile></mSoundFile>
								<colorTriggerFgColor>#000000</colorTriggerFgColor>
								<colorTriggerBgColor>#000000</colorTriggerBgColor>
								<regexCodeList>
									<string>You have the following active defences:</string>
								</regexCodeList>
								<regexCodePropertyList>
									<integer>3</integer>
								</regexCodePropertyList>
								<Trigger isActive="yes" isFolder="no" isTempTrigger="no" isMultiline="no" isPerlSlashGOption="no" isColorizerTrigger="no" isFilterTrigger="no" isSoundTrigger="no" isColorTrigger="no" isColorTriggerFg="no" isColorTriggerBg="no">
									<name>def end</name>
									<script>setTriggerStayOpen("def start", 0)</script>
									<triggerType>0</triggerType>
									<conditonLineDelta>0</conditonLineDelta>
									<mStayOpen>0</mStayOpen>
									<mCommand></mCommand>
									<packageName></packageName>
									<mFgColor>#ff0000</mFgColor>
									<mBgColor>#ffff00</mBgColor>
									<mSoundFile></mSoundFile>
									<colorTriggerFgColor>#000000</colorTriggerFgColor>
									<colorTriggerBgColor>#000000</colorTriggerBgColor>
									<regexCodeList>
										<string>^You are protected by (\d+) defences\.$</string>
									</regexCodeList>
									<regexCodePropertyList>
										<integer>1</integer>
									</regexCodePropertyList>
								</Trigger>
								<Trigger isActive="yes" isFolder="no" isTempTrigger="no" isMultiline="no" isPerlSlashGOption="no" isColorizerTrigger="no" isFilterTrigger="no" isSoundTrigger="no" isColorTrigger="no" isColorTriggerFg="no" isColorTriggerBg="no">
									<name>gripping</name>
									<script>snd.def_def("gripping")</script>
									<triggerType>0</triggerType>
									<conditonLineDelta>0</conditonLineDelta>
									<mStayOpen>0</mStayOpen>
									<mCommand></mCommand>
									<packageName></packageName>
									<mFgColor>#ff0000</mFgColor>
									<mBgColor>#ffff00</mBgColor>
									<mSoundFile></mSoundFile>
									<colorTriggerFgColor>#000000</colorTriggerFgColor>
									<colorTriggerBgColor>#000000</colorTriggerBgColor>
									<regexCodeList>
										<string>Your hands are gripping your wielded items tightly.</string>
									</regexCodeList>
									<regexCodePropertyList>
										<integer>3</integer>
									</regexCodePropertyList>
								</Trigger>
								<Trigger isActive="yes" isFolder="no" isTempTrigger="no" isMultiline="no" isPerlSlashGOption="no" isColorizerTrigger="no" isFilterTrigger="no" isSoundTrigger="no" isColorTrigger="no" isColorTriggerFg="no" isColorTriggerBg="no">
									<name>divert melee</name>
									<script>snd.def_def("divert_melee")</script>
									<triggerType>0</triggerType>
									<conditonLineDelta>0</conditonLineDelta>
									<mStayOpen>0</mStayOpen>
									<mCommand></mCommand>
									<packageName></packageName>
									<mFgColor>#ff0000</mFgColor>
									<mBgColor>#ffff00</mBgColor>
									<mSoundFile></mSoundFile>
									<colorTriggerFgColor>#000000</colorTriggerFgColor>
									<colorTriggerBgColor>#000000</colorTriggerBgColor>
									<regexCodeList>
										<string>You are diverting melee attacks.</string>
									</regexCodeList>
									<regexCodePropertyList>
										<integer>3</integer>
									</regexCodePropertyList>
								</Trigger>
								<Trigger isActive="yes" isFolder="no" isTempTrigger="no" isMultiline="no" isPerlSlashGOption="no" isColorizerTrigger="no" isFilterTrigger="no" isSoundTrigger="no" isColorTrigger="no" isColorTriggerFg="no" isColorTriggerBg="no">
									<name>mindseye tattoo</name>
									<script>snd.def_def("mindseye_tattoo")</script>
									<triggerType>0</triggerType>
									<conditonLineDelta>0</conditonLineDelta>
									<mStayOpen>0</mStayOpen>
									<mCommand></mCommand>
									<packageName></packageName>
									<mFgColor>#ff0000</mFgColor>
									<mBgColor>#ffff00</mBgColor>
									<mSoundFile></mSoundFile>
									<colorTriggerFgColor>#000000</colorTriggerFgColor>
									<colorTriggerBgColor>#000000</colorTriggerBgColor>
									<regexCodeList>
										<string>Your senses are magically heightened.</string>
									</regexCodeList>
									<regexCodePropertyList>
										<integer>3</integer>
									</regexCodePropertyList>
								</Trigger>
								<Trigger isActive="yes" isFolder="no" isTempTrigger="no" isMultiline="no" isPerlSlashGOption="no" isColorizerTrigger="no" isFilterTrigger="no" isSoundTrigger="no" isColorTrigger="no" isColorTriggerFg="no" isColorTriggerBg="no">
									<name>cloak tattoo</name>
									<script>snd.def_def("cloak_tattoo")</script>
									<triggerType>0</triggerType>
									<conditonLineDelta>0</conditonLineDelta>
									<mStayOpen>0</mStayOpen>
									<mCommand></mCommand>
									<packageName></packageName>
									<mFgColor>#ff0000</mFgColor>
									<mBgColor>#ffff00</mBgColor>
									<mSoundFile></mSoundFile>
									<colorTriggerFgColor>#000000</colorTriggerFgColor>
									<colorTriggerBgColor>#000000</colorTriggerBgColor>
									<regexCodeList>
										<string>You are surrounded by a cloak of protection.</string>
									</regexCodeList>
									<regexCodePropertyList>
										<integer>3</integer>
									</regexCodePropertyList>
								</Trigger>
								<Trigger isActive="yes" isFolder="no" isTempTrigger="no" isMultiline="no" isPerlSlashGOption="no" isColorizerTrigger="no" isFilterTrigger="no" isSoundTrigger="no" isColorTrigger="no" isColorTriggerFg="no" isColorTriggerBg="no">
									<name>fitness</name>
									<script>snd.def_def("fitness")</script>
									<triggerType>0</triggerType>
									<conditonLineDelta>0</conditonLineDelta>
									<mStayOpen>0</mStayOpen>
									<mCommand></mCommand>
									<packageName></packageName>
									<mFgColor>#ff0000</mFgColor>
									<mBgColor>#ffff00</mBgColor>
									<mSoundFile></mSoundFile>
									<colorTriggerFgColor>#000000</colorTriggerFgColor>
									<colorTriggerBgColor>#000000</colorTriggerBgColor>
									<regexCodeList>
										<string>You are utilising your bodily control to make yourself more fit.</string>
									</regexCodeList>
									<regexCodePropertyList>
										<integer>3</integer>
									</regexCodePropertyList>
								</Trigger>
								<Trigger isActive="yes" isFolder="no" isTempTrigger="no" isMultiline="no" isPerlSlashGOption="no" isColorizerTrigger="no" isFilterTrigger="no" isSoundTrigger="no" isColorTrigger="no" isColorTriggerFg="no" isColorTriggerBg="no">
									<name>blindness</name>
									<script>snd.def_def("blindness")</script>
									<triggerType>0</triggerType>
									<conditonLineDelta>0</conditonLineDelta>
									<mStayOpen>0</mStayOpen>
									<mCommand></mCommand>
									<packageName></packageName>
									<mFgColor>#ff0000</mFgColor>
									<mBgColor>#ffff00</mBgColor>
									<mSoundFile></mSoundFile>
									<colorTriggerFgColor>#000000</colorTriggerFgColor>
									<colorTriggerBgColor>#000000</colorTriggerBgColor>
									<regexCodeList>
										<string>You are blind.</string>
									</regexCodeList>
									<regexCodePropertyList>
										<integer>3</integer>
									</regexCodePropertyList>
								</Trigger>
								<Trigger isActive="yes" isFolder="no" isTempTrigger="no" isMultiline="no" isPerlSlashGOption="no" isColorizerTrigger="no" isFilterTrigger="no" isSoundTrigger="no" isColorTrigger="no" isColorTriggerFg="no" isColorTriggerBg="no">
									<name>deafness</name>
									<script>snd.def_def("deafness")</script>
									<triggerType>0</triggerType>
									<conditonLineDelta>0</conditonLineDelta>
									<mStayOpen>0</mStayOpen>
									<mCommand></mCommand>
									<packageName></packageName>
									<mFgColor>#ff0000</mFgColor>
									<mBgColor>#ffff00</mBgColor>
									<mSoundFile></mSoundFile>
									<colorTriggerFgColor>#000000</colorTriggerFgColor>
									<colorTriggerBgColor>#000000</colorTriggerBgColor>
									<regexCodeList>
										<string>You are deaf.</string>
									</regexCodeList>
									<regexCodePropertyList>
										<integer>3</integer>
									</regexCodePropertyList>
								</Trigger>
								<Trigger isActive="yes" isFolder="no" isTempTrigger="no" isMultiline="no" isPerlSlashGOption="no" isColorizerTrigger="no" isFilterTrigger="no" isSoundTrigger="no" isColorTrigger="no" isColorTriggerFg="no" isColorTriggerBg="no">
									<name>kola</name>
									<script>snd.def_def("kola")</script>
									<triggerType>0</triggerType>
									<conditonLineDelta>0</conditonLineDelta>
									<mStayOpen>0</mStayOpen>
									<mCommand></mCommand>
									<packageName></packageName>
									<mFgColor>#ff0000</mFgColor>
									<mBgColor>#ffff00</mBgColor>
									<mSoundFile></mSoundFile>
									<colorTriggerFgColor>#000000</colorTriggerFgColor>
									<colorTriggerBgColor>#000000</colorTriggerBgColor>
									<regexCodeList>
										<string>You are feeling extremely energetic.</string>
									</regexCodeList>
									<regexCodePropertyList>
										<integer>3</integer>
									</regexCodePropertyList>
								</Trigger>
								<Trigger isActive="yes" isFolder="no" isTempTrigger="no" isMultiline="no" isPerlSlashGOption="no" isColorizerTrigger="no" isFilterTrigger="no" isSoundTrigger="no" isColorTrigger="no" isColorTriggerFg="no" isColorTriggerBg="no">
									<name>waterbreathing</name>
									<script>snd.def_def("waterbreathing")</script>
									<triggerType>0</triggerType>
									<conditonLineDelta>0</conditonLineDelta>
									<mStayOpen>0</mStayOpen>
									<mCommand></mCommand>
									<packageName></packageName>
									<mFgColor>#ff0000</mFgColor>
									<mBgColor>#ffff00</mBgColor>
									<mSoundFile></mSoundFile>
									<colorTriggerFgColor>#000000</colorTriggerFgColor>
									<colorTriggerBgColor>#000000</colorTriggerBgColor>
									<regexCodeList>
										<string>You are surrounded by a pocket of air.</string>
									</regexCodeList>
									<regexCodePropertyList>
										<integer>3</integer>
									</regexCodePropertyList>
								</Trigger>
								<Trigger isActive="yes" isFolder="no" isTempTrigger="no" isMultiline="no" isPerlSlashGOption="no" isColorizerTrigger="no" isFilterTrigger="no" isSoundTrigger="no" isColorTrigger="no" isColorTriggerFg="no" isColorTriggerBg="no">
									<name>deathsight</name>
									<script>snd.def_def("deathsight")</script>
									<triggerType>0</triggerType>
									<conditonLineDelta>0</conditonLineDelta>
									<mStayOpen>0</mStayOpen>
									<mCommand></mCommand>
									<packageName></packageName>
									<mFgColor>#ff0000</mFgColor>
									<mBgColor>#ffff00</mBgColor>
									<mSoundFile></mSoundFile>
									<colorTriggerFgColor>#000000</colorTriggerFgColor>
									<colorTriggerBgColor>#000000</colorTriggerBgColor>
									<regexCodeList>
										<string>Your mind has been touched by the essence of the Underking.</string>
									</regexCodeList>
									<regexCodePropertyList>
										<integer>3</integer>
									</regexCodePropertyList>
								</Trigger>
								<Trigger isActive="yes" isFolder="no" isTempTrigger="no" isMultiline="no" isPerlSlashGOption="no" isColorizerTrigger="no" isFilterTrigger="no" isSoundTrigger="no" isColorTrigger="no" isColorTriggerFg="no" isColorTriggerBg="no">
									<name>insomnia</name>
									<script>snd.def_def("insomnia")</script>
									<triggerType>0</triggerType>
									<conditonLineDelta>0</conditonLineDelta>
									<mStayOpen>0</mStayOpen>
									<mCommand></mCommand>
									<packageName></packageName>
									<mFgColor>#ff0000</mFgColor>
									<mBgColor>#ffff00</mBgColor>
									<mSoundFile></mSoundFile>
									<colorTriggerFgColor>#000000</colorTriggerFgColor>
									<colorTriggerBgColor>#000000</colorTriggerBgColor>
									<regexCodeList>
										<string>You have insomnia, and cannot easily go to sleep.</string>
									</regexCodeList>
									<regexCodePropertyList>
										<integer>3</integer>
									</regexCodePropertyList>
								</Trigger>
								<Trigger isActive="yes" isFolder="no" isTempTrigger="no" isMultiline="no" isPerlSlashGOption="no" isColorizerTrigger="no" isFilterTrigger="no" isSoundTrigger="no" isColorTrigger="no" isColorTriggerFg="no" isColorTriggerBg="no">
									<name>thirdeye</name>
									<script>snd.def_def("thirdeye")</script>
									<triggerType>0</triggerType>
									<conditonLineDelta>0</conditonLineDelta>
									<mStayOpen>0</mStayOpen>
									<mCommand></mCommand>
									<packageName></packageName>
									<mFgColor>#ff0000</mFgColor>
									<mBgColor>#ffff00</mBgColor>
									<mSoundFile></mSoundFile>
									<colorTriggerFgColor>#000000</colorTriggerFgColor>
									<colorTriggerBgColor>#000000</colorTriggerBgColor>
									<regexCodeList>
										<string>You possess the sight of the third eye.</string>
									</regexCodeList>
									<regexCodePropertyList>
										<integer>3</integer>
									</regexCodePropertyList>
								</Trigger>
								<Trigger isActive="yes" isFolder="no" isTempTrigger="no" isMultiline="no" isPerlSlashGOption="no" isColorizerTrigger="no" isFilterTrigger="no" isSoundTrigger="no" isColorTrigger="no" isColorTriggerFg="no" isColorTriggerBg="no">
									<name>venom_resistance</name>
									<script>snd.def_def("venom")</script>
									<triggerType>0</triggerType>
									<conditonLineDelta>0</conditonLineDelta>
									<mStayOpen>0</mStayOpen>
									<mCommand></mCommand>
									<packageName></packageName>
									<mFgColor>#ff0000</mFgColor>
									<mBgColor>#ffff00</mBgColor>
									<mSoundFile></mSoundFile>
									<colorTriggerFgColor>#000000</colorTriggerFgColor>
									<colorTriggerBgColor>#000000</colorTriggerBgColor>
									<regexCodeList>
										<string>Your resistance to damage by poison has been increased.</string>
									</regexCodeList>
									<regexCodePropertyList>
										<integer>3</integer>
									</regexCodePropertyList>
								</Trigger>
								<Trigger isActive="yes" isFolder="no" isTempTrigger="no" isMultiline="no" isPerlSlashGOption="no" isColorizerTrigger="no" isFilterTrigger="no" isSoundTrigger="no" isColorTrigger="no" isColorTriggerFg="no" isColorTriggerBg="no">
									<name>frost</name>
									<script>snd.def_def("frost")</script>
									<triggerType>0</triggerType>
									<conditonLineDelta>0</conditonLineDelta>
									<mStayOpen>0</mStayOpen>
									<mCommand></mCommand>
									<packageName></packageName>
									<mFgColor>#ff0000</mFgColor>
									<mBgColor>#ffff00</mBgColor>
									<mSoundFile></mSoundFile>
									<colorTriggerFgColor>#000000</colorTriggerFgColor>
									<colorTriggerBgColor>#000000</colorTriggerBgColor>
									<regexCodeList>
										<string>You are tempered against fire damage.</string>
									</regexCodeList>
									<regexCodePropertyList>
										<integer>3</integer>
									</regexCodePropertyList>
								</Trigger>
								<Trigger isActive="yes" isFolder="no" isTempTrigger="no" isMultiline="no" isPerlSlashGOption="no" isColorizerTrigger="no" isFilterTrigger="no" isSoundTrigger="no" isColorTrigger="no" isColorTriggerFg="no" isColorTriggerBg="no">
									<name>levitation</name>
									<script>snd.def_def("levitation")</script>
									<triggerType>0</triggerType>
									<conditonLineDelta>0</conditonLineDelta>
									<mStayOpen>0</mStayOpen>
									<mCommand></mCommand>
									<packageName></packageName>
									<mFgColor>#ff0000</mFgColor>
									<mBgColor>#ffff00</mBgColor>
									<mSoundFile></mSoundFile>
									<colorTriggerFgColor>#000000</colorTriggerFgColor>
									<colorTriggerBgColor>#000000</colorTriggerBgColor>
									<regexCodeList>
										<string>You walk on a small cushion of air.</string>
									</regexCodeList>
									<regexCodePropertyList>
										<integer>3</integer>
									</regexCodePropertyList>
								</Trigger>
								<Trigger isActive="yes" isFolder="no" isTempTrigger="no" isMultiline="no" isPerlSlashGOption="no" isColorizerTrigger="no" isFilterTrigger="no" isSoundTrigger="no" isColorTrigger="no" isColorTriggerFg="no" isColorTriggerBg="no">
									<name>speed</name>
									<script>snd.def_def("speed")</script>
									<triggerType>0</triggerType>
									<conditonLineDelta>0</conditonLineDelta>
									<mStayOpen>0</mStayOpen>
									<mCommand></mCommand>
									<packageName></packageName>
									<mFgColor>#ff0000</mFgColor>
									<mBgColor>#ffff00</mBgColor>
									<mSoundFile></mSoundFile>
									<colorTriggerFgColor>#000000</colorTriggerFgColor>
									<colorTriggerBgColor>#000000</colorTriggerBgColor>
									<regexCodeList>
										<string>Your sense of time is heightened, and your reactions are speeded.</string>
									</regexCodeList>
									<regexCodePropertyList>
										<integer>3</integer>
									</regexCodePropertyList>
								</Trigger>
								<Trigger isActive="yes" isFolder="no" isTempTrigger="no" isMultiline="no" isPerlSlashGOption="no" isColorizerTrigger="no" isFilterTrigger="no" isSoundTrigger="no" isColorTrigger="no" isColorTriggerFg="no" isColorTriggerBg="no">
									<name>caloric</name>
									<script>snd.def_def("caloric")</script>
									<triggerType>0</triggerType>
									<conditonLineDelta>0</conditonLineDelta>
									<mStayOpen>0</mStayOpen>
									<mCommand></mCommand>
									<packageName></packageName>
									<mFgColor>#ff0000</mFgColor>
									<mBgColor>#ffff00</mBgColor>
									<mSoundFile></mSoundFile>
									<colorTriggerFgColor>#000000</colorTriggerFgColor>
									<colorTriggerBgColor>#000000</colorTriggerBgColor>
									<regexCodeList>
										<string>You are insulated against the harsh cold.</string>
									</regexCodeList>
									<regexCodePropertyList>
										<integer>3</integer>
									</regexCodePropertyList>
								</Trigger>
								<Trigger isActive="yes" isFolder="no" isTempTrigger="no" isMultiline="no" isPerlSlashGOption="no" isColorizerTrigger="no" isFilterTrigger="no" isSoundTrigger="no" isColorTrigger="no" isColorTriggerFg="no" isColorTriggerBg="no">
									<name>rebounding</name>
									<script>snd.def_def("rebounding")</script>
									<triggerType>0</triggerType>
									<conditonLineDelta>0</conditonLineDelta>
									<mStayOpen>0</mStayOpen>
									<mCommand></mCommand>
									<packageName></packageName>
									<mFgColor>#ff0000</mFgColor>
									<mBgColor>#ffff00</mBgColor>
									<mSoundFile></mSoundFile>
									<colorTriggerFgColor>#000000</colorTriggerFgColor>
									<colorTriggerBgColor>#000000</colorTriggerBgColor>
									<regexCodeList>
										<string>You are protected from hand-held weapons with an aura of rebounding.</string>
									</regexCodeList>
									<regexCodePropertyList>
										<integer>3</integer>
									</regexCodePropertyList>
								</Trigger>
								<Trigger isActive="yes" isFolder="no" isTempTrigger="no" isMultiline="no" isPerlSlashGOption="no" isColorizerTrigger="no" isFilterTrigger="no" isSoundTrigger="no" isColorTrigger="no" isColorTriggerFg="no" isColorTriggerBg="no">
									<name>dodge melee</name>
									<script>snd.def_def("dodge_melee")</script>
									<triggerType>0</triggerType>
									<conditonLineDelta>0</conditonLineDelta>
									<mStayOpen>0</mStayOpen>
									<mCommand></mCommand>
									<packageName></packageName>
									<mFgColor>#ff0000</mFgColor>
									<mBgColor>#ffff00</mBgColor>
									<mSoundFile></mSoundFile>
									<colorTriggerFgColor>#000000</colorTriggerFgColor>
									<colorTriggerBgColor>#000000</colorTriggerBgColor>
									<regexCodeList>
										<string>You are dodging melee attacks.</string>
									</regexCodeList>
									<regexCodePropertyList>
										<integer>3</integer>
									</regexCodePropertyList>
								</Trigger>
								<Trigger isActive="yes" isFolder="no" isTempTrigger="no" isMultiline="no" isPerlSlashGOption="no" isColorizerTrigger="no" isFilterTrigger="no" isSoundTrigger="no" isColorTrigger="no" isColorTriggerFg="no" isColorTriggerBg="no">
									<name>nightsight</name>
									<script>snd.def_def("nightsight")</script>
									<triggerType>0</triggerType>
									<conditonLineDelta>0</conditonLineDelta>
									<mStayOpen>0</mStayOpen>
									<mCommand></mCommand>
									<packageName></packageName>
									<mFgColor>#ff0000</mFgColor>
									<mBgColor>#ffff00</mBgColor>
									<mSoundFile></mSoundFile>
									<colorTriggerFgColor>#000000</colorTriggerFgColor>
									<colorTriggerBgColor>#000000</colorTriggerBgColor>
									<regexCodeList>
										<string>Your vision is heightened to see in the dark.</string>
									</regexCodeList>
									<regexCodePropertyList>
										<integer>3</integer>
									</regexCodePropertyList>
								</Trigger>
								<Trigger isActive="yes" isFolder="no" isTempTrigger="no" isMultiline="no" isPerlSlashGOption="no" isColorizerTrigger="no" isFilterTrigger="no" isSoundTrigger="no" isColorTrigger="no" isColorTriggerFg="no" isColorTriggerBg="no">
									<name>clarity</name>
									<script>snd.def_def("clarity")</script>
									<triggerType>0</triggerType>
									<conditonLineDelta>0</conditonLineDelta>
									<mStayOpen>0</mStayOpen>
									<mCommand></mCommand>
									<packageName></packageName>
									<mFgColor>#ff0000</mFgColor>
									<mBgColor>#ffff00</mBgColor>
									<mSoundFile></mSoundFile>
									<colorTriggerFgColor>#000000</colorTriggerFgColor>
									<colorTriggerBgColor>#000000</colorTriggerBgColor>
									<regexCodeList>
										<string>Your mind is filled with clarity.</string>
									</regexCodeList>
									<regexCodePropertyList>
										<integer>3</integer>
									</regexCodePropertyList>
								</Trigger>
								<Trigger isActive="yes" isFolder="no" isTempTrigger="no" isMultiline="no" isPerlSlashGOption="no" isColorizerTrigger="no" isFilterTrigger="no" isSoundTrigger="no" isColorTrigger="no" isColorTriggerFg="no" isColorTriggerBg="no">
									<name>fearless</name>
									<script>snd.def_def("fearless")</script>
									<triggerType>0</triggerType>
									<conditonLineDelta>0</conditonLineDelta>
									<mStayOpen>0</mStayOpen>
									<mCommand></mCommand>
									<packageName></packageName>
									<mFgColor>#ff0000</mFgColor>
									<mBgColor>#ffff00</mBgColor>
									<mSoundFile></mSoundFile>
									<colorTriggerFgColor>#000000</colorTriggerFgColor>
									<colorTriggerBgColor>#000000</colorTriggerBgColor>
									<regexCodeList>
										<string>You are completely fearless.</string>
									</regexCodeList>
									<regexCodePropertyList>
										<integer>3</integer>
									</regexCodePropertyList>
								</Trigger>
								<Trigger isActive="yes" isFolder="no" isTempTrigger="no" isMultiline="no" isPerlSlashGOption="no" isColorizerTrigger="no" isFilterTrigger="no" isSoundTrigger="no" isColorTrigger="no" isColorTriggerFg="no" isColorTriggerBg="no">
									<name>soul fracture</name>
									<script>snd.def_def("soul_fracture")</script>
									<triggerType>0</triggerType>
									<conditonLineDelta>0</conditonLineDelta>
									<mStayOpen>0</mStayOpen>
									<mCommand></mCommand>
									<packageName></packageName>
									<mFgColor>#ff0000</mFgColor>
									<mBgColor>#ffff00</mBgColor>
									<mSoundFile></mSoundFile>
									<colorTriggerFgColor>#000000</colorTriggerFgColor>
									<colorTriggerBgColor>#000000</colorTriggerBgColor>
									<regexCodeList>
										<string>Your soulstone is split to support your weapon, body, and armour.</string>
									</regexCodeList>
									<regexCodePropertyList>
										<integer>3</integer>
									</regexCodePropertyList>
								</Trigger>
								<Trigger isActive="yes" isFolder="no" isTempTrigger="no" isMultiline="no" isPerlSlashGOption="no" isColorizerTrigger="no" isFilterTrigger="no" isSoundTrigger="no" isColorTrigger="no" isColorTriggerFg="no" isColorTriggerBg="no">
									<name>soul fortify</name>
									<script>snd.def_def("soul_fortify")</script>
									<triggerType>0</triggerType>
									<conditonLineDelta>0</conditonLineDelta>
									<mStayOpen>0</mStayOpen>
									<mCommand></mCommand>
									<packageName></packageName>
									<mFgColor>#ff0000</mFgColor>
									<mBgColor>#ffff00</mBgColor>
									<mSoundFile></mSoundFile>
									<colorTriggerFgColor>#000000</colorTriggerFgColor>
									<colorTriggerBgColor>#000000</colorTriggerBgColor>
									<regexCodeList>
										<string>Your soul has been fortified.</string>
									</regexCodeList>
									<regexCodePropertyList>
										<integer>3</integer>
									</regexCodePropertyList>
								</Trigger>
								<Trigger isActive="yes" isFolder="no" isTempTrigger="no" isMultiline="no" isPerlSlashGOption="no" isColorizerTrigger="no" isFilterTrigger="no" isSoundTrigger="no" isColorTrigger="no" isColorTriggerFg="no" isColorTriggerBg="no">
									<name>safeguard</name>
									<script>snd.def_def("safeguard")</script>
									<triggerType>0</triggerType>
									<conditonLineDelta>0</conditonLineDelta>
									<mStayOpen>0</mStayOpen>
									<mCommand></mCommand>
									<packageName></packageName>
									<mFgColor>#ff0000</mFgColor>
									<mBgColor>#ffff00</mBgColor>
									<mSoundFile></mSoundFile>
									<colorTriggerFgColor>#000000</colorTriggerFgColor>
									<colorTriggerBgColor>#000000</colorTriggerBgColor>
									<regexCodeList>
										<string>You have the safeguard of an Idreth.</string>
									</regexCodeList>
									<regexCodePropertyList>
										<integer>3</integer>
									</regexCodePropertyList>
								</Trigger>
								<Trigger isActive="yes" isFolder="no" isTempTrigger="no" isMultiline="no" isPerlSlashGOption="no" isColorizerTrigger="no" isFilterTrigger="no" isSoundTrigger="no" isColorTrigger="no" isColorTriggerFg="no" isColorTriggerBg="no">
									<name>miasma</name>
									<script>snd.def_def("miasma")</script>
									<triggerType>0</triggerType>
									<conditonLineDelta>0</conditonLineDelta>
									<mStayOpen>0</mStayOpen>
									<mCommand></mCommand>
									<packageName></packageName>
									<mFgColor>#ff0000</mFgColor>
									<mBgColor>#ffff00</mBgColor>
									<mSoundFile></mSoundFile>
									<colorTriggerFgColor>#000000</colorTriggerFgColor>
									<colorTriggerBgColor>#000000</colorTriggerBgColor>
									<regexCodeList>
										<string>You have the miasma of an Azudim.</string>
									</regexCodeList>
									<regexCodePropertyList>
										<integer>3</integer>
									</regexCodePropertyList>
								</Trigger>
								<Trigger isActive="yes" isFolder="no" isTempTrigger="no" isMultiline="no" isPerlSlashGOption="no" isColorizerTrigger="no" isFilterTrigger="no" isSoundTrigger="no" isColorTrigger="no" isColorTriggerFg="no" isColorTriggerBg="no">
									<name>warmth</name>
									<script>snd.def_def("warmth")</script>
									<triggerType>0</triggerType>
									<conditonLineDelta>0</conditonLineDelta>
									<mStayOpen>0</mStayOpen>
									<mCommand></mCommand>
									<packageName></packageName>
									<mFgColor>#ff0000</mFgColor>
									<mBgColor>#ffff00</mBgColor>
									<mSoundFile></mSoundFile>
									<colorTriggerFgColor>#000000</colorTriggerFgColor>
									<colorTriggerBgColor>#000000</colorTriggerBgColor>
									<regexCodeList>
										<string>You have the warmth of a Yeleni.</string>
									</regexCodeList>
									<regexCodePropertyList>
										<integer>3</integer>
									</regexCodePropertyList>
								</Trigger>
								<Trigger isActive="yes" isFolder="no" isTempTrigger="no" isMultiline="no" isPerlSlashGOption="no" isColorizerTrigger="no" isFilterTrigger="no" isSoundTrigger="no" isColorTrigger="no" isColorTriggerFg="no" isColorTriggerBg="no">
									<name>maingauche</name>
									<script>snd.def_def("maingauche")</script>
									<triggerType>0</triggerType>
									<conditonLineDelta>0</conditonLineDelta>
									<mStayOpen>0</mStayOpen>
									<mCommand></mCommand>
									<packageName></packageName>
									<mFgColor>#ff0000</mFgColor>
									<mBgColor>#ffff00</mBgColor>
									<mSoundFile></mSoundFile>
									<colorTriggerFgColor>#000000</colorTriggerFgColor>
									<colorTriggerBgColor>#000000</colorTriggerBgColor>
									<regexCodeList>
										<string>You are prepared to counterattack against physical aggression.</string>
									</regexCodeList>
									<regexCodePropertyList>
										<integer>3</integer>
									</regexCodePropertyList>
								</Trigger>
								<Trigger isActive="yes" isFolder="no" isTempTrigger="no" isMultiline="no" isPerlSlashGOption="no" isColorizerTrigger="no" isFilterTrigger="no" isSoundTrigger="no" isColorTrigger="no" isColorTriggerFg="no" isColorTriggerBg="no">
									<name>pacing</name>
									<script>snd.def_def("pacing")</script>
									<triggerType>0</triggerType>
									<conditonLineDelta>0</conditonLineDelta>
									<mStayOpen>0</mStayOpen>
									<mCommand></mCommand>
									<packageName></packageName>
									<mFgColor>#ff0000</mFgColor>
									<mBgColor>#ffff00</mBgColor>
									<mSoundFile></mSoundFile>
									<colorTriggerFgColor>#000000</colorTriggerFgColor>
									<colorTriggerBgColor>#000000</colorTriggerBgColor>
									<regexCodeList>
										<string>You are paced for bursts of exertion.</string>
									</regexCodeList>
									<regexCodePropertyList>
										<integer>3</integer>
									</regexCodePropertyList>
								</Trigger>
								<Trigger isActive="yes" isFolder="no" isTempTrigger="no" isMultiline="no" isPerlSlashGOption="no" isColorizerTrigger="no" isFilterTrigger="no" isSoundTrigger="no" isColorTrigger="no" isColorTriggerFg="no" isColorTriggerBg="no">
									<name>heatsight</name>
									<script>snd.def_def("heatsight")</script>
									<triggerType>0</triggerType>
									<conditonLineDelta>0</conditonLineDelta>
									<mStayOpen>0</mStayOpen>
									<mCommand></mCommand>
									<packageName></packageName>
									<mFgColor>#ff0000</mFgColor>
									<mBgColor>#ffff00</mBgColor>
									<mSoundFile></mSoundFile>
									<colorTriggerFgColor>#000000</colorTriggerFgColor>
									<colorTriggerBgColor>#000000</colorTriggerBgColor>
									<regexCodeList>
										<string>You are sensing the heat of others.</string>
									</regexCodeList>
									<regexCodePropertyList>
										<integer>3</integer>
									</regexCodePropertyList>
								</Trigger>
								<Trigger isActive="yes" isFolder="no" isTempTrigger="no" isMultiline="no" isPerlSlashGOption="no" isColorizerTrigger="no" isFilterTrigger="no" isSoundTrigger="no" isColorTrigger="no" isColorTriggerFg="no" isColorTriggerBg="no">
									<name>starburst</name>
									<script>snd.def_def("starburst")</script>
									<triggerType>0</triggerType>
									<conditonLineDelta>0</conditonLineDelta>
									<mStayOpen>0</mStayOpen>
									<mCommand></mCommand>
									<packageName></packageName>
									<mFgColor>#ff0000</mFgColor>
									<mBgColor>#ffff00</mBgColor>
									<mSoundFile></mSoundFile>
									<colorTriggerFgColor>#000000</colorTriggerFgColor>
									<colorTriggerBgColor>#000000</colorTriggerBgColor>
									<regexCodeList>
										<string>You walk with the grace of the stars.</string>
									</regexCodeList>
									<regexCodePropertyList>
										<integer>3</integer>
									</regexCodePropertyList>
								</Trigger>
								<Trigger isActive="yes" isFolder="no" isTempTrigger="no" isMultiline="no" isPerlSlashGOption="no" isColorizerTrigger="no" isFilterTrigger="no" isSoundTrigger="no" isColorTrigger="no" isColorTriggerFg="no" isColorTriggerBg="no">
									<name>density</name>
									<script>snd.def_def("density")</script>
									<triggerType>0</triggerType>
									<conditonLineDelta>0</conditonLineDelta>
									<mStayOpen>0</mStayOpen>
									<mCommand></mCommand>
									<packageName></packageName>
									<mFgColor>#ff0000</mFgColor>
									<mBgColor>#ffff00</mBgColor>
									<mSoundFile></mSoundFile>
									<colorTriggerFgColor>#000000</colorTriggerFgColor>
									<colorTriggerBgColor>#000000</colorTriggerBgColor>
									<regexCodeList>
										<string>You are extremely heavy and difficult to move.</string>
									</regexCodeList>
									<regexCodePropertyList>
										<integer>1</integer>
									</regexCodePropertyList>
								</Trigger>
								<Trigger isActive="yes" isFolder="no" isTempTrigger="no" isMultiline="no" isPerlSlashGOption="no" isColorizerTrigger="no" isFilterTrigger="no" isSoundTrigger="no" isColorTrigger="no" isColorTriggerFg="no" isColorTriggerBg="no">
									<name>soul harvest</name>
									<script>snd.def_def("soul_harvest")</script>
									<triggerType>0</triggerType>
									<conditonLineDelta>0</conditonLineDelta>
									<mStayOpen>0</mStayOpen>
									<mCommand></mCommand>
									<packageName></packageName>
									<mFgColor>#ff0000</mFgColor>
									<mBgColor>#ffff00</mBgColor>
									<mSoundFile></mSoundFile>
									<colorTriggerFgColor>#000000</colorTriggerFgColor>
									<colorTriggerBgColor>#000000</colorTriggerBgColor>
									<regexCodeList>
										<string>You are harvesting the souls of your victims.</string>
									</regexCodeList>
									<regexCodePropertyList>
										<integer>3</integer>
									</regexCodePropertyList>
								</Trigger>
								<Trigger isActive="yes" isFolder="no" isTempTrigger="no" isMultiline="no" isPerlSlashGOption="no" isColorizerTrigger="no" isFilterTrigger="no" isSoundTrigger="no" isColorTrigger="no" isColorTriggerFg="no" isColorTriggerBg="no">
									<name>reveling</name>
									<script>snd.def_def("reveling")</script>
									<triggerType>0</triggerType>
									<conditonLineDelta>0</conditonLineDelta>
									<mStayOpen>0</mStayOpen>
									<mCommand></mCommand>
									<packageName></packageName>
									<mFgColor>#ff0000</mFgColor>
									<mBgColor>#ffff00</mBgColor>
									<mSoundFile></mSoundFile>
									<colorTriggerFgColor>#000000</colorTriggerFgColor>
									<colorTriggerBgColor>#000000</colorTriggerBgColor>
									<regexCodeList>
										<string>You are deriving pleasure from pain inflicted upon others.</string>
									</regexCodeList>
									<regexCodePropertyList>
										<integer>3</integer>
									</regexCodePropertyList>
								</Trigger>
								<Trigger isActive="yes" isFolder="no" isTempTrigger="no" isMultiline="no" isPerlSlashGOption="no" isColorizerTrigger="no" isFilterTrigger="no" isSoundTrigger="no" isColorTrigger="no" isColorTriggerFg="no" isColorTriggerBg="no">
									<name>soul embed body</name>
									<script>snd.def_def("soul_body")</script>
									<triggerType>0</triggerType>
									<conditonLineDelta>0</conditonLineDelta>
									<mStayOpen>0</mStayOpen>
									<mCommand></mCommand>
									<packageName></packageName>
									<mFgColor>#ff0000</mFgColor>
									<mBgColor>#ffff00</mBgColor>
									<mSoundFile></mSoundFile>
									<colorTriggerFgColor>#000000</colorTriggerFgColor>
									<colorTriggerBgColor>#000000</colorTriggerBgColor>
									<regexCodeList>
										<string>Your soulstone is embedded in your body.</string>
									</regexCodeList>
									<regexCodePropertyList>
										<integer>3</integer>
									</regexCodePropertyList>
								</Trigger>
								<Trigger isActive="yes" isFolder="no" isTempTrigger="no" isMultiline="no" isPerlSlashGOption="no" isColorizerTrigger="no" isFilterTrigger="no" isSoundTrigger="no" isColorTrigger="no" isColorTriggerFg="no" isColorTriggerBg="no">
									<name>soul thirst</name>
									<script>snd.def_def("soul_thirst")</script>
									<triggerType>0</triggerType>
									<conditonLineDelta>0</conditonLineDelta>
									<mStayOpen>0</mStayOpen>
									<mCommand></mCommand>
									<packageName></packageName>
									<mFgColor>#ff0000</mFgColor>
									<mBgColor>#ffff00</mBgColor>
									<mSoundFile></mSoundFile>
									<colorTriggerFgColor>#000000</colorTriggerFgColor>
									<colorTriggerBgColor>#000000</colorTriggerBgColor>
									<regexCodeList>
										<string>Your weapons thirst for the souls of your enemies.</string>
									</regexCodeList>
									<regexCodePropertyList>
										<integer>3</integer>
									</regexCodePropertyList>
								</Trigger>
								<Trigger isActive="yes" isFolder="no" isTempTrigger="no" isMultiline="no" isPerlSlashGOption="no" isColorizerTrigger="no" isFilterTrigger="no" isSoundTrigger="no" isColorTrigger="no" isColorTriggerFg="no" isColorTriggerBg="no">
									<name>waterwalking</name>
									<script>snd.def_def("waterwalking")</script>
									<triggerType>0</triggerType>
									<conditonLineDelta>0</conditonLineDelta>
									<mStayOpen>0</mStayOpen>
									<mCommand></mCommand>
									<packageName></packageName>
									<mFgColor>#ff0000</mFgColor>
									<mBgColor>#ffff00</mBgColor>
									<mSoundFile></mSoundFile>
									<colorTriggerFgColor>#000000</colorTriggerFgColor>
									<colorTriggerBgColor>#000000</colorTriggerBgColor>
									<regexCodeList>
										<string>A steady blast of air fans out from beneath your feet.</string>
									</regexCodeList>
									<regexCodePropertyList>
										<integer>3</integer>
									</regexCodePropertyList>
								</Trigger>
								<Trigger isActive="yes" isFolder="no" isTempTrigger="no" isMultiline="no" isPerlSlashGOption="no" isColorizerTrigger="no" isFilterTrigger="no" isSoundTrigger="no" isColorTrigger="no" isColorTriggerFg="no" isColorTriggerBg="no">
									<name>recklessness</name>
									<script>snd.def_def("recklessness")</script>
									<triggerType>0</triggerType>
									<conditonLineDelta>0</conditonLineDelta>
									<mStayOpen>0</mStayOpen>
									<mCommand></mCommand>
									<packageName></packageName>
									<mFgColor>#ff0000</mFgColor>
									<mBgColor>#ffff00</mBgColor>
									<mSoundFile></mSoundFile>
									<colorTriggerFgColor>#000000</colorTriggerFgColor>
									<colorTriggerBgColor>#000000</colorTriggerBgColor>
									<regexCodeList>
										<string>You are fighting recklessly.</string>
									</regexCodeList>
									<regexCodePropertyList>
										<integer>3</integer>
									</regexCodePropertyList>
								</Trigger>
								<Trigger isActive="yes" isFolder="no" isTempTrigger="no" isMultiline="no" isPerlSlashGOption="no" isColorizerTrigger="no" isFilterTrigger="no" isSoundTrigger="no" isColorTrigger="no" isColorTriggerFg="no" isColorTriggerBg="no">
									<name>weathering</name>
									<script>snd.def_def("weathering")</script>
									<triggerType>0</triggerType>
									<conditonLineDelta>0</conditonLineDelta>
									<mStayOpen>0</mStayOpen>
									<mCommand></mCommand>
									<packageName></packageName>
									<mFgColor>#ff0000</mFgColor>
									<mBgColor>#ffff00</mBgColor>
									<mSoundFile></mSoundFile>
									<colorTriggerFgColor>#000000</colorTriggerFgColor>
									<colorTriggerBgColor>#000000</colorTriggerBgColor>
									<regexCodeList>
										<string>You are immune to normal weather.</string>
									</regexCodeList>
									<regexCodePropertyList>
										<integer>3</integer>
									</regexCodePropertyList>
								</Trigger>
								<Trigger isActive="yes" isFolder="no" isTempTrigger="no" isMultiline="no" isPerlSlashGOption="no" isColorizerTrigger="no" isFilterTrigger="no" isSoundTrigger="no" isColorTrigger="no" isColorTriggerFg="no" isColorTriggerBg="no">
									<name>bodyheat</name>
									<script>snd.def_def("bodyheat")</script>
									<triggerType>0</triggerType>
									<conditonLineDelta>0</conditonLineDelta>
									<mStayOpen>0</mStayOpen>
									<mCommand></mCommand>
									<packageName></packageName>
									<mFgColor>#ff0000</mFgColor>
									<mBgColor>#ffff00</mBgColor>
									<mSoundFile></mSoundFile>
									<colorTriggerFgColor>#000000</colorTriggerFgColor>
									<colorTriggerBgColor>#000000</colorTriggerBgColor>
									<regexCodeList>
										<string>You have the bodyheat defence.</string>
									</regexCodeList>
									<regexCodePropertyList>
										<integer>3</integer>
									</regexCodePropertyList>
								</Trigger>
								<Trigger isActive="yes" isFolder="no" isTempTrigger="no" isMultiline="no" isPerlSlashGOption="no" isColorizerTrigger="no" isFilterTrigger="no" isSoundTrigger="no" isColorTrigger="no" isColorTriggerFg="no" isColorTriggerBg="no">
									<name>metabolism</name>
									<script>snd.def_def("metabolize")</script>
									<triggerType>0</triggerType>
									<conditonLineDelta>0</conditonLineDelta>
									<mStayOpen>0</mStayOpen>
									<mCommand></mCommand>
									<packageName></packageName>
									<mFgColor>#ff0000</mFgColor>
									<mBgColor>#ffff00</mBgColor>
									<mSoundFile></mSoundFile>
									<colorTriggerFgColor>#000000</colorTriggerFgColor>
									<colorTriggerBgColor>#000000</colorTriggerBgColor>
									<regexCodeList>
										<string>You have the metabolism defence.</string>
									</regexCodeList>
									<regexCodePropertyList>
										<integer>3</integer>
									</regexCodePropertyList>
								</Trigger>
								<Trigger isActive="yes" isFolder="no" isTempTrigger="no" isMultiline="no" isPerlSlashGOption="no" isColorizerTrigger="no" isFilterTrigger="no" isSoundTrigger="no" isColorTrigger="no" isColorTriggerFg="no" isColorTriggerBg="no">
									<name>thickhide</name>
									<script>snd.def_def("thickhide")</script>
									<triggerType>0</triggerType>
									<conditonLineDelta>0</conditonLineDelta>
									<mStayOpen>0</mStayOpen>
									<mCommand></mCommand>
									<packageName></packageName>
									<mFgColor>#ff0000</mFgColor>
									<mBgColor>#ffff00</mBgColor>
									<mSoundFile></mSoundFile>
									<colorTriggerFgColor>#000000</colorTriggerFgColor>
									<colorTriggerBgColor>#000000</colorTriggerBgColor>
									<regexCodeList>
										<string>Your hide is thickened.</string>
									</regexCodeList>
									<regexCodePropertyList>
										<integer>3</integer>
									</regexCodePropertyList>
								</Trigger>
								<Trigger isActive="yes" isFolder="no" isTempTrigger="no" isMultiline="no" isPerlSlashGOption="no" isColorizerTrigger="no" isFilterTrigger="no" isSoundTrigger="no" isColorTrigger="no" isColorTriggerFg="no" isColorTriggerBg="no">
									<name>endurance</name>
									<script>snd.def_def("endurance")</script>
									<triggerType>0</triggerType>
									<conditonLineDelta>0</conditonLineDelta>
									<mStayOpen>0</mStayOpen>
									<mCommand></mCommand>
									<packageName></packageName>
									<mFgColor>#ff0000</mFgColor>
									<mBgColor>#ffff00</mBgColor>
									<mSoundFile></mSoundFile>
									<colorTriggerFgColor>#000000</colorTriggerFgColor>
									<colorTriggerBgColor>#000000</colorTriggerBgColor>
									<regexCodeList>
										<string>Your movements are supernaturally fast.</string>
									</regexCodeList>
									<regexCodePropertyList>
										<integer>3</integer>
									</regexCodePropertyList>
								</Trigger>
								<Trigger isActive="yes" isFolder="no" isTempTrigger="no" isMultiline="no" isPerlSlashGOption="no" isColorizerTrigger="no" isFilterTrigger="no" isSoundTrigger="no" isColorTrigger="no" isColorTriggerFg="no" isColorTriggerBg="no">
									<name>harden</name>
									<script>snd.def_def("harden")</script>
									<triggerType>0</triggerType>
									<conditonLineDelta>0</conditonLineDelta>
									<mStayOpen>0</mStayOpen>
									<mCommand></mCommand>
									<packageName></packageName>
									<mFgColor>#ff0000</mFgColor>
									<mBgColor>#ffff00</mBgColor>
									<mSoundFile></mSoundFile>
									<colorTriggerFgColor>#000000</colorTriggerFgColor>
									<colorTriggerBgColor>#000000</colorTriggerBgColor>
									<regexCodeList>
										<string>Your bones have been hardened greatly.</string>
									</regexCodeList>
									<regexCodePropertyList>
										<integer>3</integer>
									</regexCodePropertyList>
								</Trigger>
								<Trigger isActive="yes" isFolder="no" isTempTrigger="no" isMultiline="no" isPerlSlashGOption="no" isColorizerTrigger="no" isFilterTrigger="no" isSoundTrigger="no" isColorTrigger="no" isColorTriggerFg="no" isColorTriggerBg="no">
									<name>corner</name>
									<script>snd.def_def("corner")</script>
									<triggerType>0</triggerType>
									<conditonLineDelta>0</conditonLineDelta>
									<mStayOpen>0</mStayOpen>
									<mCommand></mCommand>
									<packageName></packageName>
									<mFgColor>#ff0000</mFgColor>
									<mBgColor>#ffff00</mBgColor>
									<mSoundFile></mSoundFile>
									<colorTriggerFgColor>#000000</colorTriggerFgColor>
									<colorTriggerBgColor>#000000</colorTriggerBgColor>
									<regexCodeList>
										<string>You have the cornering defence.</string>
									</regexCodeList>
									<regexCodePropertyList>
										<integer>3</integer>
									</regexCodePropertyList>
								</Trigger>
								<Trigger isActive="yes" isFolder="no" isTempTrigger="no" isMultiline="no" isPerlSlashGOption="no" isColorizerTrigger="no" isFilterTrigger="no" isSoundTrigger="no" isColorTrigger="no" isColorTriggerFg="no" isColorTriggerBg="no">
									<name>fangbarrier</name>
									<script>snd.def_def("fangbarrier")</script>
									<triggerType>0</triggerType>
									<conditonLineDelta>0</conditonLineDelta>
									<mStayOpen>0</mStayOpen>
									<mCommand></mCommand>
									<packageName></packageName>
									<mFgColor>#ff0000</mFgColor>
									<mBgColor>#ffff00</mBgColor>
									<mSoundFile></mSoundFile>
									<colorTriggerFgColor>#000000</colorTriggerFgColor>
									<colorTriggerBgColor>#000000</colorTriggerBgColor>
									<regexCodeList>
										<string>You are protected from the fangs of serpents.</string>
									</regexCodeList>
									<regexCodePropertyList>
										<integer>3</integer>
									</regexCodePropertyList>
								</Trigger>
								<Trigger isActive="yes" isFolder="no" isTempTrigger="no" isMultiline="no" isPerlSlashGOption="no" isColorizerTrigger="no" isFilterTrigger="no" isSoundTrigger="no" isColorTrigger="no" isColorTriggerFg="no" isColorTriggerBg="no">
									<name>vigor</name>
									<script>snd.def_def("vigor")</script>
									<triggerType>0</triggerType>
									<conditonLineDelta>0</conditonLineDelta>
									<mStayOpen>0</mStayOpen>
									<mCommand></mCommand>
									<packageName></packageName>
									<mFgColor>#ff0000</mFgColor>
									<mBgColor>#ffff00</mBgColor>
									<mSoundFile></mSoundFile>
									<colorTriggerFgColor>#000000</colorTriggerFgColor>
									<colorTriggerBgColor>#000000</colorTriggerBgColor>
									<regexCodeList>
										<string>You have been invigorated with strength.</string>
									</regexCodeList>
									<regexCodePropertyList>
										<integer>3</integer>
									</regexCodePropertyList>
								</Trigger>
								<Trigger isActive="yes" isFolder="no" isTempTrigger="no" isMultiline="no" isPerlSlashGOption="no" isColorizerTrigger="no" isFilterTrigger="no" isSoundTrigger="no" isColorTrigger="no" isColorTriggerFg="no" isColorTriggerBg="no">
									<name>lightshield</name>
									<script>snd.def_def("lightshield")</script>
									<triggerType>0</triggerType>
									<conditonLineDelta>0</conditonLineDelta>
									<mStayOpen>0</mStayOpen>
									<mCommand></mCommand>
									<packageName></packageName>
									<mFgColor>#ff0000</mFgColor>
									<mBgColor>#ffff00</mBgColor>
									<mSoundFile></mSoundFile>
									<colorTriggerFgColor>#000000</colorTriggerFgColor>
									<colorTriggerBgColor>#000000</colorTriggerBgColor>
									<regexCodeList>
										<string>You are protected from light-based damage sources.</string>
									</regexCodeList>
									<regexCodePropertyList>
										<integer>3</integer>
									</regexCodePropertyList>
								</Trigger>
								<Trigger isActive="yes" isFolder="no" isTempTrigger="no" isMultiline="no" isPerlSlashGOption="no" isColorizerTrigger="no" isFilterTrigger="no" isSoundTrigger="no" isColorTrigger="no" isColorTriggerFg="no" isColorTriggerBg="no">
									<name>inspiration</name>
									<script>snd.def_def("inspiration")</script>
									<triggerType>0</triggerType>
									<conditonLineDelta>0</conditonLineDelta>
									<mStayOpen>0</mStayOpen>
									<mCommand></mCommand>
									<packageName></packageName>
									<mFgColor>#ff0000</mFgColor>
									<mBgColor>#ffff00</mBgColor>
									<mSoundFile></mSoundFile>
									<colorTriggerFgColor>#000000</colorTriggerFgColor>
									<colorTriggerBgColor>#000000</colorTriggerBgColor>
									<regexCodeList>
										<string>Your limbs are suffused with divinely-inspired strength.</string>
									</regexCodeList>
									<regexCodePropertyList>
										<integer>3</integer>
									</regexCodePropertyList>
								</Trigger>
								<Trigger isActive="yes" isFolder="no" isTempTrigger="no" isMultiline="no" isPerlSlashGOption="no" isColorizerTrigger="no" isFilterTrigger="no" isSoundTrigger="no" isColorTrigger="no" isColorTriggerFg="no" isColorTriggerBg="no">
									<name>fireblock</name>
									<script>snd.def_def("fireblock")</script>
									<triggerType>0</triggerType>
									<conditonLineDelta>0</conditonLineDelta>
									<mStayOpen>0</mStayOpen>
									<mCommand></mCommand>
									<packageName></packageName>
									<mFgColor>#ff0000</mFgColor>
									<mBgColor>#ffff00</mBgColor>
									<mSoundFile></mSoundFile>
									<colorTriggerFgColor>#000000</colorTriggerFgColor>
									<colorTriggerBgColor>#000000</colorTriggerBgColor>
									<regexCodeList>
										<string>A shield of flame protects you from blazing fires.</string>
									</regexCodeList>
									<regexCodePropertyList>
										<integer>3</integer>
									</regexCodePropertyList>
								</Trigger>
								<Trigger isActive="yes" isFolder="no" isTempTrigger="no" isMultiline="no" isPerlSlashGOption="no" isColorizerTrigger="no" isFilterTrigger="no" isSoundTrigger="no" isColorTrigger="no" isColorTriggerFg="no" isColorTriggerBg="no">
									<name>toughness</name>
									<script>snd.def_def("toughness")</script>
									<triggerType>0</triggerType>
									<conditonLineDelta>0</conditonLineDelta>
									<mStayOpen>0</mStayOpen>
									<mCommand></mCommand>
									<packageName></packageName>
									<mFgColor>#ff0000</mFgColor>
									<mBgColor>#ffff00</mBgColor>
									<mSoundFile></mSoundFile>
									<colorTriggerFgColor>#000000</colorTriggerFgColor>
									<colorTriggerBgColor>#000000</colorTriggerBgColor>
									<regexCodeList>
										<string>Your skin is toughened.</string>
									</regexCodeList>
									<regexCodePropertyList>
										<integer>3</integer>
									</regexCodePropertyList>
								</Trigger>
								<Trigger isActive="yes" isFolder="no" isTempTrigger="no" isMultiline="no" isPerlSlashGOption="no" isColorizerTrigger="no" isFilterTrigger="no" isSoundTrigger="no" isColorTrigger="no" isColorTriggerFg="no" isColorTriggerBg="no">
									<name>resistance</name>
									<script>snd.def_def("resistance")</script>
									<triggerType>0</triggerType>
									<conditonLineDelta>0</conditonLineDelta>
									<mStayOpen>0</mStayOpen>
									<mCommand></mCommand>
									<packageName></packageName>
									<mFgColor>#ff0000</mFgColor>
									<mBgColor>#ffff00</mBgColor>
									<mSoundFile></mSoundFile>
									<colorTriggerFgColor>#000000</colorTriggerFgColor>
									<colorTriggerBgColor>#000000</colorTriggerBgColor>
									<regexCodeList>
										<string>You are resisting magical damage.</string>
									</regexCodeList>
									<regexCodePropertyList>
										<integer>3</integer>
									</regexCodePropertyList>
								</Trigger>
								<Trigger isActive="yes" isFolder="no" isTempTrigger="no" isMultiline="no" isPerlSlashGOption="no" isColorizerTrigger="no" isFilterTrigger="no" isSoundTrigger="no" isColorTrigger="no" isColorTriggerFg="no" isColorTriggerBg="no">
									<name>soul substitute</name>
									<script>snd.def_def("soul_substitute")</script>
									<triggerType>0</triggerType>
									<conditonLineDelta>0</conditonLineDelta>
									<mStayOpen>0</mStayOpen>
									<mCommand></mCommand>
									<packageName></packageName>
									<mFgColor>#ff0000</mFgColor>
									<mBgColor>#ffff00</mBgColor>
									<mSoundFile></mSoundFile>
									<colorTriggerFgColor>#000000</colorTriggerFgColor>
									<colorTriggerBgColor>#000000</colorTriggerBgColor>
									<regexCodeList>
										<string>You will substitute your soul with another upon dying.</string>
									</regexCodeList>
									<regexCodePropertyList>
										<integer>3</integer>
									</regexCodePropertyList>
								</Trigger>
								<Trigger isActive="yes" isFolder="no" isTempTrigger="no" isMultiline="no" isPerlSlashGOption="no" isColorizerTrigger="no" isFilterTrigger="no" isSoundTrigger="no" isColorTrigger="no" isColorTriggerFg="no" isColorTriggerBg="no">
									<name>shroud</name>
									<script>snd.def_def("shroud")</script>
									<triggerType>0</triggerType>
									<conditonLineDelta>0</conditonLineDelta>
									<mStayOpen>0</mStayOpen>
									<mCommand></mCommand>
									<packageName></packageName>
									<mFgColor>#ff0000</mFgColor>
									<mBgColor>#ffff00</mBgColor>
									<mSoundFile></mSoundFile>
									<colorTriggerFgColor>#000000</colorTriggerFgColor>
									<colorTriggerBgColor>#000000</colorTriggerBgColor>
									<regexCodeList>
										<string>Your actions are cloaked in secrecy.</string>
									</regexCodeList>
									<regexCodePropertyList>
										<integer>3</integer>
									</regexCodePropertyList>
								</Trigger>
								<Trigger isActive="yes" isFolder="no" isTempTrigger="no" isMultiline="no" isPerlSlashGOption="no" isColorizerTrigger="no" isFilterTrigger="no" isSoundTrigger="no" isColorTrigger="no" isColorTriggerFg="no" isColorTriggerBg="no">
									<name>soul spiritsight</name>
									<script>snd.def_def("soul_spiritsight")</script>
									<triggerType>0</triggerType>
									<conditonLineDelta>0</conditonLineDelta>
									<mStayOpen>0</mStayOpen>
									<mCommand></mCommand>
									<packageName></packageName>
									<mFgColor>#ff0000</mFgColor>
									<mBgColor>#ffff00</mBgColor>
									<mSoundFile></mSoundFile>
									<colorTriggerFgColor>#000000</colorTriggerFgColor>
									<colorTriggerBgColor>#000000</colorTriggerBgColor>
									<regexCodeList>
										<string>You are seeking the souls of the hidden.</string>
									</regexCodeList>
									<regexCodePropertyList>
										<integer>3</integer>
									</regexCodePropertyList>
								</Trigger>
								<Trigger isActive="yes" isFolder="no" isTempTrigger="no" isMultiline="no" isPerlSlashGOption="no" isColorizerTrigger="no" isFilterTrigger="no" isSoundTrigger="no" isColorTrigger="no" isColorTriggerFg="no" isColorTriggerBg="no">
									<name>warding</name>
									<script>snd.def_def("warding")</script>
									<triggerType>0</triggerType>
									<conditonLineDelta>0</conditonLineDelta>
									<mStayOpen>0</mStayOpen>
									<mCommand></mCommand>
									<packageName></packageName>
									<mFgColor>#ff0000</mFgColor>
									<mBgColor>#ffff00</mBgColor>
									<mSoundFile></mSoundFile>
									<colorTriggerFgColor>#000000</colorTriggerFgColor>
									<colorTriggerBgColor>#000000</colorTriggerBgColor>
									<regexCodeList>
										<string>The ward of the Syssin protects your body.</string>
									</regexCodeList>
									<regexCodePropertyList>
										<integer>3</integer>
									</regexCodePropertyList>
								</Trigger>
								<Trigger isActive="yes" isFolder="no" isTempTrigger="no" isMultiline="no" isPerlSlashGOption="no" isColorizerTrigger="no" isFilterTrigger="no" isSoundTrigger="no" isColorTrigger="no" isColorTriggerFg="no" isColorTriggerBg="no">
									<name>finesse</name>
									<script>snd.def_def("finesse")</script>
									<triggerType>0</triggerType>
									<conditonLineDelta>0</conditonLineDelta>
									<mStayOpen>0</mStayOpen>
									<mCommand></mCommand>
									<packageName></packageName>
									<mFgColor>#ff0000</mFgColor>
									<mBgColor>#ffff00</mBgColor>
									<mSoundFile></mSoundFile>
									<colorTriggerFgColor>#000000</colorTriggerFgColor>
									<colorTriggerBgColor>#000000</colorTriggerBgColor>
									<regexCodeList>
										<string>You have the finesse defence.</string>
										<string>You are already wielding your weapons with finesse.</string>
										<string>You will deliver your blade with trained finesse.</string>
									</regexCodeList>
									<regexCodePropertyList>
										<integer>3</integer>
										<integer>3</integer>
										<integer>3</integer>
									</regexCodePropertyList>
								</Trigger>
								<Trigger isActive="yes" isFolder="no" isTempTrigger="no" isMultiline="no" isPerlSlashGOption="no" isColorizerTrigger="no" isFilterTrigger="no" isSoundTrigger="no" isColorTrigger="no" isColorTriggerFg="no" isColorTriggerBg="no">
									<name>weaving</name>
									<script>snd.def_def("weaving")</script>
									<triggerType>0</triggerType>
									<conditonLineDelta>0</conditonLineDelta>
									<mStayOpen>0</mStayOpen>
									<mCommand></mCommand>
									<packageName></packageName>
									<mFgColor>#ff0000</mFgColor>
									<mBgColor>#ffff00</mBgColor>
									<mSoundFile></mSoundFile>
									<colorTriggerFgColor>#000000</colorTriggerFgColor>
									<colorTriggerBgColor>#000000</colorTriggerBgColor>
									<regexCodeList>
										<string>Cobra-like, you weave back and forth to dodge blows.</string>
									</regexCodeList>
									<regexCodePropertyList>
										<integer>3</integer>
									</regexCodePropertyList>
								</Trigger>
								<Trigger isActive="yes" isFolder="no" isTempTrigger="no" isMultiline="no" isPerlSlashGOption="no" isColorizerTrigger="no" isFilterTrigger="no" isSoundTrigger="no" isColorTrigger="no" isColorTriggerFg="no" isColorTriggerBg="no">
									<name>hiding</name>
									<script>snd.def_def("hiding")</script>
									<triggerType>0</triggerType>
									<conditonLineDelta>0</conditonLineDelta>
									<mStayOpen>0</mStayOpen>
									<mCommand></mCommand>
									<packageName></packageName>
									<mFgColor>#ff0000</mFgColor>
									<mBgColor>#ffff00</mBgColor>
									<mSoundFile></mSoundFile>
									<colorTriggerFgColor>#000000</colorTriggerFgColor>
									<colorTriggerBgColor>#000000</colorTriggerBgColor>
									<regexCodeList>
										<string>You have used great guile to conceal yourself.</string>
									</regexCodeList>
									<regexCodePropertyList>
										<integer>3</integer>
									</regexCodePropertyList>
								</Trigger>
								<Trigger isActive="yes" isFolder="no" isTempTrigger="no" isMultiline="no" isPerlSlashGOption="no" isColorizerTrigger="no" isFilterTrigger="no" isSoundTrigger="no" isColorTrigger="no" isColorTriggerFg="no" isColorTriggerBg="no">
									<name>shadowsight</name>
									<script>snd.def_def("shadowsight")</script>
									<triggerType>0</triggerType>
									<conditonLineDelta>0</conditonLineDelta>
									<mStayOpen>0</mStayOpen>
									<mCommand></mCommand>
									<packageName></packageName>
									<mFgColor>#ff0000</mFgColor>
									<mBgColor>#ffff00</mBgColor>
									<mSoundFile></mSoundFile>
									<colorTriggerFgColor>#000000</colorTriggerFgColor>
									<colorTriggerBgColor>#000000</colorTriggerBgColor>
									<regexCodeList>
										<string>You are watching the shadows.</string>
									</regexCodeList>
									<regexCodePropertyList>
										<integer>3</integer>
									</regexCodePropertyList>
								</Trigger>
								<Trigger isActive="yes" isFolder="no" isTempTrigger="no" isMultiline="no" isPerlSlashGOption="no" isColorizerTrigger="no" isFilterTrigger="no" isSoundTrigger="no" isColorTrigger="no" isColorTriggerFg="no" isColorTriggerBg="no">
									<name>ghost</name>
									<script>snd.def_def("ghost")</script>
									<triggerType>0</triggerType>
									<conditonLineDelta>0</conditonLineDelta>
									<mStayOpen>0</mStayOpen>
									<mCommand></mCommand>
									<packageName></packageName>
									<mFgColor>#ff0000</mFgColor>
									<mBgColor>#ffff00</mBgColor>
									<mSoundFile></mSoundFile>
									<colorTriggerFgColor>#000000</colorTriggerFgColor>
									<colorTriggerBgColor>#000000</colorTriggerBgColor>
									<regexCodeList>
										<string>You are shimmering with a ghostly light.</string>
									</regexCodeList>
									<regexCodePropertyList>
										<integer>3</integer>
									</regexCodePropertyList>
								</Trigger>
								<Trigger isActive="yes" isFolder="no" isTempTrigger="no" isMultiline="no" isPerlSlashGOption="no" isColorizerTrigger="no" isFilterTrigger="no" isSoundTrigger="no" isColorTrigger="no" isColorTriggerFg="no" isColorTriggerBg="no">
									<name>shadowslip</name>
									<script>snd.def_def("shadowslip")</script>
									<triggerType>0</triggerType>
									<conditonLineDelta>0</conditonLineDelta>
									<mStayOpen>0</mStayOpen>
									<mCommand></mCommand>
									<packageName></packageName>
									<mFgColor>#ff0000</mFgColor>
									<mBgColor>#ffff00</mBgColor>
									<mSoundFile></mSoundFile>
									<colorTriggerFgColor>#000000</colorTriggerFgColor>
									<colorTriggerBgColor>#000000</colorTriggerBgColor>
									<regexCodeList>
										<string>You will slip into the shadows after killng.</string>
									</regexCodeList>
									<regexCodePropertyList>
										<integer>3</integer>
									</regexCodePropertyList>
								</Trigger>
								<Trigger isActive="yes" isFolder="no" isTempTrigger="no" isMultiline="no" isPerlSlashGOption="no" isColorizerTrigger="no" isFilterTrigger="no" isSoundTrigger="no" isColorTrigger="no" isColorTriggerFg="no" isColorTriggerBg="no">
									<name>phase</name>
									<script>snd.def_def("phase")</script>
									<triggerType>0</triggerType>
									<conditonLineDelta>0</conditonLineDelta>
									<mStayOpen>0</mStayOpen>
									<mCommand></mCommand>
									<packageName></packageName>
									<mFgColor>#ff0000</mFgColor>
									<mBgColor>#ffff00</mBgColor>
									<mSoundFile></mSoundFile>
									<colorTriggerFgColor>#000000</colorTriggerFgColor>
									<colorTriggerBgColor>#000000</colorTriggerBgColor>
									<regexCodeList>
										<string>Phased slightly out of reality, you are effectively untouchable.</string>
									</regexCodeList>
									<regexCodePropertyList>
										<integer>3</integer>
									</regexCodePropertyList>
								</Trigger>
								<Trigger isActive="yes" isFolder="no" isTempTrigger="no" isMultiline="no" isPerlSlashGOption="no" isColorizerTrigger="no" isFilterTrigger="no" isSoundTrigger="no" isColorTrigger="no" isColorTriggerFg="no" isColorTriggerBg="no">
									<name>vitality</name>
									<script>snd.def_def("vitality")</script>
									<triggerType>0</triggerType>
									<conditonLineDelta>0</conditonLineDelta>
									<mStayOpen>0</mStayOpen>
									<mCommand></mCommand>
									<packageName></packageName>
									<mFgColor>#ff0000</mFgColor>
									<mBgColor>#ffff00</mBgColor>
									<mSoundFile></mSoundFile>
									<colorTriggerFgColor>#000000</colorTriggerFgColor>
									<colorTriggerBgColor>#000000</colorTriggerBgColor>
									<regexCodeList>
										<string>You will call upon your fortitude in need.</string>
									</regexCodeList>
									<regexCodePropertyList>
										<integer>3</integer>
									</regexCodePropertyList>
								</Trigger>
								<Trigger isActive="yes" isFolder="no" isTempTrigger="no" isMultiline="no" isPerlSlashGOption="no" isColorizerTrigger="no" isFilterTrigger="no" isSoundTrigger="no" isColorTrigger="no" isColorTriggerFg="no" isColorTriggerBg="no">
									<name>kaido regeneration</name>
									<script>snd.def_def("kaido_regeneration")</script>
									<triggerType>0</triggerType>
									<conditonLineDelta>0</conditonLineDelta>
									<mStayOpen>0</mStayOpen>
									<mCommand></mCommand>
									<packageName></packageName>
									<mFgColor>#ff0000</mFgColor>
									<mBgColor>#ffff00</mBgColor>
									<mSoundFile></mSoundFile>
									<colorTriggerFgColor>#000000</colorTriggerFgColor>
									<colorTriggerBgColor>#000000</colorTriggerBgColor>
									<regexCodeList>
										<string>You are regenerating lost health through the power of Kaido.</string>
									</regexCodeList>
									<regexCodePropertyList>
										<integer>3</integer>
									</regexCodePropertyList>
								</Trigger>
								<Trigger isActive="yes" isFolder="no" isTempTrigger="no" isMultiline="no" isPerlSlashGOption="no" isColorizerTrigger="no" isFilterTrigger="no" isSoundTrigger="no" isColorTrigger="no" isColorTriggerFg="no" isColorTriggerBg="no">
									<name>constitution</name>
									<script>snd.def_def("constitution")</script>
									<triggerType>0</triggerType>
									<conditonLineDelta>0</conditonLineDelta>
									<mStayOpen>0</mStayOpen>
									<mCommand></mCommand>
									<packageName></packageName>
									<mFgColor>#ff0000</mFgColor>
									<mBgColor>#ffff00</mBgColor>
									<mSoundFile></mSoundFile>
									<colorTriggerFgColor>#000000</colorTriggerFgColor>
									<colorTriggerBgColor>#000000</colorTriggerBgColor>
									<regexCodeList>
										<string>You are using your superior constitution to prevent nausea.</string>
									</regexCodeList>
									<regexCodePropertyList>
										<integer>3</integer>
									</regexCodePropertyList>
								</Trigger>
								<Trigger isActive="yes" isFolder="no" isTempTrigger="no" isMultiline="no" isPerlSlashGOption="no" isColorizerTrigger="no" isFilterTrigger="no" isSoundTrigger="no" isColorTrigger="no" isColorTriggerFg="no" isColorTriggerBg="no">
									<name>split mind</name>
									<script>snd.def_def("split_mind")</script>
									<triggerType>0</triggerType>
									<conditonLineDelta>0</conditonLineDelta>
									<mStayOpen>0</mStayOpen>
									<mCommand></mCommand>
									<packageName></packageName>
									<mFgColor>#ff0000</mFgColor>
									<mBgColor>#ffff00</mBgColor>
									<mSoundFile></mSoundFile>
									<colorTriggerFgColor>#000000</colorTriggerFgColor>
									<colorTriggerBgColor>#000000</colorTriggerBgColor>
									<regexCodeList>
										<string>Your mind is split, allowing constant meditation.</string>
									</regexCodeList>
									<regexCodePropertyList>
										<integer>3</integer>
									</regexCodePropertyList>
								</Trigger>
								<Trigger isActive="yes" isFolder="no" isTempTrigger="no" isMultiline="no" isPerlSlashGOption="no" isColorizerTrigger="no" isFilterTrigger="no" isSoundTrigger="no" isColorTrigger="no" isColorTriggerFg="no" isColorTriggerBg="no">
									<name>immunity</name>
									<script>snd.def_def("kaido_immunity")</script>
									<triggerType>0</triggerType>
									<conditonLineDelta>0</conditonLineDelta>
									<mStayOpen>0</mStayOpen>
									<mCommand></mCommand>
									<packageName></packageName>
									<mFgColor>#ff0000</mFgColor>
									<mBgColor>#ffff00</mBgColor>
									<mSoundFile></mSoundFile>
									<colorTriggerFgColor>#000000</colorTriggerFgColor>
									<colorTriggerBgColor>#000000</colorTriggerBgColor>
									<regexCodeList>
										<string>Your blood is steeled against poisons.</string>
									</regexCodeList>
									<regexCodePropertyList>
										<integer>3</integer>
									</regexCodePropertyList>
								</Trigger>
								<Trigger isActive="yes" isFolder="no" isTempTrigger="no" isMultiline="no" isPerlSlashGOption="no" isColorizerTrigger="no" isFilterTrigger="no" isSoundTrigger="no" isColorTrigger="no" isColorTriggerFg="no" isColorTriggerBg="no">
									<name>boosted regen</name>
									<script>snd.def_def("boosted_regen")</script>
									<triggerType>0</triggerType>
									<conditonLineDelta>0</conditonLineDelta>
									<mStayOpen>0</mStayOpen>
									<mCommand></mCommand>
									<packageName></packageName>
									<mFgColor>#ff0000</mFgColor>
									<mBgColor>#ffff00</mBgColor>
									<mSoundFile></mSoundFile>
									<colorTriggerFgColor>#000000</colorTriggerFgColor>
									<colorTriggerBgColor>#000000</colorTriggerBgColor>
									<regexCodeList>
										<string>Your regeneration is boosted.</string>
									</regexCodeList>
									<regexCodePropertyList>
										<integer>3</integer>
									</regexCodePropertyList>
								</Trigger>
								<Trigger isActive="yes" isFolder="no" isTempTrigger="no" isMultiline="no" isPerlSlashGOption="no" isColorizerTrigger="no" isFilterTrigger="no" isSoundTrigger="no" isColorTrigger="no" isColorTriggerFg="no" isColorTriggerBg="no">
									<name>barkskin</name>
									<script>snd.def_def("barkskin")</script>
									<triggerType>0</triggerType>
									<conditonLineDelta>0</conditonLineDelta>
									<mStayOpen>0</mStayOpen>
									<mCommand></mCommand>
									<packageName></packageName>
									<mFgColor>#ff0000</mFgColor>
									<mBgColor>#ffff00</mBgColor>
									<mSoundFile></mSoundFile>
									<colorTriggerFgColor>#000000</colorTriggerFgColor>
									<colorTriggerBgColor>#000000</colorTriggerBgColor>
									<regexCodeList>
										<string>Your skin is hard and tough, like the bark of an oak tree.</string>
									</regexCodeList>
									<regexCodePropertyList>
										<integer>3</integer>
									</regexCodePropertyList>
								</Trigger>
								<Trigger isActive="yes" isFolder="no" isTempTrigger="no" isMultiline="no" isPerlSlashGOption="no" isColorizerTrigger="no" isFilterTrigger="no" isSoundTrigger="no" isColorTrigger="no" isColorTriggerFg="no" isColorTriggerBg="no">
									<name>conceal</name>
									<script>snd.def_def("conceal")</script>
									<triggerType>0</triggerType>
									<conditonLineDelta>0</conditonLineDelta>
									<mStayOpen>0</mStayOpen>
									<mCommand></mCommand>
									<packageName></packageName>
									<mFgColor>#ff0000</mFgColor>
									<mBgColor>#ffff00</mBgColor>
									<mSoundFile></mSoundFile>
									<colorTriggerFgColor>#000000</colorTriggerFgColor>
									<colorTriggerBgColor>#000000</colorTriggerBgColor>
									<regexCodeList>
										<string>You are concealed from the view of others.</string>
									</regexCodeList>
									<regexCodePropertyList>
										<integer>3</integer>
									</regexCodePropertyList>
								</Trigger>
								<Trigger isActive="yes" isFolder="no" isTempTrigger="no" isMultiline="no" isPerlSlashGOption="no" isColorizerTrigger="no" isFilterTrigger="no" isSoundTrigger="no" isColorTrigger="no" isColorTriggerFg="no" isColorTriggerBg="no">
									<name>hardiness</name>
									<script>snd.def_def("hardiness")</script>
									<triggerType>0</triggerType>
									<conditonLineDelta>0</conditonLineDelta>
									<mStayOpen>0</mStayOpen>
									<mCommand></mCommand>
									<packageName></packageName>
									<mFgColor>#ff0000</mFgColor>
									<mBgColor>#ffff00</mBgColor>
									<mSoundFile></mSoundFile>
									<colorTriggerFgColor>#000000</colorTriggerFgColor>
									<colorTriggerBgColor>#000000</colorTriggerBgColor>
									<regexCodeList>
										<string>You are hardened against the cold.</string>
									</regexCodeList>
									<regexCodePropertyList>
										<integer>3</integer>
									</regexCodePropertyList>
								</Trigger>
								<Trigger isActive="yes" isFolder="no" isTempTrigger="no" isMultiline="no" isPerlSlashGOption="no" isColorizerTrigger="no" isFilterTrigger="no" isSoundTrigger="no" isColorTrigger="no" isColorTriggerFg="no" isColorTriggerBg="no">
									<name>flexibility</name>
									<script>snd.def_def("flexibility")</script>
									<triggerType>0</triggerType>
									<conditonLineDelta>0</conditonLineDelta>
									<mStayOpen>0</mStayOpen>
									<mCommand></mCommand>
									<packageName></packageName>
									<mFgColor>#ff0000</mFgColor>
									<mBgColor>#ffff00</mBgColor>
									<mSoundFile></mSoundFile>
									<colorTriggerFgColor>#000000</colorTriggerFgColor>
									<colorTriggerBgColor>#000000</colorTriggerBgColor>
									<regexCodeList>
										<string>Your flexibility allows you to unentangle more easily.</string>
									</regexCodeList>
									<regexCodePropertyList>
										<integer>3</integer>
									</regexCodePropertyList>
								</Trigger>
								<Trigger isActive="yes" isFolder="no" isTempTrigger="no" isMultiline="no" isPerlSlashGOption="no" isColorizerTrigger="no" isFilterTrigger="no" isSoundTrigger="no" isColorTrigger="no" isColorTriggerFg="no" isColorTriggerBg="no">
									<name>lifesap</name>
									<script>snd.def_def("lifesap")</script>
									<triggerType>0</triggerType>
									<conditonLineDelta>0</conditonLineDelta>
									<mStayOpen>0</mStayOpen>
									<mCommand></mCommand>
									<packageName></packageName>
									<mFgColor>#ff0000</mFgColor>
									<mBgColor>#ffff00</mBgColor>
									<mSoundFile></mSoundFile>
									<colorTriggerFgColor>#000000</colorTriggerFgColor>
									<colorTriggerBgColor>#000000</colorTriggerBgColor>
									<regexCodeList>
										<string>You are sapping the life energy of others.</string>
									</regexCodeList>
									<regexCodePropertyList>
										<integer>3</integer>
									</regexCodePropertyList>
								</Trigger>
								<Trigger isActive="yes" isFolder="no" isTempTrigger="no" isMultiline="no" isPerlSlashGOption="no" isColorizerTrigger="no" isFilterTrigger="no" isSoundTrigger="no" isColorTrigger="no" isColorTriggerFg="no" isColorTriggerBg="no">
									<name>masked scent</name>
									<script>snd.def_def("maskedscent")</script>
									<triggerType>0</triggerType>
									<conditonLineDelta>0</conditonLineDelta>
									<mStayOpen>0</mStayOpen>
									<mCommand></mCommand>
									<packageName></packageName>
									<mFgColor>#ff0000</mFgColor>
									<mBgColor>#ffff00</mBgColor>
									<mSoundFile></mSoundFile>
									<colorTriggerFgColor>#000000</colorTriggerFgColor>
									<colorTriggerBgColor>#000000</colorTriggerBgColor>
									<regexCodeList>
										<string>You have masked your scent to others.</string>
									</regexCodeList>
									<regexCodePropertyList>
										<integer>3</integer>
									</regexCodePropertyList>
								</Trigger>
								<Trigger isActive="yes" isFolder="no" isTempTrigger="no" isMultiline="no" isPerlSlashGOption="no" isColorizerTrigger="no" isFilterTrigger="no" isSoundTrigger="no" isColorTrigger="no" isColorTriggerFg="no" isColorTriggerBg="no">
									<name>greenheart</name>
									<script>snd.def_def("greenheart")</script>
									<triggerType>0</triggerType>
									<conditonLineDelta>0</conditonLineDelta>
									<mStayOpen>0</mStayOpen>
									<mCommand></mCommand>
									<packageName></packageName>
									<mFgColor>#ff0000</mFgColor>
									<mBgColor>#ffff00</mBgColor>
									<mSoundFile></mSoundFile>
									<colorTriggerFgColor>#000000</colorTriggerFgColor>
									<colorTriggerBgColor>#000000</colorTriggerBgColor>
									<regexCodeList>
										<string>Your tree tattoo glows with enhanced power.</string>
									</regexCodeList>
									<regexCodePropertyList>
										<integer>3</integer>
									</regexCodePropertyList>
								</Trigger>
								<Trigger isActive="yes" isFolder="no" isTempTrigger="no" isMultiline="no" isPerlSlashGOption="no" isColorizerTrigger="no" isFilterTrigger="no" isSoundTrigger="no" isColorTrigger="no" isColorTriggerFg="no" isColorTriggerBg="no">
									<name>endure</name>
									<script>snd.def_def("endure")</script>
									<triggerType>0</triggerType>
									<conditonLineDelta>0</conditonLineDelta>
									<mStayOpen>0</mStayOpen>
									<mCommand></mCommand>
									<packageName></packageName>
									<mFgColor>#ff0000</mFgColor>
									<mBgColor>#ffff00</mBgColor>
									<mSoundFile></mSoundFile>
									<colorTriggerFgColor>#000000</colorTriggerFgColor>
									<colorTriggerBgColor>#000000</colorTriggerBgColor>
									<regexCodeList>
										<string>You are dedicating your attention to concise movements.</string>
									</regexCodeList>
									<regexCodePropertyList>
										<integer>3</integer>
									</regexCodePropertyList>
								</Trigger>
								<Trigger isActive="yes" isFolder="no" isTempTrigger="no" isMultiline="no" isPerlSlashGOption="no" isColorizerTrigger="no" isFilterTrigger="no" isSoundTrigger="no" isColorTrigger="no" isColorTriggerFg="no" isColorTriggerBg="no">
									<name>mountaineer</name>
									<script>snd.def_def("mountaineer")</script>
									<triggerType>0</triggerType>
									<conditonLineDelta>0</conditonLineDelta>
									<mStayOpen>0</mStayOpen>
									<mCommand></mCommand>
									<packageName></packageName>
									<mFgColor>#ff0000</mFgColor>
									<mBgColor>#ffff00</mBgColor>
									<mSoundFile></mSoundFile>
									<colorTriggerFgColor>#000000</colorTriggerFgColor>
									<colorTriggerBgColor>#000000</colorTriggerBgColor>
									<regexCodeList>
										<string>You have the booming voice of a mountaineer.</string>
									</regexCodeList>
									<regexCodePropertyList>
										<integer>3</integer>
									</regexCodePropertyList>
								</Trigger>
								<Trigger isActive="yes" isFolder="no" isTempTrigger="no" isMultiline="no" isPerlSlashGOption="no" isColorizerTrigger="no" isFilterTrigger="no" isSoundTrigger="no" isColorTrigger="no" isColorTriggerFg="no" isColorTriggerBg="no">
									<name>dustcoat</name>
									<script>snd.def_def("dustcoat")</script>
									<triggerType>0</triggerType>
									<conditonLineDelta>0</conditonLineDelta>
									<mStayOpen>0</mStayOpen>
									<mCommand></mCommand>
									<packageName></packageName>
									<mFgColor>#ff0000</mFgColor>
									<mBgColor>#ffff00</mBgColor>
									<mSoundFile></mSoundFile>
									<colorTriggerFgColor>#000000</colorTriggerFgColor>
									<colorTriggerBgColor>#000000</colorTriggerBgColor>
									<regexCodeList>
										<string>You are shrouded by a cloud of dust.</string>
									</regexCodeList>
									<regexCodePropertyList>
										<integer>3</integer>
									</regexCodePropertyList>
								</Trigger>
								<Trigger isActive="yes" isFolder="no" isTempTrigger="no" isMultiline="no" isPerlSlashGOption="no" isColorizerTrigger="no" isFilterTrigger="no" isSoundTrigger="no" isColorTrigger="no" isColorTriggerFg="no" isColorTriggerBg="no">
									<name>resilience</name>
									<script>snd.def_def("resilience")</script>
									<triggerType>0</triggerType>
									<conditonLineDelta>0</conditonLineDelta>
									<mStayOpen>0</mStayOpen>
									<mCommand></mCommand>
									<packageName></packageName>
									<mFgColor>#ff0000</mFgColor>
									<mBgColor>#ffff00</mBgColor>
									<mSoundFile></mSoundFile>
									<colorTriggerFgColor>#000000</colorTriggerFgColor>
									<colorTriggerBgColor>#000000</colorTriggerBgColor>
									<regexCodeList>
										<string>You are masking your pain.</string>
									</regexCodeList>
									<regexCodePropertyList>
										<integer>3</integer>
									</regexCodePropertyList>
								</Trigger>
								<Trigger isActive="yes" isFolder="no" isTempTrigger="no" isMultiline="no" isPerlSlashGOption="no" isColorizerTrigger="no" isFilterTrigger="no" isSoundTrigger="no" isColorTrigger="no" isColorTriggerFg="no" isColorTriggerBg="no">
									<name>desolation</name>
									<script>snd.def_def("desolation")</script>
									<triggerType>0</triggerType>
									<conditonLineDelta>0</conditonLineDelta>
									<mStayOpen>0</mStayOpen>
									<mCommand></mCommand>
									<packageName></packageName>
									<mFgColor>#ff0000</mFgColor>
									<mBgColor>#ffff00</mBgColor>
									<mSoundFile></mSoundFile>
									<colorTriggerFgColor>#000000</colorTriggerFgColor>
									<colorTriggerBgColor>#000000</colorTriggerBgColor>
									<regexCodeList>
										<string>You reign supreme upon the wasteland.</string>
									</regexCodeList>
									<regexCodePropertyList>
										<integer>3</integer>
									</regexCodePropertyList>
								</Trigger>
								<Trigger isActive="yes" isFolder="no" isTempTrigger="no" isMultiline="no" isPerlSlashGOption="no" isColorizerTrigger="no" isFilterTrigger="no" isSoundTrigger="no" isColorTrigger="no" isColorTriggerFg="no" isColorTriggerBg="no">
									<name>circulation</name>
									<script>snd.def_def("circulation")</script>
									<triggerType>0</triggerType>
									<conditonLineDelta>0</conditonLineDelta>
									<mStayOpen>0</mStayOpen>
									<mCommand></mCommand>
									<packageName></packageName>
									<mFgColor>#ff0000</mFgColor>
									<mBgColor>#ffff00</mBgColor>
									<mSoundFile></mSoundFile>
									<colorTriggerFgColor>#000000</colorTriggerFgColor>
									<colorTriggerBgColor>#000000</colorTriggerBgColor>
									<regexCodeList>
										<string>You are focusing on circulating your blood more efficiently.</string>
									</regexCodeList>
									<regexCodePropertyList>
										<integer>3</integer>
									</regexCodePropertyList>
								</Trigger>
								<Trigger isActive="yes" isFolder="no" isTempTrigger="no" isMultiline="no" isPerlSlashGOption="no" isColorizerTrigger="no" isFilterTrigger="no" isSoundTrigger="no" isColorTrigger="no" isColorTriggerFg="no" isColorTriggerBg="no">
									<name>blindsense</name>
									<script>snd.def_def("blindsense")</script>
									<triggerType>0</triggerType>
									<conditonLineDelta>0</conditonLineDelta>
									<mStayOpen>0</mStayOpen>
									<mCommand></mCommand>
									<packageName></packageName>
									<mFgColor>#ff0000</mFgColor>
									<mBgColor>#ffff00</mBgColor>
									<mSoundFile></mSoundFile>
									<colorTriggerFgColor>#000000</colorTriggerFgColor>
									<colorTriggerBgColor>#000000</colorTriggerBgColor>
									<regexCodeList>
										<string>Your senses are attuned to the environment.</string>
									</regexCodeList>
									<regexCodePropertyList>
										<integer>3</integer>
									</regexCodePropertyList>
								</Trigger>
								<Trigger isActive="yes" isFolder="no" isTempTrigger="no" isMultiline="no" isPerlSlashGOption="no" isColorizerTrigger="no" isFilterTrigger="no" isSoundTrigger="no" isColorTrigger="no" isColorTriggerFg="no" isColorTriggerBg="no">
									<name>Link</name>
									<script>snd.def_def("linked")</script>
									<triggerType>0</triggerType>
									<conditonLineDelta>0</conditonLineDelta>
									<mStayOpen>0</mStayOpen>
									<mCommand></mCommand>
									<packageName></packageName>
									<mFgColor>#ff0000</mFgColor>
									<mBgColor>#ffff00</mBgColor>
									<mSoundFile></mSoundFile>
									<colorTriggerFgColor>#000000</colorTriggerFgColor>
									<colorTriggerBgColor>#000000</colorTriggerBgColor>
									<regexCodeList>
										<string>^The states of your body and mind are joined.$</string>
									</regexCodeList>
									<regexCodePropertyList>
										<integer>1</integer>
									</regexCodePropertyList>
								</Trigger>
								<Trigger isActive="yes" isFolder="no" isTempTrigger="no" isMultiline="no" isPerlSlashGOption="no" isColorizerTrigger="no" isFilterTrigger="no" isSoundTrigger="no" isColorTrigger="no" isColorTriggerFg="no" isColorTriggerBg="no">
									<name>Oneness Up</name>
									<script>snd.def_def("oneness")</script>
									<triggerType>0</triggerType>
									<conditonLineDelta>0</conditonLineDelta>
									<mStayOpen>0</mStayOpen>
									<mCommand></mCommand>
									<packageName></packageName>
									<mFgColor>#ff0000</mFgColor>
									<mBgColor>#ffff00</mBgColor>
									<mSoundFile></mSoundFile>
									<colorTriggerFgColor>#000000</colorTriggerFgColor>
									<colorTriggerBgColor>#000000</colorTriggerBgColor>
									<regexCodeList>
										<string>You embrace your core oneness.</string>
									</regexCodeList>
									<regexCodePropertyList>
										<integer>3</integer>
									</regexCodePropertyList>
								</Trigger>
								<Trigger isActive="yes" isFolder="no" isTempTrigger="no" isMultiline="no" isPerlSlashGOption="no" isColorizerTrigger="no" isFilterTrigger="no" isSoundTrigger="no" isColorTrigger="no" isColorTriggerFg="no" isColorTriggerBg="no">
									<name>Sublimation def</name>
									<script>snd.def_def("sublimation")</script>
									<triggerType>0</triggerType>
									<conditonLineDelta>0</conditonLineDelta>
									<mStayOpen>0</mStayOpen>
									<mCommand></mCommand>
									<packageName></packageName>
									<mFgColor>#ff0000</mFgColor>
									<mBgColor>#ffff00</mBgColor>
									<mSoundFile></mSoundFile>
									<colorTriggerFgColor>#000000</colorTriggerFgColor>
									<colorTriggerBgColor>#000000</colorTriggerBgColor>
									<regexCodeList>
										<string>^Your mind is dampened against psychic attack.$</string>
									</regexCodeList>
									<regexCodePropertyList>
										<integer>1</integer>
									</regexCodePropertyList>
								</Trigger>
								<Trigger isActive="yes" isFolder="no" isTempTrigger="no" isMultiline="no" isPerlSlashGOption="no" isColorizerTrigger="no" isFilterTrigger="no" isSoundTrigger="no" isColorTrigger="no" isColorTriggerFg="no" isColorTriggerBg="no">
									<name>Ameliorate</name>
									<script>snd.def_def("ameliorate")</script>
									<triggerType>0</triggerType>
									<conditonLineDelta>0</conditonLineDelta>
									<mStayOpen>0</mStayOpen>
									<mCommand></mCommand>
									<packageName></packageName>
									<mFgColor>#ff0000</mFgColor>
									<mBgColor>#ffff00</mBgColor>
									<mSoundFile></mSoundFile>
									<colorTriggerFgColor>#000000</colorTriggerFgColor>
									<colorTriggerBgColor>#000000</colorTriggerBgColor>
									<regexCodeList>
										<string>^You have heightened your ability to repair tissue and organs.$</string>
									</regexCodeList>
									<regexCodePropertyList>
										<integer>1</integer>
									</regexCodePropertyList>
								</Trigger>
								<Trigger isActive="yes" isFolder="no" isTempTrigger="no" isMultiline="no" isPerlSlashGOption="no" isColorizerTrigger="no" isFilterTrigger="no" isSoundTrigger="no" isColorTrigger="no" isColorTriggerFg="no" isColorTriggerBg="no">
									<name>Catabolism</name>
									<script>snd.def_def("catabolism")</script>
									<triggerType>0</triggerType>
									<conditonLineDelta>0</conditonLineDelta>
									<mStayOpen>0</mStayOpen>
									<mCommand></mCommand>
									<packageName></packageName>
									<mFgColor>#ff0000</mFgColor>
									<mBgColor>#ffff00</mBgColor>
									<mSoundFile></mSoundFile>
									<colorTriggerFgColor>#000000</colorTriggerFgColor>
									<colorTriggerBgColor>#000000</colorTriggerBgColor>
									<regexCodeList>
										<string>Your internal core is in a state of hyper production.</string>
									</regexCodeList>
									<regexCodePropertyList>
										<integer>3</integer>
									</regexCodePropertyList>
								</Trigger>
								<Trigger isActive="yes" isFolder="no" isTempTrigger="no" isMultiline="no" isPerlSlashGOption="no" isColorizerTrigger="no" isFilterTrigger="no" isSoundTrigger="no" isColorTrigger="no" isColorTriggerFg="no" isColorTriggerBg="no">
									<name>Ironskin</name>
									<script>snd.def_def("ironskin")</script>
									<triggerType>0</triggerType>
									<conditonLineDelta>0</conditonLineDelta>
									<mStayOpen>0</mStayOpen>
									<mCommand></mCommand>
									<packageName></packageName>
									<mFgColor>#ff0000</mFgColor>
									<mBgColor>#ffff00</mBgColor>
									<mSoundFile></mSoundFile>
									<colorTriggerFgColor>#000000</colorTriggerFgColor>
									<colorTriggerBgColor>#000000</colorTriggerBgColor>
									<regexCodeList>
										<string>Your skin is as hard as iron.</string>
									</regexCodeList>
									<regexCodePropertyList>
										<integer>3</integer>
									</regexCodePropertyList>
								</Trigger>
								<Trigger isActive="yes" isFolder="no" isTempTrigger="no" isMultiline="no" isPerlSlashGOption="no" isColorizerTrigger="no" isFilterTrigger="no" isSoundTrigger="no" isColorTrigger="no" isColorTriggerFg="no" isColorTriggerBg="no">
									<name>Fleetfoot</name>
									<script>snd.def_def("fleetfoot")</script>
									<triggerType>0</triggerType>
									<conditonLineDelta>0</conditonLineDelta>
									<mStayOpen>0</mStayOpen>
									<mCommand></mCommand>
									<packageName></packageName>
									<mFgColor>#ff0000</mFgColor>
									<mBgColor>#ffff00</mBgColor>
									<mSoundFile></mSoundFile>
									<colorTriggerFgColor>#000000</colorTriggerFgColor>
									<colorTriggerBgColor>#000000</colorTriggerBgColor>
									<regexCodeList>
										<string>You are fleet of foot.</string>
									</regexCodeList>
									<regexCodePropertyList>
										<integer>3</integer>
									</regexCodePropertyList>
								</Trigger>
								<Trigger isActive="yes" isFolder="no" isTempTrigger="no" isMultiline="no" isPerlSlashGOption="no" isColorizerTrigger="no" isFilterTrigger="no" isSoundTrigger="no" isColorTrigger="no" isColorTriggerFg="no" isColorTriggerBg="no">
									<name>axe repel on</name>
									<script>snd.def_def("axe_repel")</script>
									<triggerType>0</triggerType>
									<conditonLineDelta>0</conditonLineDelta>
									<mStayOpen>0</mStayOpen>
									<mCommand></mCommand>
									<packageName></packageName>
									<mFgColor>#ff0000</mFgColor>
									<mBgColor>#ffff00</mBgColor>
									<mSoundFile></mSoundFile>
									<colorTriggerFgColor>#000000</colorTriggerFgColor>
									<colorTriggerBgColor>#000000</colorTriggerBgColor>
									<regexCodeList>
										<string>You are prepared to repel deadly blows.</string>
									</regexCodeList>
									<regexCodePropertyList>
										<integer>3</integer>
									</regexCodePropertyList>
								</Trigger>
								<Trigger isActive="yes" isFolder="no" isTempTrigger="no" isMultiline="no" isPerlSlashGOption="no" isColorizerTrigger="no" isFilterTrigger="no" isSoundTrigger="no" isColorTrigger="no" isColorTriggerFg="no" isColorTriggerBg="no">
									<name>Circulation</name>
									<script>snd.def_def("circulation")</script>
									<triggerType>0</triggerType>
									<conditonLineDelta>0</conditonLineDelta>
									<mStayOpen>0</mStayOpen>
									<mCommand></mCommand>
									<packageName></packageName>
									<mFgColor>#ff0000</mFgColor>
									<mBgColor>#ffff00</mBgColor>
									<mSoundFile></mSoundFile>
									<colorTriggerFgColor>#000000</colorTriggerFgColor>
									<colorTriggerBgColor>#000000</colorTriggerBgColor>
									<regexCodeList>
										<string>You are focusing on circulating your blood more efficiently.</string>
									</regexCodeList>
									<regexCodePropertyList>
										<integer>3</integer>
									</regexCodePropertyList>
								</Trigger>
								<Trigger isActive="yes" isFolder="no" isTempTrigger="no" isMultiline="no" isPerlSlashGOption="no" isColorizerTrigger="no" isFilterTrigger="no" isSoundTrigger="no" isColorTrigger="no" isColorTriggerFg="no" isColorTriggerBg="no">
									<name>Bloodtrails</name>
									<script>snd.def_def("bloodtrails")</script>
									<triggerType>0</triggerType>
									<conditonLineDelta>0</conditonLineDelta>
									<mStayOpen>0</mStayOpen>
									<mCommand></mCommand>
									<packageName></packageName>
									<mFgColor>#ff0000</mFgColor>
									<mBgColor>#ffff00</mBgColor>
									<mSoundFile></mSoundFile>
									<colorTriggerFgColor>#000000</colorTriggerFgColor>
									<colorTriggerBgColor>#000000</colorTriggerBgColor>
									<regexCodeList>
										<string>You are tracking the bloodtrails left by your targets.</string>
									</regexCodeList>
									<regexCodePropertyList>
										<integer>3</integer>
									</regexCodePropertyList>
								</Trigger>
								<Trigger isActive="yes" isFolder="no" isTempTrigger="no" isMultiline="no" isPerlSlashGOption="no" isColorizerTrigger="no" isFilterTrigger="no" isSoundTrigger="no" isColorTrigger="no" isColorTriggerFg="no" isColorTriggerBg="no">
									<name>Battlechant</name>
									<script>snd.def_def("battlechant")</script>
									<triggerType>0</triggerType>
									<conditonLineDelta>0</conditonLineDelta>
									<mStayOpen>0</mStayOpen>
									<mCommand></mCommand>
									<packageName></packageName>
									<mFgColor>#ff0000</mFgColor>
									<mBgColor>#ffff00</mBgColor>
									<mSoundFile></mSoundFile>
									<colorTriggerFgColor>#000000</colorTriggerFgColor>
									<colorTriggerBgColor>#000000</colorTriggerBgColor>
									<regexCodeList>
										<string>You are supporting your allies with your battlechant.</string>
									</regexCodeList>
									<regexCodePropertyList>
										<integer>3</integer>
									</regexCodePropertyList>
								</Trigger>
								<Trigger isActive="yes" isFolder="no" isTempTrigger="no" isMultiline="no" isPerlSlashGOption="no" isColorizerTrigger="no" isFilterTrigger="no" isSoundTrigger="no" isColorTrigger="no" isColorTriggerFg="no" isColorTriggerBg="no">
									<name>Brutality</name>
									<script>snd.def_def("brutality")</script>
									<triggerType>0</triggerType>
									<conditonLineDelta>0</conditonLineDelta>
									<mStayOpen>0</mStayOpen>
									<mCommand></mCommand>
									<packageName></packageName>
									<mFgColor>#ff0000</mFgColor>
									<mBgColor>#ffff00</mBgColor>
									<mSoundFile></mSoundFile>
									<colorTriggerFgColor>#000000</colorTriggerFgColor>
									<colorTriggerBgColor>#000000</colorTriggerBgColor>
									<regexCodeList>
										<string>Your limb-shattering blows incite fear in your enemies.</string>
									</regexCodeList>
									<regexCodePropertyList>
										<integer>3</integer>
									</regexCodePropertyList>
								</Trigger>
								<Trigger isActive="yes" isFolder="no" isTempTrigger="no" isMultiline="no" isPerlSlashGOption="no" isColorizerTrigger="no" isFilterTrigger="no" isSoundTrigger="no" isColorTrigger="no" isColorTriggerFg="no" isColorTriggerBg="no">
									<name>Phalanx</name>
									<script>snd.def_def("phalanx")</script>
									<triggerType>0</triggerType>
									<conditonLineDelta>0</conditonLineDelta>
									<mStayOpen>0</mStayOpen>
									<mCommand></mCommand>
									<packageName></packageName>
									<mFgColor>#ff0000</mFgColor>
									<mBgColor>#ffff00</mBgColor>
									<mSoundFile></mSoundFile>
									<colorTriggerFgColor>#000000</colorTriggerFgColor>
									<colorTriggerBgColor>#000000</colorTriggerBgColor>
									<regexCodeList>
										<string>You have adopted a defensive position.</string>
									</regexCodeList>
									<regexCodePropertyList>
										<integer>3</integer>
									</regexCodePropertyList>
								</Trigger>
								<Trigger isActive="yes" isFolder="no" isTempTrigger="no" isMultiline="no" isPerlSlashGOption="no" isColorizerTrigger="no" isFilterTrigger="no" isSoundTrigger="no" isColorTrigger="no" isColorTriggerFg="no" isColorTriggerBg="no">
									<name>Dauntless</name>
									<script>snd.def_def("dauntless")</script>
									<triggerType>0</triggerType>
									<conditonLineDelta>0</conditonLineDelta>
									<mStayOpen>0</mStayOpen>
									<mCommand></mCommand>
									<packageName></packageName>
									<mFgColor>#ff0000</mFgColor>
									<mBgColor>#ffff00</mBgColor>
									<mSoundFile></mSoundFile>
									<colorTriggerFgColor>#000000</colorTriggerFgColor>
									<colorTriggerBgColor>#000000</colorTriggerBgColor>
									<regexCodeList>
										<string>You are harnessing your inner rage.</string>
									</regexCodeList>
									<regexCodePropertyList>
										<integer>3</integer>
									</regexCodePropertyList>
								</Trigger>
								<Trigger isActive="yes" isFolder="no" isTempTrigger="no" isMultiline="no" isPerlSlashGOption="no" isColorizerTrigger="no" isFilterTrigger="no" isSoundTrigger="no" isColorTrigger="no" isColorTriggerFg="no" isColorTriggerBg="no">
									<name>axe avert</name>
									<script>snd.def_def("axe_avert")</script>
									<triggerType>0</triggerType>
									<conditonLineDelta>0</conditonLineDelta>
									<mStayOpen>0</mStayOpen>
									<mCommand></mCommand>
									<packageName></packageName>
									<mFgColor>#ff0000</mFgColor>
									<mBgColor>#ffff00</mBgColor>
									<mSoundFile></mSoundFile>
									<colorTriggerFgColor>#000000</colorTriggerFgColor>
									<colorTriggerBgColor>#000000</colorTriggerBgColor>
									<regexCodeList>
										<string>You are ready to deflect incoming incoming projectiles.</string>
									</regexCodeList>
									<regexCodePropertyList>
										<integer>3</integer>
									</regexCodePropertyList>
								</Trigger>
								<Trigger isActive="yes" isFolder="no" isTempTrigger="no" isMultiline="no" isPerlSlashGOption="no" isColorizerTrigger="no" isFilterTrigger="no" isSoundTrigger="no" isColorTrigger="no" isColorTriggerFg="no" isColorTriggerBg="no">
									<name>axe obstruct</name>
									<script>snd.def_def("axe_obstruct")</script>
									<triggerType>0</triggerType>
									<conditonLineDelta>0</conditonLineDelta>
									<mStayOpen>0</mStayOpen>
									<mCommand></mCommand>
									<packageName></packageName>
									<mFgColor>#ff0000</mFgColor>
									<mBgColor>#ffff00</mBgColor>
									<mSoundFile></mSoundFile>
									<colorTriggerFgColor>#000000</colorTriggerFgColor>
									<colorTriggerBgColor>#000000</colorTriggerBgColor>
									<regexCodeList>
										<string>You will strike down those who flee in terror.</string>
									</regexCodeList>
									<regexCodePropertyList>
										<integer>3</integer>
									</regexCodePropertyList>
								</Trigger>
								<Trigger isActive="yes" isFolder="no" isTempTrigger="no" isMultiline="no" isPerlSlashGOption="no" isColorizerTrigger="no" isFilterTrigger="no" isSoundTrigger="no" isColorTrigger="no" isColorTriggerFg="no" isColorTriggerBg="no">
									<name>spheres def</name>
									<script>snd.def_def("spheres")</script>
									<triggerType>0</triggerType>
									<conditonLineDelta>0</conditonLineDelta>
									<mStayOpen>0</mStayOpen>
									<mCommand></mCommand>
									<packageName></packageName>
									<mFgColor>#ff0000</mFgColor>
									<mBgColor>#ffff00</mBgColor>
									<mSoundFile></mSoundFile>
									<colorTriggerFgColor>#000000</colorTriggerFgColor>
									<colorTriggerBgColor>#000000</colorTriggerBgColor>
									<regexCodeList>
										<string>^You are attuned to the music of the spheres.$</string>
									</regexCodeList>
									<regexCodePropertyList>
										<integer>1</integer>
									</regexCodePropertyList>
								</Trigger>
								<Trigger isActive="yes" isFolder="no" isTempTrigger="no" isMultiline="no" isPerlSlashGOption="no" isColorizerTrigger="no" isFilterTrigger="no" isSoundTrigger="no" isColorTrigger="no" isColorTriggerFg="no" isColorTriggerBg="no">
									<name>Steadfast</name>
									<script>snd.def_def("steadfast")</script>
									<triggerType>0</triggerType>
									<conditonLineDelta>0</conditonLineDelta>
									<mStayOpen>0</mStayOpen>
									<mCommand></mCommand>
									<packageName></packageName>
									<mFgColor>#ff0000</mFgColor>
									<mBgColor>#ffff00</mBgColor>
									<mSoundFile></mSoundFile>
									<colorTriggerFgColor>#000000</colorTriggerFgColor>
									<colorTriggerBgColor>#000000</colorTriggerBgColor>
									<regexCodeList>
										<string>^Your golem is standing steadfast.$</string>
									</regexCodeList>
									<regexCodePropertyList>
										<integer>1</integer>
									</regexCodePropertyList>
								</Trigger>
								<Trigger isActive="yes" isFolder="no" isTempTrigger="no" isMultiline="no" isPerlSlashGOption="no" isColorizerTrigger="no" isFilterTrigger="no" isSoundTrigger="no" isColorTrigger="no" isColorTriggerFg="no" isColorTriggerBg="no">
									<name>Earthsense</name>
									<script>snd.def_def("earthsense")</script>
									<triggerType>0</triggerType>
									<conditonLineDelta>0</conditonLineDelta>
									<mStayOpen>0</mStayOpen>
									<mCommand></mCommand>
									<packageName></packageName>
									<mFgColor>#ff0000</mFgColor>
									<mBgColor>#ffff00</mBgColor>
									<mSoundFile></mSoundFile>
									<colorTriggerFgColor>#000000</colorTriggerFgColor>
									<colorTriggerBgColor>#000000</colorTriggerBgColor>
									<regexCodeList>
										<string>^You are listening for underground movement.$</string>
									</regexCodeList>
									<regexCodePropertyList>
										<integer>1</integer>
									</regexCodePropertyList>
								</Trigger>
								<Trigger isActive="yes" isFolder="no" isTempTrigger="no" isMultiline="no" isPerlSlashGOption="no" isColorizerTrigger="no" isFilterTrigger="no" isSoundTrigger="no" isColorTrigger="no" isColorTriggerFg="no" isColorTriggerBg="no">
									<name>Earthenform</name>
									<script>snd.def_def("earthenform")</script>
									<triggerType>0</triggerType>
									<conditonLineDelta>0</conditonLineDelta>
									<mStayOpen>0</mStayOpen>
									<mCommand></mCommand>
									<packageName></packageName>
									<mFgColor>#ff0000</mFgColor>
									<mBgColor>#ffff00</mBgColor>
									<mSoundFile></mSoundFile>
									<colorTriggerFgColor>#000000</colorTriggerFgColor>
									<colorTriggerBgColor>#000000</colorTriggerBgColor>
									<regexCodeList>
										<string>^You have embraced your earthen form.$</string>
									</regexCodeList>
									<regexCodePropertyList>
										<integer>1</integer>
									</regexCodePropertyList>
								</Trigger>
								<Trigger isActive="yes" isFolder="no" isTempTrigger="no" isMultiline="no" isPerlSlashGOption="no" isColorizerTrigger="no" isFilterTrigger="no" isSoundTrigger="no" isColorTrigger="no" isColorTriggerFg="no" isColorTriggerBg="no">
									<name>Ricochet def</name>
									<script>snd.def_def("ricochet")</script>
									<triggerType>0</triggerType>
									<conditonLineDelta>0</conditonLineDelta>
									<mStayOpen>0</mStayOpen>
									<mCommand></mCommand>
									<packageName></packageName>
									<mFgColor>#ff0000</mFgColor>
									<mBgColor>#ffff00</mBgColor>
									<mSoundFile></mSoundFile>
									<colorTriggerFgColor>#000000</colorTriggerFgColor>
									<colorTriggerBgColor>#000000</colorTriggerBgColor>
									<regexCodeList>
										<string>You are attempting to bounce your attempts off parried blows.</string>
									</regexCodeList>
									<regexCodePropertyList>
										<integer>1</integer>
									</regexCodePropertyList>
								</Trigger>
								<Trigger isActive="yes" isFolder="no" isTempTrigger="no" isMultiline="no" isPerlSlashGOption="no" isColorizerTrigger="no" isFilterTrigger="no" isSoundTrigger="no" isColorTrigger="no" isColorTriggerFg="no" isColorTriggerBg="no">
									<name>Entwine def</name>
									<script>snd.def_def("entwine")</script>
									<triggerType>0</triggerType>
									<conditonLineDelta>0</conditonLineDelta>
									<mStayOpen>0</mStayOpen>
									<mCommand></mCommand>
									<packageName></packageName>
									<mFgColor>#ff0000</mFgColor>
									<mBgColor>#ffff00</mBgColor>
									<mSoundFile></mSoundFile>
									<colorTriggerFgColor>#000000</colorTriggerFgColor>
									<colorTriggerBgColor>#000000</colorTriggerBgColor>
									<regexCodeList>
										<string>You are preparing to entwine your flail against hostile weapons.</string>
									</regexCodeList>
									<regexCodePropertyList>
										<integer>3</integer>
									</regexCodePropertyList>
								</Trigger>
								<Trigger isActive="yes" isFolder="no" isTempTrigger="no" isMultiline="no" isPerlSlashGOption="no" isColorizerTrigger="no" isFilterTrigger="no" isSoundTrigger="no" isColorTrigger="no" isColorTriggerFg="no" isColorTriggerBg="no">
									<name>Twinsoul</name>
									<script>snd.def_def("twinsoul")</script>
									<triggerType>0</triggerType>
									<conditonLineDelta>0</conditonLineDelta>
									<mStayOpen>0</mStayOpen>
									<mCommand></mCommand>
									<packageName></packageName>
									<mFgColor>#ff0000</mFgColor>
									<mBgColor>#ffff00</mBgColor>
									<mSoundFile></mSoundFile>
									<colorTriggerFgColor>#000000</colorTriggerFgColor>
									<colorTriggerBgColor>#000000</colorTriggerBgColor>
									<regexCodeList>
										<string>Your soul is entwined around your golem's.</string>
									</regexCodeList>
									<regexCodePropertyList>
										<integer>3</integer>
									</regexCodePropertyList>
								</Trigger>
								<Trigger isActive="yes" isFolder="no" isTempTrigger="no" isMultiline="no" isPerlSlashGOption="no" isColorizerTrigger="no" isFilterTrigger="no" isSoundTrigger="no" isColorTrigger="no" isColorTriggerFg="no" isColorTriggerBg="no">
									<name>Resonance</name>
									<script>snd.def_def("earth_resonance")</script>
									<triggerType>0</triggerType>
									<conditonLineDelta>0</conditonLineDelta>
									<mStayOpen>0</mStayOpen>
									<mCommand></mCommand>
									<packageName></packageName>
									<mFgColor>#ff0000</mFgColor>
									<mBgColor>#ffff00</mBgColor>
									<mSoundFile></mSoundFile>
									<colorTriggerFgColor>#000000</colorTriggerFgColor>
									<colorTriggerBgColor>#000000</colorTriggerBgColor>
									<regexCodeList>
										<string>Your soul is resonating with the earth.</string>
									</regexCodeList>
									<regexCodePropertyList>
										<integer>3</integer>
									</regexCodePropertyList>
								</Trigger>
								<Trigger isActive="yes" isFolder="no" isTempTrigger="no" isMultiline="no" isPerlSlashGOption="no" isColorizerTrigger="no" isFilterTrigger="no" isSoundTrigger="no" isColorTrigger="no" isColorTriggerFg="no" isColorTriggerBg="no">
									<name>Imbue_erosion</name>
									<script>snd.def_def("imbue_erosion")</script>
									<triggerType>0</triggerType>
									<conditonLineDelta>0</conditonLineDelta>
									<mStayOpen>0</mStayOpen>
									<mCommand></mCommand>
									<packageName></packageName>
									<mFgColor>#ff0000</mFgColor>
									<mBgColor>#ffff00</mBgColor>
									<mSoundFile></mSoundFile>
									<colorTriggerFgColor>#000000</colorTriggerFgColor>
									<colorTriggerBgColor>#000000</colorTriggerBgColor>
									<regexCodeList>
										<string>Your flail imbued with the raw force of the desert.</string>
									</regexCodeList>
									<regexCodePropertyList>
										<integer>3</integer>
									</regexCodePropertyList>
								</Trigger>
								<Trigger isActive="yes" isFolder="no" isTempTrigger="no" isMultiline="no" isPerlSlashGOption="no" isColorizerTrigger="no" isFilterTrigger="no" isSoundTrigger="no" isColorTrigger="no" isColorTriggerFg="no" isColorTriggerBg="no">
									<name>earth stonebind</name>
									<script>snd.def_def("stonebind")</script>
									<triggerType>0</triggerType>
									<conditonLineDelta>0</conditonLineDelta>
									<mStayOpen>0</mStayOpen>
									<mCommand></mCommand>
									<packageName></packageName>
									<mFgColor>#ff0000</mFgColor>
									<mBgColor>#ffff00</mBgColor>
									<mSoundFile></mSoundFile>
									<colorTriggerFgColor>#000000</colorTriggerFgColor>
									<colorTriggerBgColor>#000000</colorTriggerBgColor>
									<regexCodeList>
										<string>Your arms have been bound in stone.</string>
									</regexCodeList>
									<regexCodePropertyList>
										<integer>3</integer>
									</regexCodePropertyList>
								</Trigger>
								<Trigger isActive="yes" isFolder="no" isTempTrigger="no" isMultiline="no" isPerlSlashGOption="no" isColorizerTrigger="no" isFilterTrigger="no" isSoundTrigger="no" isColorTrigger="no" isColorTriggerFg="no" isColorTriggerBg="no">
									<name>Runemark have</name>
									<script>local minor = matches[2]
local major = matches[3]
snd.def_def("runemark")</script>
									<triggerType>0</triggerType>
									<conditonLineDelta>0</conditonLineDelta>
									<mStayOpen>0</mStayOpen>
									<mCommand></mCommand>
									<packageName></packageName>
									<mFgColor>#ff0000</mFgColor>
									<mBgColor>#ffff00</mBgColor>
									<mSoundFile></mSoundFile>
									<colorTriggerFgColor>#000000</colorTriggerFgColor>
									<colorTriggerBgColor>#000000</colorTriggerBgColor>
									<regexCodeList>
										<string>^You have a (\w+) minor rune painted upon a (\w+) major rune.$</string>
									</regexCodeList>
									<regexCodePropertyList>
										<integer>1</integer>
									</regexCodePropertyList>
								</Trigger>
								<Trigger isActive="yes" isFolder="no" isTempTrigger="no" isMultiline="no" isPerlSlashGOption="no" isColorizerTrigger="no" isFilterTrigger="no" isSoundTrigger="no" isColorTrigger="no" isColorTriggerFg="no" isColorTriggerBg="no">
									<name>Stonefury</name>
									<script>snd.def_def("imbue_stonefury")</script>
									<triggerType>0</triggerType>
									<conditonLineDelta>0</conditonLineDelta>
									<mStayOpen>0</mStayOpen>
									<mCommand></mCommand>
									<packageName></packageName>
									<mFgColor>#ff0000</mFgColor>
									<mBgColor>#ffff00</mBgColor>
									<mSoundFile></mSoundFile>
									<colorTriggerFgColor>#000000</colorTriggerFgColor>
									<colorTriggerBgColor>#000000</colorTriggerBgColor>
									<regexCodeList>
										<string>You have imbued the fury of the Earthen into your flail.</string>
									</regexCodeList>
									<regexCodePropertyList>
										<integer>3</integer>
									</regexCodePropertyList>
								</Trigger>
								<Trigger isActive="yes" isFolder="no" isTempTrigger="no" isMultiline="no" isPerlSlashGOption="no" isColorizerTrigger="no" isFilterTrigger="no" isSoundTrigger="no" isColorTrigger="no" isColorTriggerFg="no" isColorTriggerBg="no">
									<name>Imbue_will def</name>
									<script>snd.def_def("imbue_will")</script>
									<triggerType>0</triggerType>
									<conditonLineDelta>0</conditonLineDelta>
									<mStayOpen>0</mStayOpen>
									<mCommand></mCommand>
									<packageName></packageName>
									<mFgColor>#ff0000</mFgColor>
									<mBgColor>#ffff00</mBgColor>
									<mSoundFile></mSoundFile>
									<colorTriggerFgColor>#000000</colorTriggerFgColor>
									<colorTriggerBgColor>#000000</colorTriggerBgColor>
									<regexCodeList>
										<string>You are channeling the will of the Earthen.</string>
									</regexCodeList>
									<regexCodePropertyList>
										<integer>3</integer>
									</regexCodePropertyList>
								</Trigger>
								<Trigger isActive="yes" isFolder="no" isTempTrigger="no" isMultiline="no" isPerlSlashGOption="no" isColorizerTrigger="no" isFilterTrigger="no" isSoundTrigger="no" isColorTrigger="no" isColorTriggerFg="no" isColorTriggerBg="no">
									<name>Sand swelter def</name>
									<script>snd.def_def("sand_swelter")</script>
									<triggerType>0</triggerType>
									<conditonLineDelta>0</conditonLineDelta>
									<mStayOpen>0</mStayOpen>
									<mCommand></mCommand>
									<packageName></packageName>
									<mFgColor>#ff0000</mFgColor>
									<mBgColor>#ffff00</mBgColor>
									<mSoundFile></mSoundFile>
									<colorTriggerFgColor>#000000</colorTriggerFgColor>
									<colorTriggerBgColor>#000000</colorTriggerBgColor>
									<regexCodeList>
										<string>You are focusing your energy into sweltering your sands.</string>
									</regexCodeList>
									<regexCodePropertyList>
										<integer>3</integer>
									</regexCodePropertyList>
								</Trigger>
								<Trigger isActive="yes" isFolder="no" isTempTrigger="no" isMultiline="no" isPerlSlashGOption="no" isColorizerTrigger="no" isFilterTrigger="no" isSoundTrigger="no" isColorTrigger="no" isColorTriggerFg="no" isColorTriggerBg="no">
									<name>Earthenform def</name>
									<script>snd.def_def("earthenform")
</script>
									<triggerType>0</triggerType>
									<conditonLineDelta>0</conditonLineDelta>
									<mStayOpen>0</mStayOpen>
									<mCommand></mCommand>
									<packageName></packageName>
									<mFgColor>#ff0000</mFgColor>
									<mBgColor>#ffff00</mBgColor>
									<mSoundFile></mSoundFile>
									<colorTriggerFgColor>#000000</colorTriggerFgColor>
									<colorTriggerBgColor>#000000</colorTriggerBgColor>
									<regexCodeList>
										<string>^You have gained the earthenform defence.$</string>
									</regexCodeList>
									<regexCodePropertyList>
										<integer>1</integer>
									</regexCodePropertyList>
								</Trigger>
								<Trigger isActive="yes" isFolder="no" isTempTrigger="no" isMultiline="no" isPerlSlashGOption="no" isColorizerTrigger="no" isFilterTrigger="no" isSoundTrigger="no" isColorTrigger="no" isColorTriggerFg="no" isColorTriggerBg="no">
									<name>Salivate</name>
									<script>snd.def_def("salivate")</script>
									<triggerType>0</triggerType>
									<conditonLineDelta>0</conditonLineDelta>
									<mStayOpen>0</mStayOpen>
									<mCommand></mCommand>
									<packageName></packageName>
									<mFgColor>#ff0000</mFgColor>
									<mBgColor>#ffff00</mBgColor>
									<mSoundFile></mSoundFile>
									<colorTriggerFgColor>#000000</colorTriggerFgColor>
									<colorTriggerBgColor>#000000</colorTriggerBgColor>
									<regexCodeList>
										<string>^Gnashing your tongue, your mouth salivates with fluid.$</string>
									</regexCodeList>
									<regexCodePropertyList>
										<integer>1</integer>
									</regexCodePropertyList>
								</Trigger>
								<Trigger isActive="yes" isFolder="no" isTempTrigger="no" isMultiline="no" isPerlSlashGOption="no" isColorizerTrigger="no" isFilterTrigger="no" isSoundTrigger="no" isColorTrigger="no" isColorTriggerFg="no" isColorTriggerBg="no">
									<name>Thickfur</name>
									<script>snd.def_def("thickfur")</script>
									<triggerType>0</triggerType>
									<conditonLineDelta>0</conditonLineDelta>
									<mStayOpen>0</mStayOpen>
									<mCommand></mCommand>
									<packageName></packageName>
									<mFgColor>#ff0000</mFgColor>
									<mBgColor>#ffff00</mBgColor>
									<mSoundFile></mSoundFile>
									<colorTriggerFgColor>#000000</colorTriggerFgColor>
									<colorTriggerBgColor>#000000</colorTriggerBgColor>
									<regexCodeList>
										<string>^Your coat of fur has been thickened.$ </string>
									</regexCodeList>
									<regexCodePropertyList>
										<integer>1</integer>
									</regexCodePropertyList>
								</Trigger>
								<Trigger isActive="yes" isFolder="no" isTempTrigger="no" isMultiline="no" isPerlSlashGOption="no" isColorizerTrigger="no" isFilterTrigger="no" isSoundTrigger="no" isColorTrigger="no" isColorTriggerFg="no" isColorTriggerBg="no">
									<name>Bracing</name>
									<script>snd.def_def("bracing")</script>
									<triggerType>0</triggerType>
									<conditonLineDelta>0</conditonLineDelta>
									<mStayOpen>0</mStayOpen>
									<mCommand></mCommand>
									<packageName></packageName>
									<mFgColor>#ff0000</mFgColor>
									<mBgColor>#ffff00</mBgColor>
									<mSoundFile></mSoundFile>
									<colorTriggerFgColor>#000000</colorTriggerFgColor>
									<colorTriggerBgColor>#000000</colorTriggerBgColor>
									<regexCodeList>
										<string>^You are bracing from attacks.$</string>
									</regexCodeList>
									<regexCodePropertyList>
										<integer>1</integer>
									</regexCodePropertyList>
								</Trigger>
								<Trigger isActive="yes" isFolder="no" isTempTrigger="no" isMultiline="no" isPerlSlashGOption="no" isColorizerTrigger="no" isFilterTrigger="no" isSoundTrigger="no" isColorTrigger="no" isColorTriggerFg="no" isColorTriggerBg="no">
									<name>Spiritsight</name>
									<script>snd.def_def("soul_spiritsight")</script>
									<triggerType>0</triggerType>
									<conditonLineDelta>0</conditonLineDelta>
									<mStayOpen>0</mStayOpen>
									<mCommand></mCommand>
									<packageName></packageName>
									<mFgColor>#ff0000</mFgColor>
									<mBgColor>#ffff00</mBgColor>
									<mSoundFile></mSoundFile>
									<colorTriggerFgColor>#000000</colorTriggerFgColor>
									<colorTriggerBgColor>#000000</colorTriggerBgColor>
									<regexCodeList>
										<string>^You are seeking the souls of the hidden.$</string>
									</regexCodeList>
									<regexCodePropertyList>
										<integer>1</integer>
									</regexCodePropertyList>
								</Trigger>
								<Trigger isActive="yes" isFolder="no" isTempTrigger="no" isMultiline="no" isPerlSlashGOption="no" isColorizerTrigger="no" isFilterTrigger="no" isSoundTrigger="no" isColorTrigger="no" isColorTriggerFg="no" isColorTriggerBg="no">
									<name>Soulmask</name>
									<script>snd.def_def("soulmask")</script>
									<triggerType>0</triggerType>
									<conditonLineDelta>0</conditonLineDelta>
									<mStayOpen>0</mStayOpen>
									<mCommand></mCommand>
									<packageName></packageName>
									<mFgColor>#ff0000</mFgColor>
									<mBgColor>#ffff00</mBgColor>
									<mSoundFile></mSoundFile>
									<colorTriggerFgColor>#000000</colorTriggerFgColor>
									<colorTriggerBgColor>#000000</colorTriggerBgColor>
									<regexCodeList>
										<string>^Your soul is swathed in secrecy.$</string>
									</regexCodeList>
									<regexCodePropertyList>
										<integer>1</integer>
									</regexCodePropertyList>
								</Trigger>
								<Trigger isActive="yes" isFolder="no" isTempTrigger="no" isMultiline="no" isPerlSlashGOption="no" isColorizerTrigger="no" isFilterTrigger="no" isSoundTrigger="no" isColorTrigger="no" isColorTriggerFg="no" isColorTriggerBg="no">
									<name>substitute</name>
									<script>snd.def_def("soul_substitute")</script>
									<triggerType>0</triggerType>
									<conditonLineDelta>0</conditonLineDelta>
									<mStayOpen>0</mStayOpen>
									<mCommand></mCommand>
									<packageName></packageName>
									<mFgColor>#ff0000</mFgColor>
									<mBgColor>#ffff00</mBgColor>
									<mSoundFile></mSoundFile>
									<colorTriggerFgColor>#000000</colorTriggerFgColor>
									<colorTriggerBgColor>#000000</colorTriggerBgColor>
									<regexCodeList>
										<string>^You will substitute your soul with another upon dying.$</string>
									</regexCodeList>
									<regexCodePropertyList>
										<integer>1</integer>
									</regexCodePropertyList>
								</Trigger>
								<Trigger isActive="yes" isFolder="no" isTempTrigger="no" isMultiline="no" isPerlSlashGOption="no" isColorizerTrigger="no" isFilterTrigger="no" isSoundTrigger="no" isColorTrigger="no" isColorTriggerFg="no" isColorTriggerBg="no">
									<name>Soul fortify</name>
									<script>snd.def_def("soul_fortify")</script>
									<triggerType>0</triggerType>
									<conditonLineDelta>0</conditonLineDelta>
									<mStayOpen>0</mStayOpen>
									<mCommand></mCommand>
									<packageName></packageName>
									<mFgColor>#ff0000</mFgColor>
									<mBgColor>#ffff00</mBgColor>
									<mSoundFile></mSoundFile>
									<colorTriggerFgColor>#000000</colorTriggerFgColor>
									<colorTriggerBgColor>#000000</colorTriggerBgColor>
									<regexCodeList>
										<string>^Your soul has been fortified.$</string>
									</regexCodeList>
									<regexCodePropertyList>
										<integer>1</integer>
									</regexCodePropertyList>
								</Trigger>
								<Trigger isActive="yes" isFolder="no" isTempTrigger="no" isMultiline="no" isPerlSlashGOption="no" isColorizerTrigger="no" isFilterTrigger="no" isSoundTrigger="no" isColorTrigger="no" isColorTriggerFg="no" isColorTriggerBg="no">
									<name>Bruteforce</name>
									<script>snd.def_def("bruteforce")</script>
									<triggerType>0</triggerType>
									<conditonLineDelta>0</conditonLineDelta>
									<mStayOpen>0</mStayOpen>
									<mCommand></mCommand>
									<packageName></packageName>
									<mFgColor>#ff0000</mFgColor>
									<mBgColor>#ffff00</mBgColor>
									<mSoundFile></mSoundFile>
									<colorTriggerFgColor>#000000</colorTriggerFgColor>
									<colorTriggerBgColor>#000000</colorTriggerBgColor>
									<regexCodeList>
										<string>^You are striking with great force.$</string>
									</regexCodeList>
									<regexCodePropertyList>
										<integer>1</integer>
									</regexCodePropertyList>
								</Trigger>
								<Trigger isActive="yes" isFolder="no" isTempTrigger="no" isMultiline="no" isPerlSlashGOption="no" isColorizerTrigger="no" isFilterTrigger="no" isSoundTrigger="no" isColorTrigger="no" isColorTriggerFg="no" isColorTriggerBg="no">
									<name>Stalwart</name>
									<script>snd.def_def("stalwart")</script>
									<triggerType>0</triggerType>
									<conditonLineDelta>0</conditonLineDelta>
									<mStayOpen>0</mStayOpen>
									<mCommand></mCommand>
									<packageName></packageName>
									<mFgColor>#ff0000</mFgColor>
									<mBgColor>#ffff00</mBgColor>
									<mSoundFile></mSoundFile>
									<colorTriggerFgColor>#000000</colorTriggerFgColor>
									<colorTriggerBgColor>#000000</colorTriggerBgColor>
									<regexCodeList>
										<string>You are blocking exits with tenacity.</string>
									</regexCodeList>
									<regexCodePropertyList>
										<integer>3</integer>
									</regexCodePropertyList>
								</Trigger>
								<Trigger isActive="yes" isFolder="no" isTempTrigger="no" isMultiline="no" isPerlSlashGOption="no" isColorizerTrigger="no" isFilterTrigger="no" isSoundTrigger="no" isColorTrigger="no" isColorTriggerFg="no" isColorTriggerBg="no">
									<name>Cruelty have</name>
									<script>snd.def_def("cruelty")</script>
									<triggerType>0</triggerType>
									<conditonLineDelta>0</conditonLineDelta>
									<mStayOpen>0</mStayOpen>
									<mCommand></mCommand>
									<packageName></packageName>
									<mFgColor>#ff0000</mFgColor>
									<mBgColor>#ffff00</mBgColor>
									<mSoundFile></mSoundFile>
									<colorTriggerFgColor>#000000</colorTriggerFgColor>
									<colorTriggerBgColor>#000000</colorTriggerBgColor>
									<regexCodeList>
										<string>Your strength has been bolstered.</string>
									</regexCodeList>
									<regexCodePropertyList>
										<integer>3</integer>
									</regexCodePropertyList>
								</Trigger>
								<Trigger isActive="yes" isFolder="no" isTempTrigger="no" isMultiline="no" isPerlSlashGOption="no" isColorizerTrigger="no" isFilterTrigger="no" isSoundTrigger="no" isColorTrigger="no" isColorTriggerFg="no" isColorTriggerBg="no">
									<name>Eclipse def</name>
									<script>snd.def_def("eclipse")</script>
									<triggerType>0</triggerType>
									<conditonLineDelta>0</conditonLineDelta>
									<mStayOpen>0</mStayOpen>
									<mCommand></mCommand>
									<packageName></packageName>
									<mFgColor>#ff0000</mFgColor>
									<mBgColor>#ffff00</mBgColor>
									<mSoundFile></mSoundFile>
									<colorTriggerFgColor>#000000</colorTriggerFgColor>
									<colorTriggerBgColor>#000000</colorTriggerBgColor>
									<regexCodeList>
										<string>The Eclipse is looming to mask your Sun and Moon.</string>
									</regexCodeList>
									<regexCodePropertyList>
										<integer>3</integer>
									</regexCodePropertyList>
								</Trigger>
								<Trigger isActive="yes" isFolder="no" isTempTrigger="no" isMultiline="no" isPerlSlashGOption="no" isColorizerTrigger="no" isFilterTrigger="no" isSoundTrigger="no" isColorTrigger="no" isColorTriggerFg="no" isColorTriggerBg="no">
									<name>Putrefaction</name>
									<script>snd.def_def("putrefaction")</script>
									<triggerType>0</triggerType>
									<conditonLineDelta>0</conditonLineDelta>
									<mStayOpen>0</mStayOpen>
									<mCommand></mCommand>
									<packageName></packageName>
									<mFgColor>#ff0000</mFgColor>
									<mBgColor>#ffff00</mBgColor>
									<mSoundFile></mSoundFile>
									<colorTriggerFgColor>#000000</colorTriggerFgColor>
									<colorTriggerBgColor>#000000</colorTriggerBgColor>
									<regexCodeList>
										<string>^You are bathed in the glorious protection of decaying flesh.$</string>
									</regexCodeList>
									<regexCodePropertyList>
										<integer>1</integer>
									</regexCodePropertyList>
								</Trigger>
								<Trigger isActive="yes" isFolder="no" isTempTrigger="no" isMultiline="no" isPerlSlashGOption="no" isColorizerTrigger="no" isFilterTrigger="no" isSoundTrigger="no" isColorTrigger="no" isColorTriggerFg="no" isColorTriggerBg="no">
									<name>Vengeance</name>
									<script>snd.def_def("vengeance")</script>
									<triggerType>0</triggerType>
									<conditonLineDelta>0</conditonLineDelta>
									<mStayOpen>0</mStayOpen>
									<mCommand></mCommand>
									<packageName></packageName>
									<mFgColor>#ff0000</mFgColor>
									<mBgColor>#ffff00</mBgColor>
									<mSoundFile></mSoundFile>
									<colorTriggerFgColor>#000000</colorTriggerFgColor>
									<colorTriggerBgColor>#000000</colorTriggerBgColor>
									<regexCodeList>
										<string>^You have sworn vengeance upon those who would slay you.$</string>
									</regexCodeList>
									<regexCodePropertyList>
										<integer>1</integer>
									</regexCodePropertyList>
								</Trigger>
								<Trigger isActive="yes" isFolder="no" isTempTrigger="no" isMultiline="no" isPerlSlashGOption="no" isColorizerTrigger="no" isFilterTrigger="no" isSoundTrigger="no" isColorTrigger="no" isColorTriggerFg="no" isColorTriggerBg="no">
									<name>Deathaura</name>
									<script>snd.def_def("deathaura")</script>
									<triggerType>0</triggerType>
									<conditonLineDelta>0</conditonLineDelta>
									<mStayOpen>0</mStayOpen>
									<mCommand></mCommand>
									<packageName></packageName>
									<mFgColor>#ff0000</mFgColor>
									<mBgColor>#ffff00</mBgColor>
									<mSoundFile></mSoundFile>
									<colorTriggerFgColor>#000000</colorTriggerFgColor>
									<colorTriggerBgColor>#000000</colorTriggerBgColor>
									<regexCodeList>
										<string>^You are emanating an aura of death harmful to those around you.$</string>
									</regexCodeList>
									<regexCodePropertyList>
										<integer>1</integer>
									</regexCodePropertyList>
								</Trigger>
								<Trigger isActive="yes" isFolder="no" isTempTrigger="no" isMultiline="no" isPerlSlashGOption="no" isColorizerTrigger="no" isFilterTrigger="no" isSoundTrigger="no" isColorTrigger="no" isColorTriggerFg="no" isColorTriggerBg="no">
									<name>Soulcage</name>
									<script>snd.def_def("soulcage")</script>
									<triggerType>0</triggerType>
									<conditonLineDelta>0</conditonLineDelta>
									<mStayOpen>0</mStayOpen>
									<mCommand></mCommand>
									<packageName></packageName>
									<mFgColor>#ff0000</mFgColor>
									<mBgColor>#ffff00</mBgColor>
									<mSoundFile></mSoundFile>
									<colorTriggerFgColor>#000000</colorTriggerFgColor>
									<colorTriggerBgColor>#000000</colorTriggerBgColor>
									<regexCodeList>
										<string>^Your being is protected by the soulcage.$</string>
									</regexCodeList>
									<regexCodePropertyList>
										<integer>1</integer>
									</regexCodePropertyList>
								</Trigger>
								<Trigger isActive="yes" isFolder="no" isTempTrigger="no" isMultiline="no" isPerlSlashGOption="no" isColorizerTrigger="no" isFilterTrigger="no" isSoundTrigger="no" isColorTrigger="no" isColorTriggerFg="no" isColorTriggerBg="no">
									<name>Blurred</name>
									<script>snd.def_def("blurred")</script>
									<triggerType>0</triggerType>
									<conditonLineDelta>0</conditonLineDelta>
									<mStayOpen>0</mStayOpen>
									<mCommand></mCommand>
									<packageName></packageName>
									<mFgColor>#ff0000</mFgColor>
									<mBgColor>#ffff00</mBgColor>
									<mSoundFile></mSoundFile>
									<colorTriggerFgColor>#000000</colorTriggerFgColor>
									<colorTriggerBgColor>#000000</colorTriggerBgColor>
									<regexCodeList>
										<string>You are circulating your blood erratically to hide your vitals.</string>
									</regexCodeList>
									<regexCodePropertyList>
										<integer>3</integer>
									</regexCodePropertyList>
								</Trigger>
								<Trigger isActive="yes" isFolder="no" isTempTrigger="no" isMultiline="no" isPerlSlashGOption="no" isColorizerTrigger="no" isFilterTrigger="no" isSoundTrigger="no" isColorTrigger="no" isColorTriggerFg="no" isColorTriggerBg="no">
									<name>Trepidation</name>
									<script>snd.def_def("trepidation")</script>
									<triggerType>0</triggerType>
									<conditonLineDelta>0</conditonLineDelta>
									<mStayOpen>0</mStayOpen>
									<mCommand></mCommand>
									<packageName></packageName>
									<mFgColor>#ff0000</mFgColor>
									<mBgColor>#ffff00</mBgColor>
									<mSoundFile></mSoundFile>
									<colorTriggerFgColor>#000000</colorTriggerFgColor>
									<colorTriggerBgColor>#000000</colorTriggerBgColor>
									<regexCodeList>
										<string>You are exuding an aura of trepidation upon those you despise.</string>
									</regexCodeList>
									<regexCodePropertyList>
										<integer>1</integer>
									</regexCodePropertyList>
								</Trigger>
								<Trigger isActive="yes" isFolder="no" isTempTrigger="no" isMultiline="no" isPerlSlashGOption="no" isColorizerTrigger="no" isFilterTrigger="no" isSoundTrigger="no" isColorTrigger="no" isColorTriggerFg="no" isColorTriggerBg="no">
									<name>Fortify</name>
									<script>snd.def_def("fortify")</script>
									<triggerType>0</triggerType>
									<conditonLineDelta>0</conditonLineDelta>
									<mStayOpen>0</mStayOpen>
									<mCommand></mCommand>
									<packageName></packageName>
									<mFgColor>#ff0000</mFgColor>
									<mBgColor>#ffff00</mBgColor>
									<mSoundFile></mSoundFile>
									<colorTriggerFgColor>#000000</colorTriggerFgColor>
									<colorTriggerBgColor>#000000</colorTriggerBgColor>
									<regexCodeList>
										<string>^Your flesh is fortified against damage.$</string>
									</regexCodeList>
									<regexCodePropertyList>
										<integer>1</integer>
									</regexCodePropertyList>
								</Trigger>
								<Trigger isActive="yes" isFolder="no" isTempTrigger="no" isMultiline="no" isPerlSlashGOption="no" isColorizerTrigger="no" isFilterTrigger="no" isSoundTrigger="no" isColorTrigger="no" isColorTriggerFg="no" isColorTriggerBg="no">
									<name>Elusion</name>
									<script>snd.def_def("elusion")</script>
									<triggerType>0</triggerType>
									<conditonLineDelta>0</conditonLineDelta>
									<mStayOpen>0</mStayOpen>
									<mCommand></mCommand>
									<packageName></packageName>
									<mFgColor>#ff0000</mFgColor>
									<mBgColor>#ffff00</mBgColor>
									<mSoundFile></mSoundFile>
									<colorTriggerFgColor>#000000</colorTriggerFgColor>
									<colorTriggerBgColor>#000000</colorTriggerBgColor>
									<regexCodeList>
										<string>^You are eluding your opponents' blows.$</string>
									</regexCodeList>
									<regexCodePropertyList>
										<integer>1</integer>
									</regexCodePropertyList>
								</Trigger>
								<Trigger isActive="yes" isFolder="no" isTempTrigger="no" isMultiline="no" isPerlSlashGOption="no" isColorizerTrigger="no" isFilterTrigger="no" isSoundTrigger="no" isColorTrigger="no" isColorTriggerFg="no" isColorTriggerBg="no">
									<name>Lifevision</name>
									<script>snd.def_def("lifevision")</script>
									<triggerType>0</triggerType>
									<conditonLineDelta>0</conditonLineDelta>
									<mStayOpen>0</mStayOpen>
									<mCommand></mCommand>
									<packageName></packageName>
									<mFgColor>#ff0000</mFgColor>
									<mBgColor>#ffff00</mBgColor>
									<mSoundFile></mSoundFile>
									<colorTriggerFgColor>#000000</colorTriggerFgColor>
									<colorTriggerBgColor>#000000</colorTriggerBgColor>
									<regexCodeList>
										<string>^You have enhanced your vision to be able to see traces of lifeforce.$</string>
									</regexCodeList>
									<regexCodePropertyList>
										<integer>1</integer>
									</regexCodePropertyList>
								</Trigger>
								<Trigger isActive="yes" isFolder="no" isTempTrigger="no" isMultiline="no" isPerlSlashGOption="no" isColorizerTrigger="no" isFilterTrigger="no" isSoundTrigger="no" isColorTrigger="no" isColorTriggerFg="no" isColorTriggerBg="no">
									<name>lifescent</name>
									<script>snd.def_def("lifescent")</script>
									<triggerType>0</triggerType>
									<conditonLineDelta>0</conditonLineDelta>
									<mStayOpen>0</mStayOpen>
									<mCommand></mCommand>
									<packageName></packageName>
									<mFgColor>#ff0000</mFgColor>
									<mBgColor>#ffff00</mBgColor>
									<mSoundFile></mSoundFile>
									<colorTriggerFgColor>#000000</colorTriggerFgColor>
									<colorTriggerBgColor>#000000</colorTriggerBgColor>
									<regexCodeList>
										<string>^You detect the movements of nearby mortals.$</string>
									</regexCodeList>
									<regexCodePropertyList>
										<integer>1</integer>
									</regexCodePropertyList>
								</Trigger>
								<Trigger isActive="yes" isFolder="no" isTempTrigger="no" isMultiline="no" isPerlSlashGOption="no" isColorizerTrigger="no" isFilterTrigger="no" isSoundTrigger="no" isColorTrigger="no" isColorTriggerFg="no" isColorTriggerBg="no">
									<name>Prae Warding</name>
									<script>snd.def_def("warding")</script>
									<triggerType>0</triggerType>
									<conditonLineDelta>0</conditonLineDelta>
									<mStayOpen>0</mStayOpen>
									<mCommand></mCommand>
									<packageName></packageName>
									<mFgColor>#ff0000</mFgColor>
									<mBgColor>#ffff00</mBgColor>
									<mSoundFile></mSoundFile>
									<colorTriggerFgColor>#000000</colorTriggerFgColor>
									<colorTriggerBgColor>#000000</colorTriggerBgColor>
									<regexCodeList>
										<string>^Your body is steeled against magical energies.$</string>
									</regexCodeList>
									<regexCodePropertyList>
										<integer>1</integer>
									</regexCodePropertyList>
								</Trigger>
								<Trigger isActive="yes" isFolder="no" isTempTrigger="no" isMultiline="no" isPerlSlashGOption="no" isColorizerTrigger="no" isFilterTrigger="no" isSoundTrigger="no" isColorTrigger="no" isColorTriggerFg="no" isColorTriggerBg="no">
									<name>Concentrateblood</name>
									<script>snd.def_def("concentration")</script>
									<triggerType>0</triggerType>
									<conditonLineDelta>0</conditonLineDelta>
									<mStayOpen>0</mStayOpen>
									<mCommand></mCommand>
									<packageName></packageName>
									<mFgColor>#ff0000</mFgColor>
									<mBgColor>#ffff00</mBgColor>
									<mSoundFile></mSoundFile>
									<colorTriggerFgColor>#000000</colorTriggerFgColor>
									<colorTriggerBgColor>#000000</colorTriggerBgColor>
									<regexCodeList>
										<string>^Your blood is concentrated.$</string>
									</regexCodeList>
									<regexCodePropertyList>
										<integer>1</integer>
									</regexCodePropertyList>
								</Trigger>
								<Trigger isActive="yes" isFolder="no" isTempTrigger="no" isMultiline="no" isPerlSlashGOption="no" isColorizerTrigger="no" isFilterTrigger="no" isSoundTrigger="no" isColorTrigger="no" isColorTriggerFg="no" isColorTriggerBg="no">
									<name>Celerity</name>
									<script>snd.def_def("celerity")</script>
									<triggerType>0</triggerType>
									<conditonLineDelta>0</conditonLineDelta>
									<mStayOpen>0</mStayOpen>
									<mCommand></mCommand>
									<packageName></packageName>
									<mFgColor>#ff0000</mFgColor>
									<mBgColor>#ffff00</mBgColor>
									<mSoundFile></mSoundFile>
									<colorTriggerFgColor>#000000</colorTriggerFgColor>
									<colorTriggerBgColor>#000000</colorTriggerBgColor>
									<regexCodeList>
										<string>^Your movements are supernaturally fast.$</string>
									</regexCodeList>
									<regexCodePropertyList>
										<integer>1</integer>
									</regexCodePropertyList>
								</Trigger>
								<Trigger isActive="yes" isFolder="no" isTempTrigger="no" isMultiline="no" isPerlSlashGOption="no" isColorizerTrigger="no" isFilterTrigger="no" isSoundTrigger="no" isColorTrigger="no" isColorTriggerFg="no" isColorTriggerBg="no">
									<name>Veil</name>
									<script>snd.def_def("veil")</script>
									<triggerType>0</triggerType>
									<conditonLineDelta>0</conditonLineDelta>
									<mStayOpen>0</mStayOpen>
									<mCommand></mCommand>
									<packageName></packageName>
									<mFgColor>#ff0000</mFgColor>
									<mBgColor>#ffff00</mBgColor>
									<mSoundFile></mSoundFile>
									<colorTriggerFgColor>#000000</colorTriggerFgColor>
									<colorTriggerBgColor>#000000</colorTriggerBgColor>
									<regexCodeList>
										<string>^You are veiled.$</string>
									</regexCodeList>
									<regexCodePropertyList>
										<integer>1</integer>
									</regexCodePropertyList>
								</Trigger>
								<Trigger isActive="yes" isFolder="no" isTempTrigger="no" isMultiline="no" isPerlSlashGOption="no" isColorizerTrigger="no" isFilterTrigger="no" isSoundTrigger="no" isColorTrigger="no" isColorTriggerFg="no" isColorTriggerBg="no">
									<name>gravechill</name>
									<script>snd.def_def("gravechill")</script>
									<triggerType>0</triggerType>
									<conditonLineDelta>0</conditonLineDelta>
									<mStayOpen>0</mStayOpen>
									<mCommand></mCommand>
									<packageName></packageName>
									<mFgColor>#ff0000</mFgColor>
									<mBgColor>#ffff00</mBgColor>
									<mSoundFile></mSoundFile>
									<colorTriggerFgColor>#000000</colorTriggerFgColor>
									<colorTriggerBgColor>#000000</colorTriggerBgColor>
									<regexCodeList>
										<string>The cold of the grave has filled your body.</string>
									</regexCodeList>
									<regexCodePropertyList>
										<integer>3</integer>
									</regexCodePropertyList>
								</Trigger>
								<Trigger isActive="yes" isFolder="no" isTempTrigger="no" isMultiline="no" isPerlSlashGOption="no" isColorizerTrigger="no" isFilterTrigger="no" isSoundTrigger="no" isColorTrigger="no" isColorTriggerFg="no" isColorTriggerBg="no">
									<name>devil</name>
									<script>snd.def_def("devilpact")</script>
									<triggerType>0</triggerType>
									<conditonLineDelta>0</conditonLineDelta>
									<mStayOpen>0</mStayOpen>
									<mCommand></mCommand>
									<packageName></packageName>
									<mFgColor>#ff0000</mFgColor>
									<mBgColor>#ffff00</mBgColor>
									<mSoundFile></mSoundFile>
									<colorTriggerFgColor>#000000</colorTriggerFgColor>
									<colorTriggerBgColor>#000000</colorTriggerBgColor>
									<regexCodeList>
										<string>You have made a deal with the Devil.</string>
									</regexCodeList>
									<regexCodePropertyList>
										<integer>3</integer>
									</regexCodePropertyList>
								</Trigger>
								<Trigger isActive="yes" isFolder="no" isTempTrigger="no" isMultiline="no" isPerlSlashGOption="no" isColorizerTrigger="no" isFilterTrigger="no" isSoundTrigger="no" isColorTrigger="no" isColorTriggerFg="no" isColorTriggerBg="no">
									<name>hierophant</name>
									<script>snd.def_def("hierophant")</script>
									<triggerType>0</triggerType>
									<conditonLineDelta>0</conditonLineDelta>
									<mStayOpen>0</mStayOpen>
									<mCommand></mCommand>
									<packageName></packageName>
									<mFgColor>#ff0000</mFgColor>
									<mBgColor>#ffff00</mBgColor>
									<mSoundFile></mSoundFile>
									<colorTriggerFgColor>#000000</colorTriggerFgColor>
									<colorTriggerBgColor>#000000</colorTriggerBgColor>
									<regexCodeList>
										<string>You are protected by the intimidating presence of the Hierophant.</string>
									</regexCodeList>
									<regexCodePropertyList>
										<integer>3</integer>
									</regexCodePropertyList>
								</Trigger>
								<Trigger isActive="yes" isFolder="no" isTempTrigger="no" isMultiline="no" isPerlSlashGOption="no" isColorizerTrigger="no" isFilterTrigger="no" isSoundTrigger="no" isColorTrigger="no" isColorTriggerFg="no" isColorTriggerBg="no">
									<name>chariot</name>
									<script>snd.def_def("chariot")</script>
									<triggerType>0</triggerType>
									<conditonLineDelta>0</conditonLineDelta>
									<mStayOpen>0</mStayOpen>
									<mCommand></mCommand>
									<packageName></packageName>
									<mFgColor>#ff0000</mFgColor>
									<mBgColor>#ffff00</mBgColor>
									<mSoundFile></mSoundFile>
									<colorTriggerFgColor>#000000</colorTriggerFgColor>
									<colorTriggerBgColor>#000000</colorTriggerBgColor>
									<regexCodeList>
										<string>Your speed is increased by the Chariot.</string>
									</regexCodeList>
									<regexCodePropertyList>
										<integer>3</integer>
									</regexCodePropertyList>
								</Trigger>
								<Trigger isActive="yes" isFolder="no" isTempTrigger="no" isMultiline="no" isPerlSlashGOption="no" isColorizerTrigger="no" isFilterTrigger="no" isSoundTrigger="no" isColorTrigger="no" isColorTriggerFg="no" isColorTriggerBg="no">
									<name>Spiritbond</name>
									<script>snd.def_def("spiritbond")</script>
									<triggerType>0</triggerType>
									<conditonLineDelta>0</conditonLineDelta>
									<mStayOpen>0</mStayOpen>
									<mCommand></mCommand>
									<packageName></packageName>
									<mFgColor>#ff0000</mFgColor>
									<mBgColor>#ffff00</mBgColor>
									<mSoundFile></mSoundFile>
									<colorTriggerFgColor>#000000</colorTriggerFgColor>
									<colorTriggerBgColor>#000000</colorTriggerBgColor>
									<regexCodeList>
										<string>You share a deepened bond with your familiar.</string>
									</regexCodeList>
									<regexCodePropertyList>
										<integer>3</integer>
									</regexCodePropertyList>
								</Trigger>
								<Trigger isActive="yes" isFolder="no" isTempTrigger="no" isMultiline="no" isPerlSlashGOption="no" isColorizerTrigger="no" isFilterTrigger="no" isSoundTrigger="no" isColorTrigger="no" isColorTriggerFg="no" isColorTriggerBg="no">
									<name>protection</name>
									<script>snd.def_def("protection")</script>
									<triggerType>0</triggerType>
									<conditonLineDelta>0</conditonLineDelta>
									<mStayOpen>0</mStayOpen>
									<mCommand></mCommand>
									<packageName></packageName>
									<mFgColor>#ff0000</mFgColor>
									<mBgColor>#ffff00</mBgColor>
									<mSoundFile></mSoundFile>
									<colorTriggerFgColor>#000000</colorTriggerFgColor>
									<colorTriggerBgColor>#000000</colorTriggerBgColor>
									<regexCodeList>
										<string>^A protective rune guards you from harm.$</string>
									</regexCodeList>
									<regexCodePropertyList>
										<integer>1</integer>
									</regexCodePropertyList>
								</Trigger>
								<Trigger isActive="yes" isFolder="no" isTempTrigger="no" isMultiline="no" isPerlSlashGOption="no" isColorizerTrigger="no" isFilterTrigger="no" isSoundTrigger="no" isColorTrigger="no" isColorTriggerFg="no" isColorTriggerBg="no">
									<name>Spirit sight</name>
									<script>snd.def_def("shaman_spiritsight")</script>
									<triggerType>0</triggerType>
									<conditonLineDelta>0</conditonLineDelta>
									<mStayOpen>0</mStayOpen>
									<mCommand></mCommand>
									<packageName></packageName>
									<mFgColor>#ff0000</mFgColor>
									<mBgColor>#ffff00</mBgColor>
									<mSoundFile></mSoundFile>
									<colorTriggerFgColor>#000000</colorTriggerFgColor>
									<colorTriggerBgColor>#000000</colorTriggerBgColor>
									<regexCodeList>
										<string>^You are discerning the spirit of others.$</string>
									</regexCodeList>
									<regexCodePropertyList>
										<integer>1</integer>
									</regexCodePropertyList>
								</Trigger>
								<Trigger isActive="yes" isFolder="no" isTempTrigger="no" isMultiline="no" isPerlSlashGOption="no" isColorizerTrigger="no" isFilterTrigger="no" isSoundTrigger="no" isColorTrigger="no" isColorTriggerFg="no" isColorTriggerBg="no">
									<name>lifebloom</name>
									<script>snd.def_def("lifebloom")</script>
									<triggerType>0</triggerType>
									<conditonLineDelta>0</conditonLineDelta>
									<mStayOpen>0</mStayOpen>
									<mCommand></mCommand>
									<packageName></packageName>
									<mFgColor>#ff0000</mFgColor>
									<mBgColor>#ffff00</mBgColor>
									<mSoundFile></mSoundFile>
									<colorTriggerFgColor>#000000</colorTriggerFgColor>
									<colorTriggerBgColor>#000000</colorTriggerBgColor>
									<regexCodeList>
										<string>^You have been gifted with the bloom of life.$</string>
									</regexCodeList>
									<regexCodePropertyList>
										<integer>1</integer>
									</regexCodePropertyList>
								</Trigger>
								<Trigger isActive="yes" isFolder="no" isTempTrigger="no" isMultiline="no" isPerlSlashGOption="no" isColorizerTrigger="no" isFilterTrigger="no" isSoundTrigger="no" isColorTrigger="no" isColorTriggerFg="no" isColorTriggerBg="no">
									<name>Shaman warding</name>
									<script>snd.def_def("shaman_warding")</script>
									<triggerType>0</triggerType>
									<conditonLineDelta>0</conditonLineDelta>
									<mStayOpen>0</mStayOpen>
									<mCommand></mCommand>
									<packageName></packageName>
									<mFgColor>#ff0000</mFgColor>
									<mBgColor>#ffff00</mBgColor>
									<mSoundFile></mSoundFile>
									<colorTriggerFgColor>#000000</colorTriggerFgColor>
									<colorTriggerBgColor>#000000</colorTriggerBgColor>
									<regexCodeList>
										<string>^A ball of lightning wards your limbs.$</string>
									</regexCodeList>
									<regexCodePropertyList>
										<integer>1</integer>
									</regexCodePropertyList>
								</Trigger>
								<Trigger isActive="yes" isFolder="no" isTempTrigger="no" isMultiline="no" isPerlSlashGOption="no" isColorizerTrigger="no" isFilterTrigger="no" isSoundTrigger="no" isColorTrigger="no" isColorTriggerFg="no" isColorTriggerBg="no">
									<name>Focalmark</name>
									<script>snd.def_def("focalmark")</script>
									<triggerType>0</triggerType>
									<conditonLineDelta>0</conditonLineDelta>
									<mStayOpen>0</mStayOpen>
									<mCommand></mCommand>
									<packageName></packageName>
									<mFgColor>#ff0000</mFgColor>
									<mBgColor>#ffff00</mBgColor>
									<mSoundFile></mSoundFile>
									<colorTriggerFgColor>#000000</colorTriggerFgColor>
									<colorTriggerBgColor>#000000</colorTriggerBgColor>
									<regexCodeList>
										<string>Your arms burn with the lines of your spirit focus.</string>
									</regexCodeList>
									<regexCodePropertyList>
										<integer>3</integer>
									</regexCodePropertyList>
								</Trigger>
								<Trigger isActive="yes" isFolder="no" isTempTrigger="no" isMultiline="no" isPerlSlashGOption="no" isColorizerTrigger="no" isFilterTrigger="no" isSoundTrigger="no" isColorTrigger="no" isColorTriggerFg="no" isColorTriggerBg="no">
									<name>Zealot tempered</name>
									<script>snd.def_def("tempered_body")</script>
									<triggerType>0</triggerType>
									<conditonLineDelta>0</conditonLineDelta>
									<mStayOpen>0</mStayOpen>
									<mCommand></mCommand>
									<packageName></packageName>
									<mFgColor>#ff0000</mFgColor>
									<mBgColor>#ffff00</mBgColor>
									<mSoundFile></mSoundFile>
									<colorTriggerFgColor>#000000</colorTriggerFgColor>
									<colorTriggerBgColor>#000000</colorTriggerBgColor>
									<regexCodeList>
										<string>Your body has been tempered by the strength of your Inner Fire.</string>
									</regexCodeList>
									<regexCodePropertyList>
										<integer>3</integer>
									</regexCodePropertyList>
								</Trigger>
								<Trigger isActive="yes" isFolder="no" isTempTrigger="no" isMultiline="no" isPerlSlashGOption="no" isColorizerTrigger="no" isFilterTrigger="no" isSoundTrigger="no" isColorTrigger="no" isColorTriggerFg="no" isColorTriggerBg="no">
									<name>Haste</name>
									<script>snd.def_def("haste")</script>
									<triggerType>0</triggerType>
									<conditonLineDelta>0</conditonLineDelta>
									<mStayOpen>0</mStayOpen>
									<mCommand></mCommand>
									<packageName></packageName>
									<mFgColor>#ff0000</mFgColor>
									<mBgColor>#ffff00</mBgColor>
									<mSoundFile></mSoundFile>
									<colorTriggerFgColor>#000000</colorTriggerFgColor>
									<colorTriggerBgColor>#000000</colorTriggerBgColor>
									<regexCodeList>
										<string>You move with extraordinary haste.</string>
									</regexCodeList>
									<regexCodePropertyList>
										<integer>3</integer>
									</regexCodePropertyList>
								</Trigger>
								<Trigger isActive="yes" isFolder="no" isTempTrigger="no" isMultiline="no" isPerlSlashGOption="no" isColorizerTrigger="no" isFilterTrigger="no" isSoundTrigger="no" isColorTrigger="no" isColorTriggerFg="no" isColorTriggerBg="no">
									<name>Swagger</name>
									<script>snd.def_def("swagger")</script>
									<triggerType>0</triggerType>
									<conditonLineDelta>0</conditonLineDelta>
									<mStayOpen>0</mStayOpen>
									<mCommand></mCommand>
									<packageName></packageName>
									<mFgColor>#ff0000</mFgColor>
									<mBgColor>#ffff00</mBgColor>
									<mSoundFile></mSoundFile>
									<colorTriggerFgColor>#000000</colorTriggerFgColor>
									<colorTriggerBgColor>#000000</colorTriggerBgColor>
									<regexCodeList>
										<string>You possess mighty swagger in your actions.</string>
									</regexCodeList>
									<regexCodePropertyList>
										<integer>3</integer>
									</regexCodePropertyList>
								</Trigger>
								<Trigger isActive="yes" isFolder="no" isTempTrigger="no" isMultiline="no" isPerlSlashGOption="no" isColorizerTrigger="no" isFilterTrigger="no" isSoundTrigger="no" isColorTrigger="no" isColorTriggerFg="no" isColorTriggerBg="no">
									<name>disunion</name>
									<script>snd.def_def("disunion")</script>
									<triggerType>0</triggerType>
									<conditonLineDelta>0</conditonLineDelta>
									<mStayOpen>0</mStayOpen>
									<mCommand></mCommand>
									<packageName></packageName>
									<mFgColor>#ff0000</mFgColor>
									<mBgColor>#ffff00</mBgColor>
									<mSoundFile></mSoundFile>
									<colorTriggerFgColor>#000000</colorTriggerFgColor>
									<colorTriggerBgColor>#000000</colorTriggerBgColor>
									<regexCodeList>
										<string>You have splintered your spirit into multiple.</string>
									</regexCodeList>
									<regexCodePropertyList>
										<integer>3</integer>
									</regexCodePropertyList>
								</Trigger>
								<Trigger isActive="yes" isFolder="no" isTempTrigger="no" isMultiline="no" isPerlSlashGOption="no" isColorizerTrigger="no" isFilterTrigger="no" isSoundTrigger="no" isColorTrigger="no" isColorTriggerFg="no" isColorTriggerBg="no">
									<name>deflection</name>
									<script>snd.def_def("deflection")</script>
									<triggerType>0</triggerType>
									<conditonLineDelta>0</conditonLineDelta>
									<mStayOpen>0</mStayOpen>
									<mCommand></mCommand>
									<packageName></packageName>
									<mFgColor>#ff0000</mFgColor>
									<mBgColor>#ffff00</mBgColor>
									<mSoundFile></mSoundFile>
									<colorTriggerFgColor>#000000</colorTriggerFgColor>
									<colorTriggerBgColor>#000000</colorTriggerBgColor>
									<regexCodeList>
										<string>You are trying to deflect incoming arrows.</string>
									</regexCodeList>
									<regexCodePropertyList>
										<integer>3</integer>
									</regexCodePropertyList>
								</Trigger>
								<Trigger isActive="yes" isFolder="no" isTempTrigger="no" isMultiline="no" isPerlSlashGOption="no" isColorizerTrigger="no" isFilterTrigger="no" isSoundTrigger="no" isColorTrigger="no" isColorTriggerFg="no" isColorTriggerBg="no">
									<name>rebuke</name>
									<script>snd.def_def("rebuke")</script>
									<triggerType>0</triggerType>
									<conditonLineDelta>0</conditonLineDelta>
									<mStayOpen>0</mStayOpen>
									<mCommand></mCommand>
									<packageName></packageName>
									<mFgColor>#ff0000</mFgColor>
									<mBgColor>#ffff00</mBgColor>
									<mSoundFile></mSoundFile>
									<colorTriggerFgColor>#000000</colorTriggerFgColor>
									<colorTriggerBgColor>#000000</colorTriggerBgColor>
									<regexCodeList>
										<string>You are rebuking those who would harm your appendages.</string>
									</regexCodeList>
									<regexCodePropertyList>
										<integer>3</integer>
									</regexCodePropertyList>
								</Trigger>
								<Trigger isActive="yes" isFolder="no" isTempTrigger="no" isMultiline="no" isPerlSlashGOption="no" isColorizerTrigger="no" isFilterTrigger="no" isSoundTrigger="no" isColorTrigger="no" isColorTriggerFg="no" isColorTriggerBg="no">
									<name>suncloak</name>
									<script>snd.def_def("suncloak")</script>
									<triggerType>0</triggerType>
									<conditonLineDelta>0</conditonLineDelta>
									<mStayOpen>0</mStayOpen>
									<mCommand></mCommand>
									<packageName></packageName>
									<mFgColor>#ff0000</mFgColor>
									<mBgColor>#ffff00</mBgColor>
									<mSoundFile></mSoundFile>
									<colorTriggerFgColor>#000000</colorTriggerFgColor>
									<colorTriggerBgColor>#000000</colorTriggerBgColor>
									<regexCodeList>
										<string>You are obscured by a cloak of light.</string>
									</regexCodeList>
									<regexCodePropertyList>
										<integer>3</integer>
									</regexCodePropertyList>
								</Trigger>
								<Trigger isActive="yes" isFolder="no" isTempTrigger="no" isMultiline="no" isPerlSlashGOption="no" isColorizerTrigger="no" isFilterTrigger="no" isSoundTrigger="no" isColorTrigger="no" isColorTriggerFg="no" isColorTriggerBg="no">
									<name>litheness</name>
									<script>snd.def_def("litheness")</script>
									<triggerType>0</triggerType>
									<conditonLineDelta>0</conditonLineDelta>
									<mStayOpen>0</mStayOpen>
									<mCommand></mCommand>
									<packageName></packageName>
									<mFgColor>#ff0000</mFgColor>
									<mBgColor>#ffff00</mBgColor>
									<mSoundFile></mSoundFile>
									<colorTriggerFgColor>#000000</colorTriggerFgColor>
									<colorTriggerBgColor>#000000</colorTriggerBgColor>
									<regexCodeList>
										<string>You are lithe and nimble, ready to adapt.</string>
									</regexCodeList>
									<regexCodePropertyList>
										<integer>3</integer>
									</regexCodePropertyList>
								</Trigger>
								<Trigger isActive="yes" isFolder="no" isTempTrigger="no" isMultiline="no" isPerlSlashGOption="no" isColorizerTrigger="no" isFilterTrigger="no" isSoundTrigger="no" isColorTrigger="no" isColorTriggerFg="no" isColorTriggerBg="no">
									<name>bending</name>
									<script>snd.def_def("bending")</script>
									<triggerType>0</triggerType>
									<conditonLineDelta>0</conditonLineDelta>
									<mStayOpen>0</mStayOpen>
									<mCommand></mCommand>
									<packageName></packageName>
									<mFgColor>#ff0000</mFgColor>
									<mBgColor>#ffff00</mBgColor>
									<mSoundFile></mSoundFile>
									<colorTriggerFgColor>#000000</colorTriggerFgColor>
									<colorTriggerBgColor>#000000</colorTriggerBgColor>
									<regexCodeList>
										<string>You are bending ranged magical.</string>
									</regexCodeList>
									<regexCodePropertyList>
										<integer>3</integer>
									</regexCodePropertyList>
								</Trigger>
								<Trigger isActive="yes" isFolder="no" isTempTrigger="no" isMultiline="no" isPerlSlashGOption="no" isColorizerTrigger="no" isFilterTrigger="no" isSoundTrigger="no" isColorTrigger="no" isColorTriggerFg="no" isColorTriggerBg="no">
									<name>mindspark</name>
									<script>snd.def_def("mindspark")</script>
									<triggerType>0</triggerType>
									<conditonLineDelta>0</conditonLineDelta>
									<mStayOpen>0</mStayOpen>
									<mCommand></mCommand>
									<packageName></packageName>
									<mFgColor>#ff0000</mFgColor>
									<mBgColor>#ffff00</mBgColor>
									<mSoundFile></mSoundFile>
									<colorTriggerFgColor>#000000</colorTriggerFgColor>
									<colorTriggerBgColor>#000000</colorTriggerBgColor>
									<regexCodeList>
										<string>Your mind is sparked with new found curiosity.</string>
									</regexCodeList>
									<regexCodePropertyList>
										<integer>3</integer>
									</regexCodePropertyList>
								</Trigger>
								<Trigger isActive="yes" isFolder="no" isTempTrigger="no" isMultiline="no" isPerlSlashGOption="no" isColorizerTrigger="no" isFilterTrigger="no" isSoundTrigger="no" isColorTrigger="no" isColorTriggerFg="no" isColorTriggerBg="no">
									<name>Potence</name>
									<script>local potence_check = {
	keen = "intelligence",
	resilient = "constitution",
	agile = "dexterity",
	strong = "strength",
}

snd.def_def("potence_"..potence_check[matches[2]])
</script>
									<triggerType>0</triggerType>
									<conditonLineDelta>0</conditonLineDelta>
									<mStayOpen>0</mStayOpen>
									<mCommand></mCommand>
									<packageName></packageName>
									<mFgColor>#ff0000</mFgColor>
									<mBgColor>#ffff00</mBgColor>
									<mSoundFile></mSoundFile>
									<colorTriggerFgColor>#000000</colorTriggerFgColor>
									<colorTriggerBgColor>#000000</colorTriggerBgColor>
									<regexCodeList>
										<string>^You are unnaturally (\w+).$</string>
									</regexCodeList>
									<regexCodePropertyList>
										<integer>1</integer>
									</regexCodePropertyList>
								</Trigger>
								<Trigger isActive="yes" isFolder="no" isTempTrigger="no" isMultiline="no" isPerlSlashGOption="no" isColorizerTrigger="no" isFilterTrigger="no" isSoundTrigger="no" isColorTrigger="no" isColorTriggerFg="no" isColorTriggerBg="no">
									<name>Herculean rage</name>
									<script>snd.def_def("herculeanrage")</script>
									<triggerType>0</triggerType>
									<conditonLineDelta>0</conditonLineDelta>
									<mStayOpen>0</mStayOpen>
									<mCommand></mCommand>
									<packageName></packageName>
									<mFgColor>#ff0000</mFgColor>
									<mBgColor>#ffff00</mBgColor>
									<mSoundFile></mSoundFile>
									<colorTriggerFgColor>#000000</colorTriggerFgColor>
									<colorTriggerBgColor>#000000</colorTriggerBgColor>
									<regexCodeList>
										<string>^You have flown into a battle rage.$</string>
									</regexCodeList>
									<regexCodePropertyList>
										<integer>1</integer>
									</regexCodePropertyList>
								</Trigger>
								<Trigger isActive="yes" isFolder="no" isTempTrigger="no" isMultiline="no" isPerlSlashGOption="no" isColorizerTrigger="no" isFilterTrigger="no" isSoundTrigger="no" isColorTrigger="no" isColorTriggerFg="no" isColorTriggerBg="no">
									<name>sagacity</name>
									<script>snd.def_def("sagacity")</script>
									<triggerType>0</triggerType>
									<conditonLineDelta>0</conditonLineDelta>
									<mStayOpen>0</mStayOpen>
									<mCommand></mCommand>
									<packageName></packageName>
									<mFgColor>#ff0000</mFgColor>
									<mBgColor>#ffff00</mBgColor>
									<mSoundFile></mSoundFile>
									<colorTriggerFgColor>#000000</colorTriggerFgColor>
									<colorTriggerBgColor>#000000</colorTriggerBgColor>
									<regexCodeList>
										<string>^Your sagacious mind empowers the moon tattoo.$</string>
									</regexCodeList>
									<regexCodePropertyList>
										<integer>1</integer>
									</regexCodePropertyList>
								</Trigger>
								<Trigger isActive="yes" isFolder="no" isTempTrigger="no" isMultiline="no" isPerlSlashGOption="no" isColorizerTrigger="no" isFilterTrigger="no" isSoundTrigger="no" isColorTrigger="no" isColorTriggerFg="no" isColorTriggerBg="no">
									<name>missiles</name>
									<script>snd.def_def("missiles")</script>
									<triggerType>0</triggerType>
									<conditonLineDelta>0</conditonLineDelta>
									<mStayOpen>0</mStayOpen>
									<mCommand></mCommand>
									<packageName></packageName>
									<mFgColor>#ff0000</mFgColor>
									<mBgColor>#ffff00</mBgColor>
									<mSoundFile></mSoundFile>
									<colorTriggerFgColor>#000000</colorTriggerFgColor>
									<colorTriggerBgColor>#000000</colorTriggerBgColor>
									<regexCodeList>
										<string>^You are preparing arcane missiles.$</string>
									</regexCodeList>
									<regexCodePropertyList>
										<integer>1</integer>
									</regexCodePropertyList>
								</Trigger>
								<Trigger isActive="yes" isFolder="no" isTempTrigger="no" isMultiline="no" isPerlSlashGOption="no" isColorizerTrigger="no" isFilterTrigger="no" isSoundTrigger="no" isColorTrigger="no" isColorTriggerFg="no" isColorTriggerBg="no">
									<name>arcaneskin</name>
									<script>snd.def_def("arcaneskin")</script>
									<triggerType>0</triggerType>
									<conditonLineDelta>0</conditonLineDelta>
									<mStayOpen>0</mStayOpen>
									<mCommand></mCommand>
									<packageName></packageName>
									<mFgColor>#ff0000</mFgColor>
									<mBgColor>#ffff00</mBgColor>
									<mSoundFile></mSoundFile>
									<colorTriggerFgColor>#000000</colorTriggerFgColor>
									<colorTriggerBgColor>#000000</colorTriggerBgColor>
									<regexCodeList>
										<string>^You are protected by a thin layer of magic.$</string>
									</regexCodeList>
									<regexCodePropertyList>
										<integer>1</integer>
									</regexCodePropertyList>
								</Trigger>
								<Trigger isActive="yes" isFolder="no" isTempTrigger="no" isMultiline="no" isPerlSlashGOption="no" isColorizerTrigger="no" isFilterTrigger="no" isSoundTrigger="no" isColorTrigger="no" isColorTriggerFg="no" isColorTriggerBg="no">
									<name>countercurrent</name>
									<script>snd.def_def("countercurrent")</script>
									<triggerType>0</triggerType>
									<conditonLineDelta>0</conditonLineDelta>
									<mStayOpen>0</mStayOpen>
									<mCommand></mCommand>
									<packageName></packageName>
									<mFgColor>#ff0000</mFgColor>
									<mBgColor>#ffff00</mBgColor>
									<mSoundFile></mSoundFile>
									<colorTriggerFgColor>#000000</colorTriggerFgColor>
									<colorTriggerBgColor>#000000</colorTriggerBgColor>
									<regexCodeList>
										<string>^You have the countercurrent defence.$</string>
									</regexCodeList>
									<regexCodePropertyList>
										<integer>1</integer>
									</regexCodePropertyList>
								</Trigger>
								<Trigger isActive="yes" isFolder="no" isTempTrigger="no" isMultiline="no" isPerlSlashGOption="no" isColorizerTrigger="no" isFilterTrigger="no" isSoundTrigger="no" isColorTrigger="no" isColorTriggerFg="no" isColorTriggerBg="no">
									<name>Blurring</name>
									<script>snd.def_def("blurring")</script>
									<triggerType>0</triggerType>
									<conditonLineDelta>0</conditonLineDelta>
									<mStayOpen>0</mStayOpen>
									<mCommand></mCommand>
									<packageName></packageName>
									<mFgColor>#ff0000</mFgColor>
									<mBgColor>#ffff00</mBgColor>
									<mSoundFile></mSoundFile>
									<colorTriggerFgColor>#000000</colorTriggerFgColor>
									<colorTriggerBgColor>#000000</colorTriggerBgColor>
									<regexCodeList>
										<string>^You are blurring the edges of your form.$</string>
									</regexCodeList>
									<regexCodePropertyList>
										<integer>1</integer>
									</regexCodePropertyList>
								</Trigger>
								<Trigger isActive="yes" isFolder="no" isTempTrigger="no" isMultiline="no" isPerlSlashGOption="no" isColorizerTrigger="no" isFilterTrigger="no" isSoundTrigger="no" isColorTrigger="no" isColorTriggerFg="no" isColorTriggerBg="no">
									<name>Mantle</name>
									<script>snd.def_def("shadow_mantle")</script>
									<triggerType>0</triggerType>
									<conditonLineDelta>0</conditonLineDelta>
									<mStayOpen>0</mStayOpen>
									<mCommand></mCommand>
									<packageName></packageName>
									<mFgColor>#ff0000</mFgColor>
									<mBgColor>#ffff00</mBgColor>
									<mSoundFile></mSoundFile>
									<colorTriggerFgColor>#000000</colorTriggerFgColor>
									<colorTriggerBgColor>#000000</colorTriggerBgColor>
									<regexCodeList>
										<string>^You have the shadow_mantle defence.$</string>
									</regexCodeList>
									<regexCodePropertyList>
										<integer>1</integer>
									</regexCodePropertyList>
								</Trigger>
								<Trigger isActive="yes" isFolder="no" isTempTrigger="no" isMultiline="no" isPerlSlashGOption="no" isColorizerTrigger="no" isFilterTrigger="no" isSoundTrigger="no" isColorTrigger="no" isColorTriggerFg="no" isColorTriggerBg="no">
									<name>Sorcery Rigor</name>
									<script>snd.def_def("rigor")</script>
									<triggerType>0</triggerType>
									<conditonLineDelta>0</conditonLineDelta>
									<mStayOpen>0</mStayOpen>
									<mCommand></mCommand>
									<packageName></packageName>
									<mFgColor>#ff0000</mFgColor>
									<mBgColor>#ffff00</mBgColor>
									<mSoundFile></mSoundFile>
									<colorTriggerFgColor>#000000</colorTriggerFgColor>
									<colorTriggerBgColor>#000000</colorTriggerBgColor>
									<regexCodeList>
										<string>^You are focusing on precise spellcasting.$</string>
									</regexCodeList>
									<regexCodePropertyList>
										<integer>1</integer>
									</regexCodePropertyList>
								</Trigger>
								<Trigger isActive="yes" isFolder="no" isTempTrigger="no" isMultiline="no" isPerlSlashGOption="no" isColorizerTrigger="no" isFilterTrigger="no" isSoundTrigger="no" isColorTrigger="no" isColorTriggerFg="no" isColorTriggerBg="no">
									<name>Engulf</name>
									<script>snd.def_def("shadow_engulf")</script>
									<triggerType>0</triggerType>
									<conditonLineDelta>0</conditonLineDelta>
									<mStayOpen>0</mStayOpen>
									<mCommand></mCommand>
									<packageName></packageName>
									<mFgColor>#ff0000</mFgColor>
									<mBgColor>#ffff00</mBgColor>
									<mSoundFile></mSoundFile>
									<colorTriggerFgColor>#000000</colorTriggerFgColor>
									<colorTriggerBgColor>#000000</colorTriggerBgColor>
									<regexCodeList>
										<string>^You have the shadow_engulf defence.$</string>
									</regexCodeList>
									<regexCodePropertyList>
										<integer>1</integer>
									</regexCodePropertyList>
								</Trigger>
								<Trigger isActive="yes" isFolder="no" isTempTrigger="no" isMultiline="no" isPerlSlashGOption="no" isColorizerTrigger="no" isFilterTrigger="no" isSoundTrigger="no" isColorTrigger="no" isColorTriggerFg="no" isColorTriggerBg="no">
									<name>Discharge</name>
									<script>snd.def_def("discharge")</script>
									<triggerType>0</triggerType>
									<conditonLineDelta>0</conditonLineDelta>
									<mStayOpen>0</mStayOpen>
									<mCommand></mCommand>
									<packageName></packageName>
									<mFgColor>#ff0000</mFgColor>
									<mBgColor>#ffff00</mBgColor>
									<mSoundFile></mSoundFile>
									<colorTriggerFgColor>#000000</colorTriggerFgColor>
									<colorTriggerBgColor>#000000</colorTriggerBgColor>
									<regexCodeList>
										<string>You are prepared to discharge energy.</string>
									</regexCodeList>
									<regexCodePropertyList>
										<integer>3</integer>
									</regexCodePropertyList>
								</Trigger>
								<Trigger isActive="yes" isFolder="no" isTempTrigger="no" isMultiline="no" isPerlSlashGOption="no" isColorizerTrigger="no" isFilterTrigger="no" isSoundTrigger="no" isColorTrigger="no" isColorTriggerFg="no" isColorTriggerBg="no">
									<name>nexus</name>
									<script>snd.def_def("nexus")</script>
									<triggerType>0</triggerType>
									<conditonLineDelta>0</conditonLineDelta>
									<mStayOpen>0</mStayOpen>
									<mCommand></mCommand>
									<packageName></packageName>
									<mFgColor>#ff0000</mFgColor>
									<mBgColor>#ffff00</mBgColor>
									<mSoundFile></mSoundFile>
									<colorTriggerFgColor>#000000</colorTriggerFgColor>
									<colorTriggerBgColor>#000000</colorTriggerBgColor>
									<regexCodeList>
										<string>You are wreathed in an aura of toxicity.</string>
									</regexCodeList>
									<regexCodePropertyList>
										<integer>3</integer>
									</regexCodePropertyList>
								</Trigger>
								<Trigger isActive="yes" isFolder="no" isTempTrigger="no" isMultiline="no" isPerlSlashGOption="no" isColorizerTrigger="no" isFilterTrigger="no" isSoundTrigger="no" isColorTrigger="no" isColorTriggerFg="no" isColorTriggerBg="no">
									<name>Zenith</name>
									<script>snd.def_def("zenith")</script>
									<triggerType>0</triggerType>
									<conditonLineDelta>0</conditonLineDelta>
									<mStayOpen>0</mStayOpen>
									<mCommand></mCommand>
									<packageName></packageName>
									<mFgColor>#ff0000</mFgColor>
									<mBgColor>#ffff00</mBgColor>
									<mSoundFile></mSoundFile>
									<colorTriggerFgColor>#000000</colorTriggerFgColor>
									<colorTriggerBgColor>#000000</colorTriggerBgColor>
									<regexCodeList>
										<string>Your fiery soul has reached its zenith of power.</string>
									</regexCodeList>
									<regexCodePropertyList>
										<integer>3</integer>
									</regexCodePropertyList>
								</Trigger>
								<Trigger isActive="yes" isFolder="no" isTempTrigger="no" isMultiline="no" isPerlSlashGOption="no" isColorizerTrigger="no" isFilterTrigger="no" isSoundTrigger="no" isColorTrigger="no" isColorTriggerFg="no" isColorTriggerBg="no">
									<name>manipulation aegis</name>
									<script>snd.def_def("manipulation_aegis")</script>
									<triggerType>0</triggerType>
									<conditonLineDelta>0</conditonLineDelta>
									<mStayOpen>0</mStayOpen>
									<mCommand></mCommand>
									<packageName></packageName>
									<mFgColor>#ff0000</mFgColor>
									<mBgColor>#ffff00</mBgColor>
									<mSoundFile></mSoundFile>
									<colorTriggerFgColor>#000000</colorTriggerFgColor>
									<colorTriggerBgColor>#000000</colorTriggerBgColor>
									<regexCodeList>
										<string>^An impermeable aegis of ley energy protects you.$</string>
									</regexCodeList>
									<regexCodePropertyList>
										<integer>1</integer>
									</regexCodePropertyList>
								</Trigger>
								<Trigger isActive="yes" isFolder="no" isTempTrigger="no" isMultiline="no" isPerlSlashGOption="no" isColorizerTrigger="no" isFilterTrigger="no" isSoundTrigger="no" isColorTrigger="no" isColorTriggerFg="no" isColorTriggerBg="no">
									<name>chameleon</name>
									<script>snd.def_def("chameleon")</script>
									<triggerType>0</triggerType>
									<conditonLineDelta>0</conditonLineDelta>
									<mStayOpen>0</mStayOpen>
									<mCommand></mCommand>
									<packageName></packageName>
									<mFgColor>#ff0000</mFgColor>
									<mBgColor>#ffff00</mBgColor>
									<mSoundFile></mSoundFile>
									<colorTriggerFgColor>#000000</colorTriggerFgColor>
									<colorTriggerBgColor>#000000</colorTriggerBgColor>
									<regexCodeList>
										<string>^You have assumed the identity of \w+.$</string>
									</regexCodeList>
									<regexCodePropertyList>
										<integer>1</integer>
									</regexCodePropertyList>
								</Trigger>
								<Trigger isActive="yes" isFolder="no" isTempTrigger="no" isMultiline="no" isPerlSlashGOption="no" isColorizerTrigger="no" isFilterTrigger="no" isSoundTrigger="no" isColorTrigger="no" isColorTriggerFg="no" isColorTriggerBg="no">
									<name>flame tattoo</name>
									<script>snd.def_def("flame_tattoo")</script>
									<triggerType>0</triggerType>
									<conditonLineDelta>0</conditonLineDelta>
									<mStayOpen>0</mStayOpen>
									<mCommand></mCommand>
									<packageName></packageName>
									<mFgColor>#ff0000</mFgColor>
									<mBgColor>#ffff00</mBgColor>
									<mSoundFile></mSoundFile>
									<colorTriggerFgColor>#000000</colorTriggerFgColor>
									<colorTriggerBgColor>#000000</colorTriggerBgColor>
									<regexCodeList>
										<string>Your flame tattoo is glowing faintly.</string>
									</regexCodeList>
									<regexCodePropertyList>
										<integer>3</integer>
									</regexCodePropertyList>
								</Trigger>
								<Trigger isActive="yes" isFolder="no" isTempTrigger="no" isMultiline="no" isPerlSlashGOption="no" isColorizerTrigger="no" isFilterTrigger="no" isSoundTrigger="no" isColorTrigger="no" isColorTriggerFg="no" isColorTriggerBg="no">
									<name>Praenomen Stalk</name>
									<script>snd.def_def("stalk")</script>
									<triggerType>0</triggerType>
									<conditonLineDelta>0</conditonLineDelta>
									<mStayOpen>0</mStayOpen>
									<mCommand></mCommand>
									<packageName></packageName>
									<mFgColor>#ff0000</mFgColor>
									<mBgColor>#ffff00</mBgColor>
									<mSoundFile></mSoundFile>
									<colorTriggerFgColor>#000000</colorTriggerFgColor>
									<colorTriggerBgColor>#000000</colorTriggerBgColor>
									<regexCodeList>
										<string>You stalk the night as a predator.</string>
									</regexCodeList>
									<regexCodePropertyList>
										<integer>1</integer>
									</regexCodePropertyList>
								</Trigger>
								<Trigger isActive="yes" isFolder="no" isTempTrigger="no" isMultiline="no" isPerlSlashGOption="no" isColorizerTrigger="no" isFilterTrigger="no" isSoundTrigger="no" isColorTrigger="no" isColorTriggerFg="no" isColorTriggerBg="no">
									<name>shield tattoo</name>
									<script>snd.def_def("shield_tattoo")</script>
									<triggerType>0</triggerType>
									<conditonLineDelta>0</conditonLineDelta>
									<mStayOpen>0</mStayOpen>
									<mCommand></mCommand>
									<packageName></packageName>
									<mFgColor>#ff0000</mFgColor>
									<mBgColor>#ffff00</mBgColor>
									<mSoundFile></mSoundFile>
									<colorTriggerFgColor>#000000</colorTriggerFgColor>
									<colorTriggerBgColor>#000000</colorTriggerBgColor>
									<regexCodeList>
										<string>You are surrounded by a nearly invisible magical shield.</string>
									</regexCodeList>
									<regexCodePropertyList>
										<integer>3</integer>
									</regexCodePropertyList>
								</Trigger>
							</Trigger>
							<Trigger isActive="yes" isFolder="no" isTempTrigger="no" isMultiline="yes" isPerlSlashGOption="no" isColorizerTrigger="no" isFilterTrigger="no" isSoundTrigger="no" isColorTrigger="yes" isColorTriggerFg="no" isColorTriggerBg="no">
								<name>defline gain</name>
								<script>for i in pairs(snd.defenses) do
 if snd.defenses[i].defense == multimatches[2][2] then
  deleteLine()
  snd.def_gain(i)
 end
end</script>
								<triggerType>0</triggerType>
								<conditonLineDelta>0</conditonLineDelta>
								<mStayOpen>0</mStayOpen>
								<mCommand></mCommand>
								<packageName></packageName>
								<mFgColor>#ff0000</mFgColor>
								<mBgColor>#ffff00</mBgColor>
								<mSoundFile></mSoundFile>
								<colorTriggerFgColor>#008080</colorTriggerFgColor>
								<colorTriggerBgColor>#008080</colorTriggerBgColor>
								<regexCodeList>
									<string>ANSI_COLORS_F{006}_B{000}</string>
									<string>^You have gained the (.*) defence\.$</string>
								</regexCodeList>
								<regexCodePropertyList>
									<integer>6</integer>
									<integer>1</integer>
								</regexCodePropertyList>
							</Trigger>
							<Trigger isActive="yes" isFolder="no" isTempTrigger="no" isMultiline="yes" isPerlSlashGOption="no" isColorizerTrigger="no" isFilterTrigger="no" isSoundTrigger="no" isColorTrigger="yes" isColorTriggerFg="no" isColorTriggerBg="no">
								<name>defline strip</name>
								<script>for i in pairs(snd.defenses) do
 if snd.defenses[i].defense == multimatches[2][2] then
  deleteLine()
  snd.def_take(i)
 end
end</script>
								<triggerType>0</triggerType>
								<conditonLineDelta>0</conditonLineDelta>
								<mStayOpen>0</mStayOpen>
								<mCommand></mCommand>
								<packageName></packageName>
								<mFgColor>#ff0000</mFgColor>
								<mBgColor>#ffff00</mBgColor>
								<mSoundFile></mSoundFile>
								<colorTriggerFgColor>#000000</colorTriggerFgColor>
								<colorTriggerBgColor>#008080</colorTriggerBgColor>
								<regexCodeList>
									<string>ANSI_COLORS_F{006}_B{000}</string>
									<string>^Your (.*) defence has been stripped\.$</string>
								</regexCodeList>
								<regexCodePropertyList>
									<integer>6</integer>
									<integer>1</integer>
								</regexCodePropertyList>
							</Trigger>
							<TriggerGroup isActive="yes" isFolder="yes" isTempTrigger="no" isMultiline="no" isPerlSlashGOption="no" isColorizerTrigger="no" isFilterTrigger="no" isSoundTrigger="no" isColorTrigger="no" isColorTriggerFg="no" isColorTriggerBg="no">
								<name>Others</name>
								<script></script>
								<triggerType>0</triggerType>
								<conditonLineDelta>0</conditonLineDelta>
								<mStayOpen>0</mStayOpen>
								<mCommand></mCommand>
								<packageName></packageName>
								<mFgColor>#ff0000</mFgColor>
								<mBgColor>#ffff00</mBgColor>
								<mSoundFile></mSoundFile>
								<colorTriggerFgColor>#000000</colorTriggerFgColor>
								<colorTriggerBgColor>#000000</colorTriggerBgColor>
								<regexCodeList />
								<regexCodePropertyList />
								<Trigger isActive="yes" isFolder="no" isTempTrigger="no" isMultiline="no" isPerlSlashGOption="no" isColorizerTrigger="no" isFilterTrigger="no" isSoundTrigger="no" isColorTrigger="no" isColorTriggerFg="no" isColorTriggerBg="no">
									<name>divert melee gain</name>
									<script>snd.def_gain("divert_melee")</script>
									<triggerType>0</triggerType>
									<conditonLineDelta>0</conditonLineDelta>
									<mStayOpen>0</mStayOpen>
									<mCommand></mCommand>
									<packageName></packageName>
									<mFgColor>#ff0000</mFgColor>
									<mBgColor>#ffff00</mBgColor>
									<mSoundFile></mSoundFile>
									<colorTriggerFgColor>#000000</colorTriggerFgColor>
									<colorTriggerBgColor>#000000</colorTriggerBgColor>
									<regexCodeList>
										<string>You begin to focus your efforts on diverting damage from melee attacks.</string>
									</regexCodeList>
									<regexCodePropertyList>
										<integer>3</integer>
									</regexCodePropertyList>
								</Trigger>
								<Trigger isActive="yes" isFolder="no" isTempTrigger="no" isMultiline="no" isPerlSlashGOption="no" isColorizerTrigger="no" isFilterTrigger="no" isSoundTrigger="no" isColorTrigger="no" isColorTriggerFg="no" isColorTriggerBg="no">
									<name>dodge melee gain</name>
									<script>snd.def_gain("dodge_melee")</script>
									<triggerType>0</triggerType>
									<conditonLineDelta>0</conditonLineDelta>
									<mStayOpen>0</mStayOpen>
									<mCommand></mCommand>
									<packageName></packageName>
									<mFgColor>#ff0000</mFgColor>
									<mBgColor>#ffff00</mBgColor>
									<mSoundFile></mSoundFile>
									<colorTriggerFgColor>#000000</colorTriggerFgColor>
									<colorTriggerBgColor>#000000</colorTriggerBgColor>
									<regexCodeList>
										<string>You begin to focus your efforts on dodging melee attacks.</string>
									</regexCodeList>
									<regexCodePropertyList>
										<integer>3</integer>
									</regexCodePropertyList>
								</Trigger>
								<Trigger isActive="yes" isFolder="no" isTempTrigger="no" isMultiline="no" isPerlSlashGOption="no" isColorizerTrigger="no" isFilterTrigger="no" isSoundTrigger="no" isColorTrigger="no" isColorTriggerFg="no" isColorTriggerBg="no">
									<name>rebounding lose</name>
									<script>snd.def_take("rebounding")</script>
									<triggerType>0</triggerType>
									<conditonLineDelta>0</conditonLineDelta>
									<mStayOpen>0</mStayOpen>
									<mCommand></mCommand>
									<packageName></packageName>
									<mFgColor>#ff0000</mFgColor>
									<mBgColor>#ffff00</mBgColor>
									<mSoundFile></mSoundFile>
									<colorTriggerFgColor>#000000</colorTriggerFgColor>
									<colorTriggerBgColor>#000000</colorTriggerBgColor>
									<regexCodeList>
										<string>Your aura of weapons rebounding disappears.</string>
									</regexCodeList>
									<regexCodePropertyList>
										<integer>3</integer>
									</regexCodePropertyList>
								</Trigger>
								<Trigger isActive="yes" isFolder="no" isTempTrigger="no" isMultiline="no" isPerlSlashGOption="no" isColorizerTrigger="no" isFilterTrigger="no" isSoundTrigger="no" isColorTrigger="no" isColorTriggerFg="no" isColorTriggerBg="no">
									<name>soul embed body</name>
									<script>snd.def_gain("soul_body")</script>
									<triggerType>0</triggerType>
									<conditonLineDelta>0</conditonLineDelta>
									<mStayOpen>0</mStayOpen>
									<mCommand></mCommand>
									<packageName></packageName>
									<mFgColor>#ff0000</mFgColor>
									<mBgColor>#ffff00</mBgColor>
									<mSoundFile></mSoundFile>
									<colorTriggerFgColor>#000000</colorTriggerFgColor>
									<colorTriggerBgColor>#000000</colorTriggerBgColor>
									<regexCodeList>
										<string>Eldritch glyphs coruscate in flickering patterns of crimson across the surface of a soulstone as you press it against your forehead. Melding seamlessly with your skin, a dark sheen of red ripples over your body as it hardens against all weapons.</string>
									</regexCodeList>
									<regexCodePropertyList>
										<integer>3</integer>
									</regexCodePropertyList>
								</Trigger>
								<Trigger isActive="yes" isFolder="no" isTempTrigger="no" isMultiline="no" isPerlSlashGOption="no" isColorizerTrigger="no" isFilterTrigger="no" isSoundTrigger="no" isColorTrigger="no" isColorTriggerFg="no" isColorTriggerBg="no">
									<name>not hiding</name>
									<script>snd.def_remove("def_hiding")</script>
									<triggerType>0</triggerType>
									<conditonLineDelta>0</conditonLineDelta>
									<mStayOpen>0</mStayOpen>
									<mCommand></mCommand>
									<packageName></packageName>
									<mFgColor>#ff0000</mFgColor>
									<mBgColor>#ffff00</mBgColor>
									<mSoundFile></mSoundFile>
									<colorTriggerFgColor>#000000</colorTriggerFgColor>
									<colorTriggerBgColor>#000000</colorTriggerBgColor>
									<regexCodeList>
										<string>You must be hidden within the shadows to perform that act.</string>
									</regexCodeList>
									<regexCodePropertyList>
										<integer>3</integer>
									</regexCodePropertyList>
								</Trigger>
								<Trigger isActive="yes" isFolder="no" isTempTrigger="no" isMultiline="no" isPerlSlashGOption="no" isColorizerTrigger="yes" isFilterTrigger="no" isSoundTrigger="no" isColorTrigger="no" isColorTriggerFg="no" isColorTriggerBg="no">
									<name>Spheres stop</name>
									<script>snd.toggles.active = true
snd.def_def("spheres")
</script>
									<triggerType>0</triggerType>
									<conditonLineDelta>0</conditonLineDelta>
									<mStayOpen>0</mStayOpen>
									<mCommand></mCommand>
									<packageName></packageName>
									<mFgColor>#ff0000</mFgColor>
									<mBgColor>#ffff00</mBgColor>
									<mSoundFile></mSoundFile>
									<colorTriggerFgColor>#000000</colorTriggerFgColor>
									<colorTriggerBgColor>#000000</colorTriggerBgColor>
									<regexCodeList>
										<string>^You are attuned to the music of the spheres.$</string>
										<string>^Finally, your heart stops racing as your soul cries in harmony with the heavens themselves.$</string>
										<string>You are already contemplating the music of the spheres.</string>
									</regexCodeList>
									<regexCodePropertyList>
										<integer>1</integer>
										<integer>1</integer>
										<integer>3</integer>
									</regexCodePropertyList>
								</Trigger>
								<Trigger isActive="yes" isFolder="no" isTempTrigger="no" isMultiline="no" isPerlSlashGOption="no" isColorizerTrigger="yes" isFilterTrigger="no" isSoundTrigger="no" isColorTrigger="no" isColorTriggerFg="no" isColorTriggerBg="no">
									<name>Spheres start</name>
									<script>snd.toggles.active = false
</script>
									<triggerType>0</triggerType>
									<conditonLineDelta>0</conditonLineDelta>
									<mStayOpen>0</mStayOpen>
									<mCommand></mCommand>
									<packageName></packageName>
									<mFgColor>#ff0000</mFgColor>
									<mBgColor>#ffff00</mBgColor>
									<mSoundFile></mSoundFile>
									<colorTriggerFgColor>#000000</colorTriggerFgColor>
									<colorTriggerBgColor>#000000</colorTriggerBgColor>
									<regexCodeList>
										<string>You use Numerology Spheres.</string>
									</regexCodeList>
									<regexCodePropertyList>
										<integer>3</integer>
									</regexCodePropertyList>
								</Trigger>
								<Trigger isActive="yes" isFolder="no" isTempTrigger="no" isMultiline="no" isPerlSlashGOption="no" isColorizerTrigger="yes" isFilterTrigger="no" isSoundTrigger="no" isColorTrigger="no" isColorTriggerFg="no" isColorTriggerBg="no">
									<name>Spheres Inbetween</name>
									<script>snd.toggles.active = false
</script>
									<triggerType>0</triggerType>
									<conditonLineDelta>0</conditonLineDelta>
									<mStayOpen>0</mStayOpen>
									<mCommand></mCommand>
									<packageName></packageName>
									<mFgColor>#ff0000</mFgColor>
									<mBgColor>#ffff00</mBgColor>
									<mSoundFile></mSoundFile>
									<colorTriggerFgColor>#000000</colorTriggerFgColor>
									<colorTriggerBgColor>#000000</colorTriggerBgColor>
									<regexCodeList>
										<string>Your body begins to sway as the incomprehensible</string>
									</regexCodeList>
									<regexCodePropertyList>
										<integer>2</integer>
									</regexCodePropertyList>
								</Trigger>
								<Trigger isActive="yes" isFolder="no" isTempTrigger="no" isMultiline="no" isPerlSlashGOption="no" isColorizerTrigger="yes" isFilterTrigger="no" isSoundTrigger="no" isColorTrigger="no" isColorTriggerFg="no" isColorTriggerBg="no">
									<name>Spheres Broke</name>
									<script>snd.toggles.active = true
</script>
									<triggerType>0</triggerType>
									<conditonLineDelta>0</conditonLineDelta>
									<mStayOpen>0</mStayOpen>
									<mCommand></mCommand>
									<packageName></packageName>
									<mFgColor>#ff0000</mFgColor>
									<mBgColor>#ffff00</mBgColor>
									<mSoundFile></mSoundFile>
									<colorTriggerFgColor>#000000</colorTriggerFgColor>
									<colorTriggerBgColor>#000000</colorTriggerBgColor>
									<regexCodeList>
										<string>The music of the spheres fades, leaving you weak and unsteady.</string>
									</regexCodeList>
									<regexCodePropertyList>
										<integer>3</integer>
									</regexCodePropertyList>
								</Trigger>
								<Trigger isActive="yes" isFolder="no" isTempTrigger="no" isMultiline="no" isPerlSlashGOption="no" isColorizerTrigger="no" isFilterTrigger="no" isSoundTrigger="no" isColorTrigger="no" isColorTriggerFg="no" isColorTriggerBg="no">
									<name>Earthenform start</name>
									<script>snd.toggles.active = false
</script>
									<triggerType>0</triggerType>
									<conditonLineDelta>0</conditonLineDelta>
									<mStayOpen>0</mStayOpen>
									<mCommand></mCommand>
									<packageName></packageName>
									<mFgColor>#ff0000</mFgColor>
									<mBgColor>#ffff00</mBgColor>
									<mSoundFile></mSoundFile>
									<colorTriggerFgColor>#000000</colorTriggerFgColor>
									<colorTriggerBgColor>#000000</colorTriggerBgColor>
									<regexCodeList>
										<string>You kneel, and place your hands upon the earth beneath you. As if on command, the earth shifts and begins to travel up your arms.</string>
									</regexCodeList>
									<regexCodePropertyList>
										<integer>3</integer>
									</regexCodePropertyList>
								</Trigger>
								<Trigger isActive="yes" isFolder="no" isTempTrigger="no" isMultiline="no" isPerlSlashGOption="no" isColorizerTrigger="no" isFilterTrigger="no" isSoundTrigger="no" isColorTrigger="no" isColorTriggerFg="no" isColorTriggerBg="no">
									<name>Earthenform finish</name>
									<script>snd.toggles.active = true

</script>
									<triggerType>0</triggerType>
									<conditonLineDelta>0</conditonLineDelta>
									<mStayOpen>0</mStayOpen>
									<mCommand></mCommand>
									<packageName></packageName>
									<mFgColor>#ff0000</mFgColor>
									<mBgColor>#ffff00</mBgColor>
									<mSoundFile></mSoundFile>
									<colorTriggerFgColor>#000000</colorTriggerFgColor>
									<colorTriggerBgColor>#000000</colorTriggerBgColor>
									<regexCodeList>
										<string>^You have gained the earthenform defence.$</string>
									</regexCodeList>
									<regexCodePropertyList>
										<integer>1</integer>
									</regexCodePropertyList>
								</Trigger>
								<Trigger isActive="yes" isFolder="no" isTempTrigger="no" isMultiline="no" isPerlSlashGOption="no" isColorizerTrigger="no" isFilterTrigger="no" isSoundTrigger="no" isColorTrigger="no" isColorTriggerFg="no" isColorTriggerBg="no">
									<name>Vitality available</name>
									<script>snd.balance.vitality = true</script>
									<triggerType>0</triggerType>
									<conditonLineDelta>0</conditonLineDelta>
									<mStayOpen>0</mStayOpen>
									<mCommand></mCommand>
									<packageName></packageName>
									<mFgColor>#ff0000</mFgColor>
									<mBgColor>#ffff00</mBgColor>
									<mSoundFile></mSoundFile>
									<colorTriggerFgColor>#000000</colorTriggerFgColor>
									<colorTriggerBgColor>#000000</colorTriggerBgColor>
									<regexCodeList>
										<string>^You are once again able to call upon your vitality.$</string>
									</regexCodeList>
									<regexCodePropertyList>
										<integer>1</integer>
									</regexCodePropertyList>
								</Trigger>
								<Trigger isActive="yes" isFolder="no" isTempTrigger="no" isMultiline="no" isPerlSlashGOption="no" isColorizerTrigger="no" isFilterTrigger="no" isSoundTrigger="no" isColorTrigger="no" isColorTriggerFg="no" isColorTriggerBg="no">
									<name>Vitality unavailable</name>
									<script>snd.balance.vitality = false</script>
									<triggerType>0</triggerType>
									<conditonLineDelta>0</conditonLineDelta>
									<mStayOpen>0</mStayOpen>
									<mCommand></mCommand>
									<packageName></packageName>
									<mFgColor>#ff0000</mFgColor>
									<mBgColor>#ffff00</mBgColor>
									<mSoundFile></mSoundFile>
									<colorTriggerFgColor>#000000</colorTriggerFgColor>
									<colorTriggerBgColor>#000000</colorTriggerBgColor>
									<regexCodeList>
										<string>A surge of rejuvenating energy floods your system, healing your wounds.</string>
									</regexCodeList>
									<regexCodePropertyList>
										<integer>3</integer>
									</regexCodePropertyList>
								</Trigger>
								<Trigger isActive="yes" isFolder="no" isTempTrigger="no" isMultiline="no" isPerlSlashGOption="no" isColorizerTrigger="no" isFilterTrigger="no" isSoundTrigger="no" isColorTrigger="no" isColorTriggerFg="no" isColorTriggerBg="no">
									<name>Chameleon fade</name>
									<script>snd.def_remove("def_chameleon")</script>
									<triggerType>0</triggerType>
									<conditonLineDelta>0</conditonLineDelta>
									<mStayOpen>0</mStayOpen>
									<mCommand></mCommand>
									<packageName></packageName>
									<mFgColor>#ff0000</mFgColor>
									<mBgColor>#ffff00</mBgColor>
									<mSoundFile></mSoundFile>
									<colorTriggerFgColor>#000000</colorTriggerFgColor>
									<colorTriggerBgColor>#000000</colorTriggerBgColor>
									<regexCodeList>
										<string>The effect of your chameleon fades, and you return to your own identity.</string>
									</regexCodeList>
									<regexCodePropertyList>
										<integer>3</integer>
									</regexCodePropertyList>
								</Trigger>
							</TriggerGroup>
							<Trigger isActive="yes" isFolder="no" isTempTrigger="no" isMultiline="no" isPerlSlashGOption="no" isColorizerTrigger="no" isFilterTrigger="no" isSoundTrigger="no" isColorTrigger="no" isColorTriggerFg="no" isColorTriggerBg="no">
								<name>resurgence</name>
								<script>snd.def_def("resurgence")</script>
								<triggerType>0</triggerType>
								<conditonLineDelta>0</conditonLineDelta>
								<mStayOpen>0</mStayOpen>
								<mCommand></mCommand>
								<packageName></packageName>
								<mFgColor>#ff0000</mFgColor>
								<mBgColor>#ffff00</mBgColor>
								<mSoundFile></mSoundFile>
								<colorTriggerFgColor>#000000</colorTriggerFgColor>
								<colorTriggerBgColor>#000000</colorTriggerBgColor>
								<regexCodeList>
									<string>Your spirit will surge with power should it falter.</string>
								</regexCodeList>
								<regexCodePropertyList>
									<integer>3</integer>
								</regexCodePropertyList>
							</Trigger>
						</TriggerGroup>
						<TriggerGroup isActive="yes" isFolder="yes" isTempTrigger="no" isMultiline="no" isPerlSlashGOption="no" isColorizerTrigger="no" isFilterTrigger="no" isSoundTrigger="no" isColorTrigger="no" isColorTriggerFg="no" isColorTriggerBg="no">
							<name>Afflictions</name>
							<script></script>
							<triggerType>0</triggerType>
							<conditonLineDelta>0</conditonLineDelta>
							<mStayOpen>0</mStayOpen>
							<mCommand></mCommand>
							<packageName></packageName>
							<mFgColor>#ff0000</mFgColor>
							<mBgColor>#ffff00</mBgColor>
							<mSoundFile></mSoundFile>
							<colorTriggerFgColor>#000000</colorTriggerFgColor>
							<colorTriggerBgColor>#000000</colorTriggerBgColor>
							<regexCodeList />
							<regexCodePropertyList />
							<TriggerGroup isActive="yes" isFolder="yes" isTempTrigger="no" isMultiline="no" isPerlSlashGOption="no" isColorizerTrigger="no" isFilterTrigger="no" isSoundTrigger="no" isColorTrigger="no" isColorTriggerFg="no" isColorTriggerBg="no">
								<name>Pipes</name>
								<script></script>
								<triggerType>0</triggerType>
								<conditonLineDelta>0</conditonLineDelta>
								<mStayOpen>0</mStayOpen>
								<mCommand></mCommand>
								<packageName></packageName>
								<mFgColor>#ff0000</mFgColor>
								<mBgColor>#ffff00</mBgColor>
								<mSoundFile></mSoundFile>
								<colorTriggerFgColor>#000000</colorTriggerFgColor>
								<colorTriggerBgColor>#000000</colorTriggerBgColor>
								<regexCodeList />
								<regexCodePropertyList />
								<Trigger isActive="yes" isFolder="no" isTempTrigger="no" isMultiline="no" isPerlSlashGOption="no" isColorizerTrigger="no" isFilterTrigger="no" isSoundTrigger="no" isColorTrigger="no" isColorTriggerFg="no" isColorTriggerBg="no">
									<name>light pipes</name>
									<script>snd.pipes_lit = true</script>
									<triggerType>0</triggerType>
									<conditonLineDelta>0</conditonLineDelta>
									<mStayOpen>0</mStayOpen>
									<mCommand></mCommand>
									<packageName></packageName>
									<mFgColor>#ff0000</mFgColor>
									<mBgColor>#ffff00</mBgColor>
									<mSoundFile></mSoundFile>
									<colorTriggerFgColor>#000000</colorTriggerFgColor>
									<colorTriggerBgColor>#000000</colorTriggerBgColor>
									<regexCodeList>
										<string>You light your supply of pipes, igniting the herbs within.</string>
									</regexCodeList>
									<regexCodePropertyList>
										<integer>3</integer>
									</regexCodePropertyList>
								</Trigger>
								<Trigger isActive="yes" isFolder="no" isTempTrigger="no" isMultiline="no" isPerlSlashGOption="no" isColorizerTrigger="no" isFilterTrigger="no" isSoundTrigger="no" isColorTrigger="no" isColorTriggerFg="no" isColorTriggerBg="no">
									<name>pipes out</name>
									<script>snd.pipes_lit = false
deleteLine()
snd.delete_prompt = true</script>
									<triggerType>0</triggerType>
									<conditonLineDelta>0</conditonLineDelta>
									<mStayOpen>0</mStayOpen>
									<mCommand></mCommand>
									<packageName></packageName>
									<mFgColor>#ff0000</mFgColor>
									<mBgColor>#ffff00</mBgColor>
									<mSoundFile></mSoundFile>
									<colorTriggerFgColor>#000000</colorTriggerFgColor>
									<colorTriggerBgColor>#000000</colorTriggerBgColor>
									<regexCodeList>
										<string>Your pipe has gone cold and dark.</string>
										<string>Your pipes have gone cold and dark.</string>
										<string>That pipe isn't lit.</string>
									</regexCodeList>
									<regexCodePropertyList>
										<integer>3</integer>
										<integer>3</integer>
										<integer>3</integer>
									</regexCodePropertyList>
								</Trigger>
							</TriggerGroup>
							<Trigger isActive="yes" isFolder="no" isTempTrigger="no" isMultiline="no" isPerlSlashGOption="no" isColorizerTrigger="no" isFilterTrigger="no" isSoundTrigger="no" isColorTrigger="no" isColorTriggerFg="no" isColorTriggerBg="no">
								<name>affline got</name>
								<script>deleteLine()
snd.aff_gain(matches[2])</script>
								<triggerType>0</triggerType>
								<conditonLineDelta>0</conditonLineDelta>
								<mStayOpen>0</mStayOpen>
								<mCommand></mCommand>
								<packageName></packageName>
								<mFgColor>#ff0000</mFgColor>
								<mBgColor>#ffff00</mBgColor>
								<mSoundFile></mSoundFile>
								<colorTriggerFgColor>#000000</colorTriggerFgColor>
								<colorTriggerBgColor>#000000</colorTriggerBgColor>
								<regexCodeList>
									<string>^You are afflicted with (.*)\.$</string>
								</regexCodeList>
								<regexCodePropertyList>
									<integer>1</integer>
								</regexCodePropertyList>
							</Trigger>
							<Trigger isActive="yes" isFolder="no" isTempTrigger="no" isMultiline="no" isPerlSlashGOption="no" isColorizerTrigger="no" isFilterTrigger="no" isSoundTrigger="no" isColorTrigger="no" isColorTriggerFg="no" isColorTriggerBg="no">
								<name>affline cure</name>
								<script>deleteLine()
snd.aff_cure(matches[2])
if matches[2] == "left_arm_broken" or matches[2] == "right_arm_broken" then
 snd.aff_remove("broken_arm")
end
if matches[2] == "left_leg_broken" or matches[2] == "right_leg_broken" then
 snd.aff_remove("broken_leg")
end</script>
								<triggerType>0</triggerType>
								<conditonLineDelta>0</conditonLineDelta>
								<mStayOpen>0</mStayOpen>
								<mCommand></mCommand>
								<packageName></packageName>
								<mFgColor>#ff0000</mFgColor>
								<mBgColor>#ffff00</mBgColor>
								<mSoundFile></mSoundFile>
								<colorTriggerFgColor>#000000</colorTriggerFgColor>
								<colorTriggerBgColor>#000000</colorTriggerBgColor>
								<regexCodeList>
									<string>^You have cured (.*)\.$</string>
								</regexCodeList>
								<regexCodePropertyList>
									<integer>1</integer>
								</regexCodePropertyList>
							</Trigger>
							<TriggerGroup isActive="yes" isFolder="yes" isTempTrigger="no" isMultiline="no" isPerlSlashGOption="no" isColorizerTrigger="no" isFilterTrigger="no" isSoundTrigger="no" isColorTrigger="no" isColorTriggerFg="no" isColorTriggerBg="no">
								<name>Other Lines</name>
								<script></script>
								<triggerType>0</triggerType>
								<conditonLineDelta>0</conditonLineDelta>
								<mStayOpen>0</mStayOpen>
								<mCommand></mCommand>
								<packageName></packageName>
								<mFgColor>#ff0000</mFgColor>
								<mBgColor>#ffff00</mBgColor>
								<mSoundFile></mSoundFile>
								<colorTriggerFgColor>#000000</colorTriggerFgColor>
								<colorTriggerBgColor>#000000</colorTriggerBgColor>
								<regexCodeList />
								<regexCodePropertyList />
								<Trigger isActive="yes" isFolder="no" isTempTrigger="no" isMultiline="no" isPerlSlashGOption="no" isColorizerTrigger="no" isFilterTrigger="no" isSoundTrigger="no" isColorTrigger="no" isColorTriggerFg="no" isColorTriggerBg="no">
									<name>arms</name>
									<script>snd.aff_have("broken_arm")
</script>
									<triggerType>0</triggerType>
									<conditonLineDelta>0</conditonLineDelta>
									<mStayOpen>0</mStayOpen>
									<mCommand></mCommand>
									<packageName></packageName>
									<mFgColor>#ff0000</mFgColor>
									<mBgColor>#ffff00</mBgColor>
									<mSoundFile></mSoundFile>
									<colorTriggerFgColor>#000000</colorTriggerFgColor>
									<colorTriggerBgColor>#000000</colorTriggerBgColor>
									<regexCodeList>
										<string>A serpentine blademistress spits onto her scimitar before slicing into you, and your arm wastes away beneath burning venom.</string>
										<string>Blood floats up through the water as a blackened, ravenous shark seizes your arm in its maw, nearly tearing it from your body and snapping bones in the process.</string>
										<string>The crone strokes your arm, withering it into uselessness.</string>
										<string>^Before you can avoid it, (\w+)('s|') hand brushes against your arm and it withers away\.$</string>
									</regexCodeList>
									<regexCodePropertyList>
										<integer>3</integer>
										<integer>3</integer>
										<integer>3</integer>
										<integer>1</integer>
									</regexCodePropertyList>
								</Trigger>
								<Trigger isActive="yes" isFolder="no" isTempTrigger="no" isMultiline="no" isPerlSlashGOption="no" isColorizerTrigger="no" isFilterTrigger="no" isSoundTrigger="no" isColorTrigger="no" isColorTriggerFg="no" isColorTriggerBg="no">
									<name>legs</name>
									<script>snd.aff_have("broken_leg")
</script>
									<triggerType>0</triggerType>
									<conditonLineDelta>0</conditonLineDelta>
									<mStayOpen>0</mStayOpen>
									<mCommand></mCommand>
									<packageName></packageName>
									<mFgColor>#ff0000</mFgColor>
									<mBgColor>#ffff00</mBgColor>
									<mSoundFile></mSoundFile>
									<colorTriggerFgColor>#000000</colorTriggerFgColor>
									<colorTriggerBgColor>#000000</colorTriggerBgColor>
									<regexCodeList>
										<string>A tattered Bahkatu experiment tears into your knee with his rabid maw, snapping the bone easily beneath such immense pressure.</string>
										<string>A giant, rabid Syll seizes your leg in an iron grip, nearly pulling it clean from the socket.</string>
										<string>A chimera's black lion head seizes your leg in its grip, wrenching it painfully from its socket as it tosses you to the ground.</string>
										<string>A sharp-toothed gremlin's eyes gleam as it slams its head into your knee, shattering it and knocking you off-balance.</string>
										<string>^(\w+) reaches out and grabs your leg, which almost gives way underneath you as it shrivels feebly away\.$</string>
									</regexCodeList>
									<regexCodePropertyList>
										<integer>3</integer>
										<integer>3</integer>
										<integer>3</integer>
										<integer>3</integer>
										<integer>1</integer>
									</regexCodePropertyList>
								</Trigger>
								<Trigger isActive="yes" isFolder="no" isTempTrigger="no" isMultiline="no" isPerlSlashGOption="no" isColorizerTrigger="no" isFilterTrigger="no" isSoundTrigger="no" isColorTrigger="no" isColorTriggerFg="no" isColorTriggerBg="no">
									<name>got adder</name>
									<script>snd.aff_have("adder_tarot")
--snd.send("qeb rip card from body")</script>
									<triggerType>0</triggerType>
									<conditonLineDelta>0</conditonLineDelta>
									<mStayOpen>0</mStayOpen>
									<mCommand></mCommand>
									<packageName></packageName>
									<mFgColor>#ff0000</mFgColor>
									<mBgColor>#ffff00</mBgColor>
									<mSoundFile></mSoundFile>
									<colorTriggerFgColor>#000000</colorTriggerFgColor>
									<colorTriggerBgColor>#000000</colorTriggerBgColor>
									<regexCodeList>
										<string>^(\w+) dips the Adder tarot in venom then flings it at you\. It hooks viciously into you flesh, a small trail of blood dripping from where it pierced the skin\.$</string>
									</regexCodeList>
									<regexCodePropertyList>
										<integer>1</integer>
									</regexCodePropertyList>
								</Trigger>
								<Trigger isActive="yes" isFolder="no" isTempTrigger="no" isMultiline="no" isPerlSlashGOption="no" isColorizerTrigger="no" isFilterTrigger="no" isSoundTrigger="no" isColorTrigger="no" isColorTriggerFg="no" isColorTriggerBg="no">
									<name>cure adder</name>
									<script>snd.aff_cure("adder_tarot")</script>
									<triggerType>0</triggerType>
									<conditonLineDelta>0</conditonLineDelta>
									<mStayOpen>0</mStayOpen>
									<mCommand></mCommand>
									<packageName></packageName>
									<mFgColor>#ff0000</mFgColor>
									<mBgColor>#ffff00</mBgColor>
									<mSoundFile></mSoundFile>
									<colorTriggerFgColor>#000000</colorTriggerFgColor>
									<colorTriggerBgColor>#000000</colorTriggerBgColor>
									<regexCodeList>
										<string>You rip the Adder tarot from your body, the sharp fangs tearing your flesh.</string>
									</regexCodeList>
									<regexCodePropertyList>
										<integer>3</integer>
									</regexCodePropertyList>
								</Trigger>
							</TriggerGroup>
							<Trigger isActive="yes" isFolder="no" isTempTrigger="no" isMultiline="no" isPerlSlashGOption="no" isColorizerTrigger="no" isFilterTrigger="no" isSoundTrigger="no" isColorTrigger="no" isColorTriggerFg="no" isColorTriggerBg="no">
								<name>diag start</name>
								<script>for i in pairs(snd.afflictions) do
 snd.aff_remove(i)
end</script>
								<triggerType>0</triggerType>
								<conditonLineDelta>0</conditonLineDelta>
								<mStayOpen>99</mStayOpen>
								<mCommand></mCommand>
								<packageName></packageName>
								<mFgColor>#ff0000</mFgColor>
								<mBgColor>#ffff00</mBgColor>
								<mSoundFile></mSoundFile>
								<colorTriggerFgColor>#000000</colorTriggerFgColor>
								<colorTriggerBgColor>#000000</colorTriggerBgColor>
								<regexCodeList>
									<string>You are:</string>
								</regexCodeList>
								<regexCodePropertyList>
									<integer>3</integer>
								</regexCodePropertyList>
								<Trigger isActive="yes" isFolder="no" isTempTrigger="no" isMultiline="no" isPerlSlashGOption="no" isColorizerTrigger="no" isFilterTrigger="no" isSoundTrigger="no" isColorTrigger="no" isColorTriggerFg="no" isColorTriggerBg="no">
									<name>diag end</name>
									<script>setTriggerStayOpen("diag start", 0)</script>
									<triggerType>0</triggerType>
									<conditonLineDelta>0</conditonLineDelta>
									<mStayOpen>0</mStayOpen>
									<mCommand></mCommand>
									<packageName></packageName>
									<mFgColor>#ff0000</mFgColor>
									<mBgColor>#ffff00</mBgColor>
									<mSoundFile></mSoundFile>
									<colorTriggerFgColor>#000000</colorTriggerFgColor>
									<colorTriggerBgColor>#000000</colorTriggerBgColor>
									<regexCodeList>
										<string>return isPrompt()</string>
									</regexCodeList>
									<regexCodePropertyList>
										<integer>4</integer>
									</regexCodePropertyList>
								</Trigger>
								<Trigger isActive="yes" isFolder="no" isTempTrigger="no" isMultiline="no" isPerlSlashGOption="no" isColorizerTrigger="no" isFilterTrigger="no" isSoundTrigger="no" isColorTrigger="no" isColorTriggerFg="no" isColorTriggerBg="no">
									<name>diag line</name>
									<script>snd.aff_diag(matches[2])</script>
									<triggerType>0</triggerType>
									<conditonLineDelta>0</conditonLineDelta>
									<mStayOpen>0</mStayOpen>
									<mCommand></mCommand>
									<packageName></packageName>
									<mFgColor>#ff0000</mFgColor>
									<mBgColor>#ffff00</mBgColor>
									<mSoundFile></mSoundFile>
									<colorTriggerFgColor>#000000</colorTriggerFgColor>
									<colorTriggerBgColor>#000000</colorTriggerBgColor>
									<regexCodeList>
										<string>^afflicted with (.*)\.$</string>
									</regexCodeList>
									<regexCodePropertyList>
										<integer>1</integer>
									</regexCodePropertyList>
								</Trigger>
							</Trigger>
							<TriggerGroup isActive="yes" isFolder="yes" isTempTrigger="no" isMultiline="no" isPerlSlashGOption="no" isColorizerTrigger="no" isFilterTrigger="no" isSoundTrigger="no" isColorTrigger="no" isColorTriggerFg="no" isColorTriggerBg="no">
								<name>Resets</name>
								<script></script>
								<triggerType>0</triggerType>
								<conditonLineDelta>0</conditonLineDelta>
								<mStayOpen>0</mStayOpen>
								<mCommand></mCommand>
								<packageName></packageName>
								<mFgColor>#ff0000</mFgColor>
								<mBgColor>#ffff00</mBgColor>
								<mSoundFile></mSoundFile>
								<colorTriggerFgColor>#000000</colorTriggerFgColor>
								<colorTriggerBgColor>#000000</colorTriggerBgColor>
								<regexCodeList />
								<regexCodePropertyList />
								<Trigger isActive="yes" isFolder="no" isTempTrigger="no" isMultiline="yes" isPerlSlashGOption="no" isColorizerTrigger="no" isFilterTrigger="no" isSoundTrigger="no" isColorTrigger="no" isColorTriggerFg="no" isColorTriggerBg="no">
									<name>salve</name>
									<script>--snd.last.salve = multimatches[1][2].." to "..multimatches[1][3]
snd.clear_afflictions("salve")
</script>
									<triggerType>0</triggerType>
									<conditonLineDelta>1</conditonLineDelta>
									<mStayOpen>0</mStayOpen>
									<mCommand></mCommand>
									<packageName></packageName>
									<mFgColor>#ff0000</mFgColor>
									<mBgColor>#ffff00</mBgColor>
									<mSoundFile></mSoundFile>
									<colorTriggerFgColor>#000000</colorTriggerFgColor>
									<colorTriggerBgColor>#000000</colorTriggerBgColor>
									<regexCodeList>
										<string>^You press a (\w+) poultice against your skin, rubbing it into your flesh\.$</string>
										<string>1</string>
										<string>The poultice mashes uselessly against your body.</string>
									</regexCodeList>
									<regexCodePropertyList>
										<integer>1</integer>
										<integer>5</integer>
										<integer>3</integer>
									</regexCodePropertyList>
								</Trigger>
								<Trigger isActive="yes" isFolder="no" isTempTrigger="no" isMultiline="yes" isPerlSlashGOption="no" isColorizerTrigger="no" isFilterTrigger="no" isSoundTrigger="no" isColorTrigger="no" isColorTriggerFg="no" isColorTriggerBg="no">
									<name>herb</name>
									<script>for i in pairs(snd.pills) do
 if snd.pills[i] == multimatches[1][2] then
  snd.last.herb = i
  snd.clear_afflictions("herb")
 end
end</script>
									<triggerType>0</triggerType>
									<conditonLineDelta>1</conditonLineDelta>
									<mStayOpen>0</mStayOpen>
									<mCommand></mCommand>
									<packageName></packageName>
									<mFgColor>#ff0000</mFgColor>
									<mBgColor>#ffff00</mBgColor>
									<mSoundFile></mSoundFile>
									<colorTriggerFgColor>#000000</colorTriggerFgColor>
									<colorTriggerBgColor>#000000</colorTriggerBgColor>
									<regexCodeList>
										<string>^You swallow (.*)\.$</string>
										<string>1</string>
										<string>return isPrompt()</string>
									</regexCodeList>
									<regexCodePropertyList>
										<integer>1</integer>
										<integer>5</integer>
										<integer>4</integer>
									</regexCodePropertyList>
								</Trigger>
								<Trigger isActive="yes" isFolder="no" isTempTrigger="no" isMultiline="yes" isPerlSlashGOption="no" isColorizerTrigger="no" isFilterTrigger="no" isSoundTrigger="no" isColorTrigger="no" isColorTriggerFg="no" isColorTriggerBg="no">
									<name>cure insomnia</name>
									<script>snd.last.herb = "euphoriant"
snd.clear_afflictions("herb")
</script>
									<triggerType>0</triggerType>
									<conditonLineDelta>1</conditonLineDelta>
									<mStayOpen>0</mStayOpen>
									<mCommand></mCommand>
									<packageName></packageName>
									<mFgColor>#ff0000</mFgColor>
									<mBgColor>#ffff00</mBgColor>
									<mSoundFile></mSoundFile>
									<colorTriggerFgColor>#000000</colorTriggerFgColor>
									<colorTriggerBgColor>#000000</colorTriggerBgColor>
									<regexCodeList>
										<string>You swallow an euphoriant pill.</string>
										<string>1</string>
										<string>Your mind relaxes and you feel as if you could sleep.</string>
									</regexCodeList>
									<regexCodePropertyList>
										<integer>3</integer>
										<integer>5</integer>
										<integer>3</integer>
									</regexCodePropertyList>
								</Trigger>
								<Trigger isActive="yes" isFolder="no" isTempTrigger="no" isMultiline="yes" isPerlSlashGOption="no" isColorizerTrigger="no" isFilterTrigger="no" isSoundTrigger="no" isColorTrigger="no" isColorTriggerFg="no" isColorTriggerBg="no">
									<name>tree</name>
									<script>snd.last.tree = "send"
snd.clear_afflictions("tree")</script>
									<triggerType>0</triggerType>
									<conditonLineDelta>1</conditonLineDelta>
									<mStayOpen>0</mStayOpen>
									<mCommand></mCommand>
									<packageName></packageName>
									<mFgColor>#ff0000</mFgColor>
									<mBgColor>#ffff00</mBgColor>
									<mSoundFile></mSoundFile>
									<colorTriggerFgColor>#000000</colorTriggerFgColor>
									<colorTriggerBgColor>#000000</colorTriggerBgColor>
									<regexCodeList>
										<string>You touch the tree of life tattoo.</string>
										<string>1</string>
										<string>return isPrompt()</string>
									</regexCodeList>
									<regexCodePropertyList>
										<integer>3</integer>
										<integer>5</integer>
										<integer>4</integer>
									</regexCodePropertyList>
								</Trigger>
								<Trigger isActive="yes" isFolder="no" isTempTrigger="no" isMultiline="no" isPerlSlashGOption="no" isColorizerTrigger="no" isFilterTrigger="no" isSoundTrigger="no" isColorTrigger="no" isColorTriggerFg="no" isColorTriggerBg="no">
									<name>smoke</name>
									<script>snd.last.smoke = multimatches[1][2]
snd.clear_afflictions("smoke")</script>
									<triggerType>0</triggerType>
									<conditonLineDelta>0</conditonLineDelta>
									<mStayOpen>0</mStayOpen>
									<mCommand></mCommand>
									<packageName></packageName>
									<mFgColor>#ff0000</mFgColor>
									<mBgColor>#ffff00</mBgColor>
									<mSoundFile></mSoundFile>
									<colorTriggerFgColor>#000000</colorTriggerFgColor>
									<colorTriggerBgColor>#000000</colorTriggerBgColor>
									<regexCodeList>
										<string>^You take a long drag  off your pipe filled with (willow|yarrow)\.$</string>
										<string>1</string>
										<string>return isPrompt()</string>
									</regexCodeList>
									<regexCodePropertyList>
										<integer>1</integer>
										<integer>5</integer>
										<integer>4</integer>
									</regexCodePropertyList>
								</Trigger>
							</TriggerGroup>
							<TriggerGroup isActive="yes" isFolder="yes" isTempTrigger="no" isMultiline="no" isPerlSlashGOption="no" isColorizerTrigger="no" isFilterTrigger="no" isSoundTrigger="no" isColorTrigger="no" isColorTriggerFg="no" isColorTriggerBg="no">
								<name>Limbs</name>
								<script></script>
								<triggerType>0</triggerType>
								<conditonLineDelta>0</conditonLineDelta>
								<mStayOpen>0</mStayOpen>
								<mCommand></mCommand>
								<packageName></packageName>
								<mFgColor>#ff0000</mFgColor>
								<mBgColor>#ffff00</mBgColor>
								<mSoundFile></mSoundFile>
								<colorTriggerFgColor>#000000</colorTriggerFgColor>
								<colorTriggerBgColor>#000000</colorTriggerBgColor>
								<regexCodeList />
								<regexCodePropertyList />
								<Trigger isActive="yes" isFolder="no" isTempTrigger="no" isMultiline="yes" isPerlSlashGOption="no" isColorizerTrigger="no" isFilterTrigger="no" isSoundTrigger="no" isColorTrigger="yes" isColorTriggerFg="no" isColorTriggerBg="no">
									<name>got limb damage</name>
									<script>if snd.toggles.atkecho then
 deleteLine()
end
snd.limb_damage[multimatches[2][2]] = snd.limb_damage[multimatches[2][2]]+tonumber(multimatches[2][3])
</script>
									<triggerType>0</triggerType>
									<conditonLineDelta>0</conditonLineDelta>
									<mStayOpen>0</mStayOpen>
									<mCommand></mCommand>
									<packageName></packageName>
									<mFgColor>#ff0000</mFgColor>
									<mBgColor>#ffff00</mBgColor>
									<mSoundFile></mSoundFile>
									<colorTriggerFgColor>#000000</colorTriggerFgColor>
									<colorTriggerBgColor>#008080</colorTriggerBgColor>
									<regexCodeList>
										<string>ANSI_COLORS_F{006}_B{000}</string>
										<string>^Your (.*) has taken ((\d+)\.(\d+))\% damage\.$</string>
									</regexCodeList>
									<regexCodePropertyList>
										<integer>6</integer>
										<integer>1</integer>
									</regexCodePropertyList>
								</Trigger>
								<Trigger isActive="yes" isFolder="no" isTempTrigger="no" isMultiline="yes" isPerlSlashGOption="no" isColorizerTrigger="no" isFilterTrigger="no" isSoundTrigger="no" isColorTrigger="yes" isColorTriggerFg="no" isColorTriggerBg="no">
									<name>cured limb damage</name>
									<script>snd.limb_damage[multimatches[2][2]] = snd.limb_damage[multimatches[2][2]]-tonumber(multimatches[2][3])
</script>
									<triggerType>0</triggerType>
									<conditonLineDelta>0</conditonLineDelta>
									<mStayOpen>0</mStayOpen>
									<mCommand></mCommand>
									<packageName></packageName>
									<mFgColor>#ff0000</mFgColor>
									<mBgColor>#ffff00</mBgColor>
									<mSoundFile></mSoundFile>
									<colorTriggerFgColor>#000000</colorTriggerFgColor>
									<colorTriggerBgColor>#000000</colorTriggerBgColor>
									<regexCodeList>
										<string>ANSI_COLORS_F{006}_B{000}</string>
										<string>^Your (.*) has recovered ((\d+)\.(\d+))\% damage\.$</string>
									</regexCodeList>
									<regexCodePropertyList>
										<integer>6</integer>
										<integer>1</integer>
									</regexCodePropertyList>
								</Trigger>
								<Trigger isActive="yes" isFolder="no" isTempTrigger="no" isMultiline="no" isPerlSlashGOption="no" isColorizerTrigger="no" isFilterTrigger="no" isSoundTrigger="no" isColorTrigger="no" isColorTriggerFg="no" isColorTriggerBg="no">
									<name>wounds start</name>
									<script></script>
									<triggerType>0</triggerType>
									<conditonLineDelta>0</conditonLineDelta>
									<mStayOpen>200</mStayOpen>
									<mCommand></mCommand>
									<packageName></packageName>
									<mFgColor>#ff0000</mFgColor>
									<mBgColor>#ffff00</mBgColor>
									<mSoundFile></mSoundFile>
									<colorTriggerFgColor>#000000</colorTriggerFgColor>
									<colorTriggerBgColor>#000000</colorTriggerBgColor>
									<regexCodeList>
										<string>You take a moment to assess how damaged your limbs are:</string>
									</regexCodeList>
									<regexCodePropertyList>
										<integer>3</integer>
									</regexCodePropertyList>
									<Trigger isActive="yes" isFolder="no" isTempTrigger="no" isMultiline="no" isPerlSlashGOption="no" isColorizerTrigger="no" isFilterTrigger="no" isSoundTrigger="no" isColorTrigger="no" isColorTriggerFg="no" isColorTriggerBg="no">
										<name>wounds line</name>
										<script>snd.limb_damage[string.lower(matches[2])] = tonumber(matches[3])
</script>
										<triggerType>0</triggerType>
										<conditonLineDelta>0</conditonLineDelta>
										<mStayOpen>0</mStayOpen>
										<mCommand></mCommand>
										<packageName></packageName>
										<mFgColor>#ff0000</mFgColor>
										<mBgColor>#ffff00</mBgColor>
										<mSoundFile></mSoundFile>
										<colorTriggerFgColor>#000000</colorTriggerFgColor>
										<colorTriggerBgColor>#000000</colorTriggerBgColor>
										<regexCodeList>
											<string>^(.*):\s+((\d+)\.(\d+))\% \(no bruising\)$</string>
										</regexCodeList>
										<regexCodePropertyList>
											<integer>1</integer>
										</regexCodePropertyList>
									</Trigger>
									<Trigger isActive="yes" isFolder="no" isTempTrigger="no" isMultiline="no" isPerlSlashGOption="no" isColorizerTrigger="no" isFilterTrigger="no" isSoundTrigger="no" isColorTrigger="no" isColorTriggerFg="no" isColorTriggerBg="no">
										<name>wounds end</name>
										<script>setTriggerStayOpen("wounds start", 0)</script>
										<triggerType>0</triggerType>
										<conditonLineDelta>0</conditonLineDelta>
										<mStayOpen>0</mStayOpen>
										<mCommand></mCommand>
										<packageName></packageName>
										<mFgColor>#ff0000</mFgColor>
										<mBgColor>#ffff00</mBgColor>
										<mSoundFile></mSoundFile>
										<colorTriggerFgColor>#000000</colorTriggerFgColor>
										<colorTriggerBgColor>#000000</colorTriggerBgColor>
										<regexCodeList>
											<string>return isPrompt()</string>
										</regexCodeList>
										<regexCodePropertyList>
											<integer>4</integer>
										</regexCodePropertyList>
									</Trigger>
								</Trigger>
								<Trigger isActive="yes" isFolder="no" isTempTrigger="no" isMultiline="no" isPerlSlashGOption="no" isColorizerTrigger="no" isFilterTrigger="no" isSoundTrigger="no" isColorTrigger="no" isColorTriggerFg="no" isColorTriggerBg="no">
									<name>parry</name>
									<script>snd.parrying = matches[2]</script>
									<triggerType>0</triggerType>
									<conditonLineDelta>0</conditonLineDelta>
									<mStayOpen>0</mStayOpen>
									<mCommand></mCommand>
									<packageName></packageName>
									<mFgColor>#ff0000</mFgColor>
									<mBgColor>#ffff00</mBgColor>
									<mSoundFile></mSoundFile>
									<colorTriggerFgColor>#000000</colorTriggerFgColor>
									<colorTriggerBgColor>#000000</colorTriggerBgColor>
									<regexCodeList>
										<string>^You will now attempt to parry attacks to your (.*)\.$</string>
										<string>^You will attempt to parry attacks to your (.*)\.$</string>
										<string>^You will now attempt to intercept and counter attacks coming at your (.*)\.$</string>
										<string>^You will attempt to throw those who attack your (.*)\.$</string>
										<string>^You will now try and fend off attacks aimed at your (.*)\.$</string>
									</regexCodeList>
									<regexCodePropertyList>
										<integer>1</integer>
										<integer>1</integer>
										<integer>1</integer>
										<integer>1</integer>
										<integer>1</integer>
									</regexCodePropertyList>
								</Trigger>
								<Trigger isActive="yes" isFolder="no" isTempTrigger="no" isMultiline="no" isPerlSlashGOption="no" isColorizerTrigger="no" isFilterTrigger="no" isSoundTrigger="no" isColorTrigger="no" isColorTriggerFg="no" isColorTriggerBg="no">
									<name>unparry</name>
									<script>snd.parrying = "none"</script>
									<triggerType>0</triggerType>
									<conditonLineDelta>0</conditonLineDelta>
									<mStayOpen>0</mStayOpen>
									<mCommand></mCommand>
									<packageName></packageName>
									<mFgColor>#ff0000</mFgColor>
									<mBgColor>#ffff00</mBgColor>
									<mSoundFile></mSoundFile>
									<colorTriggerFgColor>#000000</colorTriggerFgColor>
									<colorTriggerBgColor>#000000</colorTriggerBgColor>
									<regexCodeList>
										<string>^A .+ golem lashes out as you parry the blow, rattling your defences\.$</string>
										<string>You cease your attempts at parrying.</string>
									</regexCodeList>
									<regexCodePropertyList>
										<integer>1</integer>
										<integer>3</integer>
									</regexCodePropertyList>
								</Trigger>
							</TriggerGroup>
							<Trigger isActive="yes" isFolder="no" isTempTrigger="no" isMultiline="no" isPerlSlashGOption="no" isColorizerTrigger="no" isFilterTrigger="no" isSoundTrigger="no" isColorTrigger="no" isColorTriggerFg="no" isColorTriggerBg="no">
								<name>loki</name>
								<script></script>
								<triggerType>0</triggerType>
								<conditonLineDelta>0</conditonLineDelta>
								<mStayOpen>0</mStayOpen>
								<mCommand></mCommand>
								<packageName></packageName>
								<mFgColor>#ff0000</mFgColor>
								<mBgColor>#ffff00</mBgColor>
								<mSoundFile></mSoundFile>
								<colorTriggerFgColor>#000000</colorTriggerFgColor>
								<colorTriggerBgColor>#000000</colorTriggerBgColor>
								<regexCodeList>
									<string>You are confused as to the effects of the venom.</string>
								</regexCodeList>
								<regexCodePropertyList>
									<integer>3</integer>
								</regexCodePropertyList>
							</Trigger>
							<Trigger isActive="yes" isFolder="no" isTempTrigger="no" isMultiline="no" isPerlSlashGOption="no" isColorizerTrigger="no" isFilterTrigger="no" isSoundTrigger="no" isColorTrigger="no" isColorTriggerFg="no" isColorTriggerBg="no">
								<name>illumination shadow</name>
								<script></script>
								<triggerType>0</triggerType>
								<conditonLineDelta>0</conditonLineDelta>
								<mStayOpen>0</mStayOpen>
								<mCommand></mCommand>
								<packageName></packageName>
								<mFgColor>#ff0000</mFgColor>
								<mBgColor>#ffff00</mBgColor>
								<mSoundFile></mSoundFile>
								<colorTriggerFgColor>#000000</colorTriggerFgColor>
								<colorTriggerBgColor>#000000</colorTriggerBgColor>
								<regexCodeList>
									<string>You grimace, your parched throat and drying skin a constant, painful reminder of the Sun's curse.</string>
								</regexCodeList>
								<regexCodePropertyList>
									<integer>3</integer>
								</regexCodePropertyList>
							</Trigger>
							<Trigger isActive="yes" isFolder="no" isTempTrigger="no" isMultiline="no" isPerlSlashGOption="no" isColorizerTrigger="no" isFilterTrigger="no" isSoundTrigger="no" isColorTrigger="no" isColorTriggerFg="no" isColorTriggerBg="no">
								<name>unwield</name>
								<script>snd.set_queue("wield shortsword")</script>
								<triggerType>0</triggerType>
								<conditonLineDelta>0</conditonLineDelta>
								<mStayOpen>0</mStayOpen>
								<mCommand></mCommand>
								<packageName></packageName>
								<mFgColor>#ff0000</mFgColor>
								<mBgColor>#ffff00</mBgColor>
								<mSoundFile></mSoundFile>
								<colorTriggerFgColor>#000000</colorTriggerFgColor>
								<colorTriggerBgColor>#000000</colorTriggerBgColor>
								<regexCodeList>
									<string>^You lose your hold on (.*)\.$</string>
								</regexCodeList>
								<regexCodePropertyList>
									<integer>1</integer>
								</regexCodePropertyList>
							</Trigger>
							<Trigger isActive="yes" isFolder="no" isTempTrigger="no" isMultiline="no" isPerlSlashGOption="no" isColorizerTrigger="no" isFilterTrigger="no" isSoundTrigger="no" isColorTrigger="no" isColorTriggerFg="no" isColorTriggerBg="no">
								<name>swelter</name>
								<script></script>
								<triggerType>0</triggerType>
								<conditonLineDelta>0</conditonLineDelta>
								<mStayOpen>0</mStayOpen>
								<mCommand></mCommand>
								<packageName></packageName>
								<mFgColor>#ff0000</mFgColor>
								<mBgColor>#ffff00</mBgColor>
								<mSoundFile></mSoundFile>
								<colorTriggerFgColor>#000000</colorTriggerFgColor>
								<colorTriggerBgColor>#000000</colorTriggerBgColor>
								<regexCodeList>
									<string>Your mind swims in confusion as the sweltering sands take their toll.</string>
								</regexCodeList>
								<regexCodePropertyList>
									<integer>3</integer>
								</regexCodePropertyList>
							</Trigger>
							<Trigger isActive="yes" isFolder="no" isTempTrigger="no" isMultiline="no" isPerlSlashGOption="no" isColorizerTrigger="no" isFilterTrigger="no" isSoundTrigger="no" isColorTrigger="no" isColorTriggerFg="no" isColorTriggerBg="no">
								<name>sluggish</name>
								<script></script>
								<triggerType>0</triggerType>
								<conditonLineDelta>0</conditonLineDelta>
								<mStayOpen>0</mStayOpen>
								<mCommand></mCommand>
								<packageName></packageName>
								<mFgColor>#ff0000</mFgColor>
								<mBgColor>#ffff00</mBgColor>
								<mSoundFile></mSoundFile>
								<colorTriggerFgColor>#000000</colorTriggerFgColor>
								<colorTriggerBgColor>#000000</colorTriggerBgColor>
								<regexCodeList>
									<string>You move sluggishly into action.</string>
								</regexCodeList>
								<regexCodePropertyList>
									<integer>3</integer>
								</regexCodePropertyList>
							</Trigger>
							<Trigger isActive="yes" isFolder="no" isTempTrigger="no" isMultiline="no" isPerlSlashGOption="no" isColorizerTrigger="no" isFilterTrigger="no" isSoundTrigger="no" isColorTrigger="no" isColorTriggerFg="no" isColorTriggerBg="no">
								<name>affline have</name>
								<script>deleteLine()
snd.aff_gain(matches[2])</script>
								<triggerType>0</triggerType>
								<conditonLineDelta>0</conditonLineDelta>
								<mStayOpen>0</mStayOpen>
								<mCommand></mCommand>
								<packageName></packageName>
								<mFgColor>#ff0000</mFgColor>
								<mBgColor>#ffff00</mBgColor>
								<mSoundFile></mSoundFile>
								<colorTriggerFgColor>#000000</colorTriggerFgColor>
								<colorTriggerBgColor>#000000</colorTriggerBgColor>
								<regexCodeList>
									<string>^You have discovered (.*)\.$</string>
								</regexCodeList>
								<regexCodePropertyList>
									<integer>1</integer>
								</regexCodePropertyList>
							</Trigger>
							<Trigger isActive="yes" isFolder="no" isTempTrigger="no" isMultiline="no" isPerlSlashGOption="no" isColorizerTrigger="no" isFilterTrigger="no" isSoundTrigger="no" isColorTrigger="no" isColorTriggerFg="no" isColorTriggerBg="no">
								<name>stood</name>
								<script>snd.waiting.queue = false</script>
								<triggerType>0</triggerType>
								<conditonLineDelta>0</conditonLineDelta>
								<mStayOpen>0</mStayOpen>
								<mCommand></mCommand>
								<packageName></packageName>
								<mFgColor>#ff0000</mFgColor>
								<mBgColor>#ffff00</mBgColor>
								<mSoundFile></mSoundFile>
								<colorTriggerFgColor>#000000</colorTriggerFgColor>
								<colorTriggerBgColor>#000000</colorTriggerBgColor>
								<regexCodeList>
									<string>You stand up and stretch your arms out wide.</string>
								</regexCodeList>
								<regexCodePropertyList>
									<integer>3</integer>
								</regexCodePropertyList>
							</Trigger>
							<Trigger isActive="yes" isFolder="no" isTempTrigger="no" isMultiline="yes" isPerlSlashGOption="no" isColorizerTrigger="no" isFilterTrigger="no" isSoundTrigger="no" isColorTrigger="no" isColorTriggerFg="no" isColorTriggerBg="no">
								<name>angel sacrifice</name>
								<script>for i in pairs(snd.afflictions) do
 snd.aff_remove(i)
end</script>
								<triggerType>0</triggerType>
								<conditonLineDelta>2</conditonLineDelta>
								<mStayOpen>0</mStayOpen>
								<mCommand></mCommand>
								<packageName></packageName>
								<mFgColor>#ff0000</mFgColor>
								<mBgColor>#ffff00</mBgColor>
								<mSoundFile></mSoundFile>
								<colorTriggerFgColor>#000000</colorTriggerFgColor>
								<colorTriggerBgColor>#000000</colorTriggerBgColor>
								<regexCodeList>
									<string>You use Spirituality Sacrifice.</string>
									<string>1</string>
									<string>A guardian angel begins to burn impossibly white as you feel your spirit tingle and twitch under its radiance. As the light fades away, your angel is no where to be seen, leaving you reborn.</string>
								</regexCodeList>
								<regexCodePropertyList>
									<integer>3</integer>
									<integer>5</integer>
									<integer>3</integer>
								</regexCodePropertyList>
							</Trigger>
							<Trigger isActive="yes" isFolder="no" isTempTrigger="no" isMultiline="no" isPerlSlashGOption="no" isColorizerTrigger="no" isFilterTrigger="no" isSoundTrigger="no" isColorTrigger="no" isColorTriggerFg="no" isColorTriggerBg="no">
								<name>Ediag start</name>
								<script>echo("AAAAAAAAAAAAAAAAA")
snd.target_has = {}</script>
								<triggerType>0</triggerType>
								<conditonLineDelta>0</conditonLineDelta>
								<mStayOpen>0</mStayOpen>
								<mCommand></mCommand>
								<packageName></packageName>
								<mFgColor>#ff0000</mFgColor>
								<mBgColor>#ffff00</mBgColor>
								<mSoundFile></mSoundFile>
								<colorTriggerFgColor>#000000</colorTriggerFgColor>
								<colorTriggerBgColor>#000000</colorTriggerBgColor>
								<regexCodeList>
									<string>(\w+) is:</string>
								</regexCodeList>
								<regexCodePropertyList>
									<integer>1</integer>
								</regexCodePropertyList>
								<Trigger isActive="yes" isFolder="no" isTempTrigger="no" isMultiline="no" isPerlSlashGOption="no" isColorizerTrigger="no" isFilterTrigger="no" isSoundTrigger="no" isColorTrigger="no" isColorTriggerFg="no" isColorTriggerBg="no">
									<name>ediag line</name>
									<script>local tempaff = matches[2]
snd.target_got(tempaff)
echo(tempaff)</script>
									<triggerType>0</triggerType>
									<conditonLineDelta>0</conditonLineDelta>
									<mStayOpen>0</mStayOpen>
									<mCommand></mCommand>
									<packageName></packageName>
									<mFgColor>#ff0000</mFgColor>
									<mBgColor>#ffff00</mBgColor>
									<mSoundFile></mSoundFile>
									<colorTriggerFgColor>#000000</colorTriggerFgColor>
									<colorTriggerBgColor>#000000</colorTriggerBgColor>
									<regexCodeList>
										<string>^afflicted with (.+)\.$</string>
										<string>^infected with a (\w+)\.$</string>
									</regexCodeList>
									<regexCodePropertyList>
										<integer>1</integer>
										<integer>1</integer>
									</regexCodePropertyList>
								</Trigger>
								<Trigger isActive="yes" isFolder="no" isTempTrigger="no" isMultiline="no" isPerlSlashGOption="no" isColorizerTrigger="no" isFilterTrigger="no" isSoundTrigger="no" isColorTrigger="no" isColorTriggerFg="no" isColorTriggerBg="no">
									<name>ediag end</name>
									<script>setTriggerStayOpen("Ediag stat", 0)</script>
									<triggerType>0</triggerType>
									<conditonLineDelta>0</conditonLineDelta>
									<mStayOpen>0</mStayOpen>
									<mCommand></mCommand>
									<packageName></packageName>
									<mFgColor>#ff0000</mFgColor>
									<mBgColor>#ffff00</mBgColor>
									<mSoundFile></mSoundFile>
									<colorTriggerFgColor>#000000</colorTriggerFgColor>
									<colorTriggerBgColor>#000000</colorTriggerBgColor>
									<regexCodeList>
										<string>return isPrompt()</string>
									</regexCodeList>
									<regexCodePropertyList>
										<integer>4</integer>
									</regexCodePropertyList>
								</Trigger>
							</Trigger>
						</TriggerGroup>
						<Trigger isActive="yes" isFolder="no" isTempTrigger="no" isMultiline="no" isPerlSlashGOption="no" isColorizerTrigger="no" isFilterTrigger="no" isSoundTrigger="no" isColorTrigger="no" isColorTriggerFg="no" isColorTriggerBg="no">
							<name>smoked a pipe</name>
							<script>snd.smokedpipe = matches[2]</script>
							<triggerType>0</triggerType>
							<conditonLineDelta>0</conditonLineDelta>
							<mStayOpen>5</mStayOpen>
							<mCommand></mCommand>
							<packageName></packageName>
							<mFgColor>#ff0000</mFgColor>
							<mBgColor>#ffff00</mBgColor>
							<mSoundFile></mSoundFile>
							<colorTriggerFgColor>#000000</colorTriggerFgColor>
							<colorTriggerBgColor>#000000</colorTriggerBgColor>
							<regexCodeList>
								<string>^You take a long drag off your pipe filled with (\w+)\.$</string>
							</regexCodeList>
							<regexCodePropertyList>
								<integer>1</integer>
							</regexCodePropertyList>
							<Trigger isActive="yes" isFolder="no" isTempTrigger="no" isMultiline="no" isPerlSlashGOption="no" isColorizerTrigger="no" isFilterTrigger="no" isSoundTrigger="no" isColorTrigger="no" isColorTriggerFg="no" isColorTriggerBg="no">
								<name>empty pipe</name>
								<script>snd.emptypipe = snd.smokedpipe</script>
								<triggerType>0</triggerType>
								<conditonLineDelta>0</conditonLineDelta>
								<mStayOpen>0</mStayOpen>
								<mCommand></mCommand>
								<packageName></packageName>
								<mFgColor>#ff0000</mFgColor>
								<mBgColor>#ffff00</mBgColor>
								<mSoundFile></mSoundFile>
								<colorTriggerFgColor>#000000</colorTriggerFgColor>
								<colorTriggerBgColor>#000000</colorTriggerBgColor>
								<regexCodeList>
									<string>Your pipe is now empty.</string>
								</regexCodeList>
								<regexCodePropertyList>
									<integer>3</integer>
								</regexCodePropertyList>
							</Trigger>
							<Trigger isActive="yes" isFolder="no" isTempTrigger="no" isMultiline="no" isPerlSlashGOption="no" isColorizerTrigger="no" isFilterTrigger="no" isSoundTrigger="no" isColorTrigger="no" isColorTriggerFg="no" isColorTriggerBg="no">
								<name>smoked end</name>
								<script>setTriggerStayOpen("smoked a pipe", 0)
snd.smokedpipe = "none"</script>
								<triggerType>0</triggerType>
								<conditonLineDelta>0</conditonLineDelta>
								<mStayOpen>0</mStayOpen>
								<mCommand></mCommand>
								<packageName></packageName>
								<mFgColor>#ff0000</mFgColor>
								<mBgColor>#ffff00</mBgColor>
								<mSoundFile></mSoundFile>
								<colorTriggerFgColor>#000000</colorTriggerFgColor>
								<colorTriggerBgColor>#000000</colorTriggerBgColor>
								<regexCodeList>
									<string>return isPrompt()</string>
								</regexCodeList>
								<regexCodePropertyList>
									<integer>4</integer>
								</regexCodePropertyList>
							</Trigger>
						</Trigger>
						<Trigger isActive="yes" isFolder="no" isTempTrigger="no" isMultiline="no" isPerlSlashGOption="no" isColorizerTrigger="no" isFilterTrigger="no" isSoundTrigger="no" isColorTrigger="no" isColorTriggerFg="no" isColorTriggerBg="no">
							<name>filled pipe</name>
							<script>snd.emptypipe = "none"</script>
							<triggerType>0</triggerType>
							<conditonLineDelta>0</conditonLineDelta>
							<mStayOpen>0</mStayOpen>
							<mCommand></mCommand>
							<packageName></packageName>
							<mFgColor>#ff0000</mFgColor>
							<mBgColor>#ffff00</mBgColor>
							<mSoundFile></mSoundFile>
							<colorTriggerFgColor>#000000</colorTriggerFgColor>
							<colorTriggerBgColor>#000000</colorTriggerBgColor>
							<regexCodeList>
								<string>^You fill your pipe with .+\.$</string>
							</regexCodeList>
							<regexCodePropertyList>
								<integer>1</integer>
							</regexCodePropertyList>
						</Trigger>
						<Trigger isActive="yes" isFolder="no" isTempTrigger="no" isMultiline="no" isPerlSlashGOption="no" isColorizerTrigger="no" isFilterTrigger="no" isSoundTrigger="no" isColorTrigger="no" isColorTriggerFg="no" isColorTriggerBg="no">
							<name>no pipe</name>
							<script>if matches[2] == snd.emptypipe then
 snd.emptypipe = "none"
end</script>
							<triggerType>0</triggerType>
							<conditonLineDelta>0</conditonLineDelta>
							<mStayOpen>0</mStayOpen>
							<mCommand></mCommand>
							<packageName></packageName>
							<mFgColor>#ff0000</mFgColor>
							<mBgColor>#ffff00</mBgColor>
							<mSoundFile></mSoundFile>
							<colorTriggerFgColor>#000000</colorTriggerFgColor>
							<colorTriggerBgColor>#000000</colorTriggerBgColor>
							<regexCodeList>
								<string>^I don't see what you are trying to put \'(\w+)\' into\.$</string>
							</regexCodeList>
							<regexCodePropertyList>
								<integer>1</integer>
							</regexCodePropertyList>
						</Trigger>
						<Trigger isActive="yes" isFolder="no" isTempTrigger="no" isMultiline="yes" isPerlSlashGOption="no" isColorizerTrigger="no" isFilterTrigger="no" isSoundTrigger="no" isColorTrigger="yes" isColorTriggerFg="no" isColorTriggerBg="no">
							<name>died</name>
							<script>for i in pairs(snd.afflictions) do
 snd.aff_remove(i)
end</script>
							<triggerType>0</triggerType>
							<conditonLineDelta>0</conditonLineDelta>
							<mStayOpen>0</mStayOpen>
							<mCommand></mCommand>
							<packageName></packageName>
							<mFgColor>#ff0000</mFgColor>
							<mBgColor>#ffff00</mBgColor>
							<mSoundFile></mSoundFile>
							<colorTriggerFgColor>#ff0000</colorTriggerFgColor>
							<colorTriggerBgColor>#000000</colorTriggerBgColor>
							<regexCodeList>
								<string>ANSI_COLORS_F{009}_B{000}</string>
								<string>The essence streaming from the floor heals your wounds.</string>
							</regexCodeList>
							<regexCodePropertyList>
								<integer>6</integer>
								<integer>3</integer>
							</regexCodePropertyList>
						</Trigger>
					</TriggerGroup>
					<TriggerGroup isActive="yes" isFolder="yes" isTempTrigger="no" isMultiline="no" isPerlSlashGOption="no" isColorizerTrigger="no" isFilterTrigger="no" isSoundTrigger="no" isColorTrigger="no" isColorTriggerFg="no" isColorTriggerBg="no">
						<name>Balances</name>
						<script></script>
						<triggerType>0</triggerType>
						<conditonLineDelta>0</conditonLineDelta>
						<mStayOpen>0</mStayOpen>
						<mCommand></mCommand>
						<packageName></packageName>
						<mFgColor>#ff0000</mFgColor>
						<mBgColor>#ffff00</mBgColor>
						<mSoundFile></mSoundFile>
						<colorTriggerFgColor>#000000</colorTriggerFgColor>
						<colorTriggerBgColor>#000000</colorTriggerBgColor>
						<regexCodeList />
						<regexCodePropertyList />
						<Trigger isActive="yes" isFolder="no" isTempTrigger="no" isMultiline="no" isPerlSlashGOption="no" isColorizerTrigger="no" isFilterTrigger="no" isSoundTrigger="no" isColorTrigger="no" isColorTriggerFg="no" isColorTriggerBg="no">
							<name>regain balance</name>
							<script>if snd.toggles.balecho then
 deleteLine()
 snd.message("REGAIN balance!", "balance")
end</script>
							<triggerType>0</triggerType>
							<conditonLineDelta>0</conditonLineDelta>
							<mStayOpen>0</mStayOpen>
							<mCommand></mCommand>
							<packageName></packageName>
							<mFgColor>#ff0000</mFgColor>
							<mBgColor>#ffff00</mBgColor>
							<mSoundFile></mSoundFile>
							<colorTriggerFgColor>#000000</colorTriggerFgColor>
							<colorTriggerBgColor>#000000</colorTriggerBgColor>
							<regexCodeList>
								<string>You have recovered balance on all limbs.</string>
							</regexCodeList>
							<regexCodePropertyList>
								<integer>3</integer>
							</regexCodePropertyList>
						</Trigger>
						<Trigger isActive="yes" isFolder="no" isTempTrigger="no" isMultiline="no" isPerlSlashGOption="no" isColorizerTrigger="no" isFilterTrigger="no" isSoundTrigger="no" isColorTrigger="no" isColorTriggerFg="no" isColorTriggerBg="no">
							<name>regain equilibrium</name>
							<script>if snd.toggles.balecho then
 deleteLine()
 snd.message("REGAIN equilibrium!", "balance")
end</script>
							<triggerType>0</triggerType>
							<conditonLineDelta>0</conditonLineDelta>
							<mStayOpen>0</mStayOpen>
							<mCommand></mCommand>
							<packageName></packageName>
							<mFgColor>#ff0000</mFgColor>
							<mBgColor>#ffff00</mBgColor>
							<mSoundFile></mSoundFile>
							<colorTriggerFgColor>#000000</colorTriggerFgColor>
							<colorTriggerBgColor>#000000</colorTriggerBgColor>
							<regexCodeList>
								<string>You have recovered equilibrium.</string>
							</regexCodeList>
							<regexCodePropertyList>
								<integer>3</integer>
							</regexCodePropertyList>
						</Trigger>
						<Trigger isActive="yes" isFolder="no" isTempTrigger="no" isMultiline="no" isPerlSlashGOption="no" isColorizerTrigger="no" isFilterTrigger="no" isSoundTrigger="no" isColorTrigger="no" isColorTriggerFg="no" isColorTriggerBg="no">
							<name>regain arm balance</name>
							<script>if snd.toggles.balecho then
 deleteLine()
 snd.message("REGAIN "..matches[2].." balance!", "balance")
end</script>
							<triggerType>0</triggerType>
							<conditonLineDelta>0</conditonLineDelta>
							<mStayOpen>0</mStayOpen>
							<mCommand></mCommand>
							<packageName></packageName>
							<mFgColor>#ff0000</mFgColor>
							<mBgColor>#ffff00</mBgColor>
							<mSoundFile></mSoundFile>
							<colorTriggerFgColor>#000000</colorTriggerFgColor>
							<colorTriggerBgColor>#000000</colorTriggerBgColor>
							<regexCodeList>
								<string>^You have recovered balance on your (left|right) arm\.$</string>
							</regexCodeList>
							<regexCodePropertyList>
								<integer>1</integer>
							</regexCodePropertyList>
						</Trigger>
						<Trigger isActive="yes" isFolder="no" isTempTrigger="no" isMultiline="no" isPerlSlashGOption="no" isColorizerTrigger="no" isFilterTrigger="no" isSoundTrigger="no" isColorTrigger="no" isColorTriggerFg="no" isColorTriggerBg="no">
							<name>lose balance</name>
							<script>if snd.toggles.balecho then
 deleteLine()
 if matches[3] ~= "2.19" then
  snd.message("Balance: "..matches[3].."s.")
 end
end</script>
							<triggerType>0</triggerType>
							<conditonLineDelta>0</conditonLineDelta>
							<mStayOpen>0</mStayOpen>
							<mCommand></mCommand>
							<packageName></packageName>
							<mFgColor>#ff0000</mFgColor>
							<mBgColor>#ffff00</mBgColor>
							<mSoundFile></mSoundFile>
							<colorTriggerFgColor>#000000</colorTriggerFgColor>
							<colorTriggerBgColor>#000000</colorTriggerBgColor>
							<regexCodeList>
								<string>^(Balance|Left Hand Balance|Right Hand Balance) Used: (.*) seconds$</string>
							</regexCodeList>
							<regexCodePropertyList>
								<integer>1</integer>
							</regexCodePropertyList>
						</Trigger>
						<Trigger isActive="yes" isFolder="no" isTempTrigger="no" isMultiline="no" isPerlSlashGOption="no" isColorizerTrigger="no" isFilterTrigger="no" isSoundTrigger="no" isColorTrigger="no" isColorTriggerFg="no" isColorTriggerBg="no">
							<name>lose equilibrium</name>
							<script>if snd.toggles.balecho then
 deleteLine()
 snd.message("Equilibrium: "..matches[2].."s.")
end</script>
							<triggerType>0</triggerType>
							<conditonLineDelta>0</conditonLineDelta>
							<mStayOpen>0</mStayOpen>
							<mCommand></mCommand>
							<packageName></packageName>
							<mFgColor>#ff0000</mFgColor>
							<mBgColor>#ffff00</mBgColor>
							<mSoundFile></mSoundFile>
							<colorTriggerFgColor>#000000</colorTriggerFgColor>
							<colorTriggerBgColor>#000000</colorTriggerBgColor>
							<regexCodeList>
								<string>^Equilibrium Used: (.*) seconds$</string>
							</regexCodeList>
							<regexCodePropertyList>
								<integer>1</integer>
							</regexCodePropertyList>
						</Trigger>
						<Trigger isActive="yes" isFolder="no" isTempTrigger="no" isMultiline="no" isPerlSlashGOption="no" isColorizerTrigger="no" isFilterTrigger="no" isSoundTrigger="no" isColorTrigger="no" isColorTriggerFg="no" isColorTriggerBg="no">
							<name>queue</name>
							<script>deleteLine()
snd.message("Queue: "..matches[2])</script>
							<triggerType>0</triggerType>
							<conditonLineDelta>0</conditonLineDelta>
							<mStayOpen>0</mStayOpen>
							<mCommand></mCommand>
							<packageName></packageName>
							<mFgColor>#ff0000</mFgColor>
							<mBgColor>#ffff00</mBgColor>
							<mSoundFile></mSoundFile>
							<colorTriggerFgColor>#000000</colorTriggerFgColor>
							<colorTriggerBgColor>#000000</colorTriggerBgColor>
							<regexCodeList>
								<string>^You will execute the following command when you next regain equilibrium and balance: (.*)$</string>
							</regexCodeList>
							<regexCodePropertyList>
								<integer>1</integer>
							</regexCodePropertyList>
						</Trigger>
						<TriggerGroup isActive="yes" isFolder="yes" isTempTrigger="no" isMultiline="no" isPerlSlashGOption="no" isColorizerTrigger="no" isFilterTrigger="no" isSoundTrigger="no" isColorTrigger="no" isColorTriggerFg="no" isColorTriggerBg="no">
							<name>Fitness</name>
							<script></script>
							<triggerType>0</triggerType>
							<conditonLineDelta>0</conditonLineDelta>
							<mStayOpen>0</mStayOpen>
							<mCommand></mCommand>
							<packageName></packageName>
							<mFgColor>#ff0000</mFgColor>
							<mBgColor>#ffff00</mBgColor>
							<mSoundFile></mSoundFile>
							<colorTriggerFgColor>#000000</colorTriggerFgColor>
							<colorTriggerBgColor>#000000</colorTriggerBgColor>
							<regexCodeList />
							<regexCodePropertyList />
							<Trigger isActive="yes" isFolder="no" isTempTrigger="no" isMultiline="no" isPerlSlashGOption="no" isColorizerTrigger="no" isFilterTrigger="no" isSoundTrigger="no" isColorTrigger="no" isColorTriggerFg="no" isColorTriggerBg="no">
								<name>used</name>
								<script>snd.balance.fitness = false</script>
								<triggerType>0</triggerType>
								<conditonLineDelta>0</conditonLineDelta>
								<mStayOpen>0</mStayOpen>
								<mCommand></mCommand>
								<packageName></packageName>
								<mFgColor>#ff0000</mFgColor>
								<mBgColor>#ffff00</mBgColor>
								<mSoundFile></mSoundFile>
								<colorTriggerFgColor>#000000</colorTriggerFgColor>
								<colorTriggerBgColor>#000000</colorTriggerBgColor>
								<regexCodeList>
									<string>You inhale deeply, allowing the air to fill your mighty lungs.</string>
								</regexCodeList>
								<regexCodePropertyList>
									<integer>3</integer>
								</regexCodePropertyList>
							</Trigger>
							<Trigger isActive="yes" isFolder="no" isTempTrigger="no" isMultiline="no" isPerlSlashGOption="no" isColorizerTrigger="no" isFilterTrigger="no" isSoundTrigger="no" isColorTrigger="no" isColorTriggerFg="no" isColorTriggerBg="no">
								<name>can use again</name>
								<script>snd.balance.fitness = true</script>
								<triggerType>0</triggerType>
								<conditonLineDelta>0</conditonLineDelta>
								<mStayOpen>0</mStayOpen>
								<mCommand></mCommand>
								<packageName></packageName>
								<mFgColor>#ff0000</mFgColor>
								<mBgColor>#ffff00</mBgColor>
								<mSoundFile></mSoundFile>
								<colorTriggerFgColor>#000000</colorTriggerFgColor>
								<colorTriggerBgColor>#000000</colorTriggerBgColor>
								<regexCodeList>
									<string>You may once again use fitness to control your breathing.</string>
								</regexCodeList>
								<regexCodePropertyList>
									<integer>3</integer>
								</regexCodePropertyList>
							</Trigger>
						</TriggerGroup>
						<TriggerGroup isActive="yes" isFolder="yes" isTempTrigger="no" isMultiline="no" isPerlSlashGOption="no" isColorizerTrigger="no" isFilterTrigger="no" isSoundTrigger="no" isColorTrigger="no" isColorTriggerFg="no" isColorTriggerBg="no">
							<name>Carnifex</name>
							<script></script>
							<triggerType>0</triggerType>
							<conditonLineDelta>0</conditonLineDelta>
							<mStayOpen>0</mStayOpen>
							<mCommand></mCommand>
							<packageName></packageName>
							<mFgColor>#ff0000</mFgColor>
							<mBgColor>#ffff00</mBgColor>
							<mSoundFile></mSoundFile>
							<colorTriggerFgColor>#000000</colorTriggerFgColor>
							<colorTriggerBgColor>#000000</colorTriggerBgColor>
							<regexCodeList />
							<regexCodePropertyList />
							<Trigger isActive="yes" isFolder="no" isTempTrigger="no" isMultiline="no" isPerlSlashGOption="no" isColorizerTrigger="no" isFilterTrigger="no" isSoundTrigger="no" isColorTrigger="no" isColorTriggerFg="no" isColorTriggerBg="no">
								<name>purged</name>
								<script>snd.balance.purge = false</script>
								<triggerType>0</triggerType>
								<conditonLineDelta>0</conditonLineDelta>
								<mStayOpen>0</mStayOpen>
								<mCommand></mCommand>
								<packageName></packageName>
								<mFgColor>#ff0000</mFgColor>
								<mBgColor>#ffff00</mBgColor>
								<mSoundFile></mSoundFile>
								<colorTriggerFgColor>#000000</colorTriggerFgColor>
								<colorTriggerBgColor>#000000</colorTriggerBgColor>
								<regexCodeList>
									<string>You purge your body of weakness, imbuing your soul with strength.</string>
									<string>You purge your body of weakness, but find nothing to cleanse.</string>
								</regexCodeList>
								<regexCodePropertyList>
									<integer>3</integer>
									<integer>3</integer>
								</regexCodePropertyList>
							</Trigger>
							<Trigger isActive="yes" isFolder="no" isTempTrigger="no" isMultiline="no" isPerlSlashGOption="no" isColorizerTrigger="no" isFilterTrigger="no" isSoundTrigger="no" isColorTrigger="no" isColorTriggerFg="no" isColorTriggerBg="no">
								<name>can't purge</name>
								<script>snd.balance.purge = false</script>
								<triggerType>0</triggerType>
								<conditonLineDelta>0</conditonLineDelta>
								<mStayOpen>0</mStayOpen>
								<mCommand></mCommand>
								<packageName></packageName>
								<mFgColor>#ff0000</mFgColor>
								<mBgColor>#ffff00</mBgColor>
								<mSoundFile></mSoundFile>
								<colorTriggerFgColor>#000000</colorTriggerFgColor>
								<colorTriggerBgColor>#000000</colorTriggerBgColor>
								<regexCodeList>
									<string>Your soul has not recovered enough to be purged once more.</string>
								</regexCodeList>
								<regexCodePropertyList>
									<integer>3</integer>
								</regexCodePropertyList>
							</Trigger>
							<Trigger isActive="yes" isFolder="no" isTempTrigger="no" isMultiline="no" isPerlSlashGOption="no" isColorizerTrigger="no" isFilterTrigger="no" isSoundTrigger="no" isColorTrigger="no" isColorTriggerFg="no" isColorTriggerBg="no">
								<name>purge up</name>
								<script></script>
								<triggerType>0</triggerType>
								<conditonLineDelta>0</conditonLineDelta>
								<mStayOpen>0</mStayOpen>
								<mCommand></mCommand>
								<packageName></packageName>
								<mFgColor>#ff0000</mFgColor>
								<mBgColor>#ffff00</mBgColor>
								<mSoundFile></mSoundFile>
								<colorTriggerFgColor>#000000</colorTriggerFgColor>
								<colorTriggerBgColor>#000000</colorTriggerBgColor>
								<regexCodeList>
									<string>You may once again purge your body.</string>
								</regexCodeList>
								<regexCodePropertyList>
									<integer>3</integer>
								</regexCodePropertyList>
							</Trigger>
							<Trigger isActive="yes" isFolder="no" isTempTrigger="no" isMultiline="no" isPerlSlashGOption="no" isColorizerTrigger="no" isFilterTrigger="no" isSoundTrigger="no" isColorTrigger="no" isColorTriggerFg="no" isColorTriggerBg="no">
								<name>Furor can use</name>
								<script>snd.balance.furor = true</script>
								<triggerType>0</triggerType>
								<conditonLineDelta>0</conditonLineDelta>
								<mStayOpen>0</mStayOpen>
								<mCommand></mCommand>
								<packageName></packageName>
								<mFgColor>#ff0000</mFgColor>
								<mBgColor>#ffff00</mBgColor>
								<mSoundFile></mSoundFile>
								<colorTriggerFgColor>#000000</colorTriggerFgColor>
								<colorTriggerBgColor>#000000</colorTriggerBgColor>
								<regexCodeList>
									<string>^You may once again throw yourself into a furor.$</string>
								</regexCodeList>
								<regexCodePropertyList>
									<integer>1</integer>
								</regexCodePropertyList>
							</Trigger>
							<Trigger isActive="yes" isFolder="no" isTempTrigger="no" isMultiline="no" isPerlSlashGOption="no" isColorizerTrigger="no" isFilterTrigger="no" isSoundTrigger="no" isColorTrigger="no" isColorTriggerFg="no" isColorTriggerBg="no">
								<name>Furor not ready</name>
								<script>snd.balance.furor = false</script>
								<triggerType>0</triggerType>
								<conditonLineDelta>0</conditonLineDelta>
								<mStayOpen>0</mStayOpen>
								<mCommand></mCommand>
								<packageName></packageName>
								<mFgColor>#ff0000</mFgColor>
								<mBgColor>#ffff00</mBgColor>
								<mSoundFile></mSoundFile>
								<colorTriggerFgColor>#000000</colorTriggerFgColor>
								<colorTriggerBgColor>#000000</colorTriggerBgColor>
								<regexCodeList>
									<string>^You cannot throw yourself into a furor again yet.$</string>
									<string>^You use Savagery Furor.$</string>
								</regexCodeList>
								<regexCodePropertyList>
									<integer>1</integer>
									<integer>1</integer>
								</regexCodePropertyList>
							</Trigger>
						</TriggerGroup>
						<TriggerGroup isActive="yes" isFolder="yes" isTempTrigger="no" isMultiline="no" isPerlSlashGOption="no" isColorizerTrigger="no" isFilterTrigger="no" isSoundTrigger="no" isColorTrigger="no" isColorTriggerFg="no" isColorTriggerBg="no">
							<name>Syssin</name>
							<script></script>
							<triggerType>0</triggerType>
							<conditonLineDelta>0</conditonLineDelta>
							<mStayOpen>0</mStayOpen>
							<mCommand></mCommand>
							<packageName></packageName>
							<mFgColor>#ff0000</mFgColor>
							<mBgColor>#ffff00</mBgColor>
							<mSoundFile></mSoundFile>
							<colorTriggerFgColor>#000000</colorTriggerFgColor>
							<colorTriggerBgColor>#000000</colorTriggerBgColor>
							<regexCodeList />
							<regexCodePropertyList />
							<Trigger isActive="yes" isFolder="no" isTempTrigger="no" isMultiline="no" isPerlSlashGOption="no" isColorizerTrigger="no" isFilterTrigger="no" isSoundTrigger="no" isColorTrigger="no" isColorTriggerFg="no" isColorTriggerBg="no">
								<name>shrugged</name>
								<script>snd.balance.shrug = false</script>
								<triggerType>0</triggerType>
								<conditonLineDelta>0</conditonLineDelta>
								<mStayOpen>0</mStayOpen>
								<mCommand></mCommand>
								<packageName></packageName>
								<mFgColor>#ff0000</mFgColor>
								<mBgColor>#ffff00</mBgColor>
								<mSoundFile></mSoundFile>
								<colorTriggerFgColor>#000000</colorTriggerFgColor>
								<colorTriggerBgColor>#000000</colorTriggerBgColor>
								<regexCodeList>
									<string>Your immunity system boils as it shrugs off poisons from your body.</string>
								</regexCodeList>
								<regexCodePropertyList>
									<integer>3</integer>
								</regexCodePropertyList>
							</Trigger>
							<Trigger isActive="yes" isFolder="no" isTempTrigger="no" isMultiline="no" isPerlSlashGOption="no" isColorizerTrigger="no" isFilterTrigger="no" isSoundTrigger="no" isColorTrigger="no" isColorTriggerFg="no" isColorTriggerBg="no">
								<name>can't shrug</name>
								<script>snd.balance.shrug = false</script>
								<triggerType>0</triggerType>
								<conditonLineDelta>0</conditonLineDelta>
								<mStayOpen>0</mStayOpen>
								<mCommand></mCommand>
								<packageName></packageName>
								<mFgColor>#ff0000</mFgColor>
								<mBgColor>#ffff00</mBgColor>
								<mSoundFile></mSoundFile>
								<colorTriggerFgColor>#000000</colorTriggerFgColor>
								<colorTriggerBgColor>#000000</colorTriggerBgColor>
								<regexCodeList>
									<string>You are unable to shrug off another affliction so soon.</string>
								</regexCodeList>
								<regexCodePropertyList>
									<integer>3</integer>
								</regexCodePropertyList>
							</Trigger>
							<Trigger isActive="yes" isFolder="no" isTempTrigger="no" isMultiline="no" isPerlSlashGOption="no" isColorizerTrigger="no" isFilterTrigger="no" isSoundTrigger="no" isColorTrigger="no" isColorTriggerFg="no" isColorTriggerBg="no">
								<name>shrug up</name>
								<script>snd.balance.shrug = true</script>
								<triggerType>0</triggerType>
								<conditonLineDelta>0</conditonLineDelta>
								<mStayOpen>0</mStayOpen>
								<mCommand></mCommand>
								<packageName></packageName>
								<mFgColor>#ff0000</mFgColor>
								<mBgColor>#ffff00</mBgColor>
								<mSoundFile></mSoundFile>
								<colorTriggerFgColor>#000000</colorTriggerFgColor>
								<colorTriggerBgColor>#000000</colorTriggerBgColor>
								<regexCodeList>
									<string>You are able to shrug off another venom.</string>
								</regexCodeList>
								<regexCodePropertyList>
									<integer>3</integer>
								</regexCodePropertyList>
							</Trigger>
						</TriggerGroup>
						<TriggerGroup isActive="yes" isFolder="yes" isTempTrigger="no" isMultiline="no" isPerlSlashGOption="no" isColorizerTrigger="no" isFilterTrigger="no" isSoundTrigger="no" isColorTrigger="no" isColorTriggerFg="no" isColorTriggerBg="no">
							<name>Luminary</name>
							<script></script>
							<triggerType>0</triggerType>
							<conditonLineDelta>0</conditonLineDelta>
							<mStayOpen>0</mStayOpen>
							<mCommand></mCommand>
							<packageName></packageName>
							<mFgColor>#ff0000</mFgColor>
							<mBgColor>#ffff00</mBgColor>
							<mSoundFile></mSoundFile>
							<colorTriggerFgColor>#000000</colorTriggerFgColor>
							<colorTriggerBgColor>#000000</colorTriggerBgColor>
							<regexCodeList />
							<regexCodePropertyList />
							<Trigger isActive="yes" isFolder="no" isTempTrigger="no" isMultiline="no" isPerlSlashGOption="no" isColorizerTrigger="no" isFilterTrigger="no" isSoundTrigger="no" isColorTrigger="no" isColorTriggerFg="no" isColorTriggerBg="no">
								<name>cleansed</name>
								<script>snd.balance.cleanse = false</script>
								<triggerType>0</triggerType>
								<conditonLineDelta>0</conditonLineDelta>
								<mStayOpen>0</mStayOpen>
								<mCommand></mCommand>
								<packageName></packageName>
								<mFgColor>#ff0000</mFgColor>
								<mBgColor>#ffff00</mBgColor>
								<mSoundFile></mSoundFile>
								<colorTriggerFgColor>#000000</colorTriggerFgColor>
								<colorTriggerBgColor>#000000</colorTriggerBgColor>
								<regexCodeList>
									<string>You raise your hands to the sky, and call a tongue of fire down upon yourself.</string>
								</regexCodeList>
								<regexCodePropertyList>
									<integer>3</integer>
								</regexCodePropertyList>
							</Trigger>
							<Trigger isActive="yes" isFolder="no" isTempTrigger="no" isMultiline="no" isPerlSlashGOption="no" isColorizerTrigger="no" isFilterTrigger="no" isSoundTrigger="no" isColorTrigger="no" isColorTriggerFg="no" isColorTriggerBg="no">
								<name>can't cleanse</name>
								<script>snd.balance.cleanse = false</script>
								<triggerType>0</triggerType>
								<conditonLineDelta>0</conditonLineDelta>
								<mStayOpen>0</mStayOpen>
								<mCommand></mCommand>
								<packageName></packageName>
								<mFgColor>#ff0000</mFgColor>
								<mBgColor>#ffff00</mBgColor>
								<mSoundFile></mSoundFile>
								<colorTriggerFgColor>#000000</colorTriggerFgColor>
								<colorTriggerBgColor>#000000</colorTriggerBgColor>
								<regexCodeList>
									<string>You cannot cleanse yourself again yet.</string>
								</regexCodeList>
								<regexCodePropertyList>
									<integer>3</integer>
								</regexCodePropertyList>
							</Trigger>
							<Trigger isActive="yes" isFolder="no" isTempTrigger="no" isMultiline="no" isPerlSlashGOption="no" isColorizerTrigger="no" isFilterTrigger="no" isSoundTrigger="no" isColorTrigger="no" isColorTriggerFg="no" isColorTriggerBg="no">
								<name>cleanse up</name>
								<script>snd.balance.cleanse = true</script>
								<triggerType>0</triggerType>
								<conditonLineDelta>0</conditonLineDelta>
								<mStayOpen>0</mStayOpen>
								<mCommand></mCommand>
								<packageName></packageName>
								<mFgColor>#ff0000</mFgColor>
								<mBgColor>#ffff00</mBgColor>
								<mSoundFile></mSoundFile>
								<colorTriggerFgColor>#000000</colorTriggerFgColor>
								<colorTriggerBgColor>#000000</colorTriggerBgColor>
								<regexCodeList>
									<string>You can once again cleanse yourself with fire.</string>
								</regexCodeList>
								<regexCodePropertyList>
									<integer>3</integer>
								</regexCodePropertyList>
							</Trigger>
							<Trigger isActive="yes" isFolder="no" isTempTrigger="no" isMultiline="no" isPerlSlashGOption="no" isColorizerTrigger="no" isFilterTrigger="no" isSoundTrigger="no" isColorTrigger="no" isColorTriggerFg="no" isColorTriggerBg="no">
								<name>used</name>
								<script>snd.balance.battle = false
tempTimer(5, [[snd.balance.battle = true]])</script>
								<triggerType>0</triggerType>
								<conditonLineDelta>0</conditonLineDelta>
								<mStayOpen>0</mStayOpen>
								<mCommand></mCommand>
								<packageName></packageName>
								<mFgColor>#ff0000</mFgColor>
								<mBgColor>#ffff00</mBgColor>
								<mSoundFile></mSoundFile>
								<colorTriggerFgColor>#000000</colorTriggerFgColor>
								<colorTriggerBgColor>#000000</colorTriggerBgColor>
								<regexCodeList>
									<string>^You use Spirituality Battle \(.+\) on .+\.$</string>
								</regexCodeList>
								<regexCodePropertyList>
									<integer>1</integer>
								</regexCodePropertyList>
							</Trigger>
							<Trigger isActive="yes" isFolder="no" isTempTrigger="no" isMultiline="no" isPerlSlashGOption="no" isColorizerTrigger="no" isFilterTrigger="no" isSoundTrigger="no" isColorTrigger="no" isColorTriggerFg="no" isColorTriggerBg="no">
								<name>can use again</name>
								<script></script>
								<triggerType>0</triggerType>
								<conditonLineDelta>0</conditonLineDelta>
								<mStayOpen>0</mStayOpen>
								<mCommand></mCommand>
								<packageName></packageName>
								<mFgColor>#ff0000</mFgColor>
								<mBgColor>#ffff00</mBgColor>
								<mSoundFile></mSoundFile>
								<colorTriggerFgColor>#000000</colorTriggerFgColor>
								<colorTriggerBgColor>#000000</colorTriggerBgColor>
								<regexCodeList>
									<string>You can wrack the spirit of another once more.</string>
								</regexCodeList>
								<regexCodePropertyList>
									<integer>3</integer>
								</regexCodePropertyList>
							</Trigger>
						</TriggerGroup>
						<TriggerGroup isActive="yes" isFolder="yes" isTempTrigger="no" isMultiline="no" isPerlSlashGOption="no" isColorizerTrigger="no" isFilterTrigger="no" isSoundTrigger="no" isColorTrigger="no" isColorTriggerFg="no" isColorTriggerBg="no">
							<name>Archivist</name>
							<script></script>
							<triggerType>0</triggerType>
							<conditonLineDelta>0</conditonLineDelta>
							<mStayOpen>0</mStayOpen>
							<mCommand></mCommand>
							<packageName></packageName>
							<mFgColor>#ff0000</mFgColor>
							<mBgColor>#ffff00</mBgColor>
							<mSoundFile></mSoundFile>
							<colorTriggerFgColor>#000000</colorTriggerFgColor>
							<colorTriggerBgColor>#000000</colorTriggerBgColor>
							<regexCodeList />
							<regexCodePropertyList />
							<Trigger isActive="yes" isFolder="no" isTempTrigger="no" isMultiline="no" isPerlSlashGOption="no" isColorizerTrigger="no" isFilterTrigger="no" isSoundTrigger="no" isColorTrigger="no" isColorTriggerFg="no" isColorTriggerBg="no">
								<name>Token Made</name>
								<script>send("ii token")</script>
								<triggerType>0</triggerType>
								<conditonLineDelta>0</conditonLineDelta>
								<mStayOpen>0</mStayOpen>
								<mCommand></mCommand>
								<packageName></packageName>
								<mFgColor>#ff0000</mFgColor>
								<mBgColor>#ffff00</mBgColor>
								<mSoundFile></mSoundFile>
								<colorTriggerFgColor>#000000</colorTriggerFgColor>
								<colorTriggerBgColor>#000000</colorTriggerBgColor>
								<regexCodeList>
									<string>^Breaking down the wood on hand, you quickly craft together a wooden (the )?\w+.$</string>
								</regexCodeList>
								<regexCodePropertyList>
									<integer>1</integer>
								</regexCodePropertyList>
							</Trigger>
							<Trigger isActive="yes" isFolder="no" isTempTrigger="no" isMultiline="no" isPerlSlashGOption="no" isColorizerTrigger="no" isFilterTrigger="no" isSoundTrigger="no" isColorTrigger="no" isColorTriggerFg="no" isColorTriggerBg="no">
								<name>Token_Capture</name>
								<script>snd.my_token = matches[2]</script>
								<triggerType>0</triggerType>
								<conditonLineDelta>0</conditonLineDelta>
								<mStayOpen>0</mStayOpen>
								<mCommand></mCommand>
								<packageName></packageName>
								<mFgColor>#ff0000</mFgColor>
								<mBgColor>#ffff00</mBgColor>
								<mSoundFile></mSoundFile>
								<colorTriggerFgColor>#000000</colorTriggerFgColor>
								<colorTriggerBgColor>#000000</colorTriggerBgColor>
								<regexCodeList>
									<string>^\"pyramid(\d+)\"\s+a wooden pyramid.*$</string>
									<string>^\"sphere(\d+)"\s+a wooden sphere.*$</string>
									<string>^\"cube(\d+)"\s+a wooden cube.*$</string>
									<string>^"sphere(\d+)"\s+a wooden sphere.*$</string>
								</regexCodeList>
								<regexCodePropertyList>
									<integer>1</integer>
									<integer>1</integer>
									<integer>1</integer>
									<integer>1</integer>
								</regexCodePropertyList>
							</Trigger>
							<Trigger isActive="yes" isFolder="no" isTempTrigger="no" isMultiline="no" isPerlSlashGOption="no" isColorizerTrigger="no" isFilterTrigger="no" isSoundTrigger="no" isColorTrigger="no" isColorTriggerFg="no" isColorTriggerBg="no">
								<name>Geo Invert</name>
								<script>snd.geoinvert = true</script>
								<triggerType>0</triggerType>
								<conditonLineDelta>0</conditonLineDelta>
								<mStayOpen>0</mStayOpen>
								<mCommand></mCommand>
								<packageName></packageName>
								<mFgColor>#ff0000</mFgColor>
								<mBgColor>#ffff00</mBgColor>
								<mSoundFile></mSoundFile>
								<colorTriggerFgColor>#000000</colorTriggerFgColor>
								<colorTriggerBgColor>#000000</colorTriggerBgColor>
								<regexCodeList>
									<string>^You use Geometrics Invert on a wooden (the )?\w+.$</string>
								</regexCodeList>
								<regexCodePropertyList>
									<integer>1</integer>
								</regexCodePropertyList>
							</Trigger>
							<Trigger isActive="yes" isFolder="no" isTempTrigger="no" isMultiline="no" isPerlSlashGOption="no" isColorizerTrigger="no" isFilterTrigger="no" isSoundTrigger="no" isColorTrigger="no" isColorTriggerFg="no" isColorTriggerBg="no">
								<name>Geo Invert and Trace Off</name>
								<script>snd.geoinvert = false
snd.geotrace = false
snd.send("qeb incite lens")</script>
								<triggerType>0</triggerType>
								<conditonLineDelta>0</conditonLineDelta>
								<mStayOpen>0</mStayOpen>
								<mCommand></mCommand>
								<packageName></packageName>
								<mFgColor>#ff0000</mFgColor>
								<mBgColor>#ffff00</mBgColor>
								<mSoundFile></mSoundFile>
								<colorTriggerFgColor>#000000</colorTriggerFgColor>
								<colorTriggerBgColor>#000000</colorTriggerBgColor>
								<regexCodeList>
									<string>^You invert a wooden (the )?\w+, recovering it from its previously fixed position.$</string>
									<string>^You use Geometrics Invert \(end\) on a wooden (the )?\w+.$</string>
								</regexCodeList>
								<regexCodePropertyList>
									<integer>1</integer>
									<integer>1</integer>
								</regexCodePropertyList>
							</Trigger>
							<Trigger isActive="yes" isFolder="no" isTempTrigger="no" isMultiline="no" isPerlSlashGOption="no" isColorizerTrigger="no" isFilterTrigger="no" isSoundTrigger="no" isColorTrigger="no" isColorTriggerFg="no" isColorTriggerBg="no">
								<name>Geo Trace On</name>
								<script>snd.geotrace = true</script>
								<triggerType>0</triggerType>
								<conditonLineDelta>0</conditonLineDelta>
								<mStayOpen>0</mStayOpen>
								<mCommand></mCommand>
								<packageName></packageName>
								<mFgColor>#ff0000</mFgColor>
								<mBgColor>#ffff00</mBgColor>
								<mSoundFile></mSoundFile>
								<colorTriggerFgColor>#000000</colorTriggerFgColor>
								<colorTriggerBgColor>#000000</colorTriggerBgColor>
								<regexCodeList>
									<string>^You use Geometrics Trace on (the )?\w+.$</string>
								</regexCodeList>
								<regexCodePropertyList>
									<integer>1</integer>
								</regexCodePropertyList>
							</Trigger>
							<Trigger isActive="yes" isFolder="no" isTempTrigger="no" isMultiline="no" isPerlSlashGOption="no" isColorizerTrigger="no" isFilterTrigger="no" isSoundTrigger="no" isColorTrigger="no" isColorTriggerFg="no" isColorTriggerBg="no">
								<name>No Token Down</name>
								<script>snd.send("qeb drop "..snd.my_token..snd.sep.."geo invert")</script>
								<triggerType>0</triggerType>
								<conditonLineDelta>0</conditonLineDelta>
								<mStayOpen>0</mStayOpen>
								<mCommand></mCommand>
								<packageName></packageName>
								<mFgColor>#ff0000</mFgColor>
								<mBgColor>#ffff00</mBgColor>
								<mSoundFile></mSoundFile>
								<colorTriggerFgColor>#000000</colorTriggerFgColor>
								<colorTriggerBgColor>#000000</colorTriggerBgColor>
								<regexCodeList>
									<string>^Your (the )?\w+ must be placed upon the ground first.$</string>
								</regexCodeList>
								<regexCodePropertyList>
									<integer>1</integer>
								</regexCodePropertyList>
							</Trigger>
							<Trigger isActive="yes" isFolder="no" isTempTrigger="no" isMultiline="no" isPerlSlashGOption="no" isColorizerTrigger="no" isFilterTrigger="no" isSoundTrigger="no" isColorTrigger="no" isColorTriggerFg="no" isColorTriggerBg="no">
								<name>Madness Available</name>
								<script>snd.madnessused = false</script>
								<triggerType>0</triggerType>
								<conditonLineDelta>0</conditonLineDelta>
								<mStayOpen>0</mStayOpen>
								<mCommand></mCommand>
								<packageName></packageName>
								<mFgColor>#ff0000</mFgColor>
								<mBgColor>#ffff00</mBgColor>
								<mSoundFile></mSoundFile>
								<colorTriggerFgColor>#000000</colorTriggerFgColor>
								<colorTriggerBgColor>#000000</colorTriggerBgColor>
								<regexCodeList>
									<string>You may inflict madness upon another once again.</string>
								</regexCodeList>
								<regexCodePropertyList>
									<integer>3</integer>
								</regexCodePropertyList>
							</Trigger>
							<Trigger isActive="yes" isFolder="no" isTempTrigger="no" isMultiline="no" isPerlSlashGOption="no" isColorizerTrigger="no" isFilterTrigger="no" isSoundTrigger="no" isColorTrigger="no" isColorTriggerFg="no" isColorTriggerBg="no">
								<name>Madness Used by You and Not Ready</name>
								<script>snd.madnessused = true</script>
								<triggerType>0</triggerType>
								<conditonLineDelta>0</conditonLineDelta>
								<mStayOpen>0</mStayOpen>
								<mCommand></mCommand>
								<packageName></packageName>
								<mFgColor>#ff0000</mFgColor>
								<mBgColor>#ffff00</mBgColor>
								<mSoundFile></mSoundFile>
								<colorTriggerFgColor>#000000</colorTriggerFgColor>
								<colorTriggerBgColor>#000000</colorTriggerBgColor>
								<regexCodeList>
									<string>You may not inflict madness upon another so soon.</string>
								</regexCodeList>
								<regexCodePropertyList>
									<integer>3</integer>
								</regexCodePropertyList>
							</Trigger>
							<Trigger isActive="yes" isFolder="no" isTempTrigger="no" isMultiline="no" isPerlSlashGOption="no" isColorizerTrigger="no" isFilterTrigger="no" isSoundTrigger="no" isColorTrigger="no" isColorTriggerFg="no" isColorTriggerBg="no">
								<name>Empower Ready</name>
								<script>snd.empowerready = true</script>
								<triggerType>0</triggerType>
								<conditonLineDelta>0</conditonLineDelta>
								<mStayOpen>0</mStayOpen>
								<mCommand></mCommand>
								<packageName></packageName>
								<mFgColor>#ff0000</mFgColor>
								<mBgColor>#ffff00</mBgColor>
								<mSoundFile></mSoundFile>
								<colorTriggerFgColor>#000000</colorTriggerFgColor>
								<colorTriggerBgColor>#000000</colorTriggerBgColor>
								<regexCodeList>
									<string>Your mind is now capable of empowering a new number.</string>
								</regexCodeList>
								<regexCodePropertyList>
									<integer>3</integer>
								</regexCodePropertyList>
							</Trigger>
							<Trigger isActive="yes" isFolder="no" isTempTrigger="no" isMultiline="no" isPerlSlashGOption="no" isColorizerTrigger="no" isFilterTrigger="no" isSoundTrigger="no" isColorTrigger="no" isColorTriggerFg="no" isColorTriggerBg="no">
								<name>Empower Type</name>
								<script>snd.empowertype = matches[2]
snd.empowerready = false</script>
								<triggerType>0</triggerType>
								<conditonLineDelta>0</conditonLineDelta>
								<mStayOpen>0</mStayOpen>
								<mCommand></mCommand>
								<packageName></packageName>
								<mFgColor>#ff0000</mFgColor>
								<mBgColor>#ffff00</mBgColor>
								<mSoundFile></mSoundFile>
								<colorTriggerFgColor>#000000</colorTriggerFgColor>
								<colorTriggerBgColor>#000000</colorTriggerBgColor>
								<regexCodeList>
									<string>^You empower the number (\w+) to act upon its sphere of influence.$</string>
								</regexCodeList>
								<regexCodePropertyList>
									<integer>1</integer>
								</regexCodePropertyList>
							</Trigger>
							<Trigger isActive="yes" isFolder="no" isTempTrigger="no" isMultiline="no" isPerlSlashGOption="no" isColorizerTrigger="no" isFilterTrigger="no" isSoundTrigger="no" isColorTrigger="no" isColorTriggerFg="no" isColorTriggerBg="no">
								<name>No Token</name>
								<script>snd.send("qeb incite lens")</script>
								<triggerType>0</triggerType>
								<conditonLineDelta>0</conditonLineDelta>
								<mStayOpen>0</mStayOpen>
								<mCommand></mCommand>
								<packageName></packageName>
								<mFgColor>#ff0000</mFgColor>
								<mBgColor>#ffff00</mBgColor>
								<mSoundFile></mSoundFile>
								<colorTriggerFgColor>#000000</colorTriggerFgColor>
								<colorTriggerBgColor>#000000</colorTriggerBgColor>
								<regexCodeList>
									<string>^You hold no "token".$</string>
								</regexCodeList>
								<regexCodePropertyList>
									<integer>1</integer>
								</regexCodePropertyList>
							</Trigger>
							<Trigger isActive="yes" isFolder="no" isTempTrigger="no" isMultiline="no" isPerlSlashGOption="no" isColorizerTrigger="no" isFilterTrigger="no" isSoundTrigger="no" isColorTrigger="no" isColorTriggerFg="no" isColorTriggerBg="no">
								<name>Slain</name>
								<script>if snd.geotrace == true then
	snd.empowerready = true
	snd.empowertype = "nil"
else
	snd.geotrace = false
	snd.geoinvert = false
	snd.empowerready = true
	snd.empowertype = "nil"
end</script>
								<triggerType>0</triggerType>
								<conditonLineDelta>0</conditonLineDelta>
								<mStayOpen>0</mStayOpen>
								<mCommand></mCommand>
								<packageName></packageName>
								<mFgColor>#ff0000</mFgColor>
								<mBgColor>#ffff00</mBgColor>
								<mSoundFile></mSoundFile>
								<colorTriggerFgColor>#000000</colorTriggerFgColor>
								<colorTriggerBgColor>#000000</colorTriggerBgColor>
								<regexCodeList>
									<string>^You have been slain by .*.$</string>
									<string>^You are dead and cannot do that.$</string>
								</regexCodeList>
								<regexCodePropertyList>
									<integer>1</integer>
									<integer>1</integer>
								</regexCodePropertyList>
							</Trigger>
							<Trigger isActive="yes" isFolder="no" isTempTrigger="no" isMultiline="no" isPerlSlashGOption="no" isColorizerTrigger="no" isFilterTrigger="no" isSoundTrigger="no" isColorTrigger="no" isColorTriggerFg="no" isColorTriggerBg="no">
								<name>No Token 2.0</name>
								<script>if snd.my_token == matches[2] then
	snd.send("qeb incite lens")
end</script>
								<triggerType>0</triggerType>
								<conditonLineDelta>0</conditonLineDelta>
								<mStayOpen>0</mStayOpen>
								<mCommand></mCommand>
								<packageName></packageName>
								<mFgColor>#ff0000</mFgColor>
								<mBgColor>#ffff00</mBgColor>
								<mSoundFile></mSoundFile>
								<colorTriggerFgColor>#000000</colorTriggerFgColor>
								<colorTriggerBgColor>#000000</colorTriggerBgColor>
								<regexCodeList>
									<string>^You hold no \"(\d+)\".$</string>
								</regexCodeList>
								<regexCodePropertyList>
									<integer>1</integer>
								</regexCodePropertyList>
							</Trigger>
						</TriggerGroup>
						<TriggerGroup isActive="yes" isFolder="yes" isTempTrigger="no" isMultiline="no" isPerlSlashGOption="no" isColorizerTrigger="no" isFilterTrigger="no" isSoundTrigger="no" isColorTrigger="no" isColorTriggerFg="no" isColorTriggerBg="no">
							<name>Wayfarer</name>
							<script></script>
							<triggerType>0</triggerType>
							<conditonLineDelta>0</conditonLineDelta>
							<mStayOpen>0</mStayOpen>
							<mCommand></mCommand>
							<packageName></packageName>
							<mFgColor>#ff0000</mFgColor>
							<mBgColor>#ffff00</mBgColor>
							<mSoundFile></mSoundFile>
							<colorTriggerFgColor>#000000</colorTriggerFgColor>
							<colorTriggerBgColor>#000000</colorTriggerBgColor>
							<regexCodeList />
							<regexCodePropertyList />
							<Trigger isActive="yes" isFolder="no" isTempTrigger="no" isMultiline="no" isPerlSlashGOption="no" isColorizerTrigger="no" isFilterTrigger="no" isSoundTrigger="no" isColorTrigger="no" isColorTriggerFg="no" isColorTriggerBg="no">
								<name>Fury Expunge used</name>
								<script>snd.balance.expunge = false</script>
								<triggerType>0</triggerType>
								<conditonLineDelta>0</conditonLineDelta>
								<mStayOpen>0</mStayOpen>
								<mCommand></mCommand>
								<packageName></packageName>
								<mFgColor>#ff0000</mFgColor>
								<mBgColor>#ffff00</mBgColor>
								<mSoundFile></mSoundFile>
								<colorTriggerFgColor>#000000</colorTriggerFgColor>
								<colorTriggerBgColor>#000000</colorTriggerBgColor>
								<regexCodeList>
									<string>You use Fury Expunge.</string>
								</regexCodeList>
								<regexCodePropertyList>
									<integer>3</integer>
								</regexCodePropertyList>
							</Trigger>
							<Trigger isActive="yes" isFolder="no" isTempTrigger="no" isMultiline="no" isPerlSlashGOption="no" isColorizerTrigger="no" isFilterTrigger="no" isSoundTrigger="no" isColorTrigger="no" isColorTriggerFg="no" isColorTriggerBg="no">
								<name>Fury expunge ready</name>
								<script>snd.balance.expunge = true</script>
								<triggerType>0</triggerType>
								<conditonLineDelta>0</conditonLineDelta>
								<mStayOpen>0</mStayOpen>
								<mCommand></mCommand>
								<packageName></packageName>
								<mFgColor>#ff0000</mFgColor>
								<mBgColor>#ffff00</mBgColor>
								<mSoundFile></mSoundFile>
								<colorTriggerFgColor>#000000</colorTriggerFgColor>
								<colorTriggerBgColor>#000000</colorTriggerBgColor>
								<regexCodeList>
									<string>You may once again expunge an affliction.</string>
								</regexCodeList>
								<regexCodePropertyList>
									<integer>3</integer>
								</regexCodePropertyList>
							</Trigger>
						</TriggerGroup>
						<TriggerGroup isActive="yes" isFolder="yes" isTempTrigger="no" isMultiline="no" isPerlSlashGOption="no" isColorizerTrigger="no" isFilterTrigger="no" isSoundTrigger="no" isColorTrigger="no" isColorTriggerFg="no" isColorTriggerBg="no">
							<name>Vampire</name>
							<script></script>
							<triggerType>0</triggerType>
							<conditonLineDelta>0</conditonLineDelta>
							<mStayOpen>0</mStayOpen>
							<mCommand></mCommand>
							<packageName></packageName>
							<mFgColor>#ff0000</mFgColor>
							<mBgColor>#ffff00</mBgColor>
							<mSoundFile></mSoundFile>
							<colorTriggerFgColor>#000000</colorTriggerFgColor>
							<colorTriggerBgColor>#000000</colorTriggerBgColor>
							<regexCodeList />
							<regexCodePropertyList />
							<Trigger isActive="yes" isFolder="no" isTempTrigger="no" isMultiline="no" isPerlSlashGOption="no" isColorizerTrigger="no" isFilterTrigger="no" isSoundTrigger="no" isColorTrigger="no" isColorTriggerFg="no" isColorTriggerBg="no">
								<name>Vampire mend false</name>
								<script>snd.balance.mend = false</script>
								<triggerType>0</triggerType>
								<conditonLineDelta>0</conditonLineDelta>
								<mStayOpen>0</mStayOpen>
								<mCommand></mCommand>
								<packageName></packageName>
								<mFgColor>#ff0000</mFgColor>
								<mBgColor>#ffff00</mBgColor>
								<mSoundFile></mSoundFile>
								<colorTriggerFgColor>#000000</colorTriggerFgColor>
								<colorTriggerBgColor>#000000</colorTriggerBgColor>
								<regexCodeList>
									<string>^You utter a low hiss from exertion as you will the power of your blood to repair the wounds your undead body has sustained.$</string>
									<string>Blood cannot be called upon to repair your walking corpse again so soon.</string>
								</regexCodeList>
								<regexCodePropertyList>
									<integer>1</integer>
									<integer>3</integer>
								</regexCodePropertyList>
							</Trigger>
							<Trigger isActive="yes" isFolder="no" isTempTrigger="no" isMultiline="no" isPerlSlashGOption="no" isColorizerTrigger="no" isFilterTrigger="no" isSoundTrigger="no" isColorTrigger="no" isColorTriggerFg="no" isColorTriggerBg="no">
								<name>Vampire mend</name>
								<script>snd.balance.mend = true</script>
								<triggerType>0</triggerType>
								<conditonLineDelta>0</conditonLineDelta>
								<mStayOpen>0</mStayOpen>
								<mCommand></mCommand>
								<packageName></packageName>
								<mFgColor>#ff0000</mFgColor>
								<mBgColor>#ffff00</mBgColor>
								<mSoundFile></mSoundFile>
								<colorTriggerFgColor>#000000</colorTriggerFgColor>
								<colorTriggerBgColor>#000000</colorTriggerBgColor>
								<regexCodeList>
									<string>You may mend your body once more.</string>
								</regexCodeList>
								<regexCodePropertyList>
									<integer>3</integer>
								</regexCodePropertyList>
							</Trigger>
							<Trigger isActive="yes" isFolder="no" isTempTrigger="no" isMultiline="no" isPerlSlashGOption="no" isColorizerTrigger="no" isFilterTrigger="no" isSoundTrigger="no" isColorTrigger="no" isColorTriggerFg="no" isColorTriggerBg="no">
								<name>Purify blood used</name>
								<script>snd.balance.purifyblood = false</script>
								<triggerType>0</triggerType>
								<conditonLineDelta>0</conditonLineDelta>
								<mStayOpen>0</mStayOpen>
								<mCommand></mCommand>
								<packageName></packageName>
								<mFgColor>#ff0000</mFgColor>
								<mBgColor>#ffff00</mBgColor>
								<mSoundFile></mSoundFile>
								<colorTriggerFgColor>#000000</colorTriggerFgColor>
								<colorTriggerBgColor>#000000</colorTriggerBgColor>
								<regexCodeList>
									<string>Your blood boils and you let out a mighty roar of defiance.</string>
								</regexCodeList>
								<regexCodePropertyList>
									<integer>3</integer>
								</regexCodePropertyList>
							</Trigger>
							<Trigger isActive="yes" isFolder="no" isTempTrigger="no" isMultiline="no" isPerlSlashGOption="no" isColorizerTrigger="no" isFilterTrigger="no" isSoundTrigger="no" isColorTrigger="no" isColorTriggerFg="no" isColorTriggerBg="no">
								<name>Purify blood ready</name>
								<script>snd.balance.purifyblood = true</script>
								<triggerType>0</triggerType>
								<conditonLineDelta>0</conditonLineDelta>
								<mStayOpen>0</mStayOpen>
								<mCommand></mCommand>
								<packageName></packageName>
								<mFgColor>#ff0000</mFgColor>
								<mBgColor>#ffff00</mBgColor>
								<mSoundFile></mSoundFile>
								<colorTriggerFgColor>#000000</colorTriggerFgColor>
								<colorTriggerBgColor>#000000</colorTriggerBgColor>
								<regexCodeList>
									<string>You may purify your blood once more.</string>
								</regexCodeList>
								<regexCodePropertyList>
									<integer>3</integer>
								</regexCodePropertyList>
							</Trigger>
						</TriggerGroup>
						<TriggerGroup isActive="yes" isFolder="yes" isTempTrigger="no" isMultiline="no" isPerlSlashGOption="no" isColorizerTrigger="no" isFilterTrigger="no" isSoundTrigger="no" isColorTrigger="no" isColorTriggerFg="no" isColorTriggerBg="no">
							<name>Indorani</name>
							<script></script>
							<triggerType>0</triggerType>
							<conditonLineDelta>0</conditonLineDelta>
							<mStayOpen>0</mStayOpen>
							<mCommand></mCommand>
							<packageName></packageName>
							<mFgColor>#ff0000</mFgColor>
							<mBgColor>#ffff00</mBgColor>
							<mSoundFile></mSoundFile>
							<colorTriggerFgColor>#000000</colorTriggerFgColor>
							<colorTriggerBgColor>#000000</colorTriggerBgColor>
							<regexCodeList />
							<regexCodePropertyList />
							<Trigger isActive="yes" isFolder="no" isTempTrigger="no" isMultiline="no" isPerlSlashGOption="no" isColorizerTrigger="no" isFilterTrigger="no" isSoundTrigger="no" isColorTrigger="no" isColorTriggerFg="no" isColorTriggerBg="no">
								<name>Fool balance used</name>
								<script>snd.balance.fool = false</script>
								<triggerType>0</triggerType>
								<conditonLineDelta>0</conditonLineDelta>
								<mStayOpen>0</mStayOpen>
								<mCommand></mCommand>
								<packageName></packageName>
								<mFgColor>#ff0000</mFgColor>
								<mBgColor>#ffff00</mBgColor>
								<mSoundFile></mSoundFile>
								<colorTriggerFgColor>#000000</colorTriggerFgColor>
								<colorTriggerBgColor>#000000</colorTriggerBgColor>
								<regexCodeList>
									<string>You press the Fool tarot to your forehead.</string>
									<string>The Fool will have no effect for now.</string>
								</regexCodeList>
								<regexCodePropertyList>
									<integer>3</integer>
									<integer>3</integer>
								</regexCodePropertyList>
							</Trigger>
							<Trigger isActive="yes" isFolder="no" isTempTrigger="no" isMultiline="no" isPerlSlashGOption="no" isColorizerTrigger="no" isFilterTrigger="no" isSoundTrigger="no" isColorTrigger="no" isColorTriggerFg="no" isColorTriggerBg="no">
								<name>Fool balance returned</name>
								<script>snd.balance.fool = true</script>
								<triggerType>0</triggerType>
								<conditonLineDelta>0</conditonLineDelta>
								<mStayOpen>0</mStayOpen>
								<mCommand></mCommand>
								<packageName></packageName>
								<mFgColor>#ff0000</mFgColor>
								<mBgColor>#ffff00</mBgColor>
								<mSoundFile></mSoundFile>
								<colorTriggerFgColor>#000000</colorTriggerFgColor>
								<colorTriggerBgColor>#000000</colorTriggerBgColor>
								<regexCodeList>
									<string>You may heal another affliction.</string>
								</regexCodeList>
								<regexCodePropertyList>
									<integer>3</integer>
								</regexCodePropertyList>
							</Trigger>
						</TriggerGroup>
						<TriggerGroup isActive="yes" isFolder="yes" isTempTrigger="no" isMultiline="no" isPerlSlashGOption="no" isColorizerTrigger="no" isFilterTrigger="no" isSoundTrigger="no" isColorTrigger="no" isColorTriggerFg="no" isColorTriggerBg="no">
							<name>Avoidance</name>
							<script></script>
							<triggerType>0</triggerType>
							<conditonLineDelta>0</conditonLineDelta>
							<mStayOpen>0</mStayOpen>
							<mCommand></mCommand>
							<packageName></packageName>
							<mFgColor>#ff0000</mFgColor>
							<mBgColor>#ffff00</mBgColor>
							<mSoundFile></mSoundFile>
							<colorTriggerFgColor>#000000</colorTriggerFgColor>
							<colorTriggerBgColor>#000000</colorTriggerBgColor>
							<regexCodeList />
							<regexCodePropertyList />
							<Trigger isActive="yes" isFolder="no" isTempTrigger="no" isMultiline="no" isPerlSlashGOption="no" isColorizerTrigger="no" isFilterTrigger="no" isSoundTrigger="no" isColorTrigger="no" isColorTriggerFg="no" isColorTriggerBg="no">
								<name>Nimbleness</name>
								<script>snd.balance.nimbleness = false</script>
								<triggerType>0</triggerType>
								<conditonLineDelta>0</conditonLineDelta>
								<mStayOpen>0</mStayOpen>
								<mCommand></mCommand>
								<packageName></packageName>
								<mFgColor>#ff0000</mFgColor>
								<mBgColor>#ffff00</mBgColor>
								<mSoundFile></mSoundFile>
								<colorTriggerFgColor>#000000</colorTriggerFgColor>
								<colorTriggerBgColor>#000000</colorTriggerBgColor>
								<regexCodeList>
									<string>^Shifting your weight to the balls of your feet, you begin to feel capable of quicker movements.$</string>
									<string>You use Avoidance Nimbleness.</string>
								</regexCodeList>
								<regexCodePropertyList>
									<integer>1</integer>
									<integer>3</integer>
								</regexCodePropertyList>
							</Trigger>
							<Trigger isActive="yes" isFolder="no" isTempTrigger="no" isMultiline="no" isPerlSlashGOption="no" isColorizerTrigger="no" isFilterTrigger="no" isSoundTrigger="no" isColorTrigger="no" isColorTriggerFg="no" isColorTriggerBg="no">
								<name>lost nimble</name>
								<script>snd.balance.nimbleness = false</script>
								<triggerType>0</triggerType>
								<conditonLineDelta>0</conditonLineDelta>
								<mStayOpen>0</mStayOpen>
								<mCommand></mCommand>
								<packageName></packageName>
								<mFgColor>#ff0000</mFgColor>
								<mBgColor>#ffff00</mBgColor>
								<mSoundFile></mSoundFile>
								<colorTriggerFgColor>#000000</colorTriggerFgColor>
								<colorTriggerBgColor>#000000</colorTriggerBgColor>
								<regexCodeList>
									<string>^The constant exertion has worn you down, and you cease your nimble manuveurs, panting.$</string>
								</regexCodeList>
								<regexCodePropertyList>
									<integer>1</integer>
								</regexCodePropertyList>
							</Trigger>
							<Trigger isActive="yes" isFolder="no" isTempTrigger="no" isMultiline="no" isPerlSlashGOption="no" isColorizerTrigger="no" isFilterTrigger="no" isSoundTrigger="no" isColorTrigger="no" isColorTriggerFg="no" isColorTriggerBg="no">
								<name>Can renimble</name>
								<script>snd.balance.nimbleness = true
</script>
								<triggerType>0</triggerType>
								<conditonLineDelta>0</conditonLineDelta>
								<mStayOpen>0</mStayOpen>
								<mCommand></mCommand>
								<packageName></packageName>
								<mFgColor>#ff0000</mFgColor>
								<mBgColor>#ffff00</mBgColor>
								<mSoundFile></mSoundFile>
								<colorTriggerFgColor>#000000</colorTriggerFgColor>
								<colorTriggerBgColor>#000000</colorTriggerBgColor>
								<regexCodeList>
									<string>^Your muscles have recovered enough for you to be nimble once more.$</string>
								</regexCodeList>
								<regexCodePropertyList>
									<integer>1</integer>
								</regexCodePropertyList>
							</Trigger>
						</TriggerGroup>
						<TriggerGroup isActive="yes" isFolder="yes" isTempTrigger="no" isMultiline="no" isPerlSlashGOption="no" isColorizerTrigger="no" isFilterTrigger="no" isSoundTrigger="no" isColorTrigger="no" isColorTriggerFg="no" isColorTriggerBg="no">
							<name>Teradrim</name>
							<script></script>
							<triggerType>0</triggerType>
							<conditonLineDelta>0</conditonLineDelta>
							<mStayOpen>0</mStayOpen>
							<mCommand></mCommand>
							<packageName></packageName>
							<mFgColor>#ff0000</mFgColor>
							<mBgColor>#ffff00</mBgColor>
							<mSoundFile></mSoundFile>
							<colorTriggerFgColor>#000000</colorTriggerFgColor>
							<colorTriggerBgColor>#000000</colorTriggerBgColor>
							<regexCodeList />
							<regexCodePropertyList />
							<Trigger isActive="yes" isFolder="no" isTempTrigger="no" isMultiline="no" isPerlSlashGOption="no" isColorizerTrigger="no" isFilterTrigger="no" isSoundTrigger="no" isColorTrigger="no" isColorTriggerFg="no" isColorTriggerBg="no">
								<name>Momentum over</name>
								<script>snd.balance.momentum = false</script>
								<triggerType>0</triggerType>
								<conditonLineDelta>0</conditonLineDelta>
								<mStayOpen>0</mStayOpen>
								<mCommand></mCommand>
								<packageName></packageName>
								<mFgColor>#ff0000</mFgColor>
								<mBgColor>#ffff00</mBgColor>
								<mSoundFile></mSoundFile>
								<colorTriggerFgColor>#000000</colorTriggerFgColor>
								<colorTriggerBgColor>#000000</colorTriggerBgColor>
								<regexCodeList>
									<string>Your momentum dies off.</string>
									<string>Your body is still recovering from its last boost of momentum.</string>
									<string>You bow your head, concentrating and matching your heartbeat to the vibrations of the earth beneath you. When you raise your eyes, you feel your body ready to strike.</string>
								</regexCodeList>
								<regexCodePropertyList>
									<integer>3</integer>
									<integer>3</integer>
									<integer>3</integer>
								</regexCodePropertyList>
							</Trigger>
							<Trigger isActive="yes" isFolder="no" isTempTrigger="no" isMultiline="no" isPerlSlashGOption="no" isColorizerTrigger="no" isFilterTrigger="no" isSoundTrigger="no" isColorTrigger="no" isColorTriggerFg="no" isColorTriggerBg="no">
								<name>Momentum able again</name>
								<script>snd.balance.momentum = true</script>
								<triggerType>0</triggerType>
								<conditonLineDelta>0</conditonLineDelta>
								<mStayOpen>0</mStayOpen>
								<mCommand></mCommand>
								<packageName></packageName>
								<mFgColor>#ff0000</mFgColor>
								<mBgColor>#ffff00</mBgColor>
								<mSoundFile></mSoundFile>
								<colorTriggerFgColor>#000000</colorTriggerFgColor>
								<colorTriggerBgColor>#000000</colorTriggerBgColor>
								<regexCodeList>
									<string>Your body has recovered from its increased momentum.</string>
								</regexCodeList>
								<regexCodePropertyList>
									<integer>3</integer>
								</regexCodePropertyList>
							</Trigger>
							<Trigger isActive="yes" isFolder="no" isTempTrigger="no" isMultiline="no" isPerlSlashGOption="no" isColorizerTrigger="no" isFilterTrigger="no" isSoundTrigger="no" isColorTrigger="no" isColorTriggerFg="no" isColorTriggerBg="no">
								<name>Absorb used</name>
								<script>snd.balance.absorb = false</script>
								<triggerType>0</triggerType>
								<conditonLineDelta>0</conditonLineDelta>
								<mStayOpen>0</mStayOpen>
								<mCommand></mCommand>
								<packageName></packageName>
								<mFgColor>#ff0000</mFgColor>
								<mBgColor>#ffff00</mBgColor>
								<mSoundFile></mSoundFile>
								<colorTriggerFgColor>#000000</colorTriggerFgColor>
								<colorTriggerBgColor>#000000</colorTriggerBgColor>
								<regexCodeList>
									<string>You are unable to absorb another affliction so soon.</string>
									<string>As you lift your arms overhead, the dust and earth around you rise up, collecting in a cloud about your person. The cloud thickens and cakes over your flesh, and when it falls away, you feel healthier.</string>
								</regexCodeList>
								<regexCodePropertyList>
									<integer>3</integer>
									<integer>3</integer>
								</regexCodePropertyList>
							</Trigger>
							<Trigger isActive="yes" isFolder="no" isTempTrigger="no" isMultiline="no" isPerlSlashGOption="no" isColorizerTrigger="no" isFilterTrigger="no" isSoundTrigger="no" isColorTrigger="no" isColorTriggerFg="no" isColorTriggerBg="no">
								<name>Absorb ready</name>
								<script>snd.balance.absorb = true</script>
								<triggerType>0</triggerType>
								<conditonLineDelta>0</conditonLineDelta>
								<mStayOpen>0</mStayOpen>
								<mCommand></mCommand>
								<packageName></packageName>
								<mFgColor>#ff0000</mFgColor>
								<mBgColor>#ffff00</mBgColor>
								<mSoundFile></mSoundFile>
								<colorTriggerFgColor>#000000</colorTriggerFgColor>
								<colorTriggerBgColor>#000000</colorTriggerBgColor>
								<regexCodeList>
									<string>You may once more absorb an affliction from your flesh.</string>
								</regexCodeList>
								<regexCodePropertyList>
									<integer>3</integer>
								</regexCodePropertyList>
							</Trigger>
							<Trigger isActive="yes" isFolder="no" isTempTrigger="no" isMultiline="no" isPerlSlashGOption="no" isColorizerTrigger="no" isFilterTrigger="no" isSoundTrigger="no" isColorTrigger="no" isColorTriggerFg="no" isColorTriggerBg="no">
								<name>Sandscour used</name>
								<script>snd.balance.scour = false</script>
								<triggerType>0</triggerType>
								<conditonLineDelta>0</conditonLineDelta>
								<mStayOpen>0</mStayOpen>
								<mCommand></mCommand>
								<packageName></packageName>
								<mFgColor>#ff0000</mFgColor>
								<mBgColor>#ffff00</mBgColor>
								<mSoundFile></mSoundFile>
								<colorTriggerFgColor>#000000</colorTriggerFgColor>
								<colorTriggerBgColor>#000000</colorTriggerBgColor>
								<regexCodeList>
									<string>You scour your skin vigorously with the hot desert sand.</string>
								</regexCodeList>
								<regexCodePropertyList>
									<integer>3</integer>
								</regexCodePropertyList>
							</Trigger>
							<Trigger isActive="yes" isFolder="no" isTempTrigger="no" isMultiline="no" isPerlSlashGOption="no" isColorizerTrigger="no" isFilterTrigger="no" isSoundTrigger="no" isColorTrigger="no" isColorTriggerFg="no" isColorTriggerBg="no">
								<name>Sandscour back</name>
								<script></script>
								<triggerType>0</triggerType>
								<conditonLineDelta>0</conditonLineDelta>
								<mStayOpen>0</mStayOpen>
								<mCommand></mCommand>
								<packageName></packageName>
								<mFgColor>#ff0000</mFgColor>
								<mBgColor>#ffff00</mBgColor>
								<mSoundFile></mSoundFile>
								<colorTriggerFgColor>#000000</colorTriggerFgColor>
								<colorTriggerBgColor>#000000</colorTriggerBgColor>
								<regexCodeList>
									<string>You may once again scour your skin.</string>
								</regexCodeList>
								<regexCodePropertyList>
									<integer>3</integer>
								</regexCodePropertyList>
							</Trigger>
							<Trigger isActive="yes" isFolder="no" isTempTrigger="no" isMultiline="no" isPerlSlashGOption="no" isColorizerTrigger="no" isFilterTrigger="no" isSoundTrigger="no" isColorTrigger="no" isColorTriggerFg="no" isColorTriggerBg="no">
								<name>Can imbue_will</name>
								<script>snd.balance.earthenwill = true</script>
								<triggerType>0</triggerType>
								<conditonLineDelta>0</conditonLineDelta>
								<mStayOpen>0</mStayOpen>
								<mCommand></mCommand>
								<packageName></packageName>
								<mFgColor>#ff0000</mFgColor>
								<mBgColor>#ffff00</mBgColor>
								<mSoundFile></mSoundFile>
								<colorTriggerFgColor>#000000</colorTriggerFgColor>
								<colorTriggerBgColor>#000000</colorTriggerBgColor>
								<regexCodeList>
									<string>You may once again strengthen your will.</string>
									<string>You have already solidified your will with that of your golem.</string>
								</regexCodeList>
								<regexCodePropertyList>
									<integer>3</integer>
									<integer>3</integer>
								</regexCodePropertyList>
							</Trigger>
							<Trigger isActive="yes" isFolder="no" isTempTrigger="no" isMultiline="no" isPerlSlashGOption="no" isColorizerTrigger="no" isFilterTrigger="no" isSoundTrigger="no" isColorTrigger="no" isColorTriggerFg="no" isColorTriggerBg="no">
								<name>imbue_will used</name>
								<script>snd.balance.earthenwill = false</script>
								<triggerType>0</triggerType>
								<conditonLineDelta>0</conditonLineDelta>
								<mStayOpen>0</mStayOpen>
								<mCommand></mCommand>
								<packageName></packageName>
								<mFgColor>#ff0000</mFgColor>
								<mBgColor>#ffff00</mBgColor>
								<mSoundFile></mSoundFile>
								<colorTriggerFgColor>#000000</colorTriggerFgColor>
								<colorTriggerBgColor>#000000</colorTriggerBgColor>
								<regexCodeList>
									<string>A clay golem roars as the attack launches it into a temporary frenzy.</string>
									<string>You lock eyes with your golem, binding your wills together in preparation for a brutal strike.</string>
								</regexCodeList>
								<regexCodePropertyList>
									<integer>3</integer>
									<integer>3</integer>
								</regexCodePropertyList>
							</Trigger>
						</TriggerGroup>
						<TriggerGroup isActive="yes" isFolder="yes" isTempTrigger="no" isMultiline="no" isPerlSlashGOption="no" isColorizerTrigger="no" isFilterTrigger="no" isSoundTrigger="no" isColorTrigger="no" isColorTriggerFg="no" isColorTriggerBg="no">
							<name>Shaman</name>
							<script></script>
							<triggerType>0</triggerType>
							<conditonLineDelta>0</conditonLineDelta>
							<mStayOpen>0</mStayOpen>
							<mCommand></mCommand>
							<packageName></packageName>
							<mFgColor>#ff0000</mFgColor>
							<mBgColor>#ffff00</mBgColor>
							<mSoundFile></mSoundFile>
							<colorTriggerFgColor>#000000</colorTriggerFgColor>
							<colorTriggerBgColor>#000000</colorTriggerBgColor>
							<regexCodeList />
							<regexCodePropertyList />
							<Trigger isActive="yes" isFolder="no" isTempTrigger="no" isMultiline="no" isPerlSlashGOption="no" isColorizerTrigger="no" isFilterTrigger="no" isSoundTrigger="no" isColorTrigger="no" isColorTriggerFg="no" isColorTriggerBg="no">
								<name>Panacea Used</name>
								<script>snd.balance.panacea = false

-- This could be used for advanced shaman curing.</script>
								<triggerType>0</triggerType>
								<conditonLineDelta>0</conditonLineDelta>
								<mStayOpen>0</mStayOpen>
								<mCommand></mCommand>
								<packageName></packageName>
								<mFgColor>#ff0000</mFgColor>
								<mBgColor>#ffff00</mBgColor>
								<mSoundFile></mSoundFile>
								<colorTriggerFgColor>#000000</colorTriggerFgColor>
								<colorTriggerBgColor>#000000</colorTriggerBgColor>
								<regexCodeList>
									<string>^You drop to one knee and brace an open palm against the ground, drawing in the natural energies to ease your maladies.$</string>
								</regexCodeList>
								<regexCodePropertyList>
									<integer>1</integer>
								</regexCodePropertyList>
							</Trigger>
							<Trigger isActive="yes" isFolder="no" isTempTrigger="no" isMultiline="no" isPerlSlashGOption="no" isColorizerTrigger="no" isFilterTrigger="no" isSoundTrigger="no" isColorTrigger="no" isColorTriggerFg="no" isColorTriggerBg="no">
								<name>Panacea off cd</name>
								<script></script>
								<triggerType>0</triggerType>
								<conditonLineDelta>0</conditonLineDelta>
								<mStayOpen>0</mStayOpen>
								<mCommand></mCommand>
								<packageName></packageName>
								<mFgColor>#ff0000</mFgColor>
								<mBgColor>#ffff00</mBgColor>
								<mSoundFile></mSoundFile>
								<colorTriggerFgColor>#000000</colorTriggerFgColor>
								<colorTriggerBgColor>#000000</colorTriggerBgColor>
								<regexCodeList>
									<string>^You may once again purify your body of ailments.$</string>
								</regexCodeList>
								<regexCodePropertyList>
									<integer>1</integer>
								</regexCodePropertyList>
							</Trigger>
							<Trigger isActive="yes" isFolder="no" isTempTrigger="no" isMultiline="no" isPerlSlashGOption="no" isColorizerTrigger="no" isFilterTrigger="no" isSoundTrigger="no" isColorTrigger="no" isColorTriggerFg="no" isColorTriggerBg="no">
								<name>Familiar morph available</name>
								<script>snd.balance.morph = true
</script>
								<triggerType>0</triggerType>
								<conditonLineDelta>0</conditonLineDelta>
								<mStayOpen>0</mStayOpen>
								<mCommand></mCommand>
								<packageName></packageName>
								<mFgColor>#ff0000</mFgColor>
								<mBgColor>#ffff00</mBgColor>
								<mSoundFile></mSoundFile>
								<colorTriggerFgColor>#000000</colorTriggerFgColor>
								<colorTriggerBgColor>#000000</colorTriggerBgColor>
								<regexCodeList>
									<string>^Your familiar is capable of morphing its form once more.$</string>
								</regexCodeList>
								<regexCodePropertyList>
									<integer>1</integer>
								</regexCodePropertyList>
							</Trigger>
							<Trigger isActive="yes" isFolder="no" isTempTrigger="no" isMultiline="no" isPerlSlashGOption="no" isColorizerTrigger="no" isFilterTrigger="no" isSoundTrigger="no" isColorTrigger="no" isColorTriggerFg="no" isColorTriggerBg="no">
								<name>Familiar morph used</name>
								<script>snd.shamanpet = matches[2]
snd.balance.morph = false</script>
								<triggerType>0</triggerType>
								<conditonLineDelta>0</conditonLineDelta>
								<mStayOpen>0</mStayOpen>
								<mCommand></mCommand>
								<packageName></packageName>
								<mFgColor>#ff0000</mFgColor>
								<mBgColor>#ffff00</mBgColor>
								<mSoundFile></mSoundFile>
								<colorTriggerFgColor>#000000</colorTriggerFgColor>
								<colorTriggerBgColor>#000000</colorTriggerBgColor>
								<regexCodeList>
									<string>^Your spirit familiar morphs into the form of a (\w+) spirit.$</string>
								</regexCodeList>
								<regexCodePropertyList>
									<integer>1</integer>
								</regexCodePropertyList>
							</Trigger>
							<Trigger isActive="yes" isFolder="no" isTempTrigger="no" isMultiline="no" isPerlSlashGOption="no" isColorizerTrigger="no" isFilterTrigger="no" isSoundTrigger="no" isColorTrigger="no" isColorTriggerFg="no" isColorTriggerBg="no">
								<name>Familiar summon</name>
								<script>snd.shamanpet = matches[2]

-- Set the pet they have.</script>
								<triggerType>0</triggerType>
								<conditonLineDelta>0</conditonLineDelta>
								<mStayOpen>0</mStayOpen>
								<mCommand></mCommand>
								<packageName></packageName>
								<mFgColor>#ff0000</mFgColor>
								<mBgColor>#ffff00</mBgColor>
								<mSoundFile></mSoundFile>
								<colorTriggerFgColor>#000000</colorTriggerFgColor>
								<colorTriggerBgColor>#000000</colorTriggerBgColor>
								<regexCodeList>
									<string>^You reach forth through your ties to the realm of Dendara, requesting the aid of a (\w+) spirit.$</string>
								</regexCodeList>
								<regexCodePropertyList>
									<integer>1</integer>
								</regexCodePropertyList>
							</Trigger>
						</TriggerGroup>
						<TriggerGroup isActive="yes" isFolder="yes" isTempTrigger="no" isMultiline="no" isPerlSlashGOption="no" isColorizerTrigger="no" isFilterTrigger="no" isSoundTrigger="no" isColorTrigger="no" isColorTriggerFg="no" isColorTriggerBg="no">
							<name>Sciomancer</name>
							<script></script>
							<triggerType>0</triggerType>
							<conditonLineDelta>0</conditonLineDelta>
							<mStayOpen>0</mStayOpen>
							<mCommand></mCommand>
							<packageName></packageName>
							<mFgColor>#ff0000</mFgColor>
							<mBgColor>#ffff00</mBgColor>
							<mSoundFile></mSoundFile>
							<colorTriggerFgColor>#000000</colorTriggerFgColor>
							<colorTriggerBgColor>#000000</colorTriggerBgColor>
							<regexCodeList />
							<regexCodePropertyList />
							<Trigger isActive="yes" isFolder="no" isTempTrigger="no" isMultiline="no" isPerlSlashGOption="no" isColorizerTrigger="no" isFilterTrigger="no" isSoundTrigger="no" isColorTrigger="no" isColorTriggerFg="no" isColorTriggerBg="no">
								<name>Shadowsphere Ready</name>
								<script>snd.balance.shadowsphere = true</script>
								<triggerType>0</triggerType>
								<conditonLineDelta>0</conditonLineDelta>
								<mStayOpen>0</mStayOpen>
								<mCommand></mCommand>
								<packageName></packageName>
								<mFgColor>#ff0000</mFgColor>
								<mBgColor>#ffff00</mBgColor>
								<mSoundFile></mSoundFile>
								<colorTriggerFgColor>#000000</colorTriggerFgColor>
								<colorTriggerBgColor>#000000</colorTriggerBgColor>
								<regexCodeList>
									<string>You can once again cast the shadowsphere.</string>
								</regexCodeList>
								<regexCodePropertyList>
									<integer>3</integer>
								</regexCodePropertyList>
							</Trigger>
							<Trigger isActive="yes" isFolder="no" isTempTrigger="no" isMultiline="no" isPerlSlashGOption="no" isColorizerTrigger="no" isFilterTrigger="no" isSoundTrigger="no" isColorTrigger="no" isColorTriggerFg="no" isColorTriggerBg="no">
								<name>Shadowsphere Used</name>
								<script>snd.balance.shadowsphere = false</script>
								<triggerType>0</triggerType>
								<conditonLineDelta>0</conditonLineDelta>
								<mStayOpen>0</mStayOpen>
								<mCommand></mCommand>
								<packageName></packageName>
								<mFgColor>#ff0000</mFgColor>
								<mBgColor>#ffff00</mBgColor>
								<mSoundFile></mSoundFile>
								<colorTriggerFgColor>#000000</colorTriggerFgColor>
								<colorTriggerBgColor>#000000</colorTriggerBgColor>
								<regexCodeList>
									<string>^You use Sciomancy Shadowsphere on (\w+).\$</string>
								</regexCodeList>
								<regexCodePropertyList>
									<integer>1</integer>
								</regexCodePropertyList>
							</Trigger>
						</TriggerGroup>
					</TriggerGroup>
					<TriggerGroup isActive="yes" isFolder="yes" isTempTrigger="no" isMultiline="no" isPerlSlashGOption="no" isColorizerTrigger="no" isFilterTrigger="no" isSoundTrigger="no" isColorTrigger="no" isColorTriggerFg="no" isColorTriggerBg="no">
						<name>Misc</name>
						<script></script>
						<triggerType>0</triggerType>
						<conditonLineDelta>0</conditonLineDelta>
						<mStayOpen>0</mStayOpen>
						<mCommand></mCommand>
						<packageName></packageName>
						<mFgColor>#ff0000</mFgColor>
						<mBgColor>#ffff00</mBgColor>
						<mSoundFile></mSoundFile>
						<colorTriggerFgColor>#000000</colorTriggerFgColor>
						<colorTriggerBgColor>#000000</colorTriggerBgColor>
						<regexCodeList />
						<regexCodePropertyList />
						<Trigger isActive="yes" isFolder="no" isTempTrigger="no" isMultiline="no" isPerlSlashGOption="no" isColorizerTrigger="no" isFilterTrigger="no" isSoundTrigger="no" isColorTrigger="no" isColorTriggerFg="no" isColorTriggerBg="no">
							<name>timeout</name>
							<script></script>
							<triggerType>0</triggerType>
							<conditonLineDelta>0</conditonLineDelta>
							<mStayOpen>0</mStayOpen>
							<mCommand>qw</mCommand>
							<packageName></packageName>
							<mFgColor>#ff0000</mFgColor>
							<mBgColor>#ffff00</mBgColor>
							<mSoundFile></mSoundFile>
							<colorTriggerFgColor>#000000</colorTriggerFgColor>
							<colorTriggerBgColor>#000000</colorTriggerBgColor>
							<regexCodeList>
								<string>You will TIMEOUT in 1 minute unless you do something.</string>
							</regexCodeList>
							<regexCodePropertyList>
								<integer>3</integer>
							</regexCodePropertyList>
						</Trigger>
						<Trigger isActive="yes" isFolder="no" isTempTrigger="no" isMultiline="no" isPerlSlashGOption="no" isColorizerTrigger="no" isFilterTrigger="no" isSoundTrigger="no" isColorTrigger="no" isColorTriggerFg="no" isColorTriggerBg="no">
							<name>teach</name>
							<script>snd.send("ok "..matches[2])</script>
							<triggerType>0</triggerType>
							<conditonLineDelta>0</conditonLineDelta>
							<mStayOpen>0</mStayOpen>
							<mCommand></mCommand>
							<packageName></packageName>
							<mFgColor>#ff0000</mFgColor>
							<mBgColor>#ffff00</mBgColor>
							<mSoundFile></mSoundFile>
							<colorTriggerFgColor>#000000</colorTriggerFgColor>
							<colorTriggerBgColor>#000000</colorTriggerBgColor>
							<regexCodeList>
								<string>^\'OK (\w+)\' will begin the lesson\.$</string>
							</regexCodeList>
							<regexCodePropertyList>
								<integer>1</integer>
							</regexCodePropertyList>
						</Trigger>
						<Trigger isActive="yes" isFolder="no" isTempTrigger="no" isMultiline="no" isPerlSlashGOption="no" isColorizerTrigger="no" isFilterTrigger="no" isSoundTrigger="no" isColorTrigger="no" isColorTriggerFg="no" isColorTriggerBg="no">
							<name>qq</name>
							<script>local stable_check = {
	Enorian = "enorianstable",
	Spinesreach = "spinesreachstable",
	Bloodloch = "bloodlochstable",
	Duiran = "duiranstable"
}

snd.send("qdmount"..snd.sep.."return mount "..stable_check[gmcp.Char.Status.city])</script>
							<triggerType>0</triggerType>
							<conditonLineDelta>0</conditonLineDelta>
							<mStayOpen>0</mStayOpen>
							<mCommand></mCommand>
							<packageName></packageName>
							<mFgColor>#ff0000</mFgColor>
							<mBgColor>#ffff00</mBgColor>
							<mSoundFile></mSoundFile>
							<colorTriggerFgColor>#000000</colorTriggerFgColor>
							<colorTriggerBgColor>#000000</colorTriggerBgColor>
							<regexCodeList>
								<string>You grow still and begin to silently pray for preservation of your soul while you are out of the land.</string>
							</regexCodeList>
							<regexCodePropertyList>
								<integer>3</integer>
							</regexCodePropertyList>
						</Trigger>
						<Trigger isActive="yes" isFolder="no" isTempTrigger="no" isMultiline="no" isPerlSlashGOption="no" isColorizerTrigger="no" isFilterTrigger="no" isSoundTrigger="no" isColorTrigger="no" isColorTriggerFg="no" isColorTriggerBg="no">
							<name>no target</name>
							<script>if not snd.toggles.bashing then
  if matches[2] == snd.target then
  	snd.no_target()
  end
else
	snd.no_target()
end</script>
							<triggerType>0</triggerType>
							<conditonLineDelta>0</conditonLineDelta>
							<mStayOpen>0</mStayOpen>
							<mCommand></mCommand>
							<packageName></packageName>
							<mFgColor>#ff0000</mFgColor>
							<mBgColor>#ffff00</mBgColor>
							<mSoundFile></mSoundFile>
							<colorTriggerFgColor>#000000</colorTriggerFgColor>
							<colorTriggerBgColor>#000000</colorTriggerBgColor>
							<regexCodeList>
								<string>^You can find no such target as '(.+)'\.$</string>
							</regexCodeList>
							<regexCodePropertyList>
								<integer>1</integer>
							</regexCodePropertyList>
						</Trigger>
						<Trigger isActive="yes" isFolder="no" isTempTrigger="no" isMultiline="no" isPerlSlashGOption="no" isColorizerTrigger="no" isFilterTrigger="no" isSoundTrigger="no" isColorTrigger="no" isColorTriggerFg="no" isColorTriggerBg="no">
							<name>path track</name>
							<script>snd.can_path = false
tempTimer(3, [[snd.can_path = true]])
tempTimer(3, [[send(" ")]])
snd.pathing = true</script>
							<triggerType>0</triggerType>
							<conditonLineDelta>0</conditonLineDelta>
							<mStayOpen>0</mStayOpen>
							<mCommand></mCommand>
							<packageName></packageName>
							<mFgColor>#ff0000</mFgColor>
							<mBgColor>#ffff00</mBgColor>
							<mSoundFile></mSoundFile>
							<colorTriggerFgColor>#000000</colorTriggerFgColor>
							<colorTriggerBgColor>#000000</colorTriggerBgColor>
							<regexCodeList>
								<string>You start speedwalking.</string>
							</regexCodeList>
							<regexCodePropertyList>
								<integer>3</integer>
							</regexCodePropertyList>
						</Trigger>
						<Trigger isActive="yes" isFolder="no" isTempTrigger="no" isMultiline="no" isPerlSlashGOption="no" isColorizerTrigger="no" isFilterTrigger="no" isSoundTrigger="no" isColorTrigger="no" isColorTriggerFg="no" isColorTriggerBg="no">
							<name>path done</name>
							<script>snd.pathing = false</script>
							<triggerType>0</triggerType>
							<conditonLineDelta>0</conditonLineDelta>
							<mStayOpen>0</mStayOpen>
							<mCommand></mCommand>
							<packageName></packageName>
							<mFgColor>#ff0000</mFgColor>
							<mBgColor>#ffff00</mBgColor>
							<mSoundFile></mSoundFile>
							<colorTriggerFgColor>#000000</colorTriggerFgColor>
							<colorTriggerBgColor>#000000</colorTriggerBgColor>
							<regexCodeList>
								<string>You have reached your destination.</string>
								<string>You cease speedwalking.</string>
								<string>You stop speedwalking.</string>
							</regexCodeList>
							<regexCodePropertyList>
								<integer>3</integer>
								<integer>3</integer>
								<integer>3</integer>
							</regexCodePropertyList>
						</Trigger>
						<Trigger isActive="yes" isFolder="no" isTempTrigger="no" isMultiline="no" isPerlSlashGOption="no" isColorizerTrigger="no" isFilterTrigger="no" isSoundTrigger="no" isColorTrigger="no" isColorTriggerFg="no" isColorTriggerBg="no">
							<name>login</name>
							<script>sendGMCP([[Core.Supports.Add ["Comm.Channel 1", "IRE.Time 1"] ]]) -- allows us to use GMCP for communication sorting
snd.pipes_lit = false
enableTrigger("Hourglass Check Open")
send("tattoos", false)

if snd.class == "Ascendril" then send("simultaneity") end
if snd.class == "Sciomancer" then send("channel shadow") end
if snd.class == "Archivist" then 
	send("incite lens")

end
enableTrigger("Separator Check/Update")
send("config separator")

tempTimer(3, [[time_update();
							snd.changeClass();
							populate_skills()]])
</script>
							<triggerType>0</triggerType>
							<conditonLineDelta>0</conditonLineDelta>
							<mStayOpen>0</mStayOpen>
							<mCommand></mCommand>
							<packageName></packageName>
							<mFgColor>#ff0000</mFgColor>
							<mBgColor>#ffff00</mBgColor>
							<mSoundFile></mSoundFile>
							<colorTriggerFgColor>#000000</colorTriggerFgColor>
							<colorTriggerBgColor>#000000</colorTriggerBgColor>
							<regexCodeList>
								<string>Password correct. Welcome to Aetolia.</string>
							</regexCodeList>
							<regexCodePropertyList>
								<integer>3</integer>
							</regexCodePropertyList>
						</Trigger>
						<Trigger isActive="yes" isFolder="no" isTempTrigger="no" isMultiline="no" isPerlSlashGOption="no" isColorizerTrigger="no" isFilterTrigger="no" isSoundTrigger="no" isColorTrigger="no" isColorTriggerFg="no" isColorTriggerBg="no">
							<name>full queue</name>
							<script>snd.send("queue clear")</script>
							<triggerType>0</triggerType>
							<conditonLineDelta>0</conditonLineDelta>
							<mStayOpen>0</mStayOpen>
							<mCommand></mCommand>
							<packageName></packageName>
							<mFgColor>#ff0000</mFgColor>
							<mBgColor>#ffff00</mBgColor>
							<mSoundFile></mSoundFile>
							<colorTriggerFgColor>#000000</colorTriggerFgColor>
							<colorTriggerBgColor>#000000</colorTriggerBgColor>
							<regexCodeList>
								<string>You may not perform more than 15 actions simultaneously.</string>
							</regexCodeList>
							<regexCodePropertyList>
								<integer>3</integer>
							</regexCodePropertyList>
						</Trigger>
						<Trigger isActive="yes" isFolder="no" isTempTrigger="no" isMultiline="no" isPerlSlashGOption="no" isColorizerTrigger="no" isFilterTrigger="no" isSoundTrigger="no" isColorTrigger="no" isColorTriggerFg="no" isColorTriggerBg="no">
							<name>quickwield</name>
							<script></script>
							<triggerType>0</triggerType>
							<conditonLineDelta>0</conditonLineDelta>
							<mStayOpen>0</mStayOpen>
							<mCommand></mCommand>
							<packageName></packageName>
							<mFgColor>#ff0000</mFgColor>
							<mBgColor>#ffff00</mBgColor>
							<mSoundFile></mSoundFile>
							<colorTriggerFgColor>#000000</colorTriggerFgColor>
							<colorTriggerBgColor>#000000</colorTriggerBgColor>
							<regexCodeList>
								<string>^You fluidly swap (.+) with (.+) in your (the )?\w+ hand\.$</string>
							</regexCodeList>
							<regexCodePropertyList>
								<integer>1</integer>
							</regexCodePropertyList>
						</Trigger>
						<Trigger isActive="no" isFolder="no" isTempTrigger="no" isMultiline="no" isPerlSlashGOption="no" isColorizerTrigger="no" isFilterTrigger="no" isSoundTrigger="no" isColorTrigger="no" isColorTriggerFg="no" isColorTriggerBg="no">
							<name>Hourglass Check Open</name>
							<script>enableTrigger("Hourglass Check")</script>
							<triggerType>0</triggerType>
							<conditonLineDelta>0</conditonLineDelta>
							<mStayOpen>0</mStayOpen>
							<mCommand></mCommand>
							<packageName></packageName>
							<mFgColor>#ff0000</mFgColor>
							<mBgColor>#ffff00</mBgColor>
							<mSoundFile></mSoundFile>
							<colorTriggerFgColor>#000000</colorTriggerFgColor>
							<colorTriggerBgColor>#000000</colorTriggerBgColor>
							<regexCodeList>
								<string>^You have the following tattoos\:$</string>
							</regexCodeList>
							<regexCodePropertyList>
								<integer>1</integer>
							</regexCodePropertyList>
						</Trigger>
						<Trigger isActive="no" isFolder="no" isTempTrigger="no" isMultiline="no" isPerlSlashGOption="no" isColorizerTrigger="no" isFilterTrigger="no" isSoundTrigger="no" isColorTrigger="no" isColorTriggerFg="no" isColorTriggerBg="no">
							<name>Hourglass Check</name>
							<script>if matches[4] == "Hourglass" then
	snd.use_hourglass_on_prismatic = true
end
disableTrigger("Hourglass Check Open")
enableTrigger("Hourglass Prompt Close")</script>
							<triggerType>0</triggerType>
							<conditonLineDelta>0</conditonLineDelta>
							<mStayOpen>0</mStayOpen>
							<mCommand></mCommand>
							<packageName></packageName>
							<mFgColor>#ff0000</mFgColor>
							<mBgColor>#ffff00</mBgColor>
							<mSoundFile></mSoundFile>
							<colorTriggerFgColor>#000000</colorTriggerFgColor>
							<colorTriggerBgColor>#000000</colorTriggerBgColor>
							<regexCodeList>
								<string>^(\w+|\w+ (the )?\w+)\:\s+(\w+)\s+.+$</string>
							</regexCodeList>
							<regexCodePropertyList>
								<integer>1</integer>
							</regexCodePropertyList>
						</Trigger>
						<Trigger isActive="no" isFolder="no" isTempTrigger="no" isMultiline="no" isPerlSlashGOption="no" isColorizerTrigger="no" isFilterTrigger="no" isSoundTrigger="no" isColorTrigger="no" isColorTriggerFg="no" isColorTriggerBg="no">
							<name>Hourglass Prompt Close</name>
							<script>disableTrigger("Hourglass Check")

disableTrigger("Hourglass Prompt Close")
</script>
							<triggerType>0</triggerType>
							<conditonLineDelta>0</conditonLineDelta>
							<mStayOpen>0</mStayOpen>
							<mCommand></mCommand>
							<packageName></packageName>
							<mFgColor>#ff0000</mFgColor>
							<mBgColor>#ffff00</mBgColor>
							<mSoundFile></mSoundFile>
							<colorTriggerFgColor>#000000</colorTriggerFgColor>
							<colorTriggerBgColor>#000000</colorTriggerBgColor>
							<regexCodeList>
								<string>return isPrompt()</string>
							</regexCodeList>
							<regexCodePropertyList>
								<integer>4</integer>
							</regexCodePropertyList>
						</Trigger>
						<Trigger isActive="no" isFolder="no" isTempTrigger="no" isMultiline="no" isPerlSlashGOption="no" isColorizerTrigger="no" isFilterTrigger="no" isSoundTrigger="no" isColorTrigger="no" isColorTriggerFg="no" isColorTriggerBg="no">
							<name>Separator Check/Update</name>
							<script>snd.sep = matches[2]
disableTrigger("Separator Check/Update")
</script>
							<triggerType>0</triggerType>
							<conditonLineDelta>0</conditonLineDelta>
							<mStayOpen>0</mStayOpen>
							<mCommand></mCommand>
							<packageName></packageName>
							<mFgColor>#ff0000</mFgColor>
							<mBgColor>#ffff00</mBgColor>
							<mSoundFile></mSoundFile>
							<colorTriggerFgColor>#000000</colorTriggerFgColor>
							<colorTriggerBgColor>#000000</colorTriggerBgColor>
							<regexCodeList>
								<string>^Current separator\: (.+)$</string>
								<string>^Your config separator will now be\: '(.+)'.$</string>
							</regexCodeList>
							<regexCodePropertyList>
								<integer>1</integer>
								<integer>1</integer>
							</regexCodePropertyList>
						</Trigger>
						<Trigger isActive="yes" isFolder="no" isTempTrigger="no" isMultiline="no" isPerlSlashGOption="no" isColorizerTrigger="no" isFilterTrigger="no" isSoundTrigger="no" isColorTrigger="no" isColorTriggerFg="no" isColorTriggerBg="no">
							<name>Attack re-queue</name>
							<script>snd.waiting.queue = false
</script>
							<triggerType>0</triggerType>
							<conditonLineDelta>0</conditonLineDelta>
							<mStayOpen>0</mStayOpen>
							<mCommand></mCommand>
							<packageName></packageName>
							<mFgColor>#ff0000</mFgColor>
							<mBgColor>#ffff00</mBgColor>
							<mSoundFile></mSoundFile>
							<colorTriggerFgColor>#000000</colorTriggerFgColor>
							<colorTriggerBgColor>#000000</colorTriggerBgColor>
							<regexCodeList>
								<string>^You catch your flying axe with your (the )?\w+ hand.$</string>
							</regexCodeList>
							<regexCodePropertyList>
								<integer>1</integer>
							</regexCodePropertyList>
						</Trigger>
						<Trigger isActive="yes" isFolder="no" isTempTrigger="no" isMultiline="no" isPerlSlashGOption="no" isColorizerTrigger="no" isFilterTrigger="no" isSoundTrigger="no" isColorTrigger="no" isColorTriggerFg="no" isColorTriggerBg="no">
							<name>People updating via following</name>
							<script>
local do_we_update = false
for name in string.gmatch(matches[2], '[^,%s]+') do
  if name ~= "and" then
		if not table.isMember(snd.players_here, name) then
	    table.insert(snd.players_here, name)
			do_we_update = true
		end
  end
end
if do_we_update then people_update() end
</script>
							<triggerType>0</triggerType>
							<conditonLineDelta>0</conditonLineDelta>
							<mStayOpen>0</mStayOpen>
							<mCommand></mCommand>
							<packageName></packageName>
							<mFgColor>#ff0000</mFgColor>
							<mBgColor>#ffff00</mBgColor>
							<mSoundFile></mSoundFile>
							<colorTriggerFgColor>#000000</colorTriggerFgColor>
							<colorTriggerBgColor>#000000</colorTriggerBgColor>
							<regexCodeList>
								<string>^(.+) follows? you to the \w+.$</string>
							</regexCodeList>
							<regexCodePropertyList>
								<integer>1</integer>
							</regexCodePropertyList>
						</Trigger>
						<Trigger isActive="no" isFolder="no" isTempTrigger="no" isMultiline="no" isPerlSlashGOption="no" isColorizerTrigger="no" isFilterTrigger="no" isSoundTrigger="no" isColorTrigger="no" isColorTriggerFg="no" isColorTriggerBg="no">
							<name>Class check via score</name>
							<script>if snd.class ~= gmcp.Char.Status.class then
  snd.class = gmcp.Char.Status.class
  snd.set_vitals()
end
disableTrigger("Class check via score")</script>
							<triggerType>0</triggerType>
							<conditonLineDelta>0</conditonLineDelta>
							<mStayOpen>0</mStayOpen>
							<mCommand></mCommand>
							<packageName></packageName>
							<mFgColor>#ff0000</mFgColor>
							<mBgColor>#ffff00</mBgColor>
							<mSoundFile></mSoundFile>
							<colorTriggerFgColor>#000000</colorTriggerFgColor>
							<colorTriggerBgColor>#000000</colorTriggerBgColor>
							<regexCodeList>
								<string></string>
							</regexCodeList>
							<regexCodePropertyList>
								<integer>7</integer>
							</regexCodePropertyList>
						</Trigger>
					</TriggerGroup>
				</TriggerGroup>
				<TriggerGroup isActive="yes" isFolder="yes" isTempTrigger="no" isMultiline="no" isPerlSlashGOption="no" isColorizerTrigger="no" isFilterTrigger="no" isSoundTrigger="no" isColorTrigger="no" isColorTriggerFg="no" isColorTriggerBg="no">
					<name>Bashing</name>
					<script></script>
					<triggerType>0</triggerType>
					<conditonLineDelta>0</conditonLineDelta>
					<mStayOpen>0</mStayOpen>
					<mCommand></mCommand>
					<packageName></packageName>
					<mFgColor>#ff0000</mFgColor>
					<mBgColor>#ffff00</mBgColor>
					<mSoundFile></mSoundFile>
					<colorTriggerFgColor>#000000</colorTriggerFgColor>
					<colorTriggerBgColor>#000000</colorTriggerBgColor>
					<regexCodeList />
					<regexCodePropertyList />
					<Trigger isActive="yes" isFolder="no" isTempTrigger="no" isMultiline="no" isPerlSlashGOption="no" isColorizerTrigger="no" isFilterTrigger="no" isSoundTrigger="no" isColorTrigger="no" isColorTriggerFg="no" isColorTriggerBg="no">
						<name>survey</name>
						<script>snd.bashing.target_type = "long"
if gmcp.Room.Info.area == "the Shattered Vortex" then
  x, y = string.match(gmcp.Char.Status.level, "(.*) (.*)")
  level = tonumber(x)
  if level &lt; 90 then
    area = "the Shattered Vortex (Low Level)"
  elseif snd.faction == "spirit" then
    area = "the Shattered Vortex (Spirit)"
  elseif snd.faction == "shadow" then
    area = "the Shattered Vortex (Shadow)"
  end
  snd.load_targets(area)
else
  snd.load_targets(matches[2])
end</script>
						<triggerType>0</triggerType>
						<conditonLineDelta>0</conditonLineDelta>
						<mStayOpen>0</mStayOpen>
						<mCommand></mCommand>
						<packageName></packageName>
						<mFgColor>#ff0000</mFgColor>
						<mBgColor>#ffff00</mBgColor>
						<mSoundFile></mSoundFile>
						<colorTriggerFgColor>#000000</colorTriggerFgColor>
						<colorTriggerBgColor>#000000</colorTriggerBgColor>
						<regexCodeList>
							<string>^You discern that you are standing in (.*)\.$</string>
							<string>^You stand, brilliantly illuminated, within (.*)\.$</string>
						</regexCodeList>
						<regexCodePropertyList>
							<integer>1</integer>
							<integer>1</integer>
						</regexCodePropertyList>
					</Trigger>
					<Trigger isActive="no" isFolder="no" isTempTrigger="no" isMultiline="no" isPerlSlashGOption="no" isColorizerTrigger="no" isFilterTrigger="no" isSoundTrigger="no" isColorTrigger="no" isColorTriggerFg="no" isColorTriggerBg="no">
						<name>ih start</name>
						<script>snd.waiting.balance = false
snd.waiting.queue = false</script>
						<triggerType>0</triggerType>
						<conditonLineDelta>0</conditonLineDelta>
						<mStayOpen>99</mStayOpen>
						<mCommand></mCommand>
						<packageName></packageName>
						<mFgColor>#ff0000</mFgColor>
						<mBgColor>#ffff00</mBgColor>
						<mSoundFile></mSoundFile>
						<colorTriggerFgColor>#000000</colorTriggerFgColor>
						<colorTriggerBgColor>#000000</colorTriggerBgColor>
						<regexCodeList>
							<string>^You can see the following (\d+) objects:$</string>
						</regexCodeList>
						<regexCodePropertyList>
							<integer>1</integer>
						</regexCodePropertyList>
						<Trigger isActive="yes" isFolder="no" isTempTrigger="no" isMultiline="no" isPerlSlashGOption="no" isColorizerTrigger="no" isFilterTrigger="no" isSoundTrigger="no" isColorTrigger="no" isColorTriggerFg="no" isColorTriggerBg="no">
							<name>ih corpse</name>
							<script>snd.bashing.corpse_word = matches[2]
snd.bashing.corpse_number = matches[3]
snd.bashing.corpse_desc = matches[4]
snd.corpse_found = false
for i in ipairs(snd.corpses) do
 if snd.corpses[i] == snd.bashing.corpse_number then
  snd.corpse_found = true
 end
end
if not snd.corpse_found then
 table.insert(snd.corpses, snd.bashing.corpse_number)
end</script>
							<triggerType>0</triggerType>
							<conditonLineDelta>0</conditonLineDelta>
							<mStayOpen>0</mStayOpen>
							<mCommand></mCommand>
							<packageName></packageName>
							<mFgColor>#ff0000</mFgColor>
							<mBgColor>#ffff00</mBgColor>
							<mSoundFile></mSoundFile>
							<colorTriggerFgColor>#000000</colorTriggerFgColor>
							<colorTriggerBgColor>#000000</colorTriggerBgColor>
							<regexCodeList>
								<string>^"([^\d]+)(\d+)"\s+the corpse  of(.*).$</string>
							</regexCodeList>
							<regexCodePropertyList>
								<integer>1</integer>
							</regexCodePropertyList>
						</Trigger>
						<Trigger isActive="yes" isFolder="no" isTempTrigger="no" isMultiline="no" isPerlSlashGOption="no" isColorizerTrigger="no" isFilterTrigger="no" isSoundTrigger="no" isColorTrigger="no" isColorTriggerFg="no" isColorTriggerBg="no">
							<name>ih gold</name>
							<script>if not table.contains(snd.gathering, "coins") then
 table.insert(snd.gathering, "coins")
end</script>
							<triggerType>0</triggerType>
							<conditonLineDelta>0</conditonLineDelta>
							<mStayOpen>0</mStayOpen>
							<mCommand></mCommand>
							<packageName></packageName>
							<mFgColor>#ff0000</mFgColor>
							<mBgColor>#ffff00</mBgColor>
							<mSoundFile></mSoundFile>
							<colorTriggerFgColor>#000000</colorTriggerFgColor>
							<colorTriggerBgColor>#000000</colorTriggerBgColor>
							<regexCodeList>
								<string>^(\d+) gold soverigns\.$</string>
							</regexCodeList>
							<regexCodePropertyList>
								<integer>1</integer>
							</regexCodePropertyList>
						</Trigger>
						<Trigger isActive="yes" isFolder="no" isTempTrigger="no" isMultiline="no" isPerlSlashGOption="no" isColorizerTrigger="no" isFilterTrigger="no" isSoundTrigger="no" isColorTrigger="no" isColorTriggerFg="no" isColorTriggerBg="no">
							<name>ih end</name>
							<script>setTriggerStayOpen("ih start", 0)
snd.have_items = true
if #snd.gathering &gt; 0 then
 snd.need_loot = true
end
snd.waiting.ih = false
snd.waiting.balance = false
if snd.bashing.targeted and snd.toggles.calling then
 if not snd.last_target then
  snd.last_target = snd.bashing.target
 end
-- if snd.bashing.target ~= snd.last_target then
--  snd.send("wt Target: "..snd.bashing.target)
--  snd.last_target = snd.bashing.target
-- end
end
if not snd.bashing.targeted then
 snd.toggles.bashing = false
 if bot.going then
  expandAlias("move", false)
--  tempTimer(1.5, [[expandAlias("move")]])
 end
 snd.core()
end
</script>
							<triggerType>0</triggerType>
							<conditonLineDelta>0</conditonLineDelta>
							<mStayOpen>0</mStayOpen>
							<mCommand></mCommand>
							<packageName></packageName>
							<mFgColor>#ff0000</mFgColor>
							<mBgColor>#ffff00</mBgColor>
							<mSoundFile></mSoundFile>
							<colorTriggerFgColor>#000000</colorTriggerFgColor>
							<colorTriggerBgColor>#000000</colorTriggerBgColor>
							<regexCodeList>
								<string>return isPrompt()</string>
							</regexCodeList>
							<regexCodePropertyList>
								<integer>4</integer>
							</regexCodePropertyList>
						</Trigger>
						<Trigger isActive="yes" isFolder="no" isTempTrigger="no" isMultiline="yes" isPerlSlashGOption="no" isColorizerTrigger="no" isFilterTrigger="no" isSoundTrigger="no" isColorTrigger="yes" isColorTriggerFg="no" isColorTriggerBg="no">
							<name>ih aggro</name>
							<script>snd.bashing.target_word = multimatches[2][2]
snd.bashing.target_number = multimatches[2][3]
snd.bashing.target_desc = multimatches[2][4]
if (snd.bashing.target_priority ~= 200 or not snd.bashing.targeted) and not table.contains(snd.possible_targets, snd.bashing.target_desc) then
 snd.bashing.target = snd.bashing.target_number
 if snd.toggles.calling then
 	snd.send("wt target: "..snd.bashing.target)
 end
 snd.bashing.target_priority = 200
 snd.bashing.targeted = true
end
</script>
							<triggerType>0</triggerType>
							<conditonLineDelta>0</conditonLineDelta>
							<mStayOpen>0</mStayOpen>
							<mCommand></mCommand>
							<packageName></packageName>
							<mFgColor>#ff0000</mFgColor>
							<mBgColor>#ffff00</mBgColor>
							<mSoundFile></mSoundFile>
							<colorTriggerFgColor>#ff0000</colorTriggerFgColor>
							<colorTriggerBgColor>#000000</colorTriggerBgColor>
							<regexCodeList>
								<string>ANSI_COLORS_F{009}_B{000}</string>
								<string>^"([^\d]+)(\d+)"\s+(.*).$</string>
							</regexCodeList>
							<regexCodePropertyList>
								<integer>6</integer>
								<integer>1</integer>
							</regexCodePropertyList>
						</Trigger>
						<Trigger isActive="yes" isFolder="no" isTempTrigger="no" isMultiline="no" isPerlSlashGOption="no" isColorizerTrigger="no" isFilterTrigger="no" isSoundTrigger="no" isColorTrigger="no" isColorTriggerFg="no" isColorTriggerBg="no">
							<name>ih line</name>
							<script>snd.bashing.target_word = matches[2]
snd.bashing.target_number = matches[3]
snd.bashing.target_desc = matches[4]
for i in ipairs(snd.possible_targets) do
 if ((snd.bashing.target_type == "long") and string.find(snd.bashing.target_desc, snd.possible_targets[i])) or ((snd.bashing.target_type == "short") and string.find(snd.bashing.target_word, snd.possible_targets[i])) then
  if not string.find(snd.bashing.target_desc, "the corpse of") then
   if not snd.bashing.targeted then
    if snd.toggles.generics then
     snd.bashing.target = snd.bashing.target_word
    else
     snd.bashing.target = snd.bashing.target_number
    end
		if snd.toggles.calling then
 			snd.send("wt target: "..snd.bashing.target)
 		end
    snd.bashing.targeted = true
    snd.bashing.target_priority = i
   elseif i &lt; snd.bashing.target_priority then
    if snd.toggles.generics then
     snd.bashing.target = snd.bashing.target_word
    else
     snd.bashing.target = snd.bashing.target_number
    end
		if snd.toggles.calling then
 			snd.send("wt target: "..snd.bashing.target)
 		end
    snd.bashing.target_priority = i
    snd.bashing.targeted = true
   end
  end
 end
end

if snd.possible_items ~= {} then
 for k in ipairs(snd.possible_items) do
  if string.find(snd.bashing.target_desc, snd.possible_items[k]) then
   snd.item_found = false
   for v in ipairs(snd.gathering) do
    if snd.gathering[v] == snd.bashing.target_number then
     snd.item_found = true
    end
   end
   if not snd.item_found then
    table.insert(snd.gathering, snd.bashing.target_number)
   end
  end
 end
end

for y in ipairs(snd.global_items) do
 if string.find(snd.bashing.target_desc, snd.global_items[y]) then
  snd.item_found = false
 for z in ipairs(snd.gathering) do
   if snd.gathering[z] == snd.bashing.target_number then
    snd.item_found = true
   end
  end
  if not snd.item_found then
   table.insert(snd.gathering, snd.bashing.target_number)
  end
 end
end
</script>
							<triggerType>0</triggerType>
							<conditonLineDelta>0</conditonLineDelta>
							<mStayOpen>0</mStayOpen>
							<mCommand></mCommand>
							<packageName></packageName>
							<mFgColor>#ff0000</mFgColor>
							<mBgColor>#ffff00</mBgColor>
							<mSoundFile></mSoundFile>
							<colorTriggerFgColor>#000000</colorTriggerFgColor>
							<colorTriggerBgColor>#000000</colorTriggerBgColor>
							<regexCodeList>
								<string>^"([^\d]+)(\d+)"\s+(.*).$</string>
							</regexCodeList>
							<regexCodePropertyList>
								<integer>1</integer>
							</regexCodePropertyList>
						</Trigger>
					</Trigger>
					<Trigger isActive="yes" isFolder="no" isTempTrigger="no" isMultiline="no" isPerlSlashGOption="no" isColorizerTrigger="no" isFilterTrigger="no" isSoundTrigger="no" isColorTrigger="no" isColorTriggerFg="no" isColorTriggerBg="no">
						<name>deathblow</name>
						<script>deleteLine()
snd.message("DEATH: "..matches[2], "death")
snd.untarget()</script>
						<triggerType>0</triggerType>
						<conditonLineDelta>0</conditonLineDelta>
						<mStayOpen>0</mStayOpen>
						<mCommand></mCommand>
						<packageName></packageName>
						<mFgColor>#ff0000</mFgColor>
						<mBgColor>#ffff00</mBgColor>
						<mSoundFile></mSoundFile>
						<colorTriggerFgColor>#000000</colorTriggerFgColor>
						<colorTriggerBgColor>#000000</colorTriggerBgColor>
						<regexCodeList>
							<string>^The final blow proves too much for (.*), who expires, pitifully\.$</string>
							<string>^(.*) pales and then fall to the ground, a look of surprise etched on (the )?\w+ face\.$</string>
							<string>^(.*) gives a last, feeble gasp as (the )?\w+ windpipe is crushed\.$</string>
							<string>^(.*) stiffens and drops dead as the venom proves too much for (the )?\w+ system\.$</string>
							<string>^With so much force behind the final blow, (.*) expires in a brutalized mess\.$</string>
							<string>^The mighty blow utterly destroys (.*), splitting (the )?\w+ apart messily\.$</string>
						</regexCodeList>
						<regexCodePropertyList>
							<integer>1</integer>
							<integer>1</integer>
							<integer>1</integer>
							<integer>1</integer>
							<integer>1</integer>
							<integer>1</integer>
						</regexCodePropertyList>
					</Trigger>
					<Trigger isActive="no" isFolder="no" isTempTrigger="no" isMultiline="no" isPerlSlashGOption="no" isColorizerTrigger="no" isFilterTrigger="no" isSoundTrigger="no" isColorTrigger="no" isColorTriggerFg="no" isColorTriggerBg="no">
						<name>no ih</name>
						<script>if not snd.bashing.targeted then
 snd.toggles.bashing = false
 if bot.going then
  expandAlias("move", false)
--  tempTimer(1.5, [[expandAlias("move")]])
 end
end
</script>
						<triggerType>0</triggerType>
						<conditonLineDelta>0</conditonLineDelta>
						<mStayOpen>0</mStayOpen>
						<mCommand></mCommand>
						<packageName></packageName>
						<mFgColor>#ff0000</mFgColor>
						<mBgColor>#ffff00</mBgColor>
						<mSoundFile></mSoundFile>
						<colorTriggerFgColor>#000000</colorTriggerFgColor>
						<colorTriggerBgColor>#000000</colorTriggerBgColor>
						<regexCodeList>
							<string>There is nothing here.</string>
						</regexCodeList>
						<regexCodePropertyList>
							<integer>3</integer>
						</regexCodePropertyList>
					</Trigger>
					<Trigger isActive="yes" isFolder="no" isTempTrigger="no" isMultiline="no" isPerlSlashGOption="no" isColorizerTrigger="no" isFilterTrigger="no" isSoundTrigger="no" isColorTrigger="no" isColorTriggerFg="no" isColorTriggerBg="no">
						<name>ylem</name>
						<script>--snd.set_queue("absorb ylem")
deleteLine()
snd.message("&lt;yellow&gt;Ylem mist!")
snd.send("qeb absorb ylem")
snd.last_attack = "absorb ylem"</script>
						<triggerType>0</triggerType>
						<conditonLineDelta>0</conditonLineDelta>
						<mStayOpen>0</mStayOpen>
						<mCommand></mCommand>
						<packageName></packageName>
						<mFgColor>#ff0000</mFgColor>
						<mBgColor>#ffff00</mBgColor>
						<mSoundFile></mSoundFile>
						<colorTriggerFgColor>#000000</colorTriggerFgColor>
						<colorTriggerBgColor>#000000</colorTriggerBgColor>
						<regexCodeList>
							<string>Your vision distorts briefly, light scattering subtly as ylem energy diffuses into the surrounding atmosphere.</string>
						</regexCodeList>
						<regexCodePropertyList>
							<integer>3</integer>
						</regexCodePropertyList>
					</Trigger>
					<Trigger isActive="yes" isFolder="no" isTempTrigger="no" isMultiline="no" isPerlSlashGOption="no" isColorizerTrigger="no" isFilterTrigger="no" isSoundTrigger="no" isColorTrigger="no" isColorTriggerFg="no" isColorTriggerBg="no">
						<name>chaos worm</name>
						<script>snd.bashing.target = "worm"
if snd.toggles.calling then
 snd.send("wt target: worm")
end</script>
						<triggerType>0</triggerType>
						<conditonLineDelta>0</conditonLineDelta>
						<mStayOpen>0</mStayOpen>
						<mCommand></mCommand>
						<packageName></packageName>
						<mFgColor>#ff0000</mFgColor>
						<mBgColor>#ffff00</mBgColor>
						<mSoundFile></mSoundFile>
						<colorTriggerFgColor>#000000</colorTriggerFgColor>
						<colorTriggerBgColor>#000000</colorTriggerBgColor>
						<regexCodeList>
							<string>A swirling portal of chaos opens, spits out a worm, then vanishes.</string>
						</regexCodeList>
						<regexCodePropertyList>
							<integer>3</integer>
						</regexCodePropertyList>
					</Trigger>
					<Trigger isActive="no" isFolder="no" isTempTrigger="no" isMultiline="no" isPerlSlashGOption="no" isColorizerTrigger="no" isFilterTrigger="no" isSoundTrigger="no" isColorTrigger="no" isColorTriggerFg="no" isColorTriggerBg="no">
						<name>reanimated dwarfs</name>
						<script>expandAlias("aa")</script>
						<triggerType>0</triggerType>
						<conditonLineDelta>0</conditonLineDelta>
						<mStayOpen>0</mStayOpen>
						<mCommand></mCommand>
						<packageName></packageName>
						<mFgColor>#ff0000</mFgColor>
						<mBgColor>#ffff00</mBgColor>
						<mSoundFile></mSoundFile>
						<colorTriggerFgColor>#000000</colorTriggerFgColor>
						<colorTriggerBgColor>#000000</colorTriggerBgColor>
						<regexCodeList>
							<string>^(.*) shakes and stirs, (the )?\w+ decaying limbs rattling in a cacaphonous clatter as (the )?\w+ form is enveloped in a turgid green miasma\. Slowly but surely (the )?\w+ rises from the ground, a low snarl forming in the back of (the )?\w+ throat as (the )?\w+ prepares for another attack\.$</string>
						</regexCodeList>
						<regexCodePropertyList>
							<integer>1</integer>
						</regexCodePropertyList>
					</Trigger>
					<Trigger isActive="yes" isFolder="no" isTempTrigger="no" isMultiline="no" isPerlSlashGOption="no" isColorizerTrigger="no" isFilterTrigger="no" isSoundTrigger="no" isColorTrigger="no" isColorTriggerFg="no" isColorTriggerBg="no">
						<name>amalgamation</name>
						<script>snd.bashing.target = "piece"
if snd.toggles.calling then
 snd.send("wt target: piece")
end</script>
						<triggerType>0</triggerType>
						<conditonLineDelta>0</conditonLineDelta>
						<mStayOpen>0</mStayOpen>
						<mCommand></mCommand>
						<packageName></packageName>
						<mFgColor>#ff0000</mFgColor>
						<mBgColor>#ffff00</mBgColor>
						<mSoundFile></mSoundFile>
						<colorTriggerFgColor>#000000</colorTriggerFgColor>
						<colorTriggerBgColor>#000000</colorTriggerBgColor>
						<regexCodeList>
							<string>An amalgamation of corpses's flesh writhes and wriggles as a piece of it falls off. The piece of flesh congeals into a single creature, regenerating at an alarming speed as it reforms into a miniature version of itself.</string>
						</regexCodeList>
						<regexCodePropertyList>
							<integer>3</integer>
						</regexCodePropertyList>
					</Trigger>
					<Trigger isActive="yes" isFolder="no" isTempTrigger="no" isMultiline="no" isPerlSlashGOption="no" isColorizerTrigger="no" isFilterTrigger="no" isSoundTrigger="no" isColorTrigger="no" isColorTriggerFg="no" isColorTriggerBg="no">
						<name>amalgamation insta</name>
						<script>cecho("&lt;red&gt;\n ***********************************")
cecho("&lt;white&gt;\n   GET OUT GET OUT GET OUT GET OUT  ")
cecho("&lt;red&gt;\n ***********************************")</script>
						<triggerType>0</triggerType>
						<conditonLineDelta>0</conditonLineDelta>
						<mStayOpen>0</mStayOpen>
						<mCommand></mCommand>
						<packageName></packageName>
						<mFgColor>#ff0000</mFgColor>
						<mBgColor>#ffff00</mBgColor>
						<mSoundFile></mSoundFile>
						<colorTriggerFgColor>#000000</colorTriggerFgColor>
						<colorTriggerBgColor>#000000</colorTriggerBgColor>
						<regexCodeList>
							<string>An amalgamation of corpses's multiple eyes scan the area, finding singularity with you, and an unearthly scream echoes forth from within an amalgamation of corpses, the pain of the once-innocent lives used to create the abomination, now twisted into blind wrath. An amalgamation of corpses charges at you, determined to add a new victim!</string>
						</regexCodeList>
						<regexCodePropertyList>
							<integer>3</integer>
						</regexCodePropertyList>
					</Trigger>
					<Trigger isActive="yes" isFolder="no" isTempTrigger="no" isMultiline="no" isPerlSlashGOption="no" isColorizerTrigger="yes" isFilterTrigger="no" isSoundTrigger="no" isColorTrigger="no" isColorTriggerFg="no" isColorTriggerBg="no">
						<name>elemental</name>
						<script>deleteLine()
snd.message("Summoned: Elemental")
snd.bashing.target = "elemental"
snd.bashing.targeted = true
snd.toggles.bashing = true</script>
						<triggerType>0</triggerType>
						<conditonLineDelta>0</conditonLineDelta>
						<mStayOpen>0</mStayOpen>
						<mCommand></mCommand>
						<packageName></packageName>
						<mFgColor>#00ff7f</mFgColor>
						<mBgColor>#000000</mBgColor>
						<mSoundFile></mSoundFile>
						<colorTriggerFgColor>#000000</colorTriggerFgColor>
						<colorTriggerBgColor>#000000</colorTriggerBgColor>
						<regexCodeList>
							<string>You concentrate on the raw elemental energy flowing about your body, coalescing some of its potential into a massive elemental.</string>
						</regexCodeList>
						<regexCodePropertyList>
							<integer>3</integer>
						</regexCodePropertyList>
					</Trigger>
					<Trigger isActive="yes" isFolder="no" isTempTrigger="no" isMultiline="no" isPerlSlashGOption="no" isColorizerTrigger="no" isFilterTrigger="no" isSoundTrigger="no" isColorTrigger="no" isColorTriggerFg="no" isColorTriggerBg="no">
						<name>resummon</name>
						<script>if snd.toggles.fasthunt then
 snd.send("summon elemental")
end</script>
						<triggerType>0</triggerType>
						<conditonLineDelta>0</conditonLineDelta>
						<mStayOpen>0</mStayOpen>
						<mCommand></mCommand>
						<packageName></packageName>
						<mFgColor>#ff0000</mFgColor>
						<mBgColor>#ffff00</mBgColor>
						<mSoundFile></mSoundFile>
						<colorTriggerFgColor>#000000</colorTriggerFgColor>
						<colorTriggerBgColor>#000000</colorTriggerBgColor>
						<regexCodeList>
							<string>Having slain a massive elemental, you retrieve the corpse.</string>
						</regexCodeList>
						<regexCodePropertyList>
							<integer>3</integer>
						</regexCodePropertyList>
					</Trigger>
					<Trigger isActive="yes" isFolder="no" isTempTrigger="no" isMultiline="yes" isPerlSlashGOption="no" isColorizerTrigger="no" isFilterTrigger="no" isSoundTrigger="no" isColorTrigger="no" isColorTriggerFg="no" isColorTriggerBg="no">
						<name>who here</name>
						<script>local good = true
for name in string.gmatch(multimatches[3][2], '([^, ]+)') do
 if not table.contains(snd.group, name) then
  good = false
 end
end
if snd.toggles.fasthunt and good then
 snd.toggles.bashing = true
 snd.waiting.balance = false
 snd.room_clear = true
 snd.runBasher()
 snd.core()
elseif bot.going then
 expandAlias("move")
end</script>
						<triggerType>0</triggerType>
						<conditonLineDelta>3</conditonLineDelta>
						<mStayOpen>0</mStayOpen>
						<mCommand></mCommand>
						<packageName></packageName>
						<mFgColor>#ff0000</mFgColor>
						<mBgColor>#ffff00</mBgColor>
						<mSoundFile></mSoundFile>
						<colorTriggerFgColor>#000000</colorTriggerFgColor>
						<colorTriggerBgColor>#000000</colorTriggerBgColor>
						<regexCodeList>
							<string>You see the following people here:</string>
							<string>1</string>
							<string>^(.*)\.$</string>
							<string>1</string>
							<string>return isPrompt()</string>
						</regexCodeList>
						<regexCodePropertyList>
							<integer>3</integer>
							<integer>5</integer>
							<integer>1</integer>
							<integer>5</integer>
							<integer>4</integer>
						</regexCodePropertyList>
					</Trigger>
					<Trigger isActive="yes" isFolder="no" isTempTrigger="no" isMultiline="no" isPerlSlashGOption="no" isColorizerTrigger="no" isFilterTrigger="no" isSoundTrigger="no" isColorTrigger="no" isColorTriggerFg="no" isColorTriggerBg="no">
						<name>gorgon</name>
						<script>snd.toggles.bashing = false
snd.send("qeb avert")</script>
						<triggerType>0</triggerType>
						<conditonLineDelta>0</conditonLineDelta>
						<mStayOpen>0</mStayOpen>
						<mCommand></mCommand>
						<packageName></packageName>
						<mFgColor>#ff0000</mFgColor>
						<mBgColor>#ffff00</mBgColor>
						<mSoundFile></mSoundFile>
						<colorTriggerFgColor>#000000</colorTriggerFgColor>
						<colorTriggerBgColor>#000000</colorTriggerBgColor>
						<regexCodeList>
							<string>The gorgon is preparing to petrify you! AVERT your gaze.</string>
						</regexCodeList>
						<regexCodePropertyList>
							<integer>3</integer>
						</regexCodePropertyList>
					</Trigger>
					<Trigger isActive="yes" isFolder="no" isTempTrigger="no" isMultiline="no" isPerlSlashGOption="no" isColorizerTrigger="no" isFilterTrigger="no" isSoundTrigger="no" isColorTrigger="no" isColorTriggerFg="no" isColorTriggerBg="no">
						<name>vermin</name>
						<script>snd.send("k vermin")
snd.vermin = snd.vermin + 1
if snd.vermin &gt;= 3 then
 cecho("\n&lt;red&gt;****************************************")
 cecho("\n&lt;red&gt;       THIS IS YOUR LAST CHANCE         ")
 cecho("\n&lt;red&gt;****************************************")
end</script>
						<triggerType>0</triggerType>
						<conditonLineDelta>0</conditonLineDelta>
						<mStayOpen>0</mStayOpen>
						<mCommand></mCommand>
						<packageName></packageName>
						<mFgColor>#ff0000</mFgColor>
						<mBgColor>#ffff00</mBgColor>
						<mSoundFile></mSoundFile>
						<colorTriggerFgColor>#000000</colorTriggerFgColor>
						<colorTriggerBgColor>#000000</colorTriggerBgColor>
						<regexCodeList>
							<string>Tongue flicking to taste the air, a pebbly black snake comes into view.</string>
							<string>The glint of pebbly scales alerts you to the entrance of a black snake.</string>
							<string>With a faint slithering noise, a pebbly black snake enters.</string>
							<string>You spy a seagull, rooting around the ground for scraps of anything edible.</string>
							<string>The faint clicking of insect legs on stone alerts you to the entrance of a carrion beetle.</string>
							<string>A carrion beetle enters, scavenging for flesh.</string>
							<string>A carrion beetle scuttles in, searching for food.</string>
							<string>A black rat scurries in, looking for food.</string>
							<string>A reticulated planthopper lands on a perch nearby, becoming eerily still.</string>
						</regexCodeList>
						<regexCodePropertyList>
							<integer>3</integer>
							<integer>3</integer>
							<integer>3</integer>
							<integer>3</integer>
							<integer>3</integer>
							<integer>3</integer>
							<integer>3</integer>
							<integer>3</integer>
							<integer>3</integer>
						</regexCodePropertyList>
					</Trigger>
					<Trigger isActive="yes" isFolder="no" isTempTrigger="no" isMultiline="no" isPerlSlashGOption="no" isColorizerTrigger="no" isFilterTrigger="no" isSoundTrigger="no" isColorTrigger="no" isColorTriggerFg="no" isColorTriggerBg="no">
						<name>angel</name>
						<script>snd.bashing.target = "angel"
if snd.toggles.calling then
 snd.send("wt target: angel")
end</script>
						<triggerType>0</triggerType>
						<conditonLineDelta>0</conditonLineDelta>
						<mStayOpen>0</mStayOpen>
						<mCommand></mCommand>
						<packageName></packageName>
						<mFgColor>#ff0000</mFgColor>
						<mBgColor>#ffff00</mBgColor>
						<mSoundFile></mSoundFile>
						<colorTriggerFgColor>#000000</colorTriggerFgColor>
						<colorTriggerBgColor>#000000</colorTriggerBgColor>
						<regexCodeList>
							<string>A flower of white light blooms in the air beside a solemn luminary, and a shimmering figure emerges from within.</string>
							<string>Your attempt to attack a solemn luminary simply bounces off a guardian angel's protective shield, leaving him unscathed.</string>
							<string>A flower of white light blooms in the air beside Bright-eyed Amarane, and a shimmering figureemerges from within.</string>
						</regexCodeList>
						<regexCodePropertyList>
							<integer>3</integer>
							<integer>3</integer>
							<integer>3</integer>
						</regexCodePropertyList>
					</Trigger>
					<Trigger isActive="yes" isFolder="no" isTempTrigger="no" isMultiline="no" isPerlSlashGOption="no" isColorizerTrigger="no" isFilterTrigger="no" isSoundTrigger="no" isColorTrigger="no" isColorTriggerFg="no" isColorTriggerBg="no">
						<name>no mist</name>
						<script>deleteLine()</script>
						<triggerType>0</triggerType>
						<conditonLineDelta>0</conditonLineDelta>
						<mStayOpen>0</mStayOpen>
						<mCommand></mCommand>
						<packageName></packageName>
						<mFgColor>#ff0000</mFgColor>
						<mBgColor>#ffff00</mBgColor>
						<mSoundFile></mSoundFile>
						<colorTriggerFgColor>#000000</colorTriggerFgColor>
						<colorTriggerBgColor>#000000</colorTriggerBgColor>
						<regexCodeList>
							<string>There is no ylem energy mist in this location to absorb.</string>
						</regexCodeList>
						<regexCodePropertyList>
							<integer>3</integer>
						</regexCodePropertyList>
					</Trigger>
					<Trigger isActive="yes" isFolder="no" isTempTrigger="no" isMultiline="no" isPerlSlashGOption="no" isColorizerTrigger="no" isFilterTrigger="no" isSoundTrigger="no" isColorTrigger="no" isColorTriggerFg="no" isColorTriggerBg="no">
						<name>exp trigger</name>
						<script>snd.stats.max_xp = tonumber(gmcp.Char.Vitals.maxxp)
snd.stats.last_xp = tonumber(matches[2])
snd.stats.xp = tonumber(matches[4])

local mobs_to_level = (snd.stats.max_xp - tonumber(matches[4])) / tonumber(matches[2])
local mobs_xp_percent = (tonumber(matches[2]) / snd.stats.max_xp) * 100
local xp_point_percent = (25 - (((snd.stats.xp / snd.stats.max_xp) * 100) % 25))
local mobs_to_point = xp_point_percent / mobs_xp_percent
 
deleteLine()
snd.message("&lt;red&gt;Experience Gained&lt;white&gt;: " .. matches[2] .. " - from " .. matches[3] .. ". Total: " .. matches[4] .. ".")
snd.message("&lt;white&gt;"..(snd.stats.max_xp - tonumber(matches[4])).."&lt;yellow&gt;xp [&lt;white&gt;"..round(mobs_to_level,0).."&lt;yellow&gt;] to level!")

local x, y = string.match(gmcp.Char.Status.level, "(.*) (.*)")
local level = tonumber(x)
if level &gt; 99 then
  snd.message("&lt;white&gt;"..round(((xp_point_percent/100)*snd.stats.max_xp), 0).."&lt;yellow&gt;xp [&lt;white&gt;"..round(mobs_to_point,0).."&lt;yellow&gt;] to haven point!")
end
 
 
</script>
						<triggerType>0</triggerType>
						<conditonLineDelta>0</conditonLineDelta>
						<mStayOpen>0</mStayOpen>
						<mCommand></mCommand>
						<packageName></packageName>
						<mFgColor>#ff0000</mFgColor>
						<mBgColor>#ffff00</mBgColor>
						<mSoundFile></mSoundFile>
						<colorTriggerFgColor>#000000</colorTriggerFgColor>
						<colorTriggerBgColor>#000000</colorTriggerBgColor>
						<regexCodeList>
							<string>^Experience Gained\: (\d+) \((\w+)\) \[total\: (\d+)\]$</string>
						</regexCodeList>
						<regexCodePropertyList>
							<integer>1</integer>
						</regexCodePropertyList>
					</Trigger>
					<Trigger isActive="yes" isFolder="no" isTempTrigger="no" isMultiline="no" isPerlSlashGOption="no" isColorizerTrigger="no" isFilterTrigger="no" isSoundTrigger="no" isColorTrigger="no" isColorTriggerFg="no" isColorTriggerBg="no">
						<name>Rubble Walk Delay</name>
						<script>mmp.customwalkdelay(2)</script>
						<triggerType>0</triggerType>
						<conditonLineDelta>0</conditonLineDelta>
						<mStayOpen>0</mStayOpen>
						<mCommand></mCommand>
						<packageName></packageName>
						<mFgColor>#ff0000</mFgColor>
						<mBgColor>#ffff00</mBgColor>
						<mSoundFile></mSoundFile>
						<colorTriggerFgColor>#000000</colorTriggerFgColor>
						<colorTriggerBgColor>#000000</colorTriggerBgColor>
						<regexCodeList>
							<string>You slowly clamber over the rubble in your path.</string>
						</regexCodeList>
						<regexCodePropertyList>
							<integer>3</integer>
						</regexCodePropertyList>
					</Trigger>
					<Trigger isActive="yes" isFolder="no" isTempTrigger="no" isMultiline="no" isPerlSlashGOption="no" isColorizerTrigger="no" isFilterTrigger="no" isSoundTrigger="no" isColorTrigger="no" isColorTriggerFg="no" isColorTriggerBg="no">
						<name>Survivor auto attack</name>
						<script>if snd.toggles.fasthunt then
	snd.toggles.bashing = true
end</script>
						<triggerType>0</triggerType>
						<conditonLineDelta>0</conditonLineDelta>
						<mStayOpen>0</mStayOpen>
						<mCommand></mCommand>
						<packageName></packageName>
						<mFgColor>#ff0000</mFgColor>
						<mBgColor>#ffff00</mBgColor>
						<mSoundFile></mSoundFile>
						<colorTriggerFgColor>#000000</colorTriggerFgColor>
						<colorTriggerBgColor>#000000</colorTriggerBgColor>
						<regexCodeList>
							<string>^(A|An) .+ enters the arena, looking for blood.$</string>
						</regexCodeList>
						<regexCodePropertyList>
							<integer>1</integer>
						</regexCodePropertyList>
					</Trigger>
					<Trigger isActive="yes" isFolder="no" isTempTrigger="no" isMultiline="no" isPerlSlashGOption="no" isColorizerTrigger="no" isFilterTrigger="no" isSoundTrigger="no" isColorTrigger="no" isColorTriggerFg="no" isColorTriggerBg="no">
						<name>Counterattack active</name>
						<script>snd.counterattack_active = true</script>
						<triggerType>0</triggerType>
						<conditonLineDelta>0</conditonLineDelta>
						<mStayOpen>0</mStayOpen>
						<mCommand></mCommand>
						<packageName></packageName>
						<mFgColor>#ff0000</mFgColor>
						<mBgColor>#ffff00</mBgColor>
						<mSoundFile></mSoundFile>
						<colorTriggerFgColor>#000000</colorTriggerFgColor>
						<colorTriggerBgColor>#000000</colorTriggerBgColor>
						<regexCodeList>
							<string>^.+ braces and prepares to make a counterattack.$</string>
						</regexCodeList>
						<regexCodePropertyList>
							<integer>1</integer>
						</regexCodePropertyList>
					</Trigger>
					<Trigger isActive="yes" isFolder="no" isTempTrigger="no" isMultiline="no" isPerlSlashGOption="no" isColorizerTrigger="no" isFilterTrigger="no" isSoundTrigger="no" isColorTrigger="no" isColorTriggerFg="no" isColorTriggerBg="no">
						<name>Counterattack OFf</name>
						<script>snd.counterattack_active = false</script>
						<triggerType>0</triggerType>
						<conditonLineDelta>0</conditonLineDelta>
						<mStayOpen>0</mStayOpen>
						<mCommand></mCommand>
						<packageName></packageName>
						<mFgColor>#ff0000</mFgColor>
						<mBgColor>#ffff00</mBgColor>
						<mSoundFile></mSoundFile>
						<colorTriggerFgColor>#000000</colorTriggerFgColor>
						<colorTriggerBgColor>#000000</colorTriggerBgColor>
						<regexCodeList>
							<string>^.+ ceases preparing to counter.$</string>
						</regexCodeList>
						<regexCodePropertyList>
							<integer>1</integer>
						</regexCodePropertyList>
					</Trigger>
				</TriggerGroup>
				<TriggerGroup isActive="yes" isFolder="yes" isTempTrigger="no" isMultiline="no" isPerlSlashGOption="no" isColorizerTrigger="no" isFilterTrigger="no" isSoundTrigger="no" isColorTrigger="no" isColorTriggerFg="no" isColorTriggerBg="no">
					<name>GUI</name>
					<script></script>
					<triggerType>0</triggerType>
					<conditonLineDelta>0</conditonLineDelta>
					<mStayOpen>0</mStayOpen>
					<mCommand></mCommand>
					<packageName></packageName>
					<mFgColor>#ff0000</mFgColor>
					<mBgColor>#ffff00</mBgColor>
					<mSoundFile></mSoundFile>
					<colorTriggerFgColor>#000000</colorTriggerFgColor>
					<colorTriggerBgColor>#000000</colorTriggerBgColor>
					<regexCodeList />
					<regexCodePropertyList />
					<TriggerGroup isActive="yes" isFolder="yes" isTempTrigger="no" isMultiline="no" isPerlSlashGOption="no" isColorizerTrigger="no" isFilterTrigger="no" isSoundTrigger="no" isColorTrigger="no" isColorTriggerFg="no" isColorTriggerBg="no">
						<name>Chat</name>
						<script></script>
						<triggerType>0</triggerType>
						<conditonLineDelta>0</conditonLineDelta>
						<mStayOpen>0</mStayOpen>
						<mCommand></mCommand>
						<packageName></packageName>
						<mFgColor>#ff0000</mFgColor>
						<mBgColor>#ffff00</mBgColor>
						<mSoundFile></mSoundFile>
						<colorTriggerFgColor>#000000</colorTriggerFgColor>
						<colorTriggerBgColor>#000000</colorTriggerBgColor>
						<regexCodeList />
						<regexCodePropertyList />
						<Trigger isActive="yes" isFolder="no" isTempTrigger="no" isMultiline="no" isPerlSlashGOption="no" isColorizerTrigger="no" isFilterTrigger="no" isSoundTrigger="no" isColorTrigger="yes" isColorTriggerFg="no" isColorTriggerBg="no">
							<name>Tells</name>
							<script>if not string.find(matches[3], "OOC") and not string.find(matches[3], "%/%/") and not string.find(matches[3], "%(%(") then
 demonnic.chat:append("Tells")
end</script>
							<triggerType>0</triggerType>
							<conditonLineDelta>0</conditonLineDelta>
							<mStayOpen>0</mStayOpen>
							<mCommand></mCommand>
							<packageName></packageName>
							<mFgColor>#ff0000</mFgColor>
							<mBgColor>#ffff00</mBgColor>
							<mSoundFile></mSoundFile>
							<colorTriggerFgColor>#ffff00</colorTriggerFgColor>
							<colorTriggerBgColor>#000000</colorTriggerBgColor>
							<regexCodeList>
								<string>^\(Tells(.*)\): (.*)</string>
							</regexCodeList>
							<regexCodePropertyList>
								<integer>1</integer>
							</regexCodePropertyList>
						</Trigger>
						<Trigger isActive="yes" isFolder="no" isTempTrigger="no" isMultiline="no" isPerlSlashGOption="no" isColorizerTrigger="no" isFilterTrigger="no" isSoundTrigger="no" isColorTrigger="no" isColorTriggerFg="no" isColorTriggerBg="no">
							<name>City</name>
							<script>demonnic.chat:append("City")</script>
							<triggerType>0</triggerType>
							<conditonLineDelta>0</conditonLineDelta>
							<mStayOpen>0</mStayOpen>
							<mCommand></mCommand>
							<packageName></packageName>
							<mFgColor>#ff0000</mFgColor>
							<mBgColor>#ffff00</mBgColor>
							<mSoundFile></mSoundFile>
							<colorTriggerFgColor>#000000</colorTriggerFgColor>
							<colorTriggerBgColor>#000000</colorTriggerBgColor>
							<regexCodeList>
								<string>(Spinesreach):</string>
								<string>(Enorian):</string>
								<string>(Bloodloch):</string>
								<string>(Novice):</string>
								<string>(Duiran):</string>
							</regexCodeList>
							<regexCodePropertyList>
								<integer>2</integer>
								<integer>2</integer>
								<integer>2</integer>
								<integer>2</integer>
								<integer>2</integer>
							</regexCodePropertyList>
						</Trigger>
						<Trigger isActive="yes" isFolder="no" isTempTrigger="no" isMultiline="no" isPerlSlashGOption="no" isColorizerTrigger="no" isFilterTrigger="no" isSoundTrigger="no" isColorTrigger="no" isColorTriggerFg="no" isColorTriggerBg="no">
							<name>OOC</name>
							<script>demonnic.chat:append("OOC")</script>
							<triggerType>0</triggerType>
							<conditonLineDelta>99</conditonLineDelta>
							<mStayOpen>0</mStayOpen>
							<mCommand></mCommand>
							<packageName></packageName>
							<mFgColor>#ff0000</mFgColor>
							<mBgColor>#ffff00</mBgColor>
							<mSoundFile></mSoundFile>
							<colorTriggerFgColor>#000000</colorTriggerFgColor>
							<colorTriggerBgColor>#000000</colorTriggerBgColor>
							<regexCodeList>
								<string>OOC(.*)</string>
								<string>"//</string>
								<string>"((</string>
							</regexCodeList>
							<regexCodePropertyList>
								<integer>1</integer>
								<integer>0</integer>
								<integer>0</integer>
							</regexCodePropertyList>
						</Trigger>
						<Trigger isActive="yes" isFolder="no" isTempTrigger="no" isMultiline="no" isPerlSlashGOption="no" isColorizerTrigger="no" isFilterTrigger="no" isSoundTrigger="no" isColorTrigger="no" isColorTriggerFg="no" isColorTriggerBg="no">
							<name>Misc</name>
							<script>if not string.find(matches[1], "OOC") and not string.find(matches[1], "%/%/") and not string.find(matches[1], "%(%(") then
 demonnic.chat:append("Misc")
end</script>
							<triggerType>0</triggerType>
							<conditonLineDelta>99</conditonLineDelta>
							<mStayOpen>0</mStayOpen>
							<mCommand></mCommand>
							<packageName></packageName>
							<mFgColor>#ff0000</mFgColor>
							<mBgColor>#ffff00</mBgColor>
							<mSoundFile></mSoundFile>
							<colorTriggerFgColor>#000000</colorTriggerFgColor>
							<colorTriggerBgColor>#000000</colorTriggerBgColor>
							<regexCodeList>
								<string>(Newbie):</string>
								<string>(Market):</string>
								<string>(Sect):</string>
								<string>(Laity):</string>
								<string>(Congregation):</string>
								<string>(The Kingbound):</string>
							</regexCodeList>
							<regexCodePropertyList>
								<integer>2</integer>
								<integer>2</integer>
								<integer>2</integer>
								<integer>2</integer>
								<integer>2</integer>
								<integer>2</integer>
							</regexCodePropertyList>
						</Trigger>
						<Trigger isActive="yes" isFolder="no" isTempTrigger="no" isMultiline="no" isPerlSlashGOption="no" isColorizerTrigger="no" isFilterTrigger="no" isSoundTrigger="no" isColorTrigger="no" isColorTriggerFg="no" isColorTriggerBg="no">
							<name>Clans</name>
							<script>demonnic.chat:append("Clans")</script>
							<triggerType>0</triggerType>
							<conditonLineDelta>0</conditonLineDelta>
							<mStayOpen>0</mStayOpen>
							<mCommand></mCommand>
							<packageName></packageName>
							<mFgColor>#ff0000</mFgColor>
							<mBgColor>#ffff00</mBgColor>
							<mSoundFile></mSoundFile>
							<colorTriggerFgColor>#000000</colorTriggerFgColor>
							<colorTriggerBgColor>#000000</colorTriggerBgColor>
							<regexCodeList>
								<string>(Carnifex Combat Academy):</string>
								<string>(The Front Line):</string>
								<string>(The Sa'Elae Line):</string>
								<string>(T.A.N. Arrow):</string>
								<string>(The Order of the Sword):</string>
								<string>(Research):</string>
								<string>(The Enorian Protectorate Army):</string>
								<string>(The Side Line):</string>
								<string>(Leaders of the Beacon):</string>
								<string>(Spirean Joint Command):</string>
								<string>(The Strikers):</string>
								<string>(MSGA:</string>
							</regexCodeList>
							<regexCodePropertyList>
								<integer>2</integer>
								<integer>2</integer>
								<integer>2</integer>
								<integer>2</integer>
								<integer>2</integer>
								<integer>2</integer>
								<integer>2</integer>
								<integer>2</integer>
								<integer>2</integer>
								<integer>2</integer>
								<integer>2</integer>
								<integer>2</integer>
							</regexCodePropertyList>
						</Trigger>
						<Trigger isActive="yes" isFolder="no" isTempTrigger="no" isMultiline="no" isPerlSlashGOption="no" isColorizerTrigger="no" isFilterTrigger="no" isSoundTrigger="no" isColorTrigger="no" isColorTriggerFg="no" isColorTriggerBg="no">
							<name>Guild</name>
							<script>local guild_list = {
	"Carnifex",
	"Teradrim",
	"Sentaari",
	"Sentinels",
	"Shamans",
	"Ascendril",
	"Illuminai",
	"Templars",
	"Archivists",
	"Sciomancers",
	"Syssin",
  "Dominion",
}

if table.contains(guild_list, matches[2]) then
	demonnic.chat:append("Guild")
end</script>
							<triggerType>0</triggerType>
							<conditonLineDelta>0</conditonLineDelta>
							<mStayOpen>0</mStayOpen>
							<mCommand></mCommand>
							<packageName></packageName>
							<mFgColor>#ff0000</mFgColor>
							<mBgColor>#ffff00</mBgColor>
							<mSoundFile></mSoundFile>
							<colorTriggerFgColor>#000000</colorTriggerFgColor>
							<colorTriggerBgColor>#000000</colorTriggerBgColor>
							<regexCodeList>
								<string>^\&lt;\&lt;(\w+)\&gt;\&gt;\:</string>
								<string>^\((\w+)\)\:</string>
							</regexCodeList>
							<regexCodePropertyList>
								<integer>1</integer>
								<integer>1</integer>
							</regexCodePropertyList>
						</Trigger>
						<Trigger isActive="yes" isFolder="no" isTempTrigger="no" isMultiline="no" isPerlSlashGOption="no" isColorizerTrigger="yes" isFilterTrigger="no" isSoundTrigger="no" isColorTrigger="yes" isColorTriggerFg="no" isColorTriggerBg="no">
							<name>Deathsight</name>
							<script>demonnic.chat:append("Misc")</script>
							<triggerType>0</triggerType>
							<conditonLineDelta>0</conditonLineDelta>
							<mStayOpen>0</mStayOpen>
							<mCommand></mCommand>
							<packageName></packageName>
							<mFgColor>#5500ff</mFgColor>
							<mBgColor>#000000</mBgColor>
							<mSoundFile></mSoundFile>
							<colorTriggerFgColor>#00b300</colorTriggerFgColor>
							<colorTriggerBgColor>#800080</colorTriggerBgColor>
							<regexCodeList>
								<string>ANSI_COLORS_F{002}_B{005}</string>
							</regexCodeList>
							<regexCodePropertyList>
								<integer>6</integer>
							</regexCodePropertyList>
						</Trigger>
						<Trigger isActive="yes" isFolder="no" isTempTrigger="no" isMultiline="no" isPerlSlashGOption="no" isColorizerTrigger="no" isFilterTrigger="no" isSoundTrigger="no" isColorTrigger="yes" isColorTriggerFg="no" isColorTriggerBg="no">
							<name>Says</name>
							<script>saw_a_say = true
</script>
							<triggerType>0</triggerType>
							<conditonLineDelta>0</conditonLineDelta>
							<mStayOpen>0</mStayOpen>
							<mCommand></mCommand>
							<packageName></packageName>
							<mFgColor>#ff0000</mFgColor>
							<mBgColor>#ffff00</mBgColor>
							<mSoundFile></mSoundFile>
							<colorTriggerFgColor>#00ffff</colorTriggerFgColor>
							<colorTriggerBgColor>#000000</colorTriggerBgColor>
							<regexCodeList>
								<string>ANSI_COLORS_F{014}_B{000}</string>
							</regexCodeList>
							<regexCodePropertyList>
								<integer>6</integer>
							</regexCodePropertyList>
							<Trigger isActive="yes" isFolder="no" isTempTrigger="no" isMultiline="no" isPerlSlashGOption="no" isColorizerTrigger="no" isFilterTrigger="no" isSoundTrigger="no" isColorTrigger="yes" isColorTriggerFg="no" isColorTriggerBg="no">
								<name>items</name>
								<script>saw_a_say = false</script>
								<triggerType>0</triggerType>
								<conditonLineDelta>0</conditonLineDelta>
								<mStayOpen>0</mStayOpen>
								<mCommand></mCommand>
								<packageName></packageName>
								<mFgColor>#ff0000</mFgColor>
								<mBgColor>#ffff00</mBgColor>
								<mSoundFile></mSoundFile>
								<colorTriggerFgColor>#ffffff</colorTriggerFgColor>
								<colorTriggerBgColor>#000000</colorTriggerBgColor>
								<regexCodeList>
									<string>ANSI_COLORS_F{006}_B{000}</string>
									<string>ANSI_COLORS_F{002}_B{000}</string>
									<string>ANSI_COLORS_F{015}_B{000}</string>
								</regexCodeList>
								<regexCodePropertyList>
									<integer>6</integer>
									<integer>6</integer>
									<integer>6</integer>
								</regexCodePropertyList>
							</Trigger>
							<Trigger isActive="yes" isFolder="no" isTempTrigger="no" isMultiline="no" isPerlSlashGOption="no" isColorizerTrigger="no" isFilterTrigger="no" isSoundTrigger="no" isColorTrigger="no" isColorTriggerFg="no" isColorTriggerBg="no">
								<name>capture</name>
								<script>if saw_a_say and string.find(matches[2], "\"") then
 if not string.find(matches[2], "OOC") and not string.find(matches[2], "%/%/") and not string.find(matches[2], "%(%(") then
  demonnic.chat:append("Local")
 end
end</script>
								<triggerType>0</triggerType>
								<conditonLineDelta>1</conditonLineDelta>
								<mStayOpen>0</mStayOpen>
								<mCommand></mCommand>
								<packageName></packageName>
								<mFgColor>#ff0000</mFgColor>
								<mBgColor>#ffff00</mBgColor>
								<mSoundFile></mSoundFile>
								<colorTriggerFgColor>#000000</colorTriggerFgColor>
								<colorTriggerBgColor>#000000</colorTriggerBgColor>
								<regexCodeList>
									<string>^(.*)$</string>
								</regexCodeList>
								<regexCodePropertyList>
									<integer>1</integer>
								</regexCodePropertyList>
							</Trigger>
						</Trigger>
						<Trigger isActive="yes" isFolder="no" isTempTrigger="no" isMultiline="no" isPerlSlashGOption="no" isColorizerTrigger="yes" isFilterTrigger="no" isSoundTrigger="no" isColorTrigger="no" isColorTriggerFg="no" isColorTriggerBg="no">
							<name>leylines</name>
							<script>demonnic.chat:append("Misc")</script>
							<triggerType>0</triggerType>
							<conditonLineDelta>0</conditonLineDelta>
							<mStayOpen>0</mStayOpen>
							<mCommand></mCommand>
							<packageName></packageName>
							<mFgColor>#ff007f</mFgColor>
							<mBgColor>#000000</mBgColor>
							<mSoundFile></mSoundFile>
							<colorTriggerFgColor>#000000</colorTriggerFgColor>
							<colorTriggerBgColor>#000000</colorTriggerBgColor>
							<regexCodeList>
								<string>A palpitating tremor resonates from the leylines as a lesser focal point is tapped for its energy.</string>
								<string>A spicy, ashen smell wafts up your nose and you look up to notice a fire signal eddying up into the sky; an event within the ruins has been signalled.</string>
								<string>A spicy, ashen smell wafts up your nose and you look up to notice a fire signal eddying up into the sky; an event within the ruins will begin within fifteen minutes.</string>
								<string>The spicy, ashen smell that had been lingering begins to subside and you know the signal fire has been extinguished; there is five minutes before the event begins in the ruins.</string>
								<string>A spicy, ashen smell touches your nose, the scent familiar to the incense used in the Ophidian Ruins, signalling an event within them has been signalled.</string>
								<string>A spicy, ashen smell touches your nose, the scent familiar to the incense used in the Ophidian Ruins, signalling an event within them will begin within fifteen minutes.</string>
							</regexCodeList>
							<regexCodePropertyList>
								<integer>3</integer>
								<integer>3</integer>
								<integer>3</integer>
								<integer>3</integer>
								<integer>3</integer>
								<integer>3</integer>
							</regexCodePropertyList>
						</Trigger>
						<Trigger isActive="yes" isFolder="no" isTempTrigger="no" isMultiline="no" isPerlSlashGOption="no" isColorizerTrigger="no" isFilterTrigger="no" isSoundTrigger="no" isColorTrigger="no" isColorTriggerFg="no" isColorTriggerBg="no">
							<name>Signs</name>
							<script>demonnic.chat:append("Local")</script>
							<triggerType>0</triggerType>
							<conditonLineDelta>0</conditonLineDelta>
							<mStayOpen>0</mStayOpen>
							<mCommand></mCommand>
							<packageName></packageName>
							<mFgColor>#ff0000</mFgColor>
							<mBgColor>#ffff00</mBgColor>
							<mSoundFile></mSoundFile>
							<colorTriggerFgColor>#000000</colorTriggerFgColor>
							<colorTriggerBgColor>#000000</colorTriggerBgColor>
							<regexCodeList>
								<string>You sign out: </string>
								<string>^(\w+) signs</string>
								<string>^Subtle movements within (\w+)'s? actions convey the message:</string>
								<string>Subtle movements within your actions conveys to others:</string>
							</regexCodeList>
							<regexCodePropertyList>
								<integer>2</integer>
								<integer>1</integer>
								<integer>1</integer>
								<integer>2</integer>
							</regexCodePropertyList>
						</Trigger>
						<Trigger isActive="yes" isFolder="no" isTempTrigger="no" isMultiline="no" isPerlSlashGOption="no" isColorizerTrigger="yes" isFilterTrigger="no" isSoundTrigger="no" isColorTrigger="no" isColorTriggerFg="no" isColorTriggerBg="no">
							<name>lost item</name>
							<script>demonnic.chat:append("Misc")</script>
							<triggerType>0</triggerType>
							<conditonLineDelta>0</conditonLineDelta>
							<mStayOpen>0</mStayOpen>
							<mCommand></mCommand>
							<packageName></packageName>
							<mFgColor>#00aaff</mFgColor>
							<mBgColor>#000000</mBgColor>
							<mSoundFile></mSoundFile>
							<colorTriggerFgColor>#000000</colorTriggerFgColor>
							<colorTriggerBgColor>#000000</colorTriggerBgColor>
							<regexCodeList>
								<string>^You feel a sense of loss as .+ blinks out of existence\.$</string>
							</regexCodeList>
							<regexCodePropertyList>
								<integer>1</integer>
							</regexCodePropertyList>
						</Trigger>
						<Trigger isActive="yes" isFolder="no" isTempTrigger="no" isMultiline="no" isPerlSlashGOption="no" isColorizerTrigger="no" isFilterTrigger="no" isSoundTrigger="no" isColorTrigger="no" isColorTriggerFg="no" isColorTriggerBg="no">
							<name>webs</name>
							<script>demonnic.chat:append("Web")</script>
							<triggerType>0</triggerType>
							<conditonLineDelta>0</conditonLineDelta>
							<mStayOpen>0</mStayOpen>
							<mCommand></mCommand>
							<packageName></packageName>
							<mFgColor>#ff0000</mFgColor>
							<mBgColor>#ffff00</mBgColor>
							<mSoundFile></mSoundFile>
							<colorTriggerFgColor>#000000</colorTriggerFgColor>
							<colorTriggerBgColor>#000000</colorTriggerBgColor>
							<regexCodeList>
								<string>(Web): </string>
							</regexCodeList>
							<regexCodePropertyList>
								<integer>2</integer>
							</regexCodePropertyList>
						</Trigger>
					</TriggerGroup>
					<TriggerGroup isActive="yes" isFolder="yes" isTempTrigger="no" isMultiline="no" isPerlSlashGOption="no" isColorizerTrigger="no" isFilterTrigger="no" isSoundTrigger="no" isColorTrigger="no" isColorTriggerFg="no" isColorTriggerBg="no">
						<name>Wield/unwield updating</name>
						<script></script>
						<triggerType>0</triggerType>
						<conditonLineDelta>0</conditonLineDelta>
						<mStayOpen>0</mStayOpen>
						<mCommand></mCommand>
						<packageName></packageName>
						<mFgColor>#ff0000</mFgColor>
						<mBgColor>#ffff00</mBgColor>
						<mSoundFile></mSoundFile>
						<colorTriggerFgColor>#000000</colorTriggerFgColor>
						<colorTriggerBgColor>#000000</colorTriggerBgColor>
						<regexCodeList />
						<regexCodePropertyList />
						<Trigger isActive="yes" isFolder="no" isTempTrigger="no" isMultiline="no" isPerlSlashGOption="no" isColorizerTrigger="no" isFilterTrigger="no" isSoundTrigger="no" isColorTrigger="no" isColorTriggerFg="no" isColorTriggerBg="no">
							<name>Quick unwield single</name>
							<script>snd.wielded[matches[2]] =  {name="", id=""}
snd.updateItems()</script>
							<triggerType>0</triggerType>
							<conditonLineDelta>0</conditonLineDelta>
							<mStayOpen>0</mStayOpen>
							<mCommand></mCommand>
							<packageName></packageName>
							<mFgColor>#ff0000</mFgColor>
							<mBgColor>#ffff00</mBgColor>
							<mSoundFile></mSoundFile>
							<colorTriggerFgColor>#000000</colorTriggerFgColor>
							<colorTriggerBgColor>#000000</colorTriggerBgColor>
							<regexCodeList>
								<string>^You cease to wield .+ in your (\w+) hand, securing it conveniently on your weaponbelt.$</string>
							</regexCodeList>
							<regexCodePropertyList>
								<integer>1</integer>
							</regexCodePropertyList>
						</Trigger>
						<Trigger isActive="yes" isFolder="no" isTempTrigger="no" isMultiline="no" isPerlSlashGOption="no" isColorizerTrigger="no" isFilterTrigger="no" isSoundTrigger="no" isColorTrigger="no" isColorTriggerFg="no" isColorTriggerBg="no">
							<name>Quick unwield both</name>
							<script>snd.wielded = {left =  {name="", id=""}, right = {name="", id=""}}
snd.updateItems()</script>
							<triggerType>0</triggerType>
							<conditonLineDelta>0</conditonLineDelta>
							<mStayOpen>0</mStayOpen>
							<mCommand></mCommand>
							<packageName></packageName>
							<mFgColor>#ff0000</mFgColor>
							<mBgColor>#ffff00</mBgColor>
							<mSoundFile></mSoundFile>
							<colorTriggerFgColor>#000000</colorTriggerFgColor>
							<colorTriggerBgColor>#000000</colorTriggerBgColor>
							<regexCodeList>
								<string>^You cease to wield .+ in your .+ hand and .+ in your .+ hand.</string>
							</regexCodeList>
							<regexCodePropertyList>
								<integer>1</integer>
							</regexCodePropertyList>
						</Trigger>
						<Trigger isActive="yes" isFolder="no" isTempTrigger="no" isMultiline="no" isPerlSlashGOption="no" isColorizerTrigger="no" isFilterTrigger="no" isSoundTrigger="no" isColorTrigger="no" isColorTriggerFg="no" isColorTriggerBg="no">
							<name>Quickwield into both hands from belt</name>
							<script>for _, v in ipairs(gmcp.Char.Items.List.items) do
  if v.attrib == "Wl" then
    if snd.wielded.left.name == "" then
      snd.wielded.left.name = v.name
      snd.wielded.left.id = v.id
    end
  end
end
snd.updateItems()</script>
							<triggerType>0</triggerType>
							<conditonLineDelta>0</conditonLineDelta>
							<mStayOpen>0</mStayOpen>
							<mCommand></mCommand>
							<packageName></packageName>
							<mFgColor>#ff0000</mFgColor>
							<mBgColor>#ffff00</mBgColor>
							<mSoundFile></mSoundFile>
							<colorTriggerFgColor>#000000</colorTriggerFgColor>
							<colorTriggerBgColor>#000000</colorTriggerBgColor>
							<regexCodeList>
								<string>^You pull .+ from your weaponbelt fluidly into both hands.$</string>
							</regexCodeList>
							<regexCodePropertyList>
								<integer>1</integer>
							</regexCodePropertyList>
						</Trigger>
					</TriggerGroup>
				</TriggerGroup>
				<TriggerGroup isActive="yes" isFolder="yes" isTempTrigger="no" isMultiline="no" isPerlSlashGOption="no" isColorizerTrigger="no" isFilterTrigger="no" isSoundTrigger="no" isColorTrigger="no" isColorTriggerFg="no" isColorTriggerBg="no">
					<name>Healing</name>
					<script></script>
					<triggerType>0</triggerType>
					<conditonLineDelta>0</conditonLineDelta>
					<mStayOpen>0</mStayOpen>
					<mCommand></mCommand>
					<packageName></packageName>
					<mFgColor>#ff0000</mFgColor>
					<mBgColor>#ffff00</mBgColor>
					<mSoundFile></mSoundFile>
					<colorTriggerFgColor>#000000</colorTriggerFgColor>
					<colorTriggerBgColor>#000000</colorTriggerBgColor>
					<regexCodeList />
					<regexCodePropertyList />
					<Trigger isActive="yes" isFolder="no" isTempTrigger="no" isMultiline="no" isPerlSlashGOption="no" isColorizerTrigger="no" isFilterTrigger="no" isSoundTrigger="no" isColorTrigger="no" isColorTriggerFg="no" isColorTriggerBg="no">
						<name>elevate paresis</name>
						<script>if snd.have_aff("paresis") then
 snd.send("firstaid elevate paresis")
end</script>
						<triggerType>0</triggerType>
						<conditonLineDelta>0</conditonLineDelta>
						<mStayOpen>0</mStayOpen>
						<mCommand></mCommand>
						<packageName></packageName>
						<mFgColor>#ff0000</mFgColor>
						<mBgColor>#ffff00</mBgColor>
						<mSoundFile></mSoundFile>
						<colorTriggerFgColor>#000000</colorTriggerFgColor>
						<colorTriggerBgColor>#000000</colorTriggerBgColor>
						<regexCodeList>
							<string>Your tree of life tattoo tingles slightly.</string>
							<string>Your tree tattoo tingles slightly. </string>
						</regexCodeList>
						<regexCodePropertyList>
							<integer>3</integer>
							<integer>3</integer>
						</regexCodePropertyList>
					</Trigger>
					<Trigger isActive="yes" isFolder="no" isTempTrigger="no" isMultiline="no" isPerlSlashGOption="no" isColorizerTrigger="no" isFilterTrigger="no" isSoundTrigger="no" isColorTrigger="no" isColorTriggerFg="no" isColorTriggerBg="no">
						<name>necromancy shrivel</name>
						<script>snd.send("firstaid predict firstaid_predict_"..matches[3])</script>
						<triggerType>0</triggerType>
						<conditonLineDelta>2</conditonLineDelta>
						<mStayOpen>0</mStayOpen>
						<mCommand></mCommand>
						<packageName></packageName>
						<mFgColor>#ff0000</mFgColor>
						<mBgColor>#ffff00</mBgColor>
						<mSoundFile></mSoundFile>
						<colorTriggerFgColor>#000000</colorTriggerFgColor>
						<colorTriggerBgColor>#000000</colorTriggerBgColor>
						<regexCodeList>
							<string>^(\w+) uses Necromancy Shrivel \((arms|legs)\) on you\.$</string>
						</regexCodeList>
						<regexCodePropertyList>
							<integer>1</integer>
						</regexCodePropertyList>
					</Trigger>
				</TriggerGroup>
				<TriggerGroup isActive="yes" isFolder="yes" isTempTrigger="no" isMultiline="no" isPerlSlashGOption="no" isColorizerTrigger="no" isFilterTrigger="no" isSoundTrigger="no" isColorTrigger="no" isColorTriggerFg="no" isColorTriggerBg="no">
					<name>Offense</name>
					<script></script>
					<triggerType>0</triggerType>
					<conditonLineDelta>0</conditonLineDelta>
					<mStayOpen>0</mStayOpen>
					<mCommand></mCommand>
					<packageName></packageName>
					<mFgColor>#ff0000</mFgColor>
					<mBgColor>#ffff00</mBgColor>
					<mSoundFile></mSoundFile>
					<colorTriggerFgColor>#000000</colorTriggerFgColor>
					<colorTriggerBgColor>#000000</colorTriggerBgColor>
					<regexCodeList />
					<regexCodePropertyList />
					<Trigger isActive="yes" isFolder="no" isTempTrigger="no" isMultiline="no" isPerlSlashGOption="no" isColorizerTrigger="no" isFilterTrigger="no" isSoundTrigger="no" isColorTrigger="no" isColorTriggerFg="no" isColorTriggerBg="no">
						<name>remove spam</name>
						<script>deleteLine()</script>
						<triggerType>0</triggerType>
						<conditonLineDelta>0</conditonLineDelta>
						<mStayOpen>0</mStayOpen>
						<mCommand></mCommand>
						<packageName></packageName>
						<mFgColor>#ff0000</mFgColor>
						<mBgColor>#ffff00</mBgColor>
						<mSoundFile></mSoundFile>
						<colorTriggerFgColor>#000000</colorTriggerFgColor>
						<colorTriggerBgColor>#000000</colorTriggerBgColor>
						<regexCodeList>
							<string>^Flames lick out at (the )?\w+ from .+ body and scorch (the )?\w+ flesh\.$</string>
							<string>^(\w+) grimaces as the attack connects\.$</string>
							<string>^You rake (.+) with your claws\.$</string>
							<string>^You have no knowledge of how to conjure that.$</string>
						</regexCodeList>
						<regexCodePropertyList>
							<integer>1</integer>
							<integer>1</integer>
							<integer>1</integer>
							<integer>1</integer>
						</regexCodePropertyList>
					</Trigger>
					<TriggerGroup isActive="yes" isFolder="yes" isTempTrigger="no" isMultiline="no" isPerlSlashGOption="no" isColorizerTrigger="no" isFilterTrigger="no" isSoundTrigger="no" isColorTrigger="no" isColorTriggerFg="no" isColorTriggerBg="no">
						<name>Razing</name>
						<script></script>
						<triggerType>0</triggerType>
						<conditonLineDelta>0</conditonLineDelta>
						<mStayOpen>0</mStayOpen>
						<mCommand></mCommand>
						<packageName></packageName>
						<mFgColor>#ff0000</mFgColor>
						<mBgColor>#ffff00</mBgColor>
						<mSoundFile></mSoundFile>
						<colorTriggerFgColor>#000000</colorTriggerFgColor>
						<colorTriggerBgColor>#000000</colorTriggerBgColor>
						<regexCodeList />
						<regexCodePropertyList />
						<Trigger isActive="yes" isFolder="no" isTempTrigger="no" isMultiline="no" isPerlSlashGOption="no" isColorizerTrigger="no" isFilterTrigger="no" isSoundTrigger="no" isColorTrigger="no" isColorTriggerFg="no" isColorTriggerBg="no">
							<name>gained rebounding</name>
							<script>if matches[2] == snd.target then
 snd.used.rebounding = true
 snd.waiting.queue = false
 
end

</script>
							<triggerType>0</triggerType>
							<conditonLineDelta>0</conditonLineDelta>
							<mStayOpen>0</mStayOpen>
							<mCommand></mCommand>
							<packageName></packageName>
							<mFgColor>#ff0000</mFgColor>
							<mBgColor>#ffff00</mBgColor>
							<mSoundFile></mSoundFile>
							<colorTriggerFgColor>#000000</colorTriggerFgColor>
							<colorTriggerBgColor>#000000</colorTriggerBgColor>
							<regexCodeList>
								<string>^You suddenly perceive the vague outline of an aura of rebounding around (\w+)\.$</string>
								<string>^(\w+) uses Purification Rejection\.$</string>
							</regexCodeList>
							<regexCodePropertyList>
								<integer>1</integer>
								<integer>1</integer>
							</regexCodePropertyList>
						</Trigger>
						<Trigger isActive="yes" isFolder="no" isTempTrigger="no" isMultiline="no" isPerlSlashGOption="no" isColorizerTrigger="no" isFilterTrigger="no" isSoundTrigger="no" isColorTrigger="no" isColorTriggerFg="no" isColorTriggerBg="no">
							<name>smoked rebounding</name>
							<script>if matches[2] == snd.target then
 tempTimer(5.5, [[
 								snd.used.rebounding = true;
                snd.waiting_queue = false;
                if snd.toggles.attacking then snd.attack_function() end
							]])

end</script>
							<triggerType>0</triggerType>
							<conditonLineDelta>0</conditonLineDelta>
							<mStayOpen>0</mStayOpen>
							<mCommand></mCommand>
							<packageName></packageName>
							<mFgColor>#ff0000</mFgColor>
							<mBgColor>#ffff00</mBgColor>
							<mSoundFile></mSoundFile>
							<colorTriggerFgColor>#000000</colorTriggerFgColor>
							<colorTriggerBgColor>#000000</colorTriggerBgColor>
							<regexCodeList>
								<string>^(\w+) takes a long drag off (the )?\w+ pipe filled with reishi\.$</string>
							</regexCodeList>
							<regexCodePropertyList>
								<integer>1</integer>
							</regexCodePropertyList>
						</Trigger>
						<Trigger isActive="yes" isFolder="no" isTempTrigger="no" isMultiline="no" isPerlSlashGOption="no" isColorizerTrigger="no" isFilterTrigger="no" isSoundTrigger="no" isColorTrigger="no" isColorTriggerFg="no" isColorTriggerBg="no">
							<name>hit rebounding</name>
							<script>if matches[2] == snd.target then
 snd.used.rebounding = true
 snd.waiting.queue = false
end

</script>
							<triggerType>0</triggerType>
							<conditonLineDelta>0</conditonLineDelta>
							<mStayOpen>0</mStayOpen>
							<mCommand></mCommand>
							<packageName></packageName>
							<mFgColor>#ff0000</mFgColor>
							<mBgColor>#ffff00</mBgColor>
							<mSoundFile></mSoundFile>
							<colorTriggerFgColor>#000000</colorTriggerFgColor>
							<colorTriggerBgColor>#000000</colorTriggerBgColor>
							<regexCodeList>
								<string>The attack rebounds back onto you!</string>
							</regexCodeList>
							<regexCodePropertyList>
								<integer>3</integer>
							</regexCodePropertyList>
						</Trigger>
						<Trigger isActive="yes" isFolder="no" isTempTrigger="no" isMultiline="no" isPerlSlashGOption="no" isColorizerTrigger="no" isFilterTrigger="no" isSoundTrigger="no" isColorTrigger="no" isColorTriggerFg="no" isColorTriggerBg="no">
							<name>razed rebounding</name>
							<script>if matches[2] == snd.target then
 snd.used.rebounding = false
 snd.waiting.queue = false
end

</script>
							<triggerType>0</triggerType>
							<conditonLineDelta>0</conditonLineDelta>
							<mStayOpen>0</mStayOpen>
							<mCommand></mCommand>
							<packageName></packageName>
							<mFgColor>#ff0000</mFgColor>
							<mBgColor>#ffff00</mBgColor>
							<mSoundFile></mSoundFile>
							<colorTriggerFgColor>#000000</colorTriggerFgColor>
							<colorTriggerBgColor>#000000</colorTriggerBgColor>
							<regexCodeList>
								<string>^You raze (\w+)('s|') aura of rebounding with (.+)\.$</string>
								<string>^White flames suddenly encase .* as your attack strikes (\w+)('s|') rebounding aura, burning the aura away\.$</string>
								<string>^Focusing your mind, you imbue .+ with blaze in your hands\.$</string>
								<string>^White flames suddenly encase .+, burning away (\w+)('s|') rebounding aura\.$</string>
								<string>^\w+ uses? Spirituality Raze \(rebounding\) on (\w+)\.$</string>
								<string>^You lash out with .+ and crumple (\w+)('s|') aura of rebounding\.$</string>
								<string>^You send .+ to flay (\w+)'s? rebounding defence\.$</string>
								<string>^You send .+ to flay (\w+)'s? rebounding defence, only to discover that (the )?\w+ has no such protection\.$</string>
								<string>^\w+ use \(Tenacity Devastate\) on (\w+)\.$</string>
								<string>^\w+ use \(Tenacity Devastate\) \(fail\) on (\w+)\.$</string>
							</regexCodeList>
							<regexCodePropertyList>
								<integer>1</integer>
								<integer>1</integer>
								<integer>1</integer>
								<integer>1</integer>
								<integer>1</integer>
								<integer>1</integer>
								<integer>1</integer>
								<integer>1</integer>
								<integer>1</integer>
								<integer>1</integer>
							</regexCodePropertyList>
						</Trigger>
						<Trigger isActive="yes" isFolder="no" isTempTrigger="no" isMultiline="no" isPerlSlashGOption="no" isColorizerTrigger="no" isFilterTrigger="no" isSoundTrigger="no" isColorTrigger="no" isColorTriggerFg="no" isColorTriggerBg="no">
							<name>razed</name>
							<script>if matches[2] == snd.target then
 snd.used.rebounding = false
 snd.used.shield = false
 snd.waiting.queue = false
end

</script>
							<triggerType>0</triggerType>
							<conditonLineDelta>0</conditonLineDelta>
							<mStayOpen>0</mStayOpen>
							<mCommand></mCommand>
							<packageName></packageName>
							<mFgColor>#ff0000</mFgColor>
							<mBgColor>#ffff00</mBgColor>
							<mSoundFile></mSoundFile>
							<colorTriggerFgColor>#000000</colorTriggerFgColor>
							<colorTriggerBgColor>#000000</colorTriggerBgColor>
							<regexCodeList>
								<string>^You raze (\w+)('s|') speed defence with .+\.$</string>
								<string>^You whip .+ through the air in front of (\w+), to no effect\.$</string>
								<string>^(\w+)('s|') aura of weapons rebounding disappears\.$</string>
								<string>^You use Spirituality Raze \(failure\) on (\w+)\.$</string>
								<string>^You lash out at (\w+) with .+ but find no protective barriers to eliminate\.$</string>
								<string>^You send .+ to flay (\w+)'s? (speed|cloak) defence\.$</string>
								<string>^You send .+ to flay (\w+), only to discover that it has no effect\.$</string>
							</regexCodeList>
							<regexCodePropertyList>
								<integer>1</integer>
								<integer>1</integer>
								<integer>1</integer>
								<integer>1</integer>
								<integer>1</integer>
								<integer>1</integer>
								<integer>1</integer>
							</regexCodePropertyList>
						</Trigger>
						<Trigger isActive="yes" isFolder="no" isTempTrigger="no" isMultiline="no" isPerlSlashGOption="no" isColorizerTrigger="no" isFilterTrigger="no" isSoundTrigger="no" isColorTrigger="no" isColorTriggerFg="no" isColorTriggerBg="no">
							<name>gained shield</name>
							<script>if matches[2] == snd.target then
 snd.used.shield = true
end</script>
							<triggerType>0</triggerType>
							<conditonLineDelta>0</conditonLineDelta>
							<mStayOpen>0</mStayOpen>
							<mCommand></mCommand>
							<packageName></packageName>
							<mFgColor>#ff0000</mFgColor>
							<mBgColor>#ffff00</mBgColor>
							<mSoundFile></mSoundFile>
							<colorTriggerFgColor>#000000</colorTriggerFgColor>
							<colorTriggerBgColor>#000000</colorTriggerBgColor>
							<regexCodeList>
								<string>^A howling blizzard coalesces about (\w+), holding (the )?\w+ attackers at bay\.$</string>
								<string>^(\w+) is protected by a glittering, magical shield\.$</string>
								<string>^A nearly invisible magical shield forms around (\w+).$</string>
								<string>^An incandescent sphere of fire forms around (\w+), warding off attacks\.$</string>
								<string>^A gentle hum arises from (\w+)('s|') angel, as it raises a shield to protect (the )?\w+\.$</string>
								<string>^The dewdrops evaporate into tiny motes of energy that cohere around (\w+) in a translucent shield\.$</string>
								<string>^(\w+) uses (Tattoos Shield)\.$</string>
								<string>^\w+ uses Desiccation Shield on (\w+)\.$</string>
							</regexCodeList>
							<regexCodePropertyList>
								<integer>1</integer>
								<integer>1</integer>
								<integer>1</integer>
								<integer>1</integer>
								<integer>1</integer>
								<integer>1</integer>
								<integer>1</integer>
								<integer>1</integer>
							</regexCodePropertyList>
						</Trigger>
						<Trigger isActive="yes" isFolder="no" isTempTrigger="no" isMultiline="no" isPerlSlashGOption="no" isColorizerTrigger="no" isFilterTrigger="no" isSoundTrigger="no" isColorTrigger="no" isColorTriggerFg="no" isColorTriggerBg="no">
							<name>hit shield</name>
							<script>if matches[2] == snd.target then
 snd.used.shield = true
end</script>
							<triggerType>0</triggerType>
							<conditonLineDelta>0</conditonLineDelta>
							<mStayOpen>0</mStayOpen>
							<mCommand></mCommand>
							<packageName></packageName>
							<mFgColor>#ff0000</mFgColor>
							<mBgColor>#ffff00</mBgColor>
							<mSoundFile></mSoundFile>
							<colorTriggerFgColor>#000000</colorTriggerFgColor>
							<colorTriggerBgColor>#000000</colorTriggerBgColor>
							<regexCodeList>
								<string>^A dizzying beam of energy strikes you as your attack rebounds off of (\w+)('s|') shield\.$</string>
							</regexCodeList>
							<regexCodePropertyList>
								<integer>1</integer>
							</regexCodePropertyList>
						</Trigger>
						<Trigger isActive="yes" isFolder="no" isTempTrigger="no" isMultiline="yes" isPerlSlashGOption="no" isColorizerTrigger="no" isFilterTrigger="no" isSoundTrigger="no" isColorTrigger="yes" isColorTriggerFg="no" isColorTriggerBg="no">
							<name>combatmessage shield</name>
							<script>if multimatches[2][2] == snd.target then
 snd.used.shield = true
end</script>
							<triggerType>0</triggerType>
							<conditonLineDelta>0</conditonLineDelta>
							<mStayOpen>0</mStayOpen>
							<mCommand></mCommand>
							<packageName></packageName>
							<mFgColor>#ff0000</mFgColor>
							<mBgColor>#ffff00</mBgColor>
							<mSoundFile></mSoundFile>
							<colorTriggerFgColor>#ff0000</colorTriggerFgColor>
							<colorTriggerBgColor>#000000</colorTriggerBgColor>
							<regexCodeList>
								<string>ANSI_COLORS_F{009}_B{000}</string>
								<string>^(\w+) uses Tattoos Shield\.$</string>
							</regexCodeList>
							<regexCodePropertyList>
								<integer>6</integer>
								<integer>1</integer>
							</regexCodePropertyList>
						</Trigger>
						<Trigger isActive="yes" isFolder="no" isTempTrigger="no" isMultiline="no" isPerlSlashGOption="no" isColorizerTrigger="no" isFilterTrigger="no" isSoundTrigger="no" isColorTrigger="no" isColorTriggerFg="no" isColorTriggerBg="no">
							<name>razed shield</name>
							<script>if matches[2] == snd.target then
 snd.used.shield = false
end</script>
							<triggerType>0</triggerType>
							<conditonLineDelta>0</conditonLineDelta>
							<mStayOpen>0</mStayOpen>
							<mCommand></mCommand>
							<packageName></packageName>
							<mFgColor>#ff0000</mFgColor>
							<mBgColor>#ffff00</mBgColor>
							<mSoundFile></mSoundFile>
							<colorTriggerFgColor>#000000</colorTriggerFgColor>
							<colorTriggerBgColor>#000000</colorTriggerBgColor>
							<regexCodeList>
								<string>^You raze (\w+)('s|') magical shield with (.+)\.$</string>
								<string>^You use Spirituality Raze \(shield\) on (\w+)\.$</string>
								<string>^You lash out with .+ and shatter (\w+)('s|') translucent shield\.$</string>
								<string>^You draw your quarterstaff upward as it taps into its stored natural energy, the leaves at your feet heeding your call\. With a flick of the weapon, you send them to scourge (\w+), the serrated edges leaving tiny cuts as they swirl about (the )?\w+ and shred (the )?\w+ defences\.$</string>
								<string>^You send .+ to flay (\w+)'s? shield defence\.$</string>
								<string>^You use (Primality Leafstorm) on (\w+)\.$</string>
								<string>^You use (Primality Leafstorm Boosted) on (\w+)\.$</string>
								<string>^You use Tenacity Devastate on (\w+).$</string>
								<string>^You use Tenacity Devastate \(fail\) on (\w+).$</string>
							</regexCodeList>
							<regexCodePropertyList>
								<integer>1</integer>
								<integer>1</integer>
								<integer>1</integer>
								<integer>1</integer>
								<integer>1</integer>
								<integer>1</integer>
								<integer>1</integer>
								<integer>1</integer>
								<integer>1</integer>
							</regexCodePropertyList>
						</Trigger>
						<Trigger isActive="yes" isFolder="no" isTempTrigger="no" isMultiline="no" isPerlSlashGOption="no" isColorizerTrigger="no" isFilterTrigger="no" isSoundTrigger="no" isColorTrigger="no" isColorTriggerFg="no" isColorTriggerBg="no">
							<name>3p raze shield</name>
							<script>if matches[2] == snd.target then
 snd.used.shield = false
 snd.waiting.queue = false
end</script>
							<triggerType>0</triggerType>
							<conditonLineDelta>0</conditonLineDelta>
							<mStayOpen>0</mStayOpen>
							<mCommand></mCommand>
							<packageName></packageName>
							<mFgColor>#ff0000</mFgColor>
							<mBgColor>#ffff00</mBgColor>
							<mSoundFile></mSoundFile>
							<colorTriggerFgColor>#000000</colorTriggerFgColor>
							<colorTriggerBgColor>#000000</colorTriggerBgColor>
							<regexCodeList>
								<string>^\w+ razes (\w+)('s|') magical shield with .+\.$</string>
								<string>^\w+ holds (the )?\w+ quarterstaff aloft, the leaves at your feet drawing upward in summons\. With a flick of the weapon, (the )?\w+ sends them to swirl about (\w+), the serrated edges drawing tiny cuts in (the )?\w+ skin as they shred (the )?\w+ defences\.$</string>
								<string>^(\w+) seems to jolt as (the )?\w+ flays the shield defence from (the )?\w+\.$</string>
								<string>^\w+ uses Spirituality Raze \(shield\) on (\w+).$</string>
								<string>^You touch your tattoo and a massive, translucent hammer rises up and shatters the magical shield surrounding (\w+)\.$</string>
								<string>^Your flames consume (\w+)'s shield\.$</string>
								<string>^You send .+ to flay (\w+)'s shield defence</string>
								<string>^With a casual flick of (the )?\w+ wrist, (the )?\w+ sends a spell of degradation into (\w+)'s Spirit.$</string>
								<string>^The meteor slams into (\w+)'s shield, shattering it\.$</string>
								<string>You touch your tattoo and summon the hammer but find nothing to strike.</string>
								<string>^(\w+)'s shield rapidly dissipates, (the )?\w+ lust for blood overwhelming it\.$</string>
								<string>^You whip .+ through the air in front of (\w+), to no effect.$</string>
								<string>^\w+ razes? (\w+)'s magical shield with .+\.$</string>
								<string>^.+ bone fetish resounds with a chiming echo that shatters (\w+)'s shield.$</string>
								<string>^(\w+)'s shielded defence has been stripped.$</string>
								<string>^A massive, translucent hammer rises out of .+ tattoo and smashes (\w+)'s magical shield.$</string>
								<string>^\w+ uses (Primality Leafstorm Boosted) on (\w+)\.$</string>
								<string>^\w+ uses (Primality Leafstorm) on (\w+)\.$</string>
								<string>^\w+ uses \(Tenacity Devastate\) on (\w+)\.$</string>
								<string>^\w+ use \(Tenacity Devastate\) \(fail\) on (\w+)\.$</string>
								<string>^(\w+)'s shielded defence has been stripped.$</string>
								<string>^The protective shield around (\w+) dissipates.$</string>
							</regexCodeList>
							<regexCodePropertyList>
								<integer>1</integer>
								<integer>1</integer>
								<integer>1</integer>
								<integer>1</integer>
								<integer>1</integer>
								<integer>1</integer>
								<integer>1</integer>
								<integer>1</integer>
								<integer>1</integer>
								<integer>3</integer>
								<integer>1</integer>
								<integer>1</integer>
								<integer>1</integer>
								<integer>1</integer>
								<integer>1</integer>
								<integer>1</integer>
								<integer>1</integer>
								<integer>1</integer>
								<integer>1</integer>
								<integer>1</integer>
								<integer>1</integer>
								<integer>1</integer>
							</regexCodePropertyList>
						</Trigger>
						<Trigger isActive="yes" isFolder="no" isTempTrigger="no" isMultiline="no" isPerlSlashGOption="no" isColorizerTrigger="no" isFilterTrigger="no" isSoundTrigger="no" isColorTrigger="no" isColorTriggerFg="no" isColorTriggerBg="no">
							<name>3p raze rebounding</name>
							<script>if matches[2] == snd.target then
 snd.used.rebounding = false
 snd.waiting.queue = false
end</script>
							<triggerType>0</triggerType>
							<conditonLineDelta>0</conditonLineDelta>
							<mStayOpen>0</mStayOpen>
							<mCommand></mCommand>
							<packageName></packageName>
							<mFgColor>#ff0000</mFgColor>
							<mBgColor>#ffff00</mBgColor>
							<mSoundFile></mSoundFile>
							<colorTriggerFgColor>#000000</colorTriggerFgColor>
							<colorTriggerBgColor>#000000</colorTriggerBgColor>
							<regexCodeList>
								<string>^\w+ razes (\w+)('s|') aura of rebounding with .+\.$</string>
								<string>^\w+ lashes out with .+ and crumples (\w+)('s|') aura of rebounding\.$</string>
								<string>^(\w+) seems to jolt as (the )?\w+ flays the rebounding defence from (the )?\w+\.$</string>
								<string>^\w+ uses Battlefury Razestrike \(speed\) on (\w+)\.$</string>
								<string>^(\w+)'s rebounding defence has been stripped\.$</string>
								<string>^(\w+)'s aura of weapons rebounding disappears\.$</string>
								<string>^\w+'s flames consume (\w+)'s aura of rebounding\.$</string>
								<string>^You whip .+ through the air in front of (\w+), to no effect\.$</string>
								<string>^\w+ razes? (\w+)'s .+ defence with .+\.$</string>
								<string>^\w+'s angel stares passively, but powerfully, at (\w+).$</string>
								<string>^You send .+ to flay (\w+)'s rebounding defence</string>
								<string>^\w+ use \(Tenacity Devastate\) on (\w+)\.$</string>
								<string>^\w+ use \(Tenacity Devastate\) \(fail\) on (\w+)\.$</string>
							</regexCodeList>
							<regexCodePropertyList>
								<integer>1</integer>
								<integer>1</integer>
								<integer>1</integer>
								<integer>1</integer>
								<integer>1</integer>
								<integer>1</integer>
								<integer>1</integer>
								<integer>1</integer>
								<integer>1</integer>
								<integer>1</integer>
								<integer>1</integer>
								<integer>1</integer>
								<integer>1</integer>
							</regexCodePropertyList>
						</Trigger>
						<Trigger isActive="yes" isFolder="no" isTempTrigger="no" isMultiline="no" isPerlSlashGOption="no" isColorizerTrigger="no" isFilterTrigger="no" isSoundTrigger="no" isColorTrigger="no" isColorTriggerFg="no" isColorTriggerBg="no">
							<name>3p razed</name>
							<script>if matches[2] == snd.target then
 snd.used.rebounding = false
 snd.used.shield = false
 snd.waiting.queue = false
end</script>
							<triggerType>0</triggerType>
							<conditonLineDelta>0</conditonLineDelta>
							<mStayOpen>0</mStayOpen>
							<mCommand></mCommand>
							<packageName></packageName>
							<mFgColor>#ff0000</mFgColor>
							<mBgColor>#ffff00</mBgColor>
							<mSoundFile></mSoundFile>
							<colorTriggerFgColor>#000000</colorTriggerFgColor>
							<colorTriggerBgColor>#000000</colorTriggerBgColor>
							<regexCodeList>
								<string>^\w+ whips .+ through the air in front of (\w+), to no effect\.$</string>
								<string>^\w+ lashes out at (\w+) with .+ but finds no protective barriers to strip\.$</string>
								<string>^\w+ sends .+ to flay (\w+) but comes away looking confused\.$</string>
							</regexCodeList>
							<regexCodePropertyList>
								<integer>1</integer>
								<integer>1</integer>
								<integer>1</integer>
							</regexCodePropertyList>
						</Trigger>
						<Trigger isActive="yes" isFolder="no" isTempTrigger="no" isMultiline="no" isPerlSlashGOption="no" isColorizerTrigger="no" isFilterTrigger="no" isSoundTrigger="no" isColorTrigger="no" isColorTriggerFg="no" isColorTriggerBg="no">
							<name>reflection down</name>
							<script>if matches[2] == snd.target then
 snd.used.reflection = false
end</script>
							<triggerType>0</triggerType>
							<conditonLineDelta>0</conditonLineDelta>
							<mStayOpen>0</mStayOpen>
							<mCommand></mCommand>
							<packageName></packageName>
							<mFgColor>#ff0000</mFgColor>
							<mBgColor>#ffff00</mBgColor>
							<mSoundFile></mSoundFile>
							<colorTriggerFgColor>#000000</colorTriggerFgColor>
							<colorTriggerBgColor>#000000</colorTriggerBgColor>
							<regexCodeList>
								<string>^A reflection of (\w+) blinks out of existence\.$</string>
							</regexCodeList>
							<regexCodePropertyList>
								<integer>1</integer>
							</regexCodePropertyList>
						</Trigger>
						<Trigger isActive="yes" isFolder="no" isTempTrigger="no" isMultiline="no" isPerlSlashGOption="no" isColorizerTrigger="no" isFilterTrigger="no" isSoundTrigger="no" isColorTrigger="no" isColorTriggerFg="no" isColorTriggerBg="no">
							<name>gained reflection</name>
							<script>if matches[2] == snd.target then
 snd.used.reflection = true
end</script>
							<triggerType>0</triggerType>
							<conditonLineDelta>0</conditonLineDelta>
							<mStayOpen>0</mStayOpen>
							<mCommand></mCommand>
							<packageName></packageName>
							<mFgColor>#ff0000</mFgColor>
							<mBgColor>#ffff00</mBgColor>
							<mSoundFile></mSoundFile>
							<colorTriggerFgColor>#000000</colorTriggerFgColor>
							<colorTriggerBgColor>#000000</colorTriggerBgColor>
							<regexCodeList>
								<string>^(\w+) weaves a fiery canvas before (the )?\w+, and it quickly dissolves into a mirror image reflection of (the )?\w+!$</string>
							</regexCodeList>
							<regexCodePropertyList>
								<integer>1</integer>
							</regexCodePropertyList>
						</Trigger>
						<Trigger isActive="yes" isFolder="no" isTempTrigger="no" isMultiline="yes" isPerlSlashGOption="no" isColorizerTrigger="no" isFilterTrigger="no" isSoundTrigger="no" isColorTrigger="yes" isColorTriggerFg="no" isColorTriggerBg="no">
							<name>combatmessage shield</name>
							<script>if multimatches[2][2] == snd.target then
 snd.used.shield = true
end</script>
							<triggerType>0</triggerType>
							<conditonLineDelta>0</conditonLineDelta>
							<mStayOpen>0</mStayOpen>
							<mCommand></mCommand>
							<packageName></packageName>
							<mFgColor>#ff0000</mFgColor>
							<mBgColor>#ffff00</mBgColor>
							<mSoundFile></mSoundFile>
							<colorTriggerFgColor>#ff0000</colorTriggerFgColor>
							<colorTriggerBgColor>#000000</colorTriggerBgColor>
							<regexCodeList>
								<string>ANSI_COLORS_F{009}_B{000}</string>
								<string>^(\w+) uses Deathlore Shield\.$</string>
							</regexCodeList>
							<regexCodePropertyList>
								<integer>6</integer>
								<integer>1</integer>
							</regexCodePropertyList>
						</Trigger>
						<Trigger isActive="yes" isFolder="no" isTempTrigger="no" isMultiline="no" isPerlSlashGOption="no" isColorizerTrigger="no" isFilterTrigger="no" isSoundTrigger="no" isColorTrigger="no" isColorTriggerFg="no" isColorTriggerBg="no">
							<name>3p raze speed</name>
							<script>if matches[2] == snd.target then
 snd.used.rebounding = false
 snd.used.shield = false
 snd.waiting.queue = false
end</script>
							<triggerType>0</triggerType>
							<conditonLineDelta>0</conditonLineDelta>
							<mStayOpen>0</mStayOpen>
							<mCommand></mCommand>
							<packageName></packageName>
							<mFgColor>#ff0000</mFgColor>
							<mBgColor>#ffff00</mBgColor>
							<mSoundFile></mSoundFile>
							<colorTriggerFgColor>#000000</colorTriggerFgColor>
							<colorTriggerBgColor>#000000</colorTriggerBgColor>
							<regexCodeList>
								<string>^(\w+) seems to jolt as (the )?\w+ flays the speed defence from (the )?\w+\.$</string>
							</regexCodeList>
							<regexCodePropertyList>
								<integer>1</integer>
							</regexCodePropertyList>
						</Trigger>
						<Trigger isActive="yes" isFolder="no" isTempTrigger="no" isMultiline="no" isPerlSlashGOption="no" isColorizerTrigger="no" isFilterTrigger="no" isSoundTrigger="no" isColorTrigger="no" isColorTriggerFg="no" isColorTriggerBg="no">
							<name>paste up</name>
							<script>if snd.target == matches[2] then
 snd.used.paste = true
 snd.waiting.queue = false
end</script>
							<triggerType>0</triggerType>
							<conditonLineDelta>0</conditonLineDelta>
							<mStayOpen>0</mStayOpen>
							<mCommand></mCommand>
							<packageName></packageName>
							<mFgColor>#ff0000</mFgColor>
							<mBgColor>#ffff00</mBgColor>
							<mSoundFile></mSoundFile>
							<colorTriggerFgColor>#000000</colorTriggerFgColor>
							<colorTriggerBgColor>#000000</colorTriggerBgColor>
							<regexCodeList>
								<string>^A thick, hardened shell of paste has formed around (\w+)\.$</string>
							</regexCodeList>
							<regexCodePropertyList>
								<integer>1</integer>
							</regexCodePropertyList>
						</Trigger>
						<Trigger isActive="yes" isFolder="no" isTempTrigger="no" isMultiline="no" isPerlSlashGOption="no" isColorizerTrigger="no" isFilterTrigger="no" isSoundTrigger="no" isColorTrigger="no" isColorTriggerFg="no" isColorTriggerBg="no">
							<name>raze paste</name>
							<script>if snd.target == matches[2] then
 snd.used.paste = false
end</script>
							<triggerType>0</triggerType>
							<conditonLineDelta>0</conditonLineDelta>
							<mStayOpen>0</mStayOpen>
							<mCommand></mCommand>
							<packageName></packageName>
							<mFgColor>#ff0000</mFgColor>
							<mBgColor>#ffff00</mBgColor>
							<mSoundFile></mSoundFile>
							<colorTriggerFgColor>#000000</colorTriggerFgColor>
							<colorTriggerBgColor>#000000</colorTriggerBgColor>
							<regexCodeList>
								<string>^You send .+ to flay (\w+)'s? fangbarrier defence, only to discover that (the )?\w+ has no such protection\.$</string>
								<string>^The hardened paste coating (\w+)'s? body sloughs off from (the )?\w+ skin\.$</string>
								<string>^The paste coating (\w+)'s? body sloughs off, unable to stick to (the )?\w+ unnaturally slick skin\.$</string>
								<string>^You send .+ to flay (\w+), only to discover that it has no effect\.$</string>
								<string>^You send .+ to flay (\w+)'s? (speed|fangbarrier|cloak) defence\.$</string>
							</regexCodeList>
							<regexCodePropertyList>
								<integer>1</integer>
								<integer>1</integer>
								<integer>1</integer>
								<integer>1</integer>
								<integer>1</integer>
							</regexCodePropertyList>
						</Trigger>
						<Trigger isActive="yes" isFolder="no" isTempTrigger="no" isMultiline="no" isPerlSlashGOption="no" isColorizerTrigger="no" isFilterTrigger="no" isSoundTrigger="no" isColorTrigger="no" isColorTriggerFg="no" isColorTriggerBg="no">
							<name>has paste</name>
							<script>snd.used.paste = true</script>
							<triggerType>0</triggerType>
							<conditonLineDelta>0</conditonLineDelta>
							<mStayOpen>0</mStayOpen>
							<mCommand></mCommand>
							<packageName></packageName>
							<mFgColor>#ff0000</mFgColor>
							<mBgColor>#ffff00</mBgColor>
							<mSoundFile></mSoundFile>
							<colorTriggerFgColor>#000000</colorTriggerFgColor>
							<colorTriggerBgColor>#000000</colorTriggerBgColor>
							<regexCodeList>
								<string>Your fangs won't penetrate the odd waxy coating protecting them.</string>
								<string>Your victim is protected by a hard coating.</string>
							</regexCodeList>
							<regexCodePropertyList>
								<integer>3</integer>
								<integer>3</integer>
							</regexCodePropertyList>
						</Trigger>
						<Trigger isActive="yes" isFolder="no" isTempTrigger="no" isMultiline="no" isPerlSlashGOption="no" isColorizerTrigger="no" isFilterTrigger="no" isSoundTrigger="no" isColorTrigger="no" isColorTriggerFg="no" isColorTriggerBg="no">
							<name>3p razed paste</name>
							<script>if snd.target == matches[2] then
 snd.used.paste = false
 snd.waiting.queue = false
end</script>
							<triggerType>0</triggerType>
							<conditonLineDelta>0</conditonLineDelta>
							<mStayOpen>0</mStayOpen>
							<mCommand></mCommand>
							<packageName></packageName>
							<mFgColor>#ff0000</mFgColor>
							<mBgColor>#ffff00</mBgColor>
							<mSoundFile></mSoundFile>
							<colorTriggerFgColor>#000000</colorTriggerFgColor>
							<colorTriggerBgColor>#000000</colorTriggerBgColor>
							<regexCodeList>
								<string>^(\w+) seems to jolt as (the )?\w+ flays the fangbarrier defence from (the )?\w+\.$</string>
							</regexCodeList>
							<regexCodePropertyList>
								<integer>1</integer>
							</regexCodePropertyList>
						</Trigger>
						<Trigger isActive="yes" isFolder="no" isTempTrigger="no" isMultiline="no" isPerlSlashGOption="no" isColorizerTrigger="no" isFilterTrigger="no" isSoundTrigger="no" isColorTrigger="no" isColorTriggerFg="no" isColorTriggerBg="no">
							<name>flay fangbarrier</name>
							<script>if snd.target == matches[2] then
	snd.used.paste = false
	if not snd.flayingfang then
		snd.used.rebounding = false
		snd.used.shield = false
	end
	snd.flayingfang = false
end</script>
							<triggerType>0</triggerType>
							<conditonLineDelta>0</conditonLineDelta>
							<mStayOpen>0</mStayOpen>
							<mCommand></mCommand>
							<packageName></packageName>
							<mFgColor>#ff0000</mFgColor>
							<mBgColor>#ffff00</mBgColor>
							<mSoundFile></mSoundFile>
							<colorTriggerFgColor>#000000</colorTriggerFgColor>
							<colorTriggerBgColor>#000000</colorTriggerBgColor>
							<regexCodeList>
								<string>^You send .+ to flay (\w+)'s? fangbarrier defence\.$</string>
							</regexCodeList>
							<regexCodePropertyList>
								<integer>1</integer>
							</regexCodePropertyList>
						</Trigger>
						<Trigger isActive="yes" isFolder="no" isTempTrigger="no" isMultiline="no" isPerlSlashGOption="no" isColorizerTrigger="no" isFilterTrigger="no" isSoundTrigger="no" isColorTrigger="no" isColorTriggerFg="no" isColorTriggerBg="no">
							<name>Def strips</name>
							<script>if matches[3] ~= "shield" and matches[2] == snd.target then
	snd.used.rebounding = false
end</script>
							<triggerType>0</triggerType>
							<conditonLineDelta>0</conditonLineDelta>
							<mStayOpen>0</mStayOpen>
							<mCommand></mCommand>
							<packageName></packageName>
							<mFgColor>#ff0000</mFgColor>
							<mBgColor>#ffff00</mBgColor>
							<mSoundFile></mSoundFile>
							<colorTriggerFgColor>#000000</colorTriggerFgColor>
							<colorTriggerBgColor>#000000</colorTriggerBgColor>
							<regexCodeList>
								<string>^(\w+)'s (\w+) defence has been stripped.$</string>
							</regexCodeList>
							<regexCodePropertyList>
								<integer>1</integer>
							</regexCodePropertyList>
						</Trigger>
						<Trigger isActive="yes" isFolder="no" isTempTrigger="no" isMultiline="no" isPerlSlashGOption="no" isColorizerTrigger="no" isFilterTrigger="no" isSoundTrigger="no" isColorTrigger="no" isColorTriggerFg="no" isColorTriggerBg="no">
							<name>Rebounding down</name>
							<script>if matches[2] == snd.target then
	if matches[3] ~= "rebounding" then
	 	snd.used.rebounding = false
	 	snd.waiting.queue = false
	elseif matches[3] ~= "shield" then
 		snd.used.shield = false
 		snd.waiting.queue = false
	end
end
</script>
							<triggerType>0</triggerType>
							<conditonLineDelta>0</conditonLineDelta>
							<mStayOpen>0</mStayOpen>
							<mCommand></mCommand>
							<packageName></packageName>
							<mFgColor>#ff0000</mFgColor>
							<mBgColor>#ffff00</mBgColor>
							<mSoundFile></mSoundFile>
							<colorTriggerFgColor>#000000</colorTriggerFgColor>
							<colorTriggerBgColor>#000000</colorTriggerBgColor>
							<regexCodeList>
								<string>^Sand coalesces before you into the form of a blade, and with an indifferent snap of the fingers, you send it to slice (\w+)'s (.*) defence.$</string>
							</regexCodeList>
							<regexCodePropertyList>
								<integer>1</integer>
							</regexCodePropertyList>
						</Trigger>
						<Trigger isActive="yes" isFolder="no" isTempTrigger="no" isMultiline="no" isPerlSlashGOption="no" isColorizerTrigger="no" isFilterTrigger="no" isSoundTrigger="no" isColorTrigger="no" isColorTriggerFg="no" isColorTriggerBg="no">
							<name>Soul erode (erosion)</name>
							<script>if matches[2] == snd.target then
 snd.used.rebounding = false
 snd.used.shield = false
 snd.waiting.queue = false
end</script>
							<triggerType>0</triggerType>
							<conditonLineDelta>0</conditonLineDelta>
							<mStayOpen>0</mStayOpen>
							<mCommand></mCommand>
							<packageName></packageName>
							<mFgColor>#ff0000</mFgColor>
							<mBgColor>#ffff00</mBgColor>
							<mSoundFile></mSoundFile>
							<colorTriggerFgColor>#000000</colorTriggerFgColor>
							<colorTriggerBgColor>#000000</colorTriggerBgColor>
							<regexCodeList>
								<string>^\w+ use? Deathlore Erode on (\w+).$</string>
							</regexCodeList>
							<regexCodePropertyList>
								<integer>1</integer>
							</regexCodePropertyList>
						</Trigger>
					</TriggerGroup>
					<TriggerGroup isActive="yes" isFolder="yes" isTempTrigger="no" isMultiline="no" isPerlSlashGOption="no" isColorizerTrigger="no" isFilterTrigger="no" isSoundTrigger="no" isColorTrigger="no" isColorTriggerFg="no" isColorTriggerBg="no">
						<name>Impale</name>
						<script></script>
						<triggerType>0</triggerType>
						<conditonLineDelta>0</conditonLineDelta>
						<mStayOpen>0</mStayOpen>
						<mCommand></mCommand>
						<packageName></packageName>
						<mFgColor>#ff0000</mFgColor>
						<mBgColor>#ffff00</mBgColor>
						<mSoundFile></mSoundFile>
						<colorTriggerFgColor>#000000</colorTriggerFgColor>
						<colorTriggerBgColor>#000000</colorTriggerBgColor>
						<regexCodeList />
						<regexCodePropertyList />
						<Trigger isActive="yes" isFolder="no" isTempTrigger="no" isMultiline="no" isPerlSlashGOption="no" isColorizerTrigger="no" isFilterTrigger="no" isSoundTrigger="no" isColorTrigger="no" isColorTriggerFg="no" isColorTriggerBg="no">
							<name>proned</name>
							<script>if matches[2] == snd.target then
 snd.target_prone = true
 snd.waiting.queue = false
end</script>
							<triggerType>0</triggerType>
							<conditonLineDelta>0</conditonLineDelta>
							<mStayOpen>0</mStayOpen>
							<mCommand></mCommand>
							<packageName></packageName>
							<mFgColor>#ff0000</mFgColor>
							<mBgColor>#ffff00</mBgColor>
							<mSoundFile></mSoundFile>
							<colorTriggerFgColor>#000000</colorTriggerFgColor>
							<colorTriggerBgColor>#000000</colorTriggerBgColor>
							<regexCodeList>
								<string>^(\w+)('s|') broken legs cause (the )?\w+ to fall to the ground in a heap\.$</string>
								<string>^(\w+) wobbles uncertainly before falling to the ground, (the )?\w+ leg pulled awkwardly behind (the )?\w+ own head\.$</string>
								<string>^(\w+) leaps up in what is apparently an attempt at a graceful swan dive\. (the )?\w+ smacks head first into the solid ground\.$</string>
								<string>^You whistle at .+ and send (the )?\w+ barreling into (\w+), knocking (the )?\w+ to the ground\.$</string>
								<string>^The injury to (\w+)('s|') knees causes (the )?\w+ legs to buckle and (the )?\w+ falls to the ground in a heap\.$</string>
								<string>^.+ barrels into (\w+) and knocks (the )?\w+ to the ground\.$</string>
								<string>^\w+ \w+ into (\w+), knocking (the )?\w+ to the ground\.$</string>
								<string>^\w connects? and sends? (\w+) sprawling to the floor\.$</string>
								<string>^You let forth a forceful howl toward (\w+)\.$</string>
								<string>^.+ lowers its head and rams it into (\w+) painfully, antlers goring (the )?\w+ flesh before the beast gives a toss of its great head and sends (the )?\w+ sprawling unceremoniously to the ground\.$</string>
								<string>^Crumpling over in mental agony, (\w+) collapses to the floor and clutches (the )?\w+ head\.$</string>
								<string>^The frenzied air reaches its peak of intensity and slams into (\w+) with aferocity that knocks (the )?\w+ to the ground\.$</string>
								<string>^(\w+) is blasted backward as you will an expulsion of energy from your staff,the forked blow knocking (the )?\w+ to the ground\.$</string>
								<string>^(\w+)'s? eyes close suddenly as (the )?\w+ falls asleep\.$</string>
								<string>^The tentacle drags (\w+) from the skies and hurls (the )?\w+ to the ground.$</string>
								<string>^(\w+) is unearthed from the ground!$</string>
								<string>^An elk lowers its head and rams it into (\w+) painfully, antlers goring (the )?\w+ flesh before the beastgives a toss of its great head and sends it sprawling unceremoniously to the ground.</string>
							</regexCodeList>
							<regexCodePropertyList>
								<integer>1</integer>
								<integer>1</integer>
								<integer>1</integer>
								<integer>1</integer>
								<integer>1</integer>
								<integer>1</integer>
								<integer>1</integer>
								<integer>1</integer>
								<integer>1</integer>
								<integer>1</integer>
								<integer>1</integer>
								<integer>1</integer>
								<integer>1</integer>
								<integer>1</integer>
								<integer>1</integer>
								<integer>1</integer>
								<integer>1</integer>
							</regexCodePropertyList>
						</Trigger>
						<Trigger isActive="yes" isFolder="no" isTempTrigger="no" isMultiline="no" isPerlSlashGOption="no" isColorizerTrigger="no" isFilterTrigger="no" isSoundTrigger="no" isColorTrigger="no" isColorTriggerFg="no" isColorTriggerBg="no">
							<name>stood</name>
							<script>if matches[2] == snd.target then
 snd.target_prone = false
 snd.target_cured("prone")
end</script>
							<triggerType>0</triggerType>
							<conditonLineDelta>0</conditonLineDelta>
							<mStayOpen>0</mStayOpen>
							<mCommand></mCommand>
							<packageName></packageName>
							<mFgColor>#ff0000</mFgColor>
							<mBgColor>#ffff00</mBgColor>
							<mSoundFile></mSoundFile>
							<colorTriggerFgColor>#000000</colorTriggerFgColor>
							<colorTriggerBgColor>#000000</colorTriggerBgColor>
							<regexCodeList>
								<string>^(\w+) stands up and stretches (the )?\w+ arms out wide\.$</string>
								<string>^(\w+) uses Tekura Kipup.+\.$</string>
							</regexCodeList>
							<regexCodePropertyList>
								<integer>1</integer>
								<integer>1</integer>
							</regexCodePropertyList>
						</Trigger>
						<Trigger isActive="yes" isFolder="no" isTempTrigger="no" isMultiline="no" isPerlSlashGOption="no" isColorizerTrigger="no" isFilterTrigger="no" isSoundTrigger="no" isColorTrigger="no" isColorTriggerFg="no" isColorTriggerBg="no">
							<name>impaled</name>
							<script>if matches[2] == snd.target then
 snd.target_impaled = true
end</script>
							<triggerType>0</triggerType>
							<conditonLineDelta>0</conditonLineDelta>
							<mStayOpen>0</mStayOpen>
							<mCommand></mCommand>
							<packageName></packageName>
							<mFgColor>#ff0000</mFgColor>
							<mBgColor>#ffff00</mBgColor>
							<mSoundFile></mSoundFile>
							<colorTriggerFgColor>#000000</colorTriggerFgColor>
							<colorTriggerBgColor>#000000</colorTriggerBgColor>
							<regexCodeList>
								<string>^You draw back .+ and plunge it deep into the body of (\w+), impaling (the )?\w+ to the hilt\.$</string>
								<string>^With a forceful thrust, you sink .+ deep inside (\w+)'s guts.$</string>
								<string>^You lunge forward and slam the blade of a \w+ into (\w+), skewering (the )?\w+ upon the ground with the powerful strike.$</string>
							</regexCodeList>
							<regexCodePropertyList>
								<integer>1</integer>
								<integer>1</integer>
								<integer>1</integer>
							</regexCodePropertyList>
						</Trigger>
						<Trigger isActive="yes" isFolder="no" isTempTrigger="no" isMultiline="no" isPerlSlashGOption="no" isColorizerTrigger="no" isFilterTrigger="no" isSoundTrigger="no" isColorTrigger="no" isColorTriggerFg="no" isColorTriggerBg="no">
							<name>unimpaled</name>
							<script>if matches[2] == snd.target then
 snd.target_impaled = false
end</script>
							<triggerType>0</triggerType>
							<conditonLineDelta>0</conditonLineDelta>
							<mStayOpen>0</mStayOpen>
							<mCommand></mCommand>
							<packageName></packageName>
							<mFgColor>#ff0000</mFgColor>
							<mBgColor>#ffff00</mBgColor>
							<mSoundFile></mSoundFile>
							<colorTriggerFgColor>#000000</colorTriggerFgColor>
							<colorTriggerBgColor>#000000</colorTriggerBgColor>
							<regexCodeList>
								<string>^(\w+) has writhed free of (the )?\w+ impalement\.$</string>
								<string>^With a vicious snarl you carve a merciless swathe through the steaming guts of (\w+), who gurgles and chokes as you withdraw your dripping .+, its blade glistening with gore\.$</string>
							</regexCodeList>
							<regexCodePropertyList>
								<integer>1</integer>
								<integer>1</integer>
							</regexCodePropertyList>
						</Trigger>
						<Trigger isActive="yes" isFolder="no" isTempTrigger="no" isMultiline="no" isPerlSlashGOption="no" isColorizerTrigger="no" isFilterTrigger="no" isSoundTrigger="no" isColorTrigger="no" isColorTriggerFg="no" isColorTriggerBg="no">
							<name>already impaled</name>
							<script>snd.target_impaled = true</script>
							<triggerType>0</triggerType>
							<conditonLineDelta>0</conditonLineDelta>
							<mStayOpen>0</mStayOpen>
							<mCommand></mCommand>
							<packageName></packageName>
							<mFgColor>#ff0000</mFgColor>
							<mBgColor>#ffff00</mBgColor>
							<mSoundFile></mSoundFile>
							<colorTriggerFgColor>#000000</colorTriggerFgColor>
							<colorTriggerBgColor>#000000</colorTriggerBgColor>
							<regexCodeList>
								<string>You cannot do that while you have impaled another.</string>
							</regexCodeList>
							<regexCodePropertyList>
								<integer>3</integer>
							</regexCodePropertyList>
						</Trigger>
						<Trigger isActive="yes" isFolder="no" isTempTrigger="no" isMultiline="no" isPerlSlashGOption="no" isColorizerTrigger="no" isFilterTrigger="no" isSoundTrigger="no" isColorTrigger="no" isColorTriggerFg="no" isColorTriggerBg="no">
							<name>not prone</name>
							<script>snd.target_prone = false
snd.target_cured("prone")</script>
							<triggerType>0</triggerType>
							<conditonLineDelta>0</conditonLineDelta>
							<mStayOpen>0</mStayOpen>
							<mCommand></mCommand>
							<packageName></packageName>
							<mFgColor>#ff0000</mFgColor>
							<mBgColor>#ffff00</mBgColor>
							<mSoundFile></mSoundFile>
							<colorTriggerFgColor>#000000</colorTriggerFgColor>
							<colorTriggerBgColor>#000000</colorTriggerBgColor>
							<regexCodeList>
								<string>You can't do that if your target isn't prone!</string>
							</regexCodeList>
							<regexCodePropertyList>
								<integer>3</integer>
							</regexCodePropertyList>
						</Trigger>
						<Trigger isActive="yes" isFolder="no" isTempTrigger="no" isMultiline="no" isPerlSlashGOption="no" isColorizerTrigger="no" isFilterTrigger="no" isSoundTrigger="no" isColorTrigger="no" isColorTriggerFg="no" isColorTriggerBg="no">
							<name>3p impale</name>
							<script>if matches[2] == snd.target then
 snd.target_got("impaled")
end

</script>
							<triggerType>0</triggerType>
							<conditonLineDelta>0</conditonLineDelta>
							<mStayOpen>0</mStayOpen>
							<mCommand></mCommand>
							<packageName></packageName>
							<mFgColor>#ff0000</mFgColor>
							<mBgColor>#ffff00</mBgColor>
							<mSoundFile></mSoundFile>
							<colorTriggerFgColor>#000000</colorTriggerFgColor>
							<colorTriggerBgColor>#000000</colorTriggerBgColor>
							<regexCodeList>
								<string>^\w+ draws back .+ and plunges it deep into (\w+)('s|') helpless body\.$</string>
								<string>^(\w+) is already impaled\; there is no room for your blade\.$</string>
								<string> ^Piercing through the flesh of (\w+)'s belly, (the )?\w+ twists .+ with agrin.$</string>
								<string>^With a forceful thrust, .* sinks .+ deep inside (\w+)'s guts.</string>
								<string>^\w+ uses Battlefury Lunge \(impale\) on (\w+)\.$</string>
								<string>^\w+ lunges forward and slams the .* into (\w+), easily skewering (the )?\w+ upon the ground with the powerful strike.$</string>
								<string>^\w+ skewers (\w+) with (the )?\w+ spear, pinning (the )?\w+ to the ground.$</string>
								<string>^Unable to get out of the way in time, (\w+)'s body is pierced by the gleaming icicle, the hole left gleaming and transparent as it skewers (the )?\w+, (the )?\w+ blood and entrails dripping down to tint the ice like some macabre ornament.$</string>
							</regexCodeList>
							<regexCodePropertyList>
								<integer>1</integer>
								<integer>1</integer>
								<integer>1</integer>
								<integer>1</integer>
								<integer>1</integer>
								<integer>1</integer>
								<integer>1</integer>
								<integer>1</integer>
							</regexCodePropertyList>
						</Trigger>
						<Trigger isActive="yes" isFolder="no" isTempTrigger="no" isMultiline="no" isPerlSlashGOption="no" isColorizerTrigger="no" isFilterTrigger="no" isSoundTrigger="no" isColorTrigger="no" isColorTriggerFg="no" isColorTriggerBg="no">
							<name>cure impaled</name>
							<script>if matches[2] == snd.target then
 snd.target_cured("impaled")
end</script>
							<triggerType>0</triggerType>
							<conditonLineDelta>0</conditonLineDelta>
							<mStayOpen>0</mStayOpen>
							<mCommand></mCommand>
							<packageName></packageName>
							<mFgColor>#ff0000</mFgColor>
							<mBgColor>#ffff00</mBgColor>
							<mSoundFile></mSoundFile>
							<colorTriggerFgColor>#000000</colorTriggerFgColor>
							<colorTriggerBgColor>#000000</colorTriggerBgColor>
							<regexCodeList>
								<string>^(\w+) has writhed free of (the )?\w+ impalement\.$</string>
								<string>^With a vicious snarl .* carves a merciless swathe through (\w+)('s|') steaming guts\. (the )?\w+ gurgles and chokes as (the )?\w+ withdraws (the )?\w+ (the )?\w+, its blade glistening with gore\.$</string>
							</regexCodeList>
							<regexCodePropertyList>
								<integer>1</integer>
								<integer>1</integer>
							</regexCodePropertyList>
						</Trigger>
						<Trigger isActive="yes" isFolder="no" isTempTrigger="no" isMultiline="no" isPerlSlashGOption="no" isColorizerTrigger="no" isFilterTrigger="no" isSoundTrigger="no" isColorTrigger="no" isColorTriggerFg="no" isColorTriggerBg="no">
							<name>not impaled</name>
							<script>snd.target_impaled = false</script>
							<triggerType>0</triggerType>
							<conditonLineDelta>0</conditonLineDelta>
							<mStayOpen>0</mStayOpen>
							<mCommand></mCommand>
							<packageName></packageName>
							<mFgColor>#ff0000</mFgColor>
							<mBgColor>#ffff00</mBgColor>
							<mSoundFile></mSoundFile>
							<colorTriggerFgColor>#000000</colorTriggerFgColor>
							<colorTriggerBgColor>#000000</colorTriggerBgColor>
							<regexCodeList>
								<string>You are not impaling anybody.</string>
							</regexCodeList>
							<regexCodePropertyList>
								<integer>3</integer>
							</regexCodePropertyList>
						</Trigger>
						<Trigger isActive="yes" isFolder="no" isTempTrigger="no" isMultiline="no" isPerlSlashGOption="no" isColorizerTrigger="no" isFilterTrigger="no" isSoundTrigger="no" isColorTrigger="no" isColorTriggerFg="no" isColorTriggerBg="no">
							<name>Impaled - stalagmite</name>
							<script>if matches[3] == snd.target then
	if matches[2] == "You" then
		snd.target_impaled = true
	else
		snd.target_got("impaled") 
	end
end</script>
							<triggerType>0</triggerType>
							<conditonLineDelta>0</conditonLineDelta>
							<mStayOpen>0</mStayOpen>
							<mCommand></mCommand>
							<packageName></packageName>
							<mFgColor>#ff0000</mFgColor>
							<mBgColor>#ffff00</mBgColor>
							<mSoundFile></mSoundFile>
							<colorTriggerFgColor>#000000</colorTriggerFgColor>
							<colorTriggerBgColor>#000000</colorTriggerBgColor>
							<regexCodeList>
								<string>^(\w+) uses? Terramancy Impale on (\w+)\.$</string>
							</regexCodeList>
							<regexCodePropertyList>
								<integer>1</integer>
							</regexCodePropertyList>
						</Trigger>
					</TriggerGroup>
					<TriggerGroup isActive="yes" isFolder="yes" isTempTrigger="no" isMultiline="no" isPerlSlashGOption="no" isColorizerTrigger="no" isFilterTrigger="no" isSoundTrigger="no" isColorTrigger="no" isColorTriggerFg="no" isColorTriggerBg="no">
						<name>Health/Mana</name>
						<script></script>
						<triggerType>0</triggerType>
						<conditonLineDelta>0</conditonLineDelta>
						<mStayOpen>0</mStayOpen>
						<mCommand></mCommand>
						<packageName></packageName>
						<mFgColor>#ff0000</mFgColor>
						<mBgColor>#ffff00</mBgColor>
						<mSoundFile></mSoundFile>
						<colorTriggerFgColor>#000000</colorTriggerFgColor>
						<colorTriggerBgColor>#000000</colorTriggerBgColor>
						<regexCodeList />
						<regexCodePropertyList />
						<Trigger isActive="yes" isFolder="no" isTempTrigger="no" isMultiline="no" isPerlSlashGOption="no" isColorizerTrigger="no" isFilterTrigger="no" isSoundTrigger="no" isColorTrigger="no" isColorTriggerFg="no" isColorTriggerBg="no">
							<name>contemplate</name>
							<script>percent = math.floor((tonumber(matches[3])/tonumber(matches[4]))*100)
echo(" "..percent.."%")
if matches[2] == snd.target then
 snd.mana_percent = percent
end</script>
							<triggerType>0</triggerType>
							<conditonLineDelta>0</conditonLineDelta>
							<mStayOpen>0</mStayOpen>
							<mCommand></mCommand>
							<packageName></packageName>
							<mFgColor>#ff0000</mFgColor>
							<mBgColor>#ffff00</mBgColor>
							<mSoundFile></mSoundFile>
							<colorTriggerFgColor>#000000</colorTriggerFgColor>
							<colorTriggerBgColor>#000000</colorTriggerBgColor>
							<regexCodeList>
								<string>^(\w+)'s? mana stands at (\d+)/(\d+)\.$</string>
							</regexCodeList>
							<regexCodePropertyList>
								<integer>1</integer>
							</regexCodePropertyList>
						</Trigger>
						<Trigger isActive="yes" isFolder="no" isTempTrigger="no" isMultiline="no" isPerlSlashGOption="no" isColorizerTrigger="no" isFilterTrigger="no" isSoundTrigger="no" isColorTrigger="no" isColorTriggerFg="no" isColorTriggerBg="no">
							<name>anabiotic</name>
							<script>if matches[2] == snd.target then
 snd.vital_change("health", 10)
 snd.vital_change("mana", 10)
end</script>
							<triggerType>0</triggerType>
							<conditonLineDelta>0</conditonLineDelta>
							<mStayOpen>0</mStayOpen>
							<mCommand></mCommand>
							<packageName></packageName>
							<mFgColor>#ff0000</mFgColor>
							<mBgColor>#ffff00</mBgColor>
							<mSoundFile></mSoundFile>
							<colorTriggerFgColor>#000000</colorTriggerFgColor>
							<colorTriggerBgColor>#000000</colorTriggerBgColor>
							<regexCodeList>
								<string>^(\w+) swallows an anabiotic pill\.$</string>
							</regexCodeList>
							<regexCodePropertyList>
								<integer>1</integer>
							</regexCodePropertyList>
						</Trigger>
						<Trigger isActive="yes" isFolder="no" isTempTrigger="no" isMultiline="no" isPerlSlashGOption="no" isColorizerTrigger="no" isFilterTrigger="no" isSoundTrigger="no" isColorTrigger="no" isColorTriggerFg="no" isColorTriggerBg="no">
							<name>sipped something</name>
							<script>if matches[2] == snd.target and string.find("vial", matches[3]) then
 snd.vital_change("health", 25)
 snd.vital_change("mana", 25)
end</script>
							<triggerType>0</triggerType>
							<conditonLineDelta>0</conditonLineDelta>
							<mStayOpen>0</mStayOpen>
							<mCommand></mCommand>
							<packageName></packageName>
							<mFgColor>#ff0000</mFgColor>
							<mBgColor>#ffff00</mBgColor>
							<mSoundFile></mSoundFile>
							<colorTriggerFgColor>#000000</colorTriggerFgColor>
							<colorTriggerBgColor>#000000</colorTriggerBgColor>
							<regexCodeList>
								<string>^(\w+) takes a drink from (.+)\.$</string>
							</regexCodeList>
							<regexCodePropertyList>
								<integer>1</integer>
							</regexCodePropertyList>
						</Trigger>
						<Trigger isActive="yes" isFolder="no" isTempTrigger="no" isMultiline="no" isPerlSlashGOption="no" isColorizerTrigger="no" isFilterTrigger="no" isSoundTrigger="no" isColorTrigger="no" isColorTriggerFg="no" isColorTriggerBg="no">
							<name>Quickassess</name>
							<script>percent = math.floor((tonumber(matches[3])/tonumber(matches[4]))*100)
echo(" "..percent.."%")
if matches[2] == snd.target then
 snd.health_percent = percent
end</script>
							<triggerType>0</triggerType>
							<conditonLineDelta>0</conditonLineDelta>
							<mStayOpen>0</mStayOpen>
							<mCommand></mCommand>
							<packageName></packageName>
							<mFgColor>#ff0000</mFgColor>
							<mBgColor>#ffff00</mBgColor>
							<mSoundFile></mSoundFile>
							<colorTriggerFgColor>#000000</colorTriggerFgColor>
							<colorTriggerBgColor>#000000</colorTriggerBgColor>
							<regexCodeList>
								<string>^You glance over (\w+) and see that .* health is at (\d+)\/(\d+)\.$</string>
							</regexCodeList>
							<regexCodePropertyList>
								<integer>1</integer>
							</regexCodePropertyList>
						</Trigger>
					</TriggerGroup>
					<TriggerGroup isActive="yes" isFolder="yes" isTempTrigger="no" isMultiline="no" isPerlSlashGOption="no" isColorizerTrigger="no" isFilterTrigger="no" isSoundTrigger="no" isColorTrigger="no" isColorTriggerFg="no" isColorTriggerBg="no">
						<name>Aff Tracking</name>
						<script></script>
						<triggerType>0</triggerType>
						<conditonLineDelta>0</conditonLineDelta>
						<mStayOpen>0</mStayOpen>
						<mCommand></mCommand>
						<packageName></packageName>
						<mFgColor>#ff0000</mFgColor>
						<mBgColor>#ffff00</mBgColor>
						<mSoundFile></mSoundFile>
						<colorTriggerFgColor>#000000</colorTriggerFgColor>
						<colorTriggerBgColor>#000000</colorTriggerBgColor>
						<regexCodeList />
						<regexCodePropertyList />
						<TriggerGroup isActive="yes" isFolder="yes" isTempTrigger="no" isMultiline="no" isPerlSlashGOption="no" isColorizerTrigger="no" isFilterTrigger="no" isSoundTrigger="no" isColorTrigger="no" isColorTriggerFg="no" isColorTriggerBg="no">
							<name>Gave Afflictions</name>
							<script></script>
							<triggerType>0</triggerType>
							<conditonLineDelta>0</conditonLineDelta>
							<mStayOpen>0</mStayOpen>
							<mCommand></mCommand>
							<packageName></packageName>
							<mFgColor>#ff0000</mFgColor>
							<mBgColor>#ffff00</mBgColor>
							<mSoundFile></mSoundFile>
							<colorTriggerFgColor>#000000</colorTriggerFgColor>
							<colorTriggerBgColor>#000000</colorTriggerBgColor>
							<regexCodeList />
							<regexCodePropertyList />
							<Trigger isActive="yes" isFolder="no" isTempTrigger="no" isMultiline="no" isPerlSlashGOption="no" isColorizerTrigger="no" isFilterTrigger="no" isSoundTrigger="no" isColorTrigger="no" isColorTriggerFg="no" isColorTriggerBg="no">
								<name>delivered venom</name>
								<script>if snd.toggles.atkecho then
 deleteLine()
 snd.message("Gave: "..matches[2])
end
if not snd.rebounded then
 if snd.class == "Templar" then
   snd.used.rebounding = false
 end
 snd.last_affs = {}
 local aff = snd.venomEffect(matches[2])
 snd.target_got(aff)
 table.insert(snd.last_affs, aff)
end</script>
								<triggerType>0</triggerType>
								<conditonLineDelta>0</conditonLineDelta>
								<mStayOpen>0</mStayOpen>
								<mCommand></mCommand>
								<packageName></packageName>
								<mFgColor>#ff0000</mFgColor>
								<mBgColor>#ffff00</mBgColor>
								<mSoundFile></mSoundFile>
								<colorTriggerFgColor>#000000</colorTriggerFgColor>
								<colorTriggerBgColor>#000000</colorTriggerBgColor>
								<regexCodeList>
									<string>^You discern that a layer of (\w+) has rubbed off your weapon\.$</string>
									<string>^Your quarterstaff leaches (\w+) into (the )?\w+'s blood.$</string>
								</regexCodeList>
								<regexCodePropertyList>
									<integer>1</integer>
									<integer>1</integer>
								</regexCodePropertyList>
							</Trigger>
							<Trigger isActive="yes" isFolder="no" isTempTrigger="no" isMultiline="no" isPerlSlashGOption="no" isColorizerTrigger="no" isFilterTrigger="no" isSoundTrigger="no" isColorTrigger="no" isColorTriggerFg="no" isColorTriggerBg="no">
								<name>gave aff</name>
								<script>if matches[2] == snd.target then
 snd.target_got(matches[3])
end</script>
								<triggerType>0</triggerType>
								<conditonLineDelta>0</conditonLineDelta>
								<mStayOpen>0</mStayOpen>
								<mCommand></mCommand>
								<packageName></packageName>
								<mFgColor>#ff0000</mFgColor>
								<mBgColor>#ffff00</mBgColor>
								<mSoundFile></mSoundFile>
								<colorTriggerFgColor>#000000</colorTriggerFgColor>
								<colorTriggerBgColor>#000000</colorTriggerBgColor>
								<regexCodeList>
									<string>^You discern that (\w+) has been afflicted with (.+)\.$</string>
								</regexCodeList>
								<regexCodePropertyList>
									<integer>1</integer>
								</regexCodePropertyList>
							</Trigger>
							<TriggerGroup isActive="yes" isFolder="yes" isTempTrigger="no" isMultiline="no" isPerlSlashGOption="no" isColorizerTrigger="no" isFilterTrigger="no" isSoundTrigger="no" isColorTrigger="no" isColorTriggerFg="no" isColorTriggerBg="no">
								<name>Templar</name>
								<script></script>
								<triggerType>0</triggerType>
								<conditonLineDelta>0</conditonLineDelta>
								<mStayOpen>0</mStayOpen>
								<mCommand></mCommand>
								<packageName></packageName>
								<mFgColor>#ff0000</mFgColor>
								<mBgColor>#ffff00</mBgColor>
								<mSoundFile></mSoundFile>
								<colorTriggerFgColor>#000000</colorTriggerFgColor>
								<colorTriggerBgColor>#000000</colorTriggerBgColor>
								<regexCodeList />
								<regexCodePropertyList />
								<Trigger isActive="yes" isFolder="no" isTempTrigger="no" isMultiline="no" isPerlSlashGOption="no" isColorizerTrigger="no" isFilterTrigger="no" isSoundTrigger="no" isColorTrigger="no" isColorTriggerFg="no" isColorTriggerBg="no">
									<name>conviction</name>
									<script>if snd.toggles.atkecho then
 deleteLine()
 snd.message("Gave: conviction")
end
if matches[3] == snd.target then
 snd.target_got("conviction")
end</script>
									<triggerType>0</triggerType>
									<conditonLineDelta>0</conditonLineDelta>
									<mStayOpen>0</mStayOpen>
									<mCommand></mCommand>
									<packageName></packageName>
									<mFgColor>#ff0000</mFgColor>
									<mBgColor>#ffff00</mBgColor>
									<mSoundFile></mSoundFile>
									<colorTriggerFgColor>#000000</colorTriggerFgColor>
									<colorTriggerBgColor>#000000</colorTriggerBgColor>
									<regexCodeList>
										<string>^As (.*) strikes, sparks of energy fizzle across (\w+)('s|') body as (the )?\w+ defences are reduced\.$</string>
									</regexCodeList>
									<regexCodePropertyList>
										<integer>1</integer>
									</regexCodePropertyList>
								</Trigger>
								<Trigger isActive="yes" isFolder="no" isTempTrigger="no" isMultiline="no" isPerlSlashGOption="no" isColorizerTrigger="no" isFilterTrigger="no" isSoundTrigger="no" isColorTrigger="no" isColorTriggerFg="no" isColorTriggerBg="no">
									<name>disrupt mind</name>
									<script>if snd.toggles.atkecho then
 deleteLine()
 snd.message("Gave: mental disrupt")
end
if matches[3] == snd.target then
 snd.target_got("mental disruption")
end</script>
									<triggerType>0</triggerType>
									<conditonLineDelta>0</conditonLineDelta>
									<mStayOpen>0</mStayOpen>
									<mCommand></mCommand>
									<packageName></packageName>
									<mFgColor>#ff0000</mFgColor>
									<mBgColor>#ffff00</mBgColor>
									<mSoundFile></mSoundFile>
									<colorTriggerFgColor>#000000</colorTriggerFgColor>
									<colorTriggerBgColor>#000000</colorTriggerBgColor>
									<regexCodeList>
										<string>^A flash of energy cascades down (.*), disrupting (\w+)('s|') equilibrium\.$</string>
									</regexCodeList>
									<regexCodePropertyList>
										<integer>1</integer>
									</regexCodePropertyList>
								</Trigger>
								<Trigger isActive="yes" isFolder="no" isTempTrigger="no" isMultiline="no" isPerlSlashGOption="no" isColorizerTrigger="no" isFilterTrigger="no" isSoundTrigger="no" isColorTrigger="no" isColorTriggerFg="no" isColorTriggerBg="no">
									<name>disrupt body</name>
									<script>if snd.toggles.atkecho then
 deleteLine()
 snd.message("Gave: physical disrupt")
end
if matches[3] == snd.target then
 snd.target_got("physical disruption")
end</script>
									<triggerType>0</triggerType>
									<conditonLineDelta>0</conditonLineDelta>
									<mStayOpen>0</mStayOpen>
									<mCommand></mCommand>
									<packageName></packageName>
									<mFgColor>#ff0000</mFgColor>
									<mBgColor>#ffff00</mBgColor>
									<mSoundFile></mSoundFile>
									<colorTriggerFgColor>#000000</colorTriggerFgColor>
									<colorTriggerBgColor>#000000</colorTriggerBgColor>
									<regexCodeList>
										<string>^A flash of energy cascades down (.*), disrupting (\w+)('s|') balance\.$</string>
									</regexCodeList>
									<regexCodePropertyList>
										<integer>1</integer>
									</regexCodePropertyList>
								</Trigger>
								<Trigger isActive="yes" isFolder="no" isTempTrigger="no" isMultiline="no" isPerlSlashGOption="no" isColorizerTrigger="no" isFilterTrigger="no" isSoundTrigger="no" isColorTrigger="no" isColorTriggerFg="no" isColorTriggerBg="no">
									<name>cripple legs</name>
									<script>if snd.toggles.atkecho then
 deleteLine()
 snd.message("Gave: crippled")
end
if matches[3] == snd.target then
 snd.target_got("crippled")
end</script>
									<triggerType>0</triggerType>
									<conditonLineDelta>0</conditonLineDelta>
									<mStayOpen>0</mStayOpen>
									<mCommand></mCommand>
									<packageName></packageName>
									<mFgColor>#ff0000</mFgColor>
									<mBgColor>#ffff00</mBgColor>
									<mSoundFile></mSoundFile>
									<colorTriggerFgColor>#000000</colorTriggerFgColor>
									<colorTriggerBgColor>#000000</colorTriggerBgColor>
									<regexCodeList>
										<string>^As (.*) strikes, a surge of energy cascades along it, striking (\w+)('s|') legs\.$</string>
									</regexCodeList>
									<regexCodePropertyList>
										<integer>1</integer>
									</regexCodePropertyList>
								</Trigger>
								<Trigger isActive="yes" isFolder="no" isTempTrigger="no" isMultiline="no" isPerlSlashGOption="no" isColorizerTrigger="no" isFilterTrigger="no" isSoundTrigger="no" isColorTrigger="no" isColorTriggerFg="no" isColorTriggerBg="no">
									<name>cripple body</name>
									<script>if snd.toggles.atkecho then
 deleteLine()
 snd.message("Gave: crippled body")
end
if matches[3] == snd.target then
 snd.target_got("crippled body")
end</script>
									<triggerType>0</triggerType>
									<conditonLineDelta>0</conditonLineDelta>
									<mStayOpen>0</mStayOpen>
									<mCommand></mCommand>
									<packageName></packageName>
									<mFgColor>#ff0000</mFgColor>
									<mBgColor>#ffff00</mBgColor>
									<mSoundFile></mSoundFile>
									<colorTriggerFgColor>#000000</colorTriggerFgColor>
									<colorTriggerBgColor>#000000</colorTriggerBgColor>
									<regexCodeList>
										<string>^As (.*) strikes, a surge of energy cascades along it, striking (\w+)('s|') body\.$</string>
									</regexCodeList>
									<regexCodePropertyList>
										<integer>1</integer>
									</regexCodePropertyList>
								</Trigger>
								<Trigger isActive="yes" isFolder="no" isTempTrigger="no" isMultiline="no" isPerlSlashGOption="no" isColorizerTrigger="no" isFilterTrigger="no" isSoundTrigger="no" isColorTrigger="no" isColorTriggerFg="no" isColorTriggerBg="no">
									<name>withering</name>
									<script>if matches[2] == snd.target then
 snd.target_got("withering")
end</script>
									<triggerType>0</triggerType>
									<conditonLineDelta>0</conditonLineDelta>
									<mStayOpen>0</mStayOpen>
									<mCommand></mCommand>
									<packageName></packageName>
									<mFgColor>#ff0000</mFgColor>
									<mBgColor>#ffff00</mBgColor>
									<mSoundFile></mSoundFile>
									<colorTriggerFgColor>#000000</colorTriggerFgColor>
									<colorTriggerBgColor>#000000</colorTriggerBgColor>
									<regexCodeList>
										<string>^You reach out towards (\w+), twisting (the )?\w+ aura into a malevolent force that emanates an intense evil from its owner\. It begins to feed from fueling itself into a supernatural power\.$</string>
									</regexCodeList>
									<regexCodePropertyList>
										<integer>1</integer>
									</regexCodePropertyList>
								</Trigger>
								<Trigger isActive="yes" isFolder="no" isTempTrigger="no" isMultiline="no" isPerlSlashGOption="no" isColorizerTrigger="no" isFilterTrigger="no" isSoundTrigger="no" isColorTrigger="no" isColorTriggerFg="no" isColorTriggerBg="no">
									<name>rend 3p</name>
									<script>if snd.target == matches[2] then
	snd.target_got("rend")
end</script>
									<triggerType>0</triggerType>
									<conditonLineDelta>0</conditonLineDelta>
									<mStayOpen>0</mStayOpen>
									<mCommand></mCommand>
									<packageName></packageName>
									<mFgColor>#ff0000</mFgColor>
									<mBgColor>#ffff00</mBgColor>
									<mSoundFile></mSoundFile>
									<colorTriggerFgColor>#000000</colorTriggerFgColor>
									<colorTriggerBgColor>#000000</colorTriggerBgColor>
									<regexCodeList>
										<string>^(\w+) begins to bleed vivid red blood from the lacerations by the blade.$</string>
									</regexCodeList>
									<regexCodePropertyList>
										<integer>1</integer>
									</regexCodePropertyList>
								</Trigger>
								<Trigger isActive="yes" isFolder="no" isTempTrigger="no" isMultiline="no" isPerlSlashGOption="no" isColorizerTrigger="no" isFilterTrigger="no" isSoundTrigger="no" isColorTrigger="no" isColorTriggerFg="no" isColorTriggerBg="no">
									<name>Rend w/venom</name>
									<script>if matches[3] == snd.target then
	  table.insert(snd.maybe_affs, "rend")
 snd.hitting = matches[2]
end

snd.onHit(matches[3])</script>
									<triggerType>0</triggerType>
									<conditonLineDelta>0</conditonLineDelta>
									<mStayOpen>0</mStayOpen>
									<mCommand></mCommand>
									<packageName></packageName>
									<mFgColor>#ff0000</mFgColor>
									<mBgColor>#ffff00</mBgColor>
									<mSoundFile></mSoundFile>
									<colorTriggerFgColor>#000000</colorTriggerFgColor>
									<colorTriggerBgColor>#000000</colorTriggerBgColor>
									<regexCodeList>
										<string>^(\w+) uses? Battlefury Rend on (\w+)\.$</string>
									</regexCodeList>
									<regexCodePropertyList>
										<integer>1</integer>
									</regexCodePropertyList>
								</Trigger>
							</TriggerGroup>
							<TriggerGroup isActive="yes" isFolder="yes" isTempTrigger="no" isMultiline="no" isPerlSlashGOption="no" isColorizerTrigger="no" isFilterTrigger="no" isSoundTrigger="no" isColorTrigger="no" isColorTriggerFg="no" isColorTriggerBg="no">
								<name>Carnifex</name>
								<script></script>
								<triggerType>0</triggerType>
								<conditonLineDelta>0</conditonLineDelta>
								<mStayOpen>0</mStayOpen>
								<mCommand></mCommand>
								<packageName></packageName>
								<mFgColor>#ff0000</mFgColor>
								<mBgColor>#ffff00</mBgColor>
								<mSoundFile></mSoundFile>
								<colorTriggerFgColor>#000000</colorTriggerFgColor>
								<colorTriggerBgColor>#000000</colorTriggerBgColor>
								<regexCodeList />
								<regexCodePropertyList />
								<Trigger isActive="yes" isFolder="no" isTempTrigger="no" isMultiline="no" isPerlSlashGOption="no" isColorizerTrigger="no" isFilterTrigger="no" isSoundTrigger="no" isColorTrigger="no" isColorTriggerFg="no" isColorTriggerBg="no">
									<name>soul disease</name>
									<script>if matches[2] == snd.target then
 snd.target_got("soul_disease")
end</script>
									<triggerType>0</triggerType>
									<conditonLineDelta>0</conditonLineDelta>
									<mStayOpen>0</mStayOpen>
									<mCommand></mCommand>
									<packageName></packageName>
									<mFgColor>#ff0000</mFgColor>
									<mBgColor>#ffff00</mBgColor>
									<mSoundFile></mSoundFile>
									<colorTriggerFgColor>#000000</colorTriggerFgColor>
									<colorTriggerBgColor>#000000</colorTriggerBgColor>
									<regexCodeList>
										<string>^A sickly red gleam flares across your soulstone's surface as you direct it towards (\w+), tainting (the )?\w+ very soul with foul disease\.$</string>
									</regexCodeList>
									<regexCodePropertyList>
										<integer>1</integer>
									</regexCodePropertyList>
								</Trigger>
								<Trigger isActive="yes" isFolder="no" isTempTrigger="no" isMultiline="no" isPerlSlashGOption="no" isColorizerTrigger="no" isFilterTrigger="no" isSoundTrigger="no" isColorTrigger="no" isColorTriggerFg="no" isColorTriggerBg="no">
									<name>soul wraith</name>
									<script>if matches[2] == snd.target then
 snd.target_got("soul_wraith")
end</script>
									<triggerType>0</triggerType>
									<conditonLineDelta>0</conditonLineDelta>
									<mStayOpen>0</mStayOpen>
									<mCommand></mCommand>
									<packageName></packageName>
									<mFgColor>#ff0000</mFgColor>
									<mBgColor>#ffff00</mBgColor>
									<mSoundFile></mSoundFile>
									<colorTriggerFgColor>#000000</colorTriggerFgColor>
									<colorTriggerBgColor>#000000</colorTriggerBgColor>
									<regexCodeList>
										<string>^A sliver of soul snakes out from your soulstone, wrapping itself around (\w+) in an insidious twine\.$</string>
									</regexCodeList>
									<regexCodePropertyList>
										<integer>1</integer>
									</regexCodePropertyList>
								</Trigger>
								<Trigger isActive="yes" isFolder="no" isTempTrigger="no" isMultiline="no" isPerlSlashGOption="no" isColorizerTrigger="no" isFilterTrigger="no" isSoundTrigger="no" isColorTrigger="no" isColorTriggerFg="no" isColorTriggerBg="no">
									<name>soul implant</name>
									<script>if matches[2] == snd.target then
 snd.target_got("soul_implant")
end
for i in pairs(snd.effects) do
 if snd.effects[i] == matches[5] then
  snd.implant = i
 end
end
--snd.implant = matches[4]
snd.balance.implant = false
tempTimer(15, [[snd.balance.implant = true]])</script>
									<triggerType>0</triggerType>
									<conditonLineDelta>0</conditonLineDelta>
									<mStayOpen>0</mStayOpen>
									<mCommand></mCommand>
									<packageName></packageName>
									<mFgColor>#ff0000</mFgColor>
									<mBgColor>#ffff00</mBgColor>
									<mSoundFile></mSoundFile>
									<colorTriggerFgColor>#000000</colorTriggerFgColor>
									<colorTriggerBgColor>#000000</colorTriggerBgColor>
									<regexCodeList>
										<string>^Your soulstone crackles with a cold blue light as you pry open (\w+)('s|') soul, stealthily implanting a dose of (\w+) to lie dormant until (the )?\w+ enters (the )?\w+ bloodstream\.$</string>
									</regexCodeList>
									<regexCodePropertyList>
										<integer>1</integer>
									</regexCodePropertyList>
								</Trigger>
								<Trigger isActive="yes" isFolder="no" isTempTrigger="no" isMultiline="no" isPerlSlashGOption="no" isColorizerTrigger="no" isFilterTrigger="no" isSoundTrigger="no" isColorTrigger="no" isColorTriggerFg="no" isColorTriggerBg="no">
									<name>implant proc</name>
									<script>if snd.toggles.atkecho then
 deleteLine()
 snd.message("Implant: "..snd.implant)
end
if matches[2] == snd.target then
 snd.target_cured("soul_implant")
 snd.target_got(snd.implant)
 snd.implant = "none"
end
</script>
									<triggerType>0</triggerType>
									<conditonLineDelta>0</conditonLineDelta>
									<mStayOpen>0</mStayOpen>
									<mCommand></mCommand>
									<packageName></packageName>
									<mFgColor>#ff0000</mFgColor>
									<mBgColor>#ffff00</mBgColor>
									<mSoundFile></mSoundFile>
									<colorTriggerFgColor>#000000</colorTriggerFgColor>
									<colorTriggerBgColor>#000000</colorTriggerBgColor>
									<regexCodeList>
										<string>^(\w+) shudders as a dormant venom in (the )?\w+ body releases itself into (the )?\w+ bloodstream\.$</string>
									</regexCodeList>
									<regexCodePropertyList>
										<integer>1</integer>
									</regexCodePropertyList>
								</Trigger>
								<Trigger isActive="yes" isFolder="no" isTempTrigger="no" isMultiline="no" isPerlSlashGOption="no" isColorizerTrigger="no" isFilterTrigger="no" isSoundTrigger="no" isColorTrigger="no" isColorTriggerFg="no" isColorTriggerBg="no">
									<name>soul poison</name>
									<script>if matches[2] == snd.target then
 snd.target_got("soul_poison")
end
snd.balance.soulpoison = false</script>
									<triggerType>0</triggerType>
									<conditonLineDelta>0</conditonLineDelta>
									<mStayOpen>0</mStayOpen>
									<mCommand></mCommand>
									<packageName></packageName>
									<mFgColor>#ff0000</mFgColor>
									<mBgColor>#ffff00</mBgColor>
									<mSoundFile></mSoundFile>
									<colorTriggerFgColor>#000000</colorTriggerFgColor>
									<colorTriggerBgColor>#000000</colorTriggerBgColor>
									<regexCodeList>
										<string>^Your soulstone pulses ominously as an arc of ethereal energy strikes (\w+)('s|) chest, causing (the )?\w+ to turn a sickly hue\.$</string>
									</regexCodeList>
									<regexCodePropertyList>
										<integer>1</integer>
									</regexCodePropertyList>
								</Trigger>
								<Trigger isActive="yes" isFolder="no" isTempTrigger="no" isMultiline="no" isPerlSlashGOption="no" isColorizerTrigger="no" isFilterTrigger="no" isSoundTrigger="no" isColorTrigger="no" isColorTriggerFg="no" isColorTriggerBg="no">
									<name>soul poison CD</name>
									<script>snd.balance.soulpoison = true</script>
									<triggerType>0</triggerType>
									<conditonLineDelta>0</conditonLineDelta>
									<mStayOpen>0</mStayOpen>
									<mCommand></mCommand>
									<packageName></packageName>
									<mFgColor>#ff0000</mFgColor>
									<mBgColor>#ffff00</mBgColor>
									<mSoundFile></mSoundFile>
									<colorTriggerFgColor>#000000</colorTriggerFgColor>
									<colorTriggerBgColor>#000000</colorTriggerBgColor>
									<regexCodeList>
										<string>You may once more use your souls to poison another being.</string>
									</regexCodeList>
									<regexCodePropertyList>
										<integer>3</integer>
									</regexCodePropertyList>
								</Trigger>
								<Trigger isActive="yes" isFolder="no" isTempTrigger="no" isMultiline="no" isPerlSlashGOption="no" isColorizerTrigger="no" isFilterTrigger="no" isSoundTrigger="no" isColorTrigger="no" isColorTriggerFg="no" isColorTriggerBg="no">
									<name>crushed chest</name>
									<script>if matches[2] == snd.target then
 snd.target_got("crushed_chest")
end</script>
									<triggerType>0</triggerType>
									<conditonLineDelta>0</conditonLineDelta>
									<mStayOpen>0</mStayOpen>
									<mCommand></mCommand>
									<packageName></packageName>
									<mFgColor>#ff0000</mFgColor>
									<mBgColor>#ffff00</mBgColor>
									<mSoundFile></mSoundFile>
									<colorTriggerFgColor>#000000</colorTriggerFgColor>
									<colorTriggerBgColor>#000000</colorTriggerBgColor>
									<regexCodeList>
										<string>^Swinging .+ around in a wide arc, you smash it savagely into (\w+)('s|') torso's chest, which visibly collapses inwards as it is crushed\.$</string>
									</regexCodeList>
									<regexCodePropertyList>
										<integer>1</integer>
									</regexCodePropertyList>
								</Trigger>
								<Trigger isActive="yes" isFolder="no" isTempTrigger="no" isMultiline="no" isPerlSlashGOption="no" isColorizerTrigger="no" isFilterTrigger="no" isSoundTrigger="no" isColorTrigger="no" isColorTriggerFg="no" isColorTriggerBg="no">
									<name>cracked ribs</name>
									<script>if matches[2] == snd.target then
 snd.target_got("cracked_ribs")
end</script>
									<triggerType>0</triggerType>
									<conditonLineDelta>0</conditonLineDelta>
									<mStayOpen>0</mStayOpen>
									<mCommand></mCommand>
									<packageName></packageName>
									<mFgColor>#ff0000</mFgColor>
									<mBgColor>#ffff00</mBgColor>
									<mSoundFile></mSoundFile>
									<colorTriggerFgColor>#000000</colorTriggerFgColor>
									<colorTriggerBgColor>#000000</colorTriggerBgColor>
									<regexCodeList>
										<string>^Swinging .+ around in a wide arc, you smash it savagely into (\w+)('s|') torso and hear a satisfying 'crunch' as ribs break before your blow\.$</string>
									</regexCodeList>
									<regexCodePropertyList>
										<integer>1</integer>
									</regexCodePropertyList>
								</Trigger>
								<Trigger isActive="yes" isFolder="no" isTempTrigger="no" isMultiline="no" isPerlSlashGOption="no" isColorizerTrigger="no" isFilterTrigger="no" isSoundTrigger="no" isColorTrigger="no" isColorTriggerFg="no" isColorTriggerBg="no">
									<name>wraith weariness</name>
									<script>if matches[2] == snd.target then
 snd.target_got("weariness")
end</script>
									<triggerType>0</triggerType>
									<conditonLineDelta>0</conditonLineDelta>
									<mStayOpen>0</mStayOpen>
									<mCommand></mCommand>
									<packageName></packageName>
									<mFgColor>#ff0000</mFgColor>
									<mBgColor>#ffff00</mBgColor>
									<mSoundFile></mSoundFile>
									<colorTriggerFgColor>#000000</colorTriggerFgColor>
									<colorTriggerBgColor>#000000</colorTriggerBgColor>
									<regexCodeList>
										<string>^As (\w+) attempts to cower behind (the )?\w+ shield, a coiled sliver of soul strikes, tearing itself apart as it rakes the protection to shreds\.$</string>
									</regexCodeList>
									<regexCodePropertyList>
										<integer>1</integer>
									</regexCodePropertyList>
								</Trigger>
								<Trigger isActive="yes" isFolder="no" isTempTrigger="no" isMultiline="no" isPerlSlashGOption="no" isColorizerTrigger="no" isFilterTrigger="no" isSoundTrigger="no" isColorTrigger="no" isColorTriggerFg="no" isColorTriggerBg="no">
									<name>asthma</name>
									<script>if matches[2] == snd.target then
 snd.target_got("asthma")
end</script>
									<triggerType>0</triggerType>
									<conditonLineDelta>0</conditonLineDelta>
									<mStayOpen>0</mStayOpen>
									<mCommand></mCommand>
									<packageName></packageName>
									<mFgColor>#ff0000</mFgColor>
									<mBgColor>#ffff00</mBgColor>
									<mSoundFile></mSoundFile>
									<colorTriggerFgColor>#000000</colorTriggerFgColor>
									<colorTriggerBgColor>#000000</colorTriggerBgColor>
									<regexCodeList>
										<string>^(\w+) gasps for air as (the )?\w+ crushed chest inhibits (the )?\w+\.$</string>
									</regexCodeList>
									<regexCodePropertyList>
										<integer>1</integer>
									</regexCodePropertyList>
								</Trigger>
								<Trigger isActive="yes" isFolder="no" isTempTrigger="no" isMultiline="no" isPerlSlashGOption="no" isColorizerTrigger="no" isFilterTrigger="no" isSoundTrigger="no" isColorTrigger="no" isColorTriggerFg="no" isColorTriggerBg="no">
									<name>frailty</name>
									<script>if matches[2] == snd.target then
 snd.target_got("glasslimb")
end</script>
									<triggerType>0</triggerType>
									<conditonLineDelta>0</conditonLineDelta>
									<mStayOpen>0</mStayOpen>
									<mCommand></mCommand>
									<packageName></packageName>
									<mFgColor>#ff0000</mFgColor>
									<mBgColor>#ffff00</mBgColor>
									<mSoundFile></mSoundFile>
									<colorTriggerFgColor>#000000</colorTriggerFgColor>
									<colorTriggerBgColor>#000000</colorTriggerBgColor>
									<regexCodeList>
										<string>^A brittle, distant wail like nails on glass emanates from your soulstone as a sliver of (\w+)('s|') soul slams back into (the )?\w+ with a bone-shaking resonance\.$</string>
									</regexCodeList>
									<regexCodePropertyList>
										<integer>1</integer>
									</regexCodePropertyList>
								</Trigger>
								<Trigger isActive="yes" isFolder="no" isTempTrigger="no" isMultiline="no" isPerlSlashGOption="no" isColorizerTrigger="no" isFilterTrigger="no" isSoundTrigger="no" isColorTrigger="no" isColorTriggerFg="no" isColorTriggerBg="no">
									<name>distort</name>
									<script>if matches[2] == snd.target then
 snd.target_got("distortion")
end</script>
									<triggerType>0</triggerType>
									<conditonLineDelta>0</conditonLineDelta>
									<mStayOpen>0</mStayOpen>
									<mCommand></mCommand>
									<packageName></packageName>
									<mFgColor>#ff0000</mFgColor>
									<mBgColor>#ffff00</mBgColor>
									<mSoundFile></mSoundFile>
									<colorTriggerFgColor>#000000</colorTriggerFgColor>
									<colorTriggerBgColor>#000000</colorTriggerBgColor>
									<regexCodeList>
										<string>^Your soulstone flares with spectral light that surges towards (\w+)\. Within moments the energy has wrapped about (the )?\w+ form to warp and distort (the )?\w+ soul\.$</string>
									</regexCodeList>
									<regexCodePropertyList>
										<integer>1</integer>
									</regexCodePropertyList>
								</Trigger>
								<Trigger isActive="yes" isFolder="no" isTempTrigger="no" isMultiline="no" isPerlSlashGOption="no" isColorizerTrigger="no" isFilterTrigger="no" isSoundTrigger="no" isColorTrigger="no" isColorTriggerFg="no" isColorTriggerBg="no">
									<name>Warhounds attacks</name>
									<script>if matches[3] == snd.target then
	if matches[2] == "Acidspit" then
		if snd.checkAff("weariness") then
			snd.target_got("crippled")
		else
			snd.target_got("weariness")
		end
	end
	
	if matches[2] == "Poisonclaw" then
		if snd.checkAff("rend") then
			snd.target_got("blisters")
		else
			snd.target_got("rend")
		end
	end
	
	if matches[2] == "Shock" then
		if snd.checkAff("epilepsy") then
			snd.target_got("hallucinations")
		else
			snd.target_got("epilepsy")
		end
	end
	
	if matches[2] == "Stare" then
  	if snd.checkAff("berserking") then
  		snd.target_got("impairment")
  	else
  		snd.target_got("berserking")
  	end
	end
	
	if matches[2] == "Growl" then
  	if snd.checkAff("dizziness") then
  		snd.target_got("recklessness")
  	else
  		snd.target_got("dizziness")
  	end
	end
end

</script>
									<triggerType>0</triggerType>
									<conditonLineDelta>0</conditonLineDelta>
									<mStayOpen>0</mStayOpen>
									<mCommand></mCommand>
									<packageName></packageName>
									<mFgColor>#ff0000</mFgColor>
									<mBgColor>#ffff00</mBgColor>
									<mSoundFile></mSoundFile>
									<colorTriggerFgColor>#000000</colorTriggerFgColor>
									<colorTriggerBgColor>#000000</colorTriggerBgColor>
									<regexCodeList>
										<string>^\w+ uses? Warhounds (\w+) on (\w+)\.$</string>
									</regexCodeList>
									<regexCodePropertyList>
										<integer>1</integer>
									</regexCodePropertyList>
								</Trigger>
								<Trigger isActive="yes" isFolder="no" isTempTrigger="no" isMultiline="no" isPerlSlashGOption="no" isColorizerTrigger="no" isFilterTrigger="no" isSoundTrigger="no" isColorTrigger="no" isColorTriggerFg="no" isColorTriggerBg="no">
									<name>Soul Frailty gone</name>
									<script>if matches[2] == snd.target then
 snd.target_cured("glasslimb")
end</script>
									<triggerType>0</triggerType>
									<conditonLineDelta>0</conditonLineDelta>
									<mStayOpen>0</mStayOpen>
									<mCommand></mCommand>
									<packageName></packageName>
									<mFgColor>#ff0000</mFgColor>
									<mBgColor>#ffff00</mBgColor>
									<mSoundFile></mSoundFile>
									<colorTriggerFgColor>#000000</colorTriggerFgColor>
									<colorTriggerBgColor>#000000</colorTriggerBgColor>
									<regexCodeList>
										<string>^The eerie wail from (\w+)'s resonating bones dies down as (the )?\w+ manages to shrug off the glass limb effect.$</string>
									</regexCodeList>
									<regexCodePropertyList>
										<integer>1</integer>
									</regexCodePropertyList>
								</Trigger>
							</TriggerGroup>
							<TriggerGroup isActive="yes" isFolder="yes" isTempTrigger="no" isMultiline="no" isPerlSlashGOption="no" isColorizerTrigger="no" isFilterTrigger="no" isSoundTrigger="no" isColorTrigger="no" isColorTriggerFg="no" isColorTriggerBg="no">
								<name>Shapeshifter</name>
								<script></script>
								<triggerType>0</triggerType>
								<conditonLineDelta>0</conditonLineDelta>
								<mStayOpen>0</mStayOpen>
								<mCommand></mCommand>
								<packageName></packageName>
								<mFgColor>#ff0000</mFgColor>
								<mBgColor>#ffff00</mBgColor>
								<mSoundFile></mSoundFile>
								<colorTriggerFgColor>#000000</colorTriggerFgColor>
								<colorTriggerBgColor>#000000</colorTriggerBgColor>
								<regexCodeList />
								<regexCodePropertyList />
								<Trigger isActive="yes" isFolder="no" isTempTrigger="no" isMultiline="no" isPerlSlashGOption="no" isColorizerTrigger="no" isFilterTrigger="no" isSoundTrigger="no" isColorTrigger="no" isColorTriggerFg="no" isColorTriggerBg="no">
									<name>thigh lock</name>
									<script>if matches[2] == snd.target then
 snd.target_got("thighlock")
 snd.jawlocked = true
end</script>
									<triggerType>0</triggerType>
									<conditonLineDelta>0</conditonLineDelta>
									<mStayOpen>0</mStayOpen>
									<mCommand></mCommand>
									<packageName></packageName>
									<mFgColor>#ff0000</mFgColor>
									<mBgColor>#ffff00</mBgColor>
									<mSoundFile></mSoundFile>
									<colorTriggerFgColor>#000000</colorTriggerFgColor>
									<colorTriggerBgColor>#000000</colorTriggerBgColor>
									<regexCodeList>
										<string>^Seeing your prey helpless, you latch onto (\w+)('s|') inner thigh with your mighty jaws and pin (the )?\w+ to the ground\.$</string>
									</regexCodeList>
									<regexCodePropertyList>
										<integer>1</integer>
									</regexCodePropertyList>
								</Trigger>
								<Trigger isActive="yes" isFolder="no" isTempTrigger="no" isMultiline="no" isPerlSlashGOption="no" isColorizerTrigger="no" isFilterTrigger="no" isSoundTrigger="no" isColorTrigger="no" isColorTriggerFg="no" isColorTriggerBg="no">
									<name>3p thighlock</name>
									<script>if matches[4] == snd.target then
 snd.target_got("thighlock")
end</script>
									<triggerType>0</triggerType>
									<conditonLineDelta>0</conditonLineDelta>
									<mStayOpen>0</mStayOpen>
									<mCommand></mCommand>
									<packageName></packageName>
									<mFgColor>#ff0000</mFgColor>
									<mBgColor>#ffff00</mBgColor>
									<mSoundFile></mSoundFile>
									<colorTriggerFgColor>#000000</colorTriggerFgColor>
									<colorTriggerBgColor>#000000</colorTriggerBgColor>
									<regexCodeList>
										<string>^Seeing (the )?\w+ prey helpless, (the )?\w+ grabs the inner thigh of (\w+) within (the )?\w+ mighty jaws, pinning (the )?\w+ to the ground\.$</string>
									</regexCodeList>
									<regexCodePropertyList>
										<integer>1</integer>
									</regexCodePropertyList>
								</Trigger>
								<Trigger isActive="yes" isFolder="no" isTempTrigger="no" isMultiline="no" isPerlSlashGOption="no" isColorizerTrigger="no" isFilterTrigger="no" isSoundTrigger="no" isColorTrigger="no" isColorTriggerFg="no" isColorTriggerBg="no">
									<name>armpitlock</name>
									<script>if matches[2] == snd.target then
 snd.target_got("armpitlock")
 snd.jawlocked = true
end</script>
									<triggerType>0</triggerType>
									<conditonLineDelta>0</conditonLineDelta>
									<mStayOpen>0</mStayOpen>
									<mCommand></mCommand>
									<packageName></packageName>
									<mFgColor>#ff0000</mFgColor>
									<mBgColor>#ffff00</mBgColor>
									<mSoundFile></mSoundFile>
									<colorTriggerFgColor>#000000</colorTriggerFgColor>
									<colorTriggerBgColor>#000000</colorTriggerBgColor>
									<regexCodeList>
										<string>^Smelling weakness, you snap at the crook of (\w+)('s|') arm with your mighty jaws and pin (the )?\w+ to the ground\.$</string>
									</regexCodeList>
									<regexCodePropertyList>
										<integer>1</integer>
									</regexCodePropertyList>
								</Trigger>
								<Trigger isActive="yes" isFolder="no" isTempTrigger="no" isMultiline="no" isPerlSlashGOption="no" isColorizerTrigger="no" isFilterTrigger="no" isSoundTrigger="no" isColorTrigger="no" isColorTriggerFg="no" isColorTriggerBg="no">
									<name>groinrip</name>
									<script>if matches[2] == snd.target then
 snd.target_cured("thighlock")
 snd.jawlocked = false
 snd.target_got("groinrip")
end</script>
									<triggerType>0</triggerType>
									<conditonLineDelta>0</conditonLineDelta>
									<mStayOpen>0</mStayOpen>
									<mCommand></mCommand>
									<packageName></packageName>
									<mFgColor>#ff0000</mFgColor>
									<mBgColor>#ffff00</mBgColor>
									<mSoundFile></mSoundFile>
									<colorTriggerFgColor>#000000</colorTriggerFgColor>
									<colorTriggerBgColor>#000000</colorTriggerBgColor>
									<regexCodeList>
										<string>^Ruthlessly pinning (\w+) down, you tear at the tender, exposed muscles of (the )?\w+ groin, ripping out meaty chunks of flesh\.$</string>
									</regexCodeList>
									<regexCodePropertyList>
										<integer>1</integer>
									</regexCodePropertyList>
								</Trigger>
							</TriggerGroup>
							<TriggerGroup isActive="yes" isFolder="yes" isTempTrigger="no" isMultiline="no" isPerlSlashGOption="no" isColorizerTrigger="no" isFilterTrigger="no" isSoundTrigger="no" isColorTrigger="no" isColorTriggerFg="no" isColorTriggerBg="no">
								<name>Sentinel</name>
								<script></script>
								<triggerType>0</triggerType>
								<conditonLineDelta>0</conditonLineDelta>
								<mStayOpen>0</mStayOpen>
								<mCommand></mCommand>
								<packageName></packageName>
								<mFgColor>#ff0000</mFgColor>
								<mBgColor>#ffff00</mBgColor>
								<mSoundFile></mSoundFile>
								<colorTriggerFgColor>#000000</colorTriggerFgColor>
								<colorTriggerBgColor>#000000</colorTriggerBgColor>
								<regexCodeList />
								<regexCodePropertyList />
								<Trigger isActive="yes" isFolder="no" isTempTrigger="no" isMultiline="no" isPerlSlashGOption="no" isColorizerTrigger="no" isFilterTrigger="no" isSoundTrigger="no" isColorTrigger="no" isColorTriggerFg="no" isColorTriggerBg="no">
									<name>blind</name>
									<script>if matches[2] == snd.target then
 snd.target_got("sight")
end</script>
									<triggerType>0</triggerType>
									<conditonLineDelta>0</conditonLineDelta>
									<mStayOpen>0</mStayOpen>
									<mCommand></mCommand>
									<packageName></packageName>
									<mFgColor>#ff0000</mFgColor>
									<mBgColor>#ffff00</mBgColor>
									<mSoundFile></mSoundFile>
									<colorTriggerFgColor>#000000</colorTriggerFgColor>
									<colorTriggerBgColor>#000000</colorTriggerBgColor>
									<regexCodeList>
										<string>^(\w+) blinks \w+ eyes as (the )?\w+ vision is restored\.$</string>
									</regexCodeList>
									<regexCodePropertyList>
										<integer>1</integer>
									</regexCodePropertyList>
								</Trigger>
								<Trigger isActive="yes" isFolder="no" isTempTrigger="no" isMultiline="no" isPerlSlashGOption="no" isColorizerTrigger="no" isFilterTrigger="no" isSoundTrigger="no" isColorTrigger="no" isColorTriggerFg="no" isColorTriggerBg="no">
									<name>heartbreaker</name>
									<script>if matches[2] == snd.target then
 snd.target_got("heartflutter")
end</script>
									<triggerType>0</triggerType>
									<conditonLineDelta>0</conditonLineDelta>
									<mStayOpen>0</mStayOpen>
									<mCommand></mCommand>
									<packageName></packageName>
									<mFgColor>#ff0000</mFgColor>
									<mBgColor>#ffff00</mBgColor>
									<mSoundFile></mSoundFile>
									<colorTriggerFgColor>#000000</colorTriggerFgColor>
									<colorTriggerBgColor>#000000</colorTriggerBgColor>
									<regexCodeList>
										<string>^You step in, slamming the haft of your dhurive hard into (\w+)'s? chest\.$</string>
									</regexCodeList>
									<regexCodePropertyList>
										<integer>1</integer>
									</regexCodePropertyList>
								</Trigger>
								<Trigger isActive="yes" isFolder="no" isTempTrigger="no" isMultiline="no" isPerlSlashGOption="no" isColorizerTrigger="no" isFilterTrigger="no" isSoundTrigger="no" isColorTrigger="no" isColorTriggerFg="no" isColorTriggerBg="no">
									<name>daunt</name>
									<script>local daunt_affs = {
["bear"] = "claustrophobia",
["raloth"] = "agoraphobia",
["crocodile"] = "loneliness",
["cockatrice"] = "berserking",
}
if matches[3] == snd.target then
 snd.target_got(daunt_affs[matches[2]])
end</script>
									<triggerType>0</triggerType>
									<conditonLineDelta>0</conditonLineDelta>
									<mStayOpen>0</mStayOpen>
									<mCommand></mCommand>
									<packageName></packageName>
									<mFgColor>#ff0000</mFgColor>
									<mBgColor>#ffff00</mBgColor>
									<mSoundFile></mSoundFile>
									<colorTriggerFgColor>#000000</colorTriggerFgColor>
									<colorTriggerBgColor>#000000</colorTriggerBgColor>
									<regexCodeList>
										<string>^\w+ uses? \(Woodlore Daunt\) \((raloth|bear|crocodile|cockatrice)\) on (\w+)\.$</string>
									</regexCodeList>
									<regexCodePropertyList>
										<integer>1</integer>
									</regexCodePropertyList>
								</Trigger>
								<Trigger isActive="yes" isFolder="no" isTempTrigger="no" isMultiline="no" isPerlSlashGOption="no" isColorizerTrigger="no" isFilterTrigger="no" isSoundTrigger="no" isColorTrigger="no" isColorTriggerFg="no" isColorTriggerBg="no">
									<name>animal affs</name>
									<script>if matches[2] == snd.target then
 snd.target_got(matches[3])
end</script>
									<triggerType>0</triggerType>
									<conditonLineDelta>0</conditonLineDelta>
									<mStayOpen>0</mStayOpen>
									<mCommand></mCommand>
									<packageName></packageName>
									<mFgColor>#ff0000</mFgColor>
									<mBgColor>#ffff00</mBgColor>
									<mSoundFile></mSoundFile>
									<colorTriggerFgColor>#000000</colorTriggerFgColor>
									<colorTriggerBgColor>#000000</colorTriggerBgColor>
									<regexCodeList>
										<string>^Your \w+ has afflicted (\w+) with (\w+)\.</string>
									</regexCodeList>
									<regexCodePropertyList>
										<integer>1</integer>
									</regexCodePropertyList>
								</Trigger>
								<Trigger isActive="yes" isFolder="no" isTempTrigger="no" isMultiline="no" isPerlSlashGOption="no" isColorizerTrigger="no" isFilterTrigger="no" isSoundTrigger="no" isColorTrigger="no" isColorTriggerFg="no" isColorTriggerBg="no">
									<name>daunt affs</name>
									<script>local animal = string.lower(matches[4])
local daunt_list = {
	["bear"] = "claustrophobia",
	["raloth"] = "agoraphobia",
	["crocodile"] = "loneliness",
   ["cockatrice"] = "berserking",
}
if matches[5] == snd.target then
	snd.target_got(daunt_list[animal])
end</script>
									<triggerType>0</triggerType>
									<conditonLineDelta>0</conditonLineDelta>
									<mStayOpen>0</mStayOpen>
									<mCommand></mCommand>
									<packageName></packageName>
									<mFgColor>#ff0000</mFgColor>
									<mBgColor>#ffff00</mBgColor>
									<mSoundFile></mSoundFile>
									<colorTriggerFgColor>#000000</colorTriggerFgColor>
									<colorTriggerBgColor>#000000</colorTriggerBgColor>
									<regexCodeList>
										<string>^(\w+) uses? (Woodlore Daunt) \((raloth|bear|crocodile|cockatrice)\) on (\w+)\.$</string>
									</regexCodeList>
									<regexCodePropertyList>
										<integer>1</integer>
									</regexCodePropertyList>
								</Trigger>
								<Trigger isActive="yes" isFolder="no" isTempTrigger="no" isMultiline="no" isPerlSlashGOption="no" isColorizerTrigger="no" isFilterTrigger="no" isSoundTrigger="no" isColorTrigger="no" isColorTriggerFg="no" isColorTriggerBg="no">
									<name>Raloth Enter</name>
									<script>send("ent")
enableTrigger("Raloth_Capture")</script>
									<triggerType>0</triggerType>
									<conditonLineDelta>0</conditonLineDelta>
									<mStayOpen>0</mStayOpen>
									<mCommand></mCommand>
									<packageName></packageName>
									<mFgColor>#ff0000</mFgColor>
									<mBgColor>#ffff00</mBgColor>
									<mSoundFile></mSoundFile>
									<colorTriggerFgColor>#000000</colorTriggerFgColor>
									<colorTriggerBgColor>#000000</colorTriggerBgColor>
									<regexCodeList>
										<string>A baleful spiked raloth's immense form bounds towards you in a ground-shaking stride.</string>
									</regexCodeList>
									<regexCodePropertyList>
										<integer>3</integer>
									</regexCodePropertyList>
								</Trigger>
								<Trigger isActive="no" isFolder="no" isTempTrigger="no" isMultiline="no" isPerlSlashGOption="no" isColorizerTrigger="no" isFilterTrigger="no" isSoundTrigger="no" isColorTrigger="no" isColorTriggerFg="no" isColorTriggerBg="no">
									<name>Raloth_Capture</name>
									<script>snd.my_raloth = matches[2]
disableTrigger("Raloth_Capture")</script>
									<triggerType>0</triggerType>
									<conditonLineDelta>0</conditonLineDelta>
									<mStayOpen>0</mStayOpen>
									<mCommand></mCommand>
									<packageName></packageName>
									<mFgColor>#ff0000</mFgColor>
									<mBgColor>#ffff00</mBgColor>
									<mSoundFile></mSoundFile>
									<colorTriggerFgColor>#000000</colorTriggerFgColor>
									<colorTriggerBgColor>#000000</colorTriggerBgColor>
									<regexCodeList>
										<string>raloth\#(\d+)</string>
									</regexCodeList>
									<regexCodePropertyList>
										<integer>1</integer>
									</regexCodePropertyList>
								</Trigger>
								<Trigger isActive="yes" isFolder="no" isTempTrigger="no" isMultiline="no" isPerlSlashGOption="no" isColorizerTrigger="no" isFilterTrigger="no" isSoundTrigger="no" isColorTrigger="no" isColorTriggerFg="no" isColorTriggerBg="no">
									<name>Lysirine</name>
									<script>if matches[2] == snd.target then
	snd.last_affs = {}
	snd.target_got("paresis")
	snd.target_got("confusion")
	snd.target_got("hallucinations")
	table.insert(snd.last_affs, "hallucinations")
end</script>
									<triggerType>0</triggerType>
									<conditonLineDelta>0</conditonLineDelta>
									<mStayOpen>0</mStayOpen>
									<mCommand></mCommand>
									<packageName></packageName>
									<mFgColor>#ff0000</mFgColor>
									<mBgColor>#ffff00</mBgColor>
									<mSoundFile></mSoundFile>
									<colorTriggerFgColor>#000000</colorTriggerFgColor>
									<colorTriggerBgColor>#000000</colorTriggerBgColor>
									<regexCodeList>
										<string>^The superheated resin fumes swarm (\w+)'s senses and (the )?\w+ looks around dazed.$</string>
									</regexCodeList>
									<regexCodePropertyList>
										<integer>1</integer>
									</regexCodePropertyList>
								</Trigger>
								<Trigger isActive="yes" isFolder="no" isTempTrigger="no" isMultiline="no" isPerlSlashGOption="no" isColorizerTrigger="no" isFilterTrigger="no" isSoundTrigger="no" isColorTrigger="no" isColorTriggerFg="no" isColorTriggerBg="no">
									<name>Trientia Faintness</name>
									<script>if matches[2] == snd.target then
  if snd.checkAff("dizziness") then
	 snd.target_got("faintness")
	end
end</script>
									<triggerType>0</triggerType>
									<conditonLineDelta>0</conditonLineDelta>
									<mStayOpen>0</mStayOpen>
									<mCommand></mCommand>
									<packageName></packageName>
									<mFgColor>#ff0000</mFgColor>
									<mBgColor>#ffff00</mBgColor>
									<mSoundFile></mSoundFile>
									<colorTriggerFgColor>#000000</colorTriggerFgColor>
									<colorTriggerBgColor>#000000</colorTriggerBgColor>
									<regexCodeList>
										<string>^The resin upon (\w+) emits visible fumes that make (the )?\w+ recoil and cough.$</string>
									</regexCodeList>
									<regexCodePropertyList>
										<integer>1</integer>
									</regexCodePropertyList>
								</Trigger>
								<Trigger isActive="yes" isFolder="no" isTempTrigger="no" isMultiline="no" isPerlSlashGOption="no" isColorizerTrigger="no" isFilterTrigger="no" isSoundTrigger="no" isColorTrigger="no" isColorTriggerFg="no" isColorTriggerBg="no">
									<name>animal killed their limbs</name>
									<script>local basic_limb_affs = {
["left leg"] = "a broken left leg",
["right leg"] = "a broken right leg",
["left arm"] = "a broken left arm",
["right arm"] = "a broken right arm",
}

if matches[2] == snd.target then
 snd.target_got(basic_limb_affs[matches[3]])
end</script>
									<triggerType>0</triggerType>
									<conditonLineDelta>0</conditonLineDelta>
									<mStayOpen>0</mStayOpen>
									<mCommand></mCommand>
									<packageName></packageName>
									<mFgColor>#ff0000</mFgColor>
									<mBgColor>#ffff00</mBgColor>
									<mSoundFile></mSoundFile>
									<colorTriggerFgColor>#000000</colorTriggerFgColor>
									<colorTriggerBgColor>#000000</colorTriggerBgColor>
									<regexCodeList>
										<string>^(\w+)'s (.+) is crushed beneath the raloth's weight.$</string>
										<string>^Bellowing angrily, a bear spirit lumbers forward, latching onto (\w+)'s (.+) and mauling itsavagely.$</string>
									</regexCodeList>
									<regexCodePropertyList>
										<integer>1</integer>
										<integer>1</integer>
									</regexCodePropertyList>
								</Trigger>
							</TriggerGroup>
							<TriggerGroup isActive="yes" isFolder="yes" isTempTrigger="no" isMultiline="no" isPerlSlashGOption="no" isColorizerTrigger="no" isFilterTrigger="no" isSoundTrigger="no" isColorTrigger="no" isColorTriggerFg="no" isColorTriggerBg="no">
								<name>Misc</name>
								<script></script>
								<triggerType>0</triggerType>
								<conditonLineDelta>0</conditonLineDelta>
								<mStayOpen>0</mStayOpen>
								<mCommand></mCommand>
								<packageName></packageName>
								<mFgColor>#ff0000</mFgColor>
								<mBgColor>#ffff00</mBgColor>
								<mSoundFile></mSoundFile>
								<colorTriggerFgColor>#000000</colorTriggerFgColor>
								<colorTriggerBgColor>#000000</colorTriggerBgColor>
								<regexCodeList />
								<regexCodePropertyList />
								<Trigger isActive="yes" isFolder="no" isTempTrigger="no" isMultiline="no" isPerlSlashGOption="no" isColorizerTrigger="no" isFilterTrigger="no" isSoundTrigger="no" isColorTrigger="no" isColorTriggerFg="no" isColorTriggerBg="no">
									<name>battered</name>
									<script>snd.target_got(one)
snd.target_got(two)
snd.target_got(three)</script>
									<triggerType>0</triggerType>
									<conditonLineDelta>0</conditonLineDelta>
									<mStayOpen>0</mStayOpen>
									<mCommand></mCommand>
									<packageName></packageName>
									<mFgColor>#ff0000</mFgColor>
									<mBgColor>#ffff00</mBgColor>
									<mSoundFile></mSoundFile>
									<colorTriggerFgColor>#000000</colorTriggerFgColor>
									<colorTriggerBgColor>#000000</colorTriggerBgColor>
									<regexCodeList>
										<string>^You thrust out and batter (\w+)('s|') mind, making (the )?\w+ reel\.$</string>
									</regexCodeList>
									<regexCodePropertyList>
										<integer>1</integer>
									</regexCodePropertyList>
								</Trigger>
								<Trigger isActive="yes" isFolder="no" isTempTrigger="no" isMultiline="no" isPerlSlashGOption="no" isColorizerTrigger="no" isFilterTrigger="no" isSoundTrigger="no" isColorTrigger="no" isColorTriggerFg="no" isColorTriggerBg="no">
									<name>vinelash</name>
									<script>if matches[3] == snd.target and matches[2] ~= "loki" then
 for i in pairs(snd.effects) do
  if snd.effects[i] == matches[2] then
   snd.target_got(i)
  end
 end
end</script>
									<triggerType>0</triggerType>
									<conditonLineDelta>0</conditonLineDelta>
									<mStayOpen>0</mStayOpen>
									<mCommand></mCommand>
									<packageName></packageName>
									<mFgColor>#ff0000</mFgColor>
									<mBgColor>#ffff00</mBgColor>
									<mSoundFile></mSoundFile>
									<colorTriggerFgColor>#000000</colorTriggerFgColor>
									<colorTriggerBgColor>#000000</colorTriggerBgColor>
									<regexCodeList>
										<string>^\w+ uses? Vinelash Venom \((\w+)\) on (\w+)\.$</string>
									</regexCodeList>
									<regexCodePropertyList>
										<integer>1</integer>
									</regexCodePropertyList>
								</Trigger>
								<Trigger isActive="yes" isFolder="no" isTempTrigger="no" isMultiline="no" isPerlSlashGOption="no" isColorizerTrigger="no" isFilterTrigger="no" isSoundTrigger="no" isColorTrigger="no" isColorTriggerFg="no" isColorTriggerBg="no">
									<name>sight</name>
									<script>if matches[2] == snd.target then
 snd.target_got("sight")
end</script>
									<triggerType>0</triggerType>
									<conditonLineDelta>0</conditonLineDelta>
									<mStayOpen>0</mStayOpen>
									<mCommand></mCommand>
									<packageName></packageName>
									<mFgColor>#ff0000</mFgColor>
									<mBgColor>#ffff00</mBgColor>
									<mSoundFile></mSoundFile>
									<colorTriggerFgColor>#000000</colorTriggerFgColor>
									<colorTriggerBgColor>#000000</colorTriggerBgColor>
									<regexCodeList>
										<string>^\w+ stares fixedly at (\w+), and a ball of flame appears between them\. As the flame disappears, (the )?\w+ shakes (the )?\w+ head, no longer blind\.$</string>
										<string>^\w+ attempts to transfix (\w+) with fire and water, but succeeds only in curing (the )?\w+ blindness\.$</string>
										<string>^\w+ uses? \w+ Transfix \(blindness\) on (\w+)\.$</string>
									</regexCodeList>
									<regexCodePropertyList>
										<integer>1</integer>
										<integer>1</integer>
										<integer>0</integer>
									</regexCodePropertyList>
								</Trigger>
								<Trigger isActive="yes" isFolder="no" isTempTrigger="no" isMultiline="no" isPerlSlashGOption="no" isColorizerTrigger="no" isFilterTrigger="no" isSoundTrigger="no" isColorTrigger="no" isColorTriggerFg="no" isColorTriggerBg="no">
									<name>paralysis</name>
									<script>if matches[2] == snd.target then
 snd.target_cured("paresis")
 snd.target_got("paralysis")
end</script>
									<triggerType>0</triggerType>
									<conditonLineDelta>0</conditonLineDelta>
									<mStayOpen>0</mStayOpen>
									<mCommand></mCommand>
									<packageName></packageName>
									<mFgColor>#ff0000</mFgColor>
									<mBgColor>#ffff00</mBgColor>
									<mSoundFile></mSoundFile>
									<colorTriggerFgColor>#000000</colorTriggerFgColor>
									<colorTriggerBgColor>#000000</colorTriggerBgColor>
									<regexCodeList>
										<string>^(\w+) suddenly seizes up, (the )?\w+ entire body locked by paralysis\.$</string>
									</regexCodeList>
									<regexCodePropertyList>
										<integer>1</integer>
									</regexCodePropertyList>
								</Trigger>
								<Trigger isActive="yes" isFolder="no" isTempTrigger="no" isMultiline="no" isPerlSlashGOption="no" isColorizerTrigger="no" isFilterTrigger="no" isSoundTrigger="no" isColorTrigger="no" isColorTriggerFg="no" isColorTriggerBg="no">
									<name>Fury Shatter</name>
									<script>local aff = ""

if matches[1]:find("frenziedly") then aff = "dementia"
elseif matches[1]:find("unsure") then aff = "confusion"
elseif matches[1]:find("spin") then aff = "dizziness"
elseif matches[1]:find("glazed") then aff = "stupidity" 
end

if matches[2] == snd.target then
	snd.target_got(aff)
end</script>
									<triggerType>0</triggerType>
									<conditonLineDelta>0</conditonLineDelta>
									<mStayOpen>0</mStayOpen>
									<mCommand></mCommand>
									<packageName></packageName>
									<mFgColor>#ff0000</mFgColor>
									<mBgColor>#ffff00</mBgColor>
									<mSoundFile></mSoundFile>
									<colorTriggerFgColor>#000000</colorTriggerFgColor>
									<colorTriggerBgColor>#000000</colorTriggerBgColor>
									<regexCodeList>
										<string>^(\w+) stares about (the )?\w+ frenziedly, wild-eyed.$</string>
										<string>^(\w+) glances about (the )?\w+ with an unsure expression.$</string>
										<string>^A glazed look descends over the features of (\w+).$</string>
										<string>^(\w+)'s eyes spin wildly.$</string>
									</regexCodeList>
									<regexCodePropertyList>
										<integer>1</integer>
										<integer>1</integer>
										<integer>1</integer>
										<integer>1</integer>
									</regexCodePropertyList>
								</Trigger>
								<Trigger isActive="yes" isFolder="no" isTempTrigger="no" isMultiline="no" isPerlSlashGOption="no" isColorizerTrigger="no" isFilterTrigger="no" isSoundTrigger="no" isColorTrigger="no" isColorTriggerFg="no" isColorTriggerBg="no">
									<name>angel battle 1p</name>
									<script>if matches[2] == snd.target then  
	if matches[3] == "sensitivity" then
  	if snd.checkAff("hearing") then
  		snd.target_got("sensitivity")
  	else
  		snd.target_got("hearing")
  	end
  else
  		snd.target_got(matches[3])
  end
end</script>
									<triggerType>0</triggerType>
									<conditonLineDelta>0</conditonLineDelta>
									<mStayOpen>0</mStayOpen>
									<mCommand></mCommand>
									<packageName></packageName>
									<mFgColor>#ff0000</mFgColor>
									<mBgColor>#ffff00</mBgColor>
									<mSoundFile></mSoundFile>
									<colorTriggerFgColor>#000000</colorTriggerFgColor>
									<colorTriggerBgColor>#000000</colorTriggerBgColor>
									<regexCodeList>
										<string>^You ask your angel to afflict (\w+) with (.+) and it glares at (the )?\w+, tormenting (the )?\w+ soul\.$</string>
										<string>^You ask a guardian angel to afflict (\w+) with (.+) and it glares at (the )?\w+.$</string>
									</regexCodeList>
									<regexCodePropertyList>
										<integer>1</integer>
										<integer>1</integer>
									</regexCodePropertyList>
								</Trigger>
								<Trigger isActive="yes" isFolder="no" isTempTrigger="no" isMultiline="no" isPerlSlashGOption="no" isColorizerTrigger="no" isFilterTrigger="no" isSoundTrigger="no" isColorTrigger="no" isColorTriggerFg="no" isColorTriggerBg="no">
									<name>New trigger</name>
									<script></script>
									<triggerType>0</triggerType>
									<conditonLineDelta>0</conditonLineDelta>
									<mStayOpen>0</mStayOpen>
									<mCommand></mCommand>
									<packageName></packageName>
									<mFgColor>#ff0000</mFgColor>
									<mBgColor>#ffff00</mBgColor>
									<mSoundFile></mSoundFile>
									<colorTriggerFgColor>#000000</colorTriggerFgColor>
									<colorTriggerBgColor>#000000</colorTriggerBgColor>
									<regexCodeList>
										<string>^You use Fury Shatter (boost) on (\w+).$</string>
									</regexCodeList>
									<regexCodePropertyList>
										<integer>1</integer>
									</regexCodePropertyList>
								</Trigger>
							</TriggerGroup>
							<TriggerGroup isActive="yes" isFolder="yes" isTempTrigger="no" isMultiline="no" isPerlSlashGOption="no" isColorizerTrigger="no" isFilterTrigger="no" isSoundTrigger="no" isColorTrigger="no" isColorTriggerFg="no" isColorTriggerBg="no">
								<name>Syssin</name>
								<script></script>
								<triggerType>0</triggerType>
								<conditonLineDelta>0</conditonLineDelta>
								<mStayOpen>0</mStayOpen>
								<mCommand></mCommand>
								<packageName></packageName>
								<mFgColor>#ff0000</mFgColor>
								<mBgColor>#ffff00</mBgColor>
								<mSoundFile></mSoundFile>
								<colorTriggerFgColor>#000000</colorTriggerFgColor>
								<colorTriggerBgColor>#000000</colorTriggerBgColor>
								<regexCodeList />
								<regexCodePropertyList />
								<Trigger isActive="yes" isFolder="no" isTempTrigger="no" isMultiline="no" isPerlSlashGOption="no" isColorizerTrigger="no" isFilterTrigger="no" isSoundTrigger="no" isColorTrigger="no" isColorTriggerFg="no" isColorTriggerBg="no">
									<name>void</name>
									<script>snd.target_got("void")
tempTimer(3, [[snd.target_cured("void")]])</script>
									<triggerType>0</triggerType>
									<conditonLineDelta>0</conditonLineDelta>
									<mStayOpen>0</mStayOpen>
									<mCommand></mCommand>
									<packageName></packageName>
									<mFgColor>#ff0000</mFgColor>
									<mBgColor>#ffff00</mBgColor>
									<mSoundFile></mSoundFile>
									<colorTriggerFgColor>#000000</colorTriggerFgColor>
									<colorTriggerBgColor>#000000</colorTriggerBgColor>
									<regexCodeList>
										<string>^You order your shadow to surround (\w+) in a black void\.$</string>
										<string>Your target is already surrounded by a void.</string>
									</regexCodeList>
									<regexCodePropertyList>
										<integer>1</integer>
										<integer>3</integer>
									</regexCodePropertyList>
								</Trigger>
								<Trigger isActive="yes" isFolder="no" isTempTrigger="no" isMultiline="no" isPerlSlashGOption="no" isColorizerTrigger="no" isFilterTrigger="no" isSoundTrigger="no" isColorTrigger="no" isColorTriggerFg="no" isColorTriggerBg="no">
									<name>bite</name>
									<script>if matches[2] == snd.target then
 for i in pairs(snd.effects) do
  if snd.effects[i] == matches[3] then
   snd.target_got(i)
	end
 end
end</script>
									<triggerType>0</triggerType>
									<conditonLineDelta>0</conditonLineDelta>
									<mStayOpen>0</mStayOpen>
									<mCommand></mCommand>
									<packageName></packageName>
									<mFgColor>#ff0000</mFgColor>
									<mBgColor>#ffff00</mBgColor>
									<mSoundFile></mSoundFile>
									<colorTriggerFgColor>#000000</colorTriggerFgColor>
									<colorTriggerBgColor>#000000</colorTriggerBgColor>
									<regexCodeList>
										<string>^You sink .+ into (\w+), injecting (\w+) into (the )?\w+ veins\.$</string>
									</regexCodeList>
									<regexCodePropertyList>
										<integer>1</integer>
									</regexCodePropertyList>
								</Trigger>
								<Trigger isActive="yes" isFolder="no" isTempTrigger="no" isMultiline="yes" isPerlSlashGOption="no" isColorizerTrigger="no" isFilterTrigger="no" isSoundTrigger="no" isColorTrigger="no" isColorTriggerFg="no" isColorTriggerBg="no">
									<name>bedazzle</name>
									<script>if multimatches[1][2] == snd.target then
 snd.target_got(multimatches[5][2])
 snd.target_got(multimatches[7][2])
end</script>
									<triggerType>0</triggerType>
									<conditonLineDelta>4</conditonLineDelta>
									<mStayOpen>0</mStayOpen>
									<mCommand></mCommand>
									<packageName></packageName>
									<mFgColor>#ff0000</mFgColor>
									<mBgColor>#ffff00</mBgColor>
									<mSoundFile></mSoundFile>
									<colorTriggerFgColor>#000000</colorTriggerFgColor>
									<colorTriggerBgColor>#000000</colorTriggerBgColor>
									<regexCodeList>
										<string>^You use Subterfuge Bedazzle on (\w+)\.$</string>
										<string>1</string>
										<string>^You sprinkle some silvery powder over (\w+) and grin widely as (the )?\w+ looks about with a look of slight bafflement on (the )?\w+ face\.$</string>
										<string>1</string>
										<string>^You have afflicted with (.+)\.$</string>
										<string>1</string>
										<string>^You have afflicted with (.+)\.$</string>
									</regexCodeList>
									<regexCodePropertyList>
										<integer>1</integer>
										<integer>5</integer>
										<integer>1</integer>
										<integer>5</integer>
										<integer>1</integer>
										<integer>5</integer>
										<integer>1</integer>
									</regexCodePropertyList>
								</Trigger>
								<Trigger isActive="yes" isFolder="no" isTempTrigger="no" isMultiline="no" isPerlSlashGOption="no" isColorizerTrigger="no" isFilterTrigger="no" isSoundTrigger="no" isColorTrigger="no" isColorTriggerFg="no" isColorTriggerBg="no">
									<name>numbness</name>
									<script>snd.target_got("numbed_skin")</script>
									<triggerType>0</triggerType>
									<conditonLineDelta>0</conditonLineDelta>
									<mStayOpen>0</mStayOpen>
									<mCommand></mCommand>
									<packageName></packageName>
									<mFgColor>#ff0000</mFgColor>
									<mBgColor>#ffff00</mBgColor>
									<mSoundFile></mSoundFile>
									<colorTriggerFgColor>#000000</colorTriggerFgColor>
									<colorTriggerBgColor>#000000</colorTriggerBgColor>
									<regexCodeList>
										<string>^You smile in satisfaction as you coax the shadows to numb (\w+)'s? skin\.$</string>
									</regexCodeList>
									<regexCodePropertyList>
										<integer>1</integer>
									</regexCodePropertyList>
								</Trigger>
							</TriggerGroup>
							<TriggerGroup isActive="yes" isFolder="yes" isTempTrigger="no" isMultiline="no" isPerlSlashGOption="no" isColorizerTrigger="no" isFilterTrigger="no" isSoundTrigger="no" isColorTrigger="no" isColorTriggerFg="no" isColorTriggerBg="no">
								<name>Shaman</name>
								<script></script>
								<triggerType>0</triggerType>
								<conditonLineDelta>0</conditonLineDelta>
								<mStayOpen>0</mStayOpen>
								<mCommand></mCommand>
								<packageName></packageName>
								<mFgColor>#ff0000</mFgColor>
								<mBgColor>#ffff00</mBgColor>
								<mSoundFile></mSoundFile>
								<colorTriggerFgColor>#000000</colorTriggerFgColor>
								<colorTriggerBgColor>#000000</colorTriggerBgColor>
								<regexCodeList />
								<regexCodePropertyList />
								<Trigger isActive="yes" isFolder="no" isTempTrigger="no" isMultiline="no" isPerlSlashGOption="no" isColorizerTrigger="no" isFilterTrigger="no" isSoundTrigger="no" isColorTrigger="no" isColorTriggerFg="no" isColorTriggerBg="no">
									<name>Slam Prone</name>
									<script>if snd.target==multimatches[1][2] then
	snd.target_prone = true
end</script>
									<triggerType>0</triggerType>
									<conditonLineDelta>0</conditonLineDelta>
									<mStayOpen>0</mStayOpen>
									<mCommand></mCommand>
									<packageName></packageName>
									<mFgColor>#ff0000</mFgColor>
									<mBgColor>#ffff00</mBgColor>
									<mSoundFile></mSoundFile>
									<colorTriggerFgColor>#000000</colorTriggerFgColor>
									<colorTriggerBgColor>#000000</colorTriggerBgColor>
									<regexCodeList>
										<string>^\w+ uses Primality Slam on (\w+).$</string>
										<string>^The frenzied air reaches its peak of intensity and slams into (\w+) with a ferocity that knocks (the )?\w+ to the ground\.$</string>
									</regexCodeList>
									<regexCodePropertyList>
										<integer>1</integer>
										<integer>1</integer>
									</regexCodePropertyList>
								</Trigger>
								<Trigger isActive="yes" isFolder="no" isTempTrigger="no" isMultiline="no" isPerlSlashGOption="no" isColorizerTrigger="no" isFilterTrigger="no" isSoundTrigger="no" isColorTrigger="no" isColorTriggerFg="no" isColorTriggerBg="no">
									<name>infested</name>
									<script>if matches[2] == snd.target then
	snd.target_got("infested")
end</script>
									<triggerType>0</triggerType>
									<conditonLineDelta>0</conditonLineDelta>
									<mStayOpen>0</mStayOpen>
									<mCommand></mCommand>
									<packageName></packageName>
									<mFgColor>#ff0000</mFgColor>
									<mBgColor>#ffff00</mBgColor>
									<mSoundFile></mSoundFile>
									<colorTriggerFgColor>#000000</colorTriggerFgColor>
									<colorTriggerBgColor>#000000</colorTriggerBgColor>
									<regexCodeList>
										<string>^\w+ uses? Primality Infest on (\w+)\.$</string>
										<string>^(\w+)'s skin twitches and shifts, then suddenly erupts into a horrifying mass of squirming larvae.$</string>
									</regexCodeList>
									<regexCodePropertyList>
										<integer>1</integer>
										<integer>1</integer>
									</regexCodePropertyList>
								</Trigger>
								<Trigger isActive="yes" isFolder="no" isTempTrigger="no" isMultiline="no" isPerlSlashGOption="no" isColorizerTrigger="no" isFilterTrigger="no" isSoundTrigger="no" isColorTrigger="no" isColorTriggerFg="no" isColorTriggerBg="no">
									<name>Effusion enemy</name>
									<script>if matches[3] == snd.target then
	snd.target_got("sight")
	snd.target_got("hearing")
	snd.target_got("sensitivity")
end</script>
									<triggerType>0</triggerType>
									<conditonLineDelta>0</conditonLineDelta>
									<mStayOpen>0</mStayOpen>
									<mCommand></mCommand>
									<packageName></packageName>
									<mFgColor>#ff0000</mFgColor>
									<mBgColor>#ffff00</mBgColor>
									<mSoundFile></mSoundFile>
									<colorTriggerFgColor>#000000</colorTriggerFgColor>
									<colorTriggerBgColor>#000000</colorTriggerBgColor>
									<regexCodeList>
										<string>^\w+ uses? Primality Effusion( Boosted)? \(enemy\) on (\w+)\.$</string>
									</regexCodeList>
									<regexCodePropertyList>
										<integer>1</integer>
									</regexCodePropertyList>
								</Trigger>
								<Trigger isActive="yes" isFolder="no" isTempTrigger="no" isMultiline="no" isPerlSlashGOption="no" isColorizerTrigger="no" isFilterTrigger="no" isSoundTrigger="no" isColorTrigger="no" isColorTriggerFg="no" isColorTriggerBg="no">
									<name>Overload</name>
									<script>if matches[4] == snd.target then
	snd.target_got("stupidity")
	snd.target_got("paresis")
end</script>
									<triggerType>0</triggerType>
									<conditonLineDelta>0</conditonLineDelta>
									<mStayOpen>0</mStayOpen>
									<mCommand></mCommand>
									<packageName></packageName>
									<mFgColor>#ff0000</mFgColor>
									<mBgColor>#ffff00</mBgColor>
									<mSoundFile></mSoundFile>
									<colorTriggerFgColor>#000000</colorTriggerFgColor>
									<colorTriggerBgColor>#000000</colorTriggerBgColor>
									<regexCodeList>
										<string>^(\w+) uses? (Primality Overload) on (\w+)\.$</string>
										<string>^(\w+) uses? (Primality Overload Boosted) on (\w+)\.$</string>
									</regexCodeList>
									<regexCodePropertyList>
										<integer>1</integer>
										<integer>1</integer>
									</regexCodePropertyList>
								</Trigger>
								<Trigger isActive="yes" isFolder="no" isTempTrigger="no" isMultiline="no" isPerlSlashGOption="no" isColorizerTrigger="no" isFilterTrigger="no" isSoundTrigger="no" isColorTrigger="no" isColorTriggerFg="no" isColorTriggerBg="no">
									<name>blight</name>
									<script>if matches[2] == snd.target then
	snd.target_got("blighted")
end</script>
									<triggerType>0</triggerType>
									<conditonLineDelta>0</conditonLineDelta>
									<mStayOpen>0</mStayOpen>
									<mCommand></mCommand>
									<packageName></packageName>
									<mFgColor>#ff0000</mFgColor>
									<mBgColor>#ffff00</mBgColor>
									<mSoundFile></mSoundFile>
									<colorTriggerFgColor>#000000</colorTriggerFgColor>
									<colorTriggerBgColor>#000000</colorTriggerBgColor>
									<regexCodeList>
										<string>^\w+ uses? Primality Spines on (\w+)\.$</string>
										<string>^The seething mass of vines encircling (\w+) constricts, their barbs sinking deep into (the )?\w+ skin\.$</string>
									</regexCodeList>
									<regexCodePropertyList>
										<integer>1</integer>
										<integer>1</integer>
									</regexCodePropertyList>
								</Trigger>
								<Trigger isActive="yes" isFolder="no" isTempTrigger="no" isMultiline="no" isPerlSlashGOption="no" isColorizerTrigger="no" isFilterTrigger="no" isSoundTrigger="no" isColorTrigger="no" isColorTriggerFg="no" isColorTriggerBg="no">
									<name>sporulation</name>
									<script>if matches[4] == snd.target then
	snd.target_got("confusion")
	snd.target_got("impatience")
end</script>
									<triggerType>0</triggerType>
									<conditonLineDelta>0</conditonLineDelta>
									<mStayOpen>0</mStayOpen>
									<mCommand></mCommand>
									<packageName></packageName>
									<mFgColor>#ff0000</mFgColor>
									<mBgColor>#ffff00</mBgColor>
									<mSoundFile></mSoundFile>
									<colorTriggerFgColor>#000000</colorTriggerFgColor>
									<colorTriggerBgColor>#000000</colorTriggerBgColor>
									<regexCodeList>
										<string>^(\w+) uses? (Primality Sporulation) on (\w+)\.$</string>
										<string>^(\w+) uses? (Primality Sporulation Boosted) on (\w+)\.$</string>
									</regexCodeList>
									<regexCodePropertyList>
										<integer>1</integer>
										<integer>1</integer>
									</regexCodePropertyList>
								</Trigger>
								<Trigger isActive="yes" isFolder="no" isTempTrigger="no" isMultiline="no" isPerlSlashGOption="no" isColorizerTrigger="no" isFilterTrigger="no" isSoundTrigger="no" isColorTrigger="no" isColorTriggerFg="no" isColorTriggerBg="no">
									<name>vinelash w/venom called</name>
									<script>if #snd.maybe_affs &gt;= 1 and (matches[5] == snd.target) then
	 local aff = ""
	 aff = snd.venomEffect(snd.maybe_affs[1])
   if aff ~= "" then
    snd.target_got(aff)
    table.remove(snd.maybe_affs, 1)
		table.insert(snd.last_affs, aff)
   end
end
</script>
									<triggerType>0</triggerType>
									<conditonLineDelta>0</conditonLineDelta>
									<mStayOpen>0</mStayOpen>
									<mCommand></mCommand>
									<packageName></packageName>
									<mFgColor>#ff0000</mFgColor>
									<mBgColor>#ffff00</mBgColor>
									<mSoundFile></mSoundFile>
									<colorTriggerFgColor>#000000</colorTriggerFgColor>
									<colorTriggerBgColor>#000000</colorTriggerBgColor>
									<regexCodeList>
										<string>^(\w+) uses? (Primality Vinelash)( \(boosted\))? on (\w+)\.$</string>
									</regexCodeList>
									<regexCodePropertyList>
										<integer>1</integer>
									</regexCodePropertyList>
								</Trigger>
								<Trigger isActive="yes" isFolder="no" isTempTrigger="no" isMultiline="no" isPerlSlashGOption="no" isColorizerTrigger="no" isFilterTrigger="no" isSoundTrigger="no" isColorTrigger="no" isColorTriggerFg="no" isColorTriggerBg="no">
									<name>Stormtouched on</name>
									<script>if matches[2] == snd.target then
	snd.target_got("stormtouched")
end</script>
									<triggerType>0</triggerType>
									<conditonLineDelta>0</conditonLineDelta>
									<mStayOpen>0</mStayOpen>
									<mCommand></mCommand>
									<packageName></packageName>
									<mFgColor>#ff0000</mFgColor>
									<mBgColor>#ffff00</mBgColor>
									<mSoundFile></mSoundFile>
									<colorTriggerFgColor>#000000</colorTriggerFgColor>
									<colorTriggerBgColor>#000000</colorTriggerBgColor>
									<regexCodeList>
										<string>^The static around (\w+) sparks with light, seemingly more alive.$</string>
									</regexCodeList>
									<regexCodePropertyList>
										<integer>1</integer>
									</regexCodePropertyList>
								</Trigger>
								<Trigger isActive="yes" isFolder="no" isTempTrigger="no" isMultiline="no" isPerlSlashGOption="no" isColorizerTrigger="no" isFilterTrigger="no" isSoundTrigger="no" isColorTrigger="no" isColorTriggerFg="no" isColorTriggerBg="no">
									<name>Stormtouched off</name>
									<script>snd.target_cured("stormtouched")</script>
									<triggerType>0</triggerType>
									<conditonLineDelta>0</conditonLineDelta>
									<mStayOpen>0</mStayOpen>
									<mCommand></mCommand>
									<packageName></packageName>
									<mFgColor>#ff0000</mFgColor>
									<mBgColor>#ffff00</mBgColor>
									<mSoundFile></mSoundFile>
									<colorTriggerFgColor>#000000</colorTriggerFgColor>
									<colorTriggerBgColor>#000000</colorTriggerBgColor>
									<regexCodeList>
										<string>^The static surrounding (\w+) and .+ feather fetish dissipates\.$</string>
									</regexCodeList>
									<regexCodePropertyList>
										<integer>1</integer>
									</regexCodePropertyList>
								</Trigger>
								<Trigger isActive="yes" isFolder="no" isTempTrigger="no" isMultiline="no" isPerlSlashGOption="no" isColorizerTrigger="no" isFilterTrigger="no" isSoundTrigger="no" isColorTrigger="no" isColorTriggerFg="no" isColorTriggerBg="no">
									<name>strangle</name>
									<script>if matches[4] == snd.target then
	if not snd.checkAff("vines") then 
		snd.target_got("vines")
	end
end</script>
									<triggerType>0</triggerType>
									<conditonLineDelta>0</conditonLineDelta>
									<mStayOpen>0</mStayOpen>
									<mCommand></mCommand>
									<packageName></packageName>
									<mFgColor>#ff0000</mFgColor>
									<mBgColor>#ffff00</mBgColor>
									<mSoundFile></mSoundFile>
									<colorTriggerFgColor>#000000</colorTriggerFgColor>
									<colorTriggerBgColor>#000000</colorTriggerBgColor>
									<regexCodeList>
										<string>^(\w+) uses? (Primality Strangle) on (\w+)\.$</string>
									</regexCodeList>
									<regexCodePropertyList>
										<integer>1</integer>
									</regexCodePropertyList>
								</Trigger>
								<Trigger isActive="no" isFolder="no" isTempTrigger="no" isMultiline="no" isPerlSlashGOption="no" isColorizerTrigger="no" isFilterTrigger="no" isSoundTrigger="no" isColorTrigger="no" isColorTriggerFg="no" isColorTriggerBg="no">
									<name>Thorns_off</name>
									<script></script>
									<triggerType>0</triggerType>
									<conditonLineDelta>0</conditonLineDelta>
									<mStayOpen>0</mStayOpen>
									<mCommand></mCommand>
									<packageName></packageName>
									<mFgColor>#ff0000</mFgColor>
									<mBgColor>#ffff00</mBgColor>
									<mSoundFile></mSoundFile>
									<colorTriggerFgColor>#000000</colorTriggerFgColor>
									<colorTriggerBgColor>#000000</colorTriggerBgColor>
									<regexCodeList>
										<string>^(\w+) quickly plucks off a cluster of thorns embedded in (the )?\w+ and tosses them aside.$</string>
									</regexCodeList>
									<regexCodePropertyList>
										<integer>1</integer>
									</regexCodePropertyList>
								</Trigger>
								<Trigger isActive="no" isFolder="no" isTempTrigger="no" isMultiline="no" isPerlSlashGOption="no" isColorizerTrigger="no" isFilterTrigger="no" isSoundTrigger="no" isColorTrigger="no" isColorTriggerFg="no" isColorTriggerBg="no">
									<name>Thorns_on</name>
									<script></script>
									<triggerType>0</triggerType>
									<conditonLineDelta>0</conditonLineDelta>
									<mStayOpen>0</mStayOpen>
									<mCommand></mCommand>
									<packageName></packageName>
									<mFgColor>#ff0000</mFgColor>
									<mBgColor>#ffff00</mBgColor>
									<mSoundFile></mSoundFile>
									<colorTriggerFgColor>#000000</colorTriggerFgColor>
									<colorTriggerBgColor>#000000</colorTriggerBgColor>
									<regexCodeList>
										<string>^A multitude of thorns break off from the vine, remaining hooked in (\w+)'s skin.$</string>
									</regexCodeList>
									<regexCodePropertyList>
										<integer>1</integer>
									</regexCodePropertyList>
								</Trigger>
								<Trigger isActive="yes" isFolder="no" isTempTrigger="no" isMultiline="no" isPerlSlashGOption="no" isColorizerTrigger="no" isFilterTrigger="no" isSoundTrigger="no" isColorTrigger="no" isColorTriggerFg="no" isColorTriggerBg="no">
									<name>Static energy afflict</name>
									<script>if matches[2] == snd.target then
	local aff = matches[3]
	if aff == "lovers effect" then
		snd.target_got("lovers_effect")
	else
		snd.target_got(matches[3])
	end	
end</script>
									<triggerType>0</triggerType>
									<conditonLineDelta>0</conditonLineDelta>
									<mStayOpen>0</mStayOpen>
									<mCommand></mCommand>
									<packageName></packageName>
									<mFgColor>#ff0000</mFgColor>
									<mBgColor>#ffff00</mBgColor>
									<mSoundFile></mSoundFile>
									<colorTriggerFgColor>#000000</colorTriggerFgColor>
									<colorTriggerBgColor>#000000</colorTriggerBgColor>
									<regexCodeList>
										<string>^Your jolts of static energy have disrupted (\w+)'s mental state with (.*).$</string>
									</regexCodeList>
									<regexCodePropertyList>
										<integer>1</integer>
									</regexCodePropertyList>
								</Trigger>
								<Trigger isActive="no" isFolder="no" isTempTrigger="no" isMultiline="no" isPerlSlashGOption="no" isColorizerTrigger="no" isFilterTrigger="no" isSoundTrigger="no" isColorTrigger="no" isColorTriggerFg="no" isColorTriggerBg="no">
									<name>Stopped reclaim</name>
									<script>snd.toggles.active = true

-- In case we ever code in turning off on reclaim, but I doubt we will. Probably can get rid of this line.</script>
									<triggerType>0</triggerType>
									<conditonLineDelta>0</conditonLineDelta>
									<mStayOpen>0</mStayOpen>
									<mCommand></mCommand>
									<packageName></packageName>
									<mFgColor>#ff0000</mFgColor>
									<mBgColor>#ffff00</mBgColor>
									<mSoundFile></mSoundFile>
									<colorTriggerFgColor>#000000</colorTriggerFgColor>
									<colorTriggerBgColor>#000000</colorTriggerBgColor>
									<regexCodeList>
										<string>^As your concentration on (\w+) faulters, the vines lose their hold and retract from (the )?\w+ body to leave (the )?\w+ very much alive, if bloodied and host to several gaping wounds that spurt blood in time to (the )?\w+ heart beat.$</string>
									</regexCodeList>
									<regexCodePropertyList>
										<integer>1</integer>
									</regexCodePropertyList>
								</Trigger>
								<Trigger isActive="yes" isFolder="no" isTempTrigger="no" isMultiline="no" isPerlSlashGOption="no" isColorizerTrigger="no" isFilterTrigger="no" isSoundTrigger="no" isColorTrigger="no" isColorTriggerFg="no" isColorTriggerBg="no">
									<name>Scourge</name>
									<script>if matches[5] == snd.target then
	if matches[4] ~= "" then
		snd.target_got("idiocy")
	end
	snd.target_got("vitalbane")
end</script>
									<triggerType>0</triggerType>
									<conditonLineDelta>0</conditonLineDelta>
									<mStayOpen>0</mStayOpen>
									<mCommand></mCommand>
									<packageName></packageName>
									<mFgColor>#ff0000</mFgColor>
									<mBgColor>#ffff00</mBgColor>
									<mSoundFile></mSoundFile>
									<colorTriggerFgColor>#000000</colorTriggerFgColor>
									<colorTriggerBgColor>#000000</colorTriggerBgColor>
									<regexCodeList>
										<string>^(\w+) uses? (Primality Scourge)( Boosted)? on (\w+)\.$</string>
									</regexCodeList>
									<regexCodePropertyList>
										<integer>1</integer>
									</regexCodePropertyList>
								</Trigger>
								<Trigger isActive="yes" isFolder="no" isTempTrigger="no" isMultiline="no" isPerlSlashGOption="no" isColorizerTrigger="no" isFilterTrigger="no" isSoundTrigger="no" isColorTrigger="no" isColorTriggerFg="no" isColorTriggerBg="no">
									<name>Vitiate</name>
									<script>if matches[5] == snd.target then
	if matches[4] ~= "" then
		snd.target_got("plodding")
	end
	snd.target_got("lifebane")
	if lifebane_timer then killTimer(lifebane_timer) end
	lifebane_timer = tempTimer(40,[[snd.target_cured("lifebane")]])
end</script>
									<triggerType>0</triggerType>
									<conditonLineDelta>0</conditonLineDelta>
									<mStayOpen>0</mStayOpen>
									<mCommand></mCommand>
									<packageName></packageName>
									<mFgColor>#ff0000</mFgColor>
									<mBgColor>#ffff00</mBgColor>
									<mSoundFile></mSoundFile>
									<colorTriggerFgColor>#000000</colorTriggerFgColor>
									<colorTriggerBgColor>#000000</colorTriggerBgColor>
									<regexCodeList>
										<string>^(\w+) uses? (Primality Vitiate)( Boosted)? on (\w+)\.$</string>
									</regexCodeList>
									<regexCodePropertyList>
										<integer>1</integer>
									</regexCodePropertyList>
								</Trigger>
								<Trigger isActive="yes" isFolder="no" isTempTrigger="no" isMultiline="no" isPerlSlashGOption="no" isColorizerTrigger="no" isFilterTrigger="no" isSoundTrigger="no" isColorTrigger="no" isColorTriggerFg="no" isColorTriggerBg="no">
									<name>premonition</name>
									<script>if matches[2] == snd.target then
	snd.target_got("premonition")
end</script>
									<triggerType>0</triggerType>
									<conditonLineDelta>0</conditonLineDelta>
									<mStayOpen>0</mStayOpen>
									<mCommand></mCommand>
									<packageName></packageName>
									<mFgColor>#ff0000</mFgColor>
									<mBgColor>#ffff00</mBgColor>
									<mSoundFile></mSoundFile>
									<colorTriggerFgColor>#000000</colorTriggerFgColor>
									<colorTriggerBgColor>#000000</colorTriggerBgColor>
									<regexCodeList>
										<string>^You snap your fingers in front of (\w+), (the )?\w+ attention focusing briefly upon you. In that brief moment, you instill a fearful premonition in (the )?\w+ mind.$</string>
										<string>^\w+ snaps .* fingers in front of (\w+), forcing (the )?\w+ attention upon (the )?\w+. (the )?\w+'s eyes widen, a hazy red glow briefly crossing (the )?\w+ features\.$</string>
									</regexCodeList>
									<regexCodePropertyList>
										<integer>1</integer>
										<integer>1</integer>
									</regexCodePropertyList>
								</Trigger>
								<Trigger isActive="yes" isFolder="no" isTempTrigger="no" isMultiline="no" isPerlSlashGOption="no" isColorizerTrigger="no" isFilterTrigger="no" isSoundTrigger="no" isColorTrigger="no" isColorTriggerFg="no" isColorTriggerBg="no">
									<name>Discern spiritsight venom</name>
									<script>if matches[2] == snd.target then
	if snd.toggles.atkecho then
 		deleteLine()
 		snd.message("Gave: "..matches[3])
	end
	snd.last_affs = {}
	local aff = snd.venomEffect(matches[3])
	snd.target_got(aff)
	table.insert(snd.last_affs, aff)
end
</script>
									<triggerType>0</triggerType>
									<conditonLineDelta>0</conditonLineDelta>
									<mStayOpen>0</mStayOpen>
									<mCommand></mCommand>
									<packageName></packageName>
									<mFgColor>#ff0000</mFgColor>
									<mBgColor>#ffff00</mBgColor>
									<mSoundFile></mSoundFile>
									<colorTriggerFgColor>#000000</colorTriggerFgColor>
									<colorTriggerBgColor>#000000</colorTriggerBgColor>
									<regexCodeList>
										<string>^You discern that (\w+) has been afflicted by the (.*) venom.$</string>
									</regexCodeList>
									<regexCodePropertyList>
										<integer>1</integer>
									</regexCodePropertyList>
								</Trigger>
								<Trigger isActive="yes" isFolder="no" isTempTrigger="no" isMultiline="no" isPerlSlashGOption="no" isColorizerTrigger="no" isFilterTrigger="no" isSoundTrigger="no" isColorTrigger="no" isColorTriggerFg="no" isColorTriggerBg="no">
									<name>Stormbolt Up</name>
									<script>if matches[2] == snd.target then
 snd.stormcloud = true
 snd.message(matches[2].." has a stormbolt cloud!", "dendara")
end</script>
									<triggerType>0</triggerType>
									<conditonLineDelta>0</conditonLineDelta>
									<mStayOpen>0</mStayOpen>
									<mCommand></mCommand>
									<packageName></packageName>
									<mFgColor>#ff0000</mFgColor>
									<mBgColor>#ffff00</mBgColor>
									<mSoundFile></mSoundFile>
									<colorTriggerFgColor>#000000</colorTriggerFgColor>
									<colorTriggerBgColor>#000000</colorTriggerBgColor>
									<regexCodeList>
										<string>^\w+ use Primality Stormbolt Boosted on (\w+)\.$</string>
									</regexCodeList>
									<regexCodePropertyList>
										<integer>1</integer>
									</regexCodePropertyList>
								</Trigger>
								<Trigger isActive="yes" isFolder="no" isTempTrigger="no" isMultiline="no" isPerlSlashGOption="no" isColorizerTrigger="no" isFilterTrigger="no" isSoundTrigger="no" isColorTrigger="no" isColorTriggerFg="no" isColorTriggerBg="no">
									<name>Stormbolt Down</name>
									<script>if matches[2] == snd.target then
 snd.stormcloud = false
 snd.message(matches[2].." has lost their stormbolt cloud!", "dendara")
end</script>
									<triggerType>0</triggerType>
									<conditonLineDelta>0</conditonLineDelta>
									<mStayOpen>0</mStayOpen>
									<mCommand></mCommand>
									<packageName></packageName>
									<mFgColor>#ff0000</mFgColor>
									<mBgColor>#ffff00</mBgColor>
									<mSoundFile></mSoundFile>
									<colorTriggerFgColor>#000000</colorTriggerFgColor>
									<colorTriggerBgColor>#000000</colorTriggerBgColor>
									<regexCodeList>
										<string>^The skies around (\w+)\ clear as the thunderstorm dissipates.$</string>
									</regexCodeList>
									<regexCodePropertyList>
										<integer>1</integer>
									</regexCodePropertyList>
								</Trigger>
								<Trigger isActive="yes" isFolder="no" isTempTrigger="no" isMultiline="no" isPerlSlashGOption="no" isColorizerTrigger="no" isFilterTrigger="no" isSoundTrigger="no" isColorTrigger="no" isColorTriggerFg="no" isColorTriggerBg="no">
									<name>Omen Up</name>
									<script>if matches[2] == snd.target then
 snd.incomingomen = true
 snd.message(matches[2].." has an omen incoming in 6 seconds!", "dendara")
end</script>
									<triggerType>0</triggerType>
									<conditonLineDelta>0</conditonLineDelta>
									<mStayOpen>0</mStayOpen>
									<mCommand></mCommand>
									<packageName></packageName>
									<mFgColor>#ff0000</mFgColor>
									<mBgColor>#ffff00</mBgColor>
									<mSoundFile></mSoundFile>
									<colorTriggerFgColor>#000000</colorTriggerFgColor>
									<colorTriggerBgColor>#000000</colorTriggerBgColor>
									<regexCodeList>
										<string>^\w+ use Shamanism Omen on (\w+)\.$</string>
									</regexCodeList>
									<regexCodePropertyList>
										<integer>1</integer>
									</regexCodePropertyList>
								</Trigger>
								<Trigger isActive="yes" isFolder="no" isTempTrigger="no" isMultiline="no" isPerlSlashGOption="no" isColorizerTrigger="no" isFilterTrigger="no" isSoundTrigger="no" isColorTrigger="no" isColorTriggerFg="no" isColorTriggerBg="no">
									<name>Omen Down</name>
									<script>if matches[2] == snd.target then
 snd.incomingomen = false
 snd.message(matches[3].." has been struck by omen!", "dendara")
end</script>
									<triggerType>0</triggerType>
									<conditonLineDelta>0</conditonLineDelta>
									<mStayOpen>0</mStayOpen>
									<mCommand></mCommand>
									<packageName></packageName>
									<mFgColor>#ff0000</mFgColor>
									<mBgColor>#ffff00</mBgColor>
									<mSoundFile></mSoundFile>
									<colorTriggerFgColor>#000000</colorTriggerFgColor>
									<colorTriggerBgColor>#000000</colorTriggerBgColor>
									<regexCodeList>
										<string>^Your omen falls (.*) on  (\w+)\.$</string>
									</regexCodeList>
									<regexCodePropertyList>
										<integer>1</integer>
									</regexCodePropertyList>
								</Trigger>
							</TriggerGroup>
							<TriggerGroup isActive="yes" isFolder="yes" isTempTrigger="no" isMultiline="no" isPerlSlashGOption="no" isColorizerTrigger="no" isFilterTrigger="no" isSoundTrigger="no" isColorTrigger="no" isColorTriggerFg="no" isColorTriggerBg="no">
								<name>Archivist</name>
								<script></script>
								<triggerType>0</triggerType>
								<conditonLineDelta>0</conditonLineDelta>
								<mStayOpen>0</mStayOpen>
								<mCommand></mCommand>
								<packageName></packageName>
								<mFgColor>#ff0000</mFgColor>
								<mBgColor>#ffff00</mBgColor>
								<mSoundFile></mSoundFile>
								<colorTriggerFgColor>#000000</colorTriggerFgColor>
								<colorTriggerBgColor>#000000</colorTriggerBgColor>
								<regexCodeList />
								<regexCodePropertyList />
								<TriggerGroup isActive="yes" isFolder="yes" isTempTrigger="no" isMultiline="no" isPerlSlashGOption="no" isColorizerTrigger="no" isFilterTrigger="no" isSoundTrigger="no" isColorTrigger="no" isColorTriggerFg="no" isColorTriggerBg="no">
									<name>Mutagens</name>
									<script></script>
									<triggerType>0</triggerType>
									<conditonLineDelta>0</conditonLineDelta>
									<mStayOpen>0</mStayOpen>
									<mCommand></mCommand>
									<packageName></packageName>
									<mFgColor>#ff0000</mFgColor>
									<mBgColor>#ffff00</mBgColor>
									<mSoundFile></mSoundFile>
									<colorTriggerFgColor>#000000</colorTriggerFgColor>
									<colorTriggerBgColor>#000000</colorTriggerBgColor>
									<regexCodeList />
									<regexCodePropertyList />
									<Trigger isActive="yes" isFolder="no" isTempTrigger="no" isMultiline="no" isPerlSlashGOption="no" isColorizerTrigger="no" isFilterTrigger="no" isSoundTrigger="no" isColorTrigger="no" isColorTriggerFg="no" isColorTriggerBg="no">
										<name>Allergies from mutagen</name>
										<script>if matches[2] == snd.target then
 snd.target_got("allergies")
end</script>
										<triggerType>0</triggerType>
										<conditonLineDelta>0</conditonLineDelta>
										<mStayOpen>0</mStayOpen>
										<mCommand></mCommand>
										<packageName></packageName>
										<mFgColor>#ff0000</mFgColor>
										<mBgColor>#ffff00</mBgColor>
										<mSoundFile></mSoundFile>
										<colorTriggerFgColor>#000000</colorTriggerFgColor>
										<colorTriggerBgColor>#000000</colorTriggerBgColor>
										<regexCodeList>
											<string>^Skin flushing a deep red, (\w+) looks upon (the )?\w+ in disbelief.$</string>
											<string>^(\w+) cringes as a dark red rash spreads painfully across (the )?\w+ skin.$</string>
											<string>^(\w+) wheezes loudly as (the )?\w+ body weakens under the stress, most of (the )?\w+ skin now dark red.$</string>
										</regexCodeList>
										<regexCodePropertyList>
											<integer>1</integer>
											<integer>1</integer>
											<integer>1</integer>
										</regexCodePropertyList>
									</Trigger>
									<Trigger isActive="yes" isFolder="no" isTempTrigger="no" isMultiline="no" isPerlSlashGOption="no" isColorizerTrigger="no" isFilterTrigger="no" isSoundTrigger="no" isColorTrigger="no" isColorTriggerFg="no" isColorTriggerBg="no">
										<name>Addiction from mutagen</name>
										<script>if matches[2] == snd.target then
 snd.target_got("addiction")
end</script>
										<triggerType>0</triggerType>
										<conditonLineDelta>0</conditonLineDelta>
										<mStayOpen>0</mStayOpen>
										<mCommand></mCommand>
										<packageName></packageName>
										<mFgColor>#ff0000</mFgColor>
										<mBgColor>#ffff00</mBgColor>
										<mSoundFile></mSoundFile>
										<colorTriggerFgColor>#000000</colorTriggerFgColor>
										<colorTriggerBgColor>#000000</colorTriggerBgColor>
										<regexCodeList>
											<string>^Growing unfocused, a perverse addiction settles over (\w+).$</string>
											<string>^(\w+)'s hands begin to shake as (the )?\w+ turns restless.$</string>
										</regexCodeList>
										<regexCodePropertyList>
											<integer>1</integer>
											<integer>1</integer>
										</regexCodePropertyList>
									</Trigger>
									<Trigger isActive="yes" isFolder="no" isTempTrigger="no" isMultiline="no" isPerlSlashGOption="no" isColorizerTrigger="no" isFilterTrigger="no" isSoundTrigger="no" isColorTrigger="no" isColorTriggerFg="no" isColorTriggerBg="no">
										<name>Lethargy from mutagen</name>
										<script>if matches[2] == snd.target then
 snd.target_got("lethargy")
end</script>
										<triggerType>0</triggerType>
										<conditonLineDelta>0</conditonLineDelta>
										<mStayOpen>0</mStayOpen>
										<mCommand></mCommand>
										<packageName></packageName>
										<mFgColor>#ff0000</mFgColor>
										<mBgColor>#ffff00</mBgColor>
										<mSoundFile></mSoundFile>
										<colorTriggerFgColor>#000000</colorTriggerFgColor>
										<colorTriggerBgColor>#000000</colorTriggerBgColor>
										<regexCodeList>
											<string>^(\w+) slows, energy draining from (the )?\w+ as (the )?\w+ struggles to move.$</string>
										</regexCodeList>
										<regexCodePropertyList>
											<integer>1</integer>
										</regexCodePropertyList>
									</Trigger>
									<Trigger isActive="yes" isFolder="no" isTempTrigger="no" isMultiline="no" isPerlSlashGOption="no" isColorizerTrigger="no" isFilterTrigger="no" isSoundTrigger="no" isColorTrigger="no" isColorTriggerFg="no" isColorTriggerBg="no">
										<name>Blisters mutagen</name>
										<script>if matches[2] == snd.target then
 snd.target_got("blisters")
end</script>
										<triggerType>0</triggerType>
										<conditonLineDelta>0</conditonLineDelta>
										<mStayOpen>0</mStayOpen>
										<mCommand></mCommand>
										<packageName></packageName>
										<mFgColor>#ff0000</mFgColor>
										<mBgColor>#ffff00</mBgColor>
										<mSoundFile></mSoundFile>
										<colorTriggerFgColor>#000000</colorTriggerFgColor>
										<colorTriggerBgColor>#000000</colorTriggerBgColor>
										<regexCodeList>
											<string>^(\w+)'s skin blisters virulently, sacs of pus and blood bulging from (the )?\w+ frame.$</string>
										</regexCodeList>
										<regexCodePropertyList>
											<integer>1</integer>
										</regexCodePropertyList>
									</Trigger>
									<Trigger isActive="yes" isFolder="no" isTempTrigger="no" isMultiline="no" isPerlSlashGOption="no" isColorizerTrigger="no" isFilterTrigger="no" isSoundTrigger="no" isColorTrigger="no" isColorTriggerFg="no" isColorTriggerBg="no">
										<name>1p Infection</name>
										<script>if matches[2] == snd.target then
  if not snd.checkAff("mutagen") then
		snd.target_got("mutagen")
	end
	snd.my_mutagen = true
end</script>
										<triggerType>0</triggerType>
										<conditonLineDelta>0</conditonLineDelta>
										<mStayOpen>0</mStayOpen>
										<mCommand></mCommand>
										<packageName></packageName>
										<mFgColor>#ff0000</mFgColor>
										<mBgColor>#ffff00</mBgColor>
										<mSoundFile></mSoundFile>
										<colorTriggerFgColor>#000000</colorTriggerFgColor>
										<colorTriggerBgColor>#000000</colorTriggerBgColor>
										<regexCodeList>
											<string>^You use Bioessence Infection on (\w+).$</string>
											<string>^You use Bioessence Advance on (\w+).$</string>
										</regexCodeList>
										<regexCodePropertyList>
											<integer>1</integer>
											<integer>1</integer>
										</regexCodePropertyList>
									</Trigger>
									<Trigger isActive="yes" isFolder="no" isTempTrigger="no" isMultiline="no" isPerlSlashGOption="no" isColorizerTrigger="no" isFilterTrigger="no" isSoundTrigger="no" isColorTrigger="no" isColorTriggerFg="no" isColorTriggerBg="no">
										<name>Weariness mutagen</name>
										<script>if matches[2] == snd.target then
  if not snd.checkAff("weariness") then 
		snd.target_got("weariness")
	end
end</script>
										<triggerType>0</triggerType>
										<conditonLineDelta>0</conditonLineDelta>
										<mStayOpen>0</mStayOpen>
										<mCommand></mCommand>
										<packageName></packageName>
										<mFgColor>#ff0000</mFgColor>
										<mBgColor>#ffff00</mBgColor>
										<mSoundFile></mSoundFile>
										<colorTriggerFgColor>#000000</colorTriggerFgColor>
										<colorTriggerBgColor>#000000</colorTriggerBgColor>
										<regexCodeList>
											<string>^Stumbling, (\w+)'s musculature withers and frays where (the )?\w+ stands.$</string>
										</regexCodeList>
										<regexCodePropertyList>
											<integer>1</integer>
										</regexCodePropertyList>
									</Trigger>
									<Trigger isActive="yes" isFolder="no" isTempTrigger="no" isMultiline="no" isPerlSlashGOption="no" isColorizerTrigger="no" isFilterTrigger="no" isSoundTrigger="no" isColorTrigger="no" isColorTriggerFg="no" isColorTriggerBg="no">
										<name>Impairment mutagen</name>
										<script>if matches[2] == snd.target then
  if not snd.checkAff("impairment") then 
		snd.target_got("impairment")
	end
end</script>
										<triggerType>0</triggerType>
										<conditonLineDelta>0</conditonLineDelta>
										<mStayOpen>0</mStayOpen>
										<mCommand></mCommand>
										<packageName></packageName>
										<mFgColor>#ff0000</mFgColor>
										<mBgColor>#ffff00</mBgColor>
										<mSoundFile></mSoundFile>
										<colorTriggerFgColor>#000000</colorTriggerFgColor>
										<colorTriggerBgColor>#000000</colorTriggerBgColor>
										<regexCodeList>
											<string>^(\w+)'s body contorts, warping into a subtle yet unrecognizable configuration.$</string>
										</regexCodeList>
										<regexCodePropertyList>
											<integer>1</integer>
										</regexCodePropertyList>
									</Trigger>
									<Trigger isActive="yes" isFolder="no" isTempTrigger="no" isMultiline="no" isPerlSlashGOption="no" isColorizerTrigger="no" isFilterTrigger="no" isSoundTrigger="no" isColorTrigger="no" isColorTriggerFg="no" isColorTriggerBg="no">
										<name>3P Infection</name>
										<script>if matches[3] == snd.target then
  if not snd.checkAff("mutagen") then
		snd.target_got("mutagen")
	end
	snd.my_mutagen = false
	snd.their_mutagen = false
end</script>
										<triggerType>0</triggerType>
										<conditonLineDelta>0</conditonLineDelta>
										<mStayOpen>0</mStayOpen>
										<mCommand></mCommand>
										<packageName></packageName>
										<mFgColor>#ff0000</mFgColor>
										<mBgColor>#ffff00</mBgColor>
										<mSoundFile></mSoundFile>
										<colorTriggerFgColor>#000000</colorTriggerFgColor>
										<colorTriggerBgColor>#000000</colorTriggerBgColor>
										<regexCodeList>
											<string>^(\w+) uses Bioessence Infection on (\w+).$</string>
											<string>^(\w+) uses Bioessence Advance on (\w+).$</string>
										</regexCodeList>
										<regexCodePropertyList>
											<integer>1</integer>
											<integer>0</integer>
										</regexCodePropertyList>
									</Trigger>
									<Trigger isActive="yes" isFolder="no" isTempTrigger="no" isMultiline="no" isPerlSlashGOption="no" isColorizerTrigger="no" isFilterTrigger="no" isSoundTrigger="no" isColorTrigger="no" isColorTriggerFg="no" isColorTriggerBg="no">
										<name>mutagen cured</name>
										<script>
 	snd.target_cured("mutagen")
	snd.my_mutagen = false
	snd.their_mutagen = false
</script>
										<triggerType>0</triggerType>
										<conditonLineDelta>0</conditonLineDelta>
										<mStayOpen>0</mStayOpen>
										<mCommand></mCommand>
										<packageName></packageName>
										<mFgColor>#ff0000</mFgColor>
										<mBgColor>#ffff00</mBgColor>
										<mSoundFile></mSoundFile>
										<colorTriggerFgColor>#000000</colorTriggerFgColor>
										<colorTriggerBgColor>#000000</colorTriggerBgColor>
										<regexCodeList>
											<string>^The mutagen placed upon (\w+) has expired, its lifespan complete.$</string>
											<string>^The mutagen placed upon (\w+) has expired, too far from you.$</string>
											<string>You release the binds to your existing mutagens, allowing them to wither and die.</string>
										</regexCodeList>
										<regexCodePropertyList>
											<integer>1</integer>
											<integer>1</integer>
											<integer>0</integer>
										</regexCodePropertyList>
									</Trigger>
									<Trigger isActive="yes" isFolder="no" isTempTrigger="no" isMultiline="no" isPerlSlashGOption="no" isColorizerTrigger="no" isFilterTrigger="no" isSoundTrigger="no" isColorTrigger="no" isColorTriggerFg="no" isColorTriggerBg="no">
										<name>nexus proc</name>
										<script>if matches[2] == snd.target then
	snd.send("bio advance " ..matches[2])
end</script>
										<triggerType>0</triggerType>
										<conditonLineDelta>0</conditonLineDelta>
										<mStayOpen>0</mStayOpen>
										<mCommand></mCommand>
										<packageName></packageName>
										<mFgColor>#ff0000</mFgColor>
										<mBgColor>#ffff00</mBgColor>
										<mSoundFile></mSoundFile>
										<colorTriggerFgColor>#000000</colorTriggerFgColor>
										<colorTriggerBgColor>#000000</colorTriggerBgColor>
										<regexCodeList>
											<string>^Your mutagen leaps from you to (\w+), crackling through the air.$</string>
										</regexCodeList>
										<regexCodePropertyList>
											<integer>1</integer>
										</regexCodePropertyList>
									</Trigger>
									<Trigger isActive="yes" isFolder="no" isTempTrigger="no" isMultiline="no" isPerlSlashGOption="no" isColorizerTrigger="no" isFilterTrigger="no" isSoundTrigger="no" isColorTrigger="no" isColorTriggerFg="no" isColorTriggerBg="no">
										<name>Growth</name>
										<script>snd.target_got("growth")</script>
										<triggerType>0</triggerType>
										<conditonLineDelta>0</conditonLineDelta>
										<mStayOpen>0</mStayOpen>
										<mCommand></mCommand>
										<packageName></packageName>
										<mFgColor>#ff0000</mFgColor>
										<mBgColor>#ffff00</mBgColor>
										<mSoundFile></mSoundFile>
										<colorTriggerFgColor>#000000</colorTriggerFgColor>
										<colorTriggerBgColor>#000000</colorTriggerBgColor>
										<regexCodeList>
											<string>^You use Bioessence Growth on (\w+).$</string>
										</regexCodeList>
										<regexCodePropertyList>
											<integer>1</integer>
										</regexCodePropertyList>
									</Trigger>
									<Trigger isActive="yes" isFolder="no" isTempTrigger="no" isMultiline="no" isPerlSlashGOption="no" isColorizerTrigger="no" isFilterTrigger="no" isSoundTrigger="no" isColorTrigger="no" isColorTriggerFg="no" isColorTriggerBg="no">
										<name>growth fail</name>
										<script>snd.target_cured("growth")
snd.target_cured("lethargy")
snd.target_cured("allergies")
snd.target_cured("blisters")
snd.target_cured("addiction")</script>
										<triggerType>0</triggerType>
										<conditonLineDelta>0</conditonLineDelta>
										<mStayOpen>0</mStayOpen>
										<mCommand></mCommand>
										<packageName></packageName>
										<mFgColor>#ff0000</mFgColor>
										<mBgColor>#ffff00</mBgColor>
										<mSoundFile></mSoundFile>
										<colorTriggerFgColor>#000000</colorTriggerFgColor>
										<colorTriggerBgColor>#000000</colorTriggerBgColor>
										<regexCodeList>
											<string>^The growth within (\w+) is rendered benign.$</string>
										</regexCodeList>
										<regexCodePropertyList>
											<integer>1</integer>
										</regexCodePropertyList>
									</Trigger>
									<Trigger isActive="yes" isFolder="no" isTempTrigger="no" isMultiline="no" isPerlSlashGOption="no" isColorizerTrigger="no" isFilterTrigger="no" isSoundTrigger="no" isColorTrigger="no" isColorTriggerFg="no" isColorTriggerBg="no">
										<name>growth succeed</name>
										<script>snd.target_got("lethargy")
snd.target_got("addiction")
snd.target_got("allergies")
snd.target_cured("growth")</script>
										<triggerType>0</triggerType>
										<conditonLineDelta>0</conditonLineDelta>
										<mStayOpen>0</mStayOpen>
										<mCommand></mCommand>
										<packageName></packageName>
										<mFgColor>#ff0000</mFgColor>
										<mBgColor>#ffff00</mBgColor>
										<mSoundFile></mSoundFile>
										<colorTriggerFgColor>#000000</colorTriggerFgColor>
										<colorTriggerBgColor>#000000</colorTriggerBgColor>
										<regexCodeList>
											<string>^(\w+) heaves miserably as \w+ body suddenly takes on twisted and deadly growths.$</string>
										</regexCodeList>
										<regexCodePropertyList>
											<integer>1</integer>
										</regexCodePropertyList>
									</Trigger>
								</TriggerGroup>
								<TriggerGroup isActive="yes" isFolder="yes" isTempTrigger="no" isMultiline="no" isPerlSlashGOption="no" isColorizerTrigger="no" isFilterTrigger="no" isSoundTrigger="no" isColorTrigger="no" isColorTriggerFg="no" isColorTriggerBg="no">
									<name>Afflictions</name>
									<script></script>
									<triggerType>0</triggerType>
									<conditonLineDelta>0</conditonLineDelta>
									<mStayOpen>0</mStayOpen>
									<mCommand></mCommand>
									<packageName></packageName>
									<mFgColor>#ff0000</mFgColor>
									<mBgColor>#ffff00</mBgColor>
									<mSoundFile></mSoundFile>
									<colorTriggerFgColor>#000000</colorTriggerFgColor>
									<colorTriggerBgColor>#000000</colorTriggerBgColor>
									<regexCodeList />
									<regexCodePropertyList />
									<Trigger isActive="yes" isFolder="no" isTempTrigger="no" isMultiline="no" isPerlSlashGOption="no" isColorizerTrigger="no" isFilterTrigger="no" isSoundTrigger="no" isColorTrigger="no" isColorTriggerFg="no" isColorTriggerBg="no">
										<name>Madness 1P</name>
										<script>snd.madnessused = true
if matches[2] == snd.target then
 snd.target_got("dementia")
 snd.target_got("paranoia")
 snd.target_got("hallucinations")
end</script>
										<triggerType>0</triggerType>
										<conditonLineDelta>0</conditonLineDelta>
										<mStayOpen>0</mStayOpen>
										<mCommand></mCommand>
										<packageName></packageName>
										<mFgColor>#ff0000</mFgColor>
										<mBgColor>#ffff00</mBgColor>
										<mSoundFile></mSoundFile>
										<colorTriggerFgColor>#000000</colorTriggerFgColor>
										<colorTriggerBgColor>#000000</colorTriggerBgColor>
										<regexCodeList>
											<string>^You use Numerology Madness on (\w+).$</string>
										</regexCodeList>
										<regexCodePropertyList>
											<integer>1</integer>
										</regexCodePropertyList>
									</Trigger>
									<Trigger isActive="yes" isFolder="no" isTempTrigger="no" isMultiline="no" isPerlSlashGOption="no" isColorizerTrigger="no" isFilterTrigger="no" isSoundTrigger="no" isColorTrigger="no" isColorTriggerFg="no" isColorTriggerBg="no">
										<name>Madness 3P</name>
										<script>if matches[2] == snd.target then
 snd.target_got("dementia")
 snd.target_got("paranoia")
 snd.target_got("hallucinations")
end</script>
										<triggerType>0</triggerType>
										<conditonLineDelta>0</conditonLineDelta>
										<mStayOpen>0</mStayOpen>
										<mCommand></mCommand>
										<packageName></packageName>
										<mFgColor>#ff0000</mFgColor>
										<mBgColor>#ffff00</mBgColor>
										<mSoundFile></mSoundFile>
										<colorTriggerFgColor>#000000</colorTriggerFgColor>
										<colorTriggerBgColor>#000000</colorTriggerBgColor>
										<regexCodeList>
											<string>^\w+ uses Numerology Madness on (\w+).$</string>
										</regexCodeList>
										<regexCodePropertyList>
											<integer>1</integer>
										</regexCodePropertyList>
									</Trigger>
									<Trigger isActive="yes" isFolder="no" isTempTrigger="no" isMultiline="no" isPerlSlashGOption="no" isColorizerTrigger="no" isFilterTrigger="no" isSoundTrigger="no" isColorTrigger="no" isColorTriggerFg="no" isColorTriggerBg="no">
										<name>Elicit Affliction</name>
										<script>if matches[4] == "blood poison" then
	snd.target_got("blood_poison")
elseif matches[4] == "blood curse" then
	snd.target_got("blood_curse")
elseif matches[4] == "a broken right leg" then
	snd.target_got("a broken right leg")
elseif matches[4] == "a broken left leg" then
	snd.target_got("a broken left leg")
elseif matches[4] == "a broken left arm" then
	snd.target_got("a broken left arm")
elseif matches[4] == "a broken right arm" then
	snd.target_got("a broken right arm")
elseif matches[4] == "mental disruption" then
	snd.target_got("mental_disruption")
elseif matches[4] == "self-pity" then
	snd.target_got("self-pity")
else
	snd.target_got(matches[4])
end</script>
										<triggerType>0</triggerType>
										<conditonLineDelta>0</conditonLineDelta>
										<mStayOpen>0</mStayOpen>
										<mCommand></mCommand>
										<packageName></packageName>
										<mFgColor>#ff0000</mFgColor>
										<mBgColor>#ffff00</mBgColor>
										<mSoundFile></mSoundFile>
										<colorTriggerFgColor>#000000</colorTriggerFgColor>
										<colorTriggerBgColor>#000000</colorTriggerBgColor>
										<regexCodeList>
											<string>^You sense that you have afflicted (the )?\w+ with (.*).$</string>
										</regexCodeList>
										<regexCodePropertyList>
											<integer>1</integer>
										</regexCodePropertyList>
									</Trigger>
									<Trigger isActive="yes" isFolder="no" isTempTrigger="no" isMultiline="no" isPerlSlashGOption="no" isColorizerTrigger="no" isFilterTrigger="no" isSoundTrigger="no" isColorTrigger="no" isColorTriggerFg="no" isColorTriggerBg="no">
										<name>Patterns hit</name>
										<script>if matches[2] == snd.target then
 	snd.target_got("patterns")
end</script>
										<triggerType>0</triggerType>
										<conditonLineDelta>0</conditonLineDelta>
										<mStayOpen>0</mStayOpen>
										<mCommand></mCommand>
										<packageName></packageName>
										<mFgColor>#ff0000</mFgColor>
										<mBgColor>#ffff00</mBgColor>
										<mSoundFile></mSoundFile>
										<colorTriggerFgColor>#000000</colorTriggerFgColor>
										<colorTriggerBgColor>#000000</colorTriggerBgColor>
										<regexCodeList>
											<string>^\w+ uses? Geometrics Pattern on (\w+).$</string>
										</regexCodeList>
										<regexCodePropertyList>
											<integer>1</integer>
										</regexCodePropertyList>
									</Trigger>
									<Trigger isActive="yes" isFolder="no" isTempTrigger="no" isMultiline="no" isPerlSlashGOption="no" isColorizerTrigger="no" isFilterTrigger="no" isSoundTrigger="no" isColorTrigger="no" isColorTriggerFg="no" isColorTriggerBg="no">
										<name>Lemniscate Given</name>
										<script>if matches[2] == snd.target and not snd.checkAff("lemniscate") then
 	snd.target_got("lemniscate")
end</script>
										<triggerType>0</triggerType>
										<conditonLineDelta>0</conditonLineDelta>
										<mStayOpen>0</mStayOpen>
										<mCommand></mCommand>
										<packageName></packageName>
										<mFgColor>#ff0000</mFgColor>
										<mBgColor>#ffff00</mBgColor>
										<mSoundFile></mSoundFile>
										<colorTriggerFgColor>#000000</colorTriggerFgColor>
										<colorTriggerBgColor>#000000</colorTriggerBgColor>
										<regexCodeList>
											<string>^You use Geometrics Lemniscate on (\w+).$</string>
										</regexCodeList>
										<regexCodePropertyList>
											<integer>1</integer>
										</regexCodePropertyList>
									</Trigger>
									<Trigger isActive="yes" isFolder="no" isTempTrigger="no" isMultiline="no" isPerlSlashGOption="no" isColorizerTrigger="no" isFilterTrigger="no" isSoundTrigger="no" isColorTrigger="no" isColorTriggerFg="no" isColorTriggerBg="no">
										<name>Lemniscate Taken</name>
										<script>if matches[2] == snd.target and snd.checkAff("lemniscate") then
	snd.target_cured("lemniscate")
end</script>
										<triggerType>0</triggerType>
										<conditonLineDelta>0</conditonLineDelta>
										<mStayOpen>0</mStayOpen>
										<mCommand></mCommand>
										<packageName></packageName>
										<mFgColor>#ff0000</mFgColor>
										<mBgColor>#ffff00</mBgColor>
										<mSoundFile></mSoundFile>
										<colorTriggerFgColor>#000000</colorTriggerFgColor>
										<colorTriggerBgColor>#000000</colorTriggerBgColor>
										<regexCodeList>
											<string>^The passage of time around (\w+) returns to normal.$</string>
										</regexCodeList>
										<regexCodePropertyList>
											<integer>1</integer>
										</regexCodePropertyList>
									</Trigger>
									<Trigger isActive="yes" isFolder="no" isTempTrigger="no" isMultiline="no" isPerlSlashGOption="no" isColorizerTrigger="no" isFilterTrigger="no" isSoundTrigger="no" isColorTrigger="no" isColorTriggerFg="no" isColorTriggerBg="no">
										<name>square afterimage</name>
										<script>if matches[2] == snd.target then
	if not snd.checkAff("dizziness") then 
		snd.target_got("dizziness")
	elseif not snd.checkAff("faintness") then
		snd.target_got("faintness")
	elseif not snd.checkAff("epilepsy") then
  		snd.target_got("epilepsy")
	elseif not snd.checkAff("shyness") then
  		snd.target_got("shyness")
	end
	
end</script>
										<triggerType>0</triggerType>
										<conditonLineDelta>0</conditonLineDelta>
										<mStayOpen>0</mStayOpen>
										<mCommand></mCommand>
										<packageName></packageName>
										<mFgColor>#ff0000</mFgColor>
										<mBgColor>#ffff00</mBgColor>
										<mSoundFile></mSoundFile>
										<colorTriggerFgColor>#000000</colorTriggerFgColor>
										<colorTriggerBgColor>#000000</colorTriggerBgColor>
										<regexCodeList>
											<string>^The burning afterimage of the Square forms before (\w+).$</string>
										</regexCodeList>
										<regexCodePropertyList>
											<integer>1</integer>
										</regexCodePropertyList>
									</Trigger>
									<Trigger isActive="yes" isFolder="no" isTempTrigger="no" isMultiline="no" isPerlSlashGOption="no" isColorizerTrigger="no" isFilterTrigger="no" isSoundTrigger="no" isColorTrigger="no" isColorTriggerFg="no" isColorTriggerBg="no">
										<name>triangle afterimage</name>
										<script>if matches[2] == snd.target then
	if not snd.checkAff("laxity") then 
			snd.target_got("laxity")
	elseif not snd.checkAff("lovers_effect") then 
			snd.target_got("lovers_effect")
	elseif not snd.checkAff("peace") then 
			snd.target_got("peace")
	elseif not snd.checkAff("magnanimity") then 
			snd.target_got("magnanimity")
	end

end</script>
										<triggerType>0</triggerType>
										<conditonLineDelta>0</conditonLineDelta>
										<mStayOpen>0</mStayOpen>
										<mCommand></mCommand>
										<packageName></packageName>
										<mFgColor>#ff0000</mFgColor>
										<mBgColor>#ffff00</mBgColor>
										<mSoundFile></mSoundFile>
										<colorTriggerFgColor>#000000</colorTriggerFgColor>
										<colorTriggerBgColor>#000000</colorTriggerBgColor>
										<regexCodeList>
											<string>^The burning afterimage of the Triangle forms before (\w+).$</string>
										</regexCodeList>
										<regexCodePropertyList>
											<integer>1</integer>
										</regexCodePropertyList>
									</Trigger>
									<Trigger isActive="yes" isFolder="no" isTempTrigger="no" isMultiline="no" isPerlSlashGOption="no" isColorizerTrigger="no" isFilterTrigger="no" isSoundTrigger="no" isColorTrigger="no" isColorTriggerFg="no" isColorTriggerBg="no">
										<name>Circle afterimage</name>
										<script>if matches[2] == snd.target then
	if not snd.checkAff("merciful") then 
		snd.target_got("merciful")
	elseif not snd.checkAff("masochism") then 
		snd.target_got("masochism")
	elseif not snd.checkAff("berserking") then 
		snd.target_got("berserking")
	elseif not snd.checkAff("recklessness") then 
		snd.target_got("recklessness")
	end
end</script>
										<triggerType>0</triggerType>
										<conditonLineDelta>0</conditonLineDelta>
										<mStayOpen>0</mStayOpen>
										<mCommand></mCommand>
										<packageName></packageName>
										<mFgColor>#ff0000</mFgColor>
										<mBgColor>#ffff00</mBgColor>
										<mSoundFile></mSoundFile>
										<colorTriggerFgColor>#000000</colorTriggerFgColor>
										<colorTriggerBgColor>#000000</colorTriggerBgColor>
										<regexCodeList>
											<string>^The burning afterimage of the Circle forms before (\w+).$</string>
										</regexCodeList>
										<regexCodePropertyList>
											<integer>1</integer>
										</regexCodePropertyList>
									</Trigger>
									<Trigger isActive="yes" isFolder="no" isTempTrigger="no" isMultiline="no" isPerlSlashGOption="no" isColorizerTrigger="no" isFilterTrigger="no" isSoundTrigger="no" isColorTrigger="no" isColorTriggerFg="no" isColorTriggerBg="no">
										<name>Sealing</name>
										<script>if matches[3] == snd.target then
	if matches[2] == "square" then
		snd.squareseal = true
    
	elseif matches[2] == "triangle" then
		snd.triangleseal = true
	elseif matches[2] == "circle" then
		snd.circleseal = true
	end
end</script>
										<triggerType>0</triggerType>
										<conditonLineDelta>0</conditonLineDelta>
										<mStayOpen>0</mStayOpen>
										<mCommand></mCommand>
										<packageName></packageName>
										<mFgColor>#ff0000</mFgColor>
										<mBgColor>#ffff00</mBgColor>
										<mSoundFile></mSoundFile>
										<colorTriggerFgColor>#000000</colorTriggerFgColor>
										<colorTriggerBgColor>#000000</colorTriggerBgColor>
										<regexCodeList>
											<string>^You use Geometrics Sealing \((\w+)\) on (\w+).$</string>
										</regexCodeList>
										<regexCodePropertyList>
											<integer>1</integer>
										</regexCodePropertyList>
									</Trigger>
									<Trigger isActive="yes" isFolder="no" isTempTrigger="no" isMultiline="no" isPerlSlashGOption="no" isColorizerTrigger="no" isFilterTrigger="no" isSoundTrigger="no" isColorTrigger="no" isColorTriggerFg="no" isColorTriggerBg="no">
										<name>Passive Impress Effect</name>
										<script>if matches[2] == snd.target then
	snd.my_impress = matches[3]
	if matches[3] == "Hex" then
		if not snd.checkAff("hypochondria") then 
			snd.target_got("hypochondria")
		end
	elseif matches[3] == "Swirl" then
		if not snd.checkAff("mental_disruption") then 
			snd.target_got("mental_disruption")
		end	
	elseif matches[3] == "Bloom" then
		if not snd.checkAff("vomiting") then 
			snd.target_got("vomiting")
		end		
	elseif matches[3] == "Star" then
		if not snd.checkAff("paresis") then 
			snd.target_got("paresis")
		end	
	end
end</script>
										<triggerType>0</triggerType>
										<conditonLineDelta>0</conditonLineDelta>
										<mStayOpen>0</mStayOpen>
										<mCommand></mCommand>
										<packageName></packageName>
										<mFgColor>#ff0000</mFgColor>
										<mBgColor>#ffff00</mBgColor>
										<mSoundFile></mSoundFile>
										<colorTriggerFgColor>#000000</colorTriggerFgColor>
										<colorTriggerBgColor>#000000</colorTriggerBgColor>
										<regexCodeList>
											<string>^(\w+) is coaxed by the (\w+) upon a wooden (the )?\w+.$</string>
										</regexCodeList>
										<regexCodePropertyList>
											<integer>1</integer>
										</regexCodePropertyList>
									</Trigger>
									<Trigger isActive="yes" isFolder="no" isTempTrigger="no" isMultiline="no" isPerlSlashGOption="no" isColorizerTrigger="no" isFilterTrigger="no" isSoundTrigger="no" isColorTrigger="no" isColorTriggerFg="no" isColorTriggerBg="no">
										<name>Matrix</name>
										<script>if matches[2] == snd.target then
  if not snd.checkAff("matrix") then
		snd.target_got("matrix")
		matrix_timer = tempTimer(20.0,[[snd.target_cured("matrix")]])
	end
end</script>
										<triggerType>0</triggerType>
										<conditonLineDelta>0</conditonLineDelta>
										<mStayOpen>0</mStayOpen>
										<mCommand></mCommand>
										<packageName></packageName>
										<mFgColor>#ff0000</mFgColor>
										<mBgColor>#ffff00</mBgColor>
										<mSoundFile></mSoundFile>
										<colorTriggerFgColor>#000000</colorTriggerFgColor>
										<colorTriggerBgColor>#000000</colorTriggerBgColor>
										<regexCodeList>
											<string>^You use Geometrics Matrix on (\w+).$</string>
										</regexCodeList>
										<regexCodePropertyList>
											<integer>1</integer>
										</regexCodePropertyList>
									</Trigger>
									<Trigger isActive="yes" isFolder="no" isTempTrigger="no" isMultiline="no" isPerlSlashGOption="no" isColorizerTrigger="no" isFilterTrigger="no" isSoundTrigger="no" isColorTrigger="no" isColorTriggerFg="no" isColorTriggerBg="no">
										<name>Triangle</name>
										<script>if matches[2] == snd.target then
	if not snd.checkAff("laxity") then 
			snd.target_got("laxity")
	elseif not snd.checkAff("lovers_effect") then 
			snd.target_got("lovers_effect")
	elseif not snd.checkAff("peace") then 
			snd.target_got("peace")
	elseif not snd.checkAff("magnanimity") then 
			snd.target_got("magnanimity")
	end

end</script>
										<triggerType>0</triggerType>
										<conditonLineDelta>0</conditonLineDelta>
										<mStayOpen>0</mStayOpen>
										<mCommand></mCommand>
										<packageName></packageName>
										<mFgColor>#ff0000</mFgColor>
										<mBgColor>#ffff00</mBgColor>
										<mSoundFile></mSoundFile>
										<colorTriggerFgColor>#000000</colorTriggerFgColor>
										<colorTriggerBgColor>#000000</colorTriggerBgColor>
										<regexCodeList>
											<string>^\w+ uses? Geometrics Triangle on (\w+).$</string>
										</regexCodeList>
										<regexCodePropertyList>
											<integer>1</integer>
										</regexCodePropertyList>
									</Trigger>
									<Trigger isActive="yes" isFolder="no" isTempTrigger="no" isMultiline="no" isPerlSlashGOption="no" isColorizerTrigger="no" isFilterTrigger="no" isSoundTrigger="no" isColorTrigger="no" isColorTriggerFg="no" isColorTriggerBg="no">
										<name>Square</name>
										<script>if matches[2] == snd.target then
	if not snd.checkAff("dizziness") then 
		snd.target_got("dizziness")
	elseif not snd.checkAff("faintness") then
		snd.target_got("faintness")
	elseif not snd.checkAff("epilepsy") then
  		snd.target_got("epilepsy")
	elseif not snd.checkAff("shyness") then
  		snd.target_got("shyness")
	end
	
end</script>
										<triggerType>0</triggerType>
										<conditonLineDelta>0</conditonLineDelta>
										<mStayOpen>0</mStayOpen>
										<mCommand></mCommand>
										<packageName></packageName>
										<mFgColor>#ff0000</mFgColor>
										<mBgColor>#ffff00</mBgColor>
										<mSoundFile></mSoundFile>
										<colorTriggerFgColor>#000000</colorTriggerFgColor>
										<colorTriggerBgColor>#000000</colorTriggerBgColor>
										<regexCodeList>
											<string>^\w+ uses? Geometrics Square on (\w+).$</string>
										</regexCodeList>
										<regexCodePropertyList>
											<integer>1</integer>
										</regexCodePropertyList>
									</Trigger>
									<Trigger isActive="yes" isFolder="no" isTempTrigger="no" isMultiline="no" isPerlSlashGOption="no" isColorizerTrigger="no" isFilterTrigger="no" isSoundTrigger="no" isColorTrigger="no" isColorTriggerFg="no" isColorTriggerBg="no">
										<name>Circle</name>
										<script>if matches[2] == snd.target then
	if not snd.checkAff("merciful") then 
		snd.target_got("merciful")
	elseif not snd.checkAff("masochism") then 
		snd.target_got("masochism")
	elseif not snd.checkAff("berserking") then 
		snd.target_got("berserking")
	elseif not snd.checkAff("recklessness") then 
		snd.target_got("recklessness")
	end
end</script>
										<triggerType>0</triggerType>
										<conditonLineDelta>0</conditonLineDelta>
										<mStayOpen>0</mStayOpen>
										<mCommand></mCommand>
										<packageName></packageName>
										<mFgColor>#ff0000</mFgColor>
										<mBgColor>#ffff00</mBgColor>
										<mSoundFile></mSoundFile>
										<colorTriggerFgColor>#000000</colorTriggerFgColor>
										<colorTriggerBgColor>#000000</colorTriggerBgColor>
										<regexCodeList>
											<string>^\w+ uses? Geometrics Circle on (\w+).$</string>
										</regexCodeList>
										<regexCodePropertyList>
											<integer>1</integer>
										</regexCodePropertyList>
									</Trigger>
									<Trigger isActive="yes" isFolder="no" isTempTrigger="no" isMultiline="no" isPerlSlashGOption="no" isColorizerTrigger="no" isFilterTrigger="no" isSoundTrigger="no" isColorTrigger="no" isColorTriggerFg="no" isColorTriggerBg="no">
										<name>Incite (for Hex and Crescent tracking)</name>
										<script>if matches[3] == snd.target then
	snd.my_impress = matches[2]
	if matches[2] == "Hex" then
		snd.my_incite = "Hex"
		matrix_timer = tempTimer(20.0,[[snd.my_incite = "nil"]])
	elseif matches[2] == "Crescent" then
		snd.my_incite = "Crescent"
	end
end</script>
										<triggerType>0</triggerType>
										<conditonLineDelta>0</conditonLineDelta>
										<mStayOpen>0</mStayOpen>
										<mCommand></mCommand>
										<packageName></packageName>
										<mFgColor>#ff0000</mFgColor>
										<mBgColor>#ffff00</mBgColor>
										<mSoundFile></mSoundFile>
										<colorTriggerFgColor>#000000</colorTriggerFgColor>
										<colorTriggerBgColor>#000000</colorTriggerBgColor>
										<regexCodeList>
											<string>^You use Geometrics (\w+) on (\w+).$</string>
										</regexCodeList>
										<regexCodePropertyList>
											<integer>1</integer>
										</regexCodePropertyList>
									</Trigger>
									<Trigger isActive="yes" isFolder="no" isTempTrigger="no" isMultiline="no" isPerlSlashGOption="no" isColorizerTrigger="no" isFilterTrigger="no" isSoundTrigger="no" isColorTrigger="no" isColorTriggerFg="no" isColorTriggerBg="no">
										<name>Geo Impressing</name>
										<script>snd.my_impress = matches[2]</script>
										<triggerType>0</triggerType>
										<conditonLineDelta>0</conditonLineDelta>
										<mStayOpen>0</mStayOpen>
										<mCommand></mCommand>
										<packageName></packageName>
										<mFgColor>#ff0000</mFgColor>
										<mBgColor>#ffff00</mBgColor>
										<mSoundFile></mSoundFile>
										<colorTriggerFgColor>#000000</colorTriggerFgColor>
										<colorTriggerBgColor>#000000</colorTriggerBgColor>
										<regexCodeList>
											<string>^You focus your will and impress the (\w+) upon a wooden (the )?\w+.$</string>
										</regexCodeList>
										<regexCodePropertyList>
											<integer>1</integer>
										</regexCodePropertyList>
									</Trigger>
									<Trigger isActive="yes" isFolder="no" isTempTrigger="no" isMultiline="no" isPerlSlashGOption="no" isColorizerTrigger="no" isFilterTrigger="no" isSoundTrigger="no" isColorTrigger="no" isColorTriggerFg="no" isColorTriggerBg="no">
										<name>conjoin used</name>
										<script>snd.conjoinready = false</script>
										<triggerType>0</triggerType>
										<conditonLineDelta>0</conditonLineDelta>
										<mStayOpen>0</mStayOpen>
										<mCommand></mCommand>
										<packageName></packageName>
										<mFgColor>#ff0000</mFgColor>
										<mBgColor>#ffff00</mBgColor>
										<mSoundFile></mSoundFile>
										<colorTriggerFgColor>#000000</colorTriggerFgColor>
										<colorTriggerBgColor>#000000</colorTriggerBgColor>
										<regexCodeList>
											<string>You use Geometrics Conjoin.</string>
										</regexCodeList>
										<regexCodePropertyList>
											<integer>0</integer>
										</regexCodePropertyList>
									</Trigger>
									<Trigger isActive="yes" isFolder="no" isTempTrigger="no" isMultiline="no" isPerlSlashGOption="no" isColorizerTrigger="no" isFilterTrigger="no" isSoundTrigger="no" isColorTrigger="no" isColorTriggerFg="no" isColorTriggerBg="no">
										<name>conjoin ready</name>
										<script>snd.conjoinready = true</script>
										<triggerType>0</triggerType>
										<conditonLineDelta>0</conditonLineDelta>
										<mStayOpen>0</mStayOpen>
										<mCommand></mCommand>
										<packageName></packageName>
										<mFgColor>#ff0000</mFgColor>
										<mBgColor>#ffff00</mBgColor>
										<mSoundFile></mSoundFile>
										<colorTriggerFgColor>#000000</colorTriggerFgColor>
										<colorTriggerBgColor>#000000</colorTriggerBgColor>
										<regexCodeList>
											<string>You may conjoin the shapes once more.</string>
										</regexCodeList>
										<regexCodePropertyList>
											<integer>0</integer>
										</regexCodePropertyList>
									</Trigger>
									<Trigger isActive="yes" isFolder="no" isTempTrigger="no" isMultiline="no" isPerlSlashGOption="no" isColorizerTrigger="no" isFilterTrigger="no" isSoundTrigger="no" isColorTrigger="no" isColorTriggerFg="no" isColorTriggerBg="no">
										<name>affliction hit</name>
										<script>snd.target_got(matches[2])</script>
										<triggerType>0</triggerType>
										<conditonLineDelta>0</conditonLineDelta>
										<mStayOpen>0</mStayOpen>
										<mCommand></mCommand>
										<packageName></packageName>
										<mFgColor>#ff0000</mFgColor>
										<mBgColor>#ffff00</mBgColor>
										<mSoundFile></mSoundFile>
										<colorTriggerFgColor>#000000</colorTriggerFgColor>
										<colorTriggerBgColor>#000000</colorTriggerBgColor>
										<regexCodeList>
											<string>^You sense that you have afflicted \w+ with (.+).</string>
										</regexCodeList>
										<regexCodePropertyList>
											<integer>1</integer>
										</regexCodePropertyList>
									</Trigger>
									<Trigger isActive="yes" isFolder="no" isTempTrigger="no" isMultiline="no" isPerlSlashGOption="no" isColorizerTrigger="no" isFilterTrigger="no" isSoundTrigger="no" isColorTrigger="no" isColorTriggerFg="no" isColorTriggerBg="no">
										<name>syncopate use</name>
										<script>snd.target_got("syncopate")
snd.syncopateused = true</script>
										<triggerType>0</triggerType>
										<conditonLineDelta>0</conditonLineDelta>
										<mStayOpen>0</mStayOpen>
										<mCommand></mCommand>
										<packageName></packageName>
										<mFgColor>#ff0000</mFgColor>
										<mBgColor>#ffff00</mBgColor>
										<mSoundFile></mSoundFile>
										<colorTriggerFgColor>#000000</colorTriggerFgColor>
										<colorTriggerBgColor>#000000</colorTriggerBgColor>
										<regexCodeList>
											<string>^You use Numerology Syncopate on (\w+).$</string>
										</regexCodeList>
										<regexCodePropertyList>
											<integer>1</integer>
										</regexCodePropertyList>
									</Trigger>
									<Trigger isActive="yes" isFolder="no" isTempTrigger="no" isMultiline="no" isPerlSlashGOption="no" isColorizerTrigger="no" isFilterTrigger="no" isSoundTrigger="no" isColorTrigger="no" isColorTriggerFg="no" isColorTriggerBg="no">
										<name>syncopate end</name>
										<script>snd.target_cured("syncopate")
snd.syncopateused = false</script>
										<triggerType>0</triggerType>
										<conditonLineDelta>0</conditonLineDelta>
										<mStayOpen>0</mStayOpen>
										<mCommand></mCommand>
										<packageName></packageName>
										<mFgColor>#ff0000</mFgColor>
										<mBgColor>#ffff00</mBgColor>
										<mSoundFile></mSoundFile>
										<colorTriggerFgColor>#000000</colorTriggerFgColor>
										<colorTriggerBgColor>#000000</colorTriggerBgColor>
										<regexCodeList>
											<string>You may once again disrupt the rhythm of the body.</string>
										</regexCodeList>
										<regexCodePropertyList>
											<integer>0</integer>
										</regexCodePropertyList>
									</Trigger>
								</TriggerGroup>
							</TriggerGroup>
							<TriggerGroup isActive="yes" isFolder="yes" isTempTrigger="no" isMultiline="no" isPerlSlashGOption="no" isColorizerTrigger="no" isFilterTrigger="no" isSoundTrigger="no" isColorTrigger="no" isColorTriggerFg="no" isColorTriggerBg="no">
								<name>Writhe affs</name>
								<script></script>
								<triggerType>0</triggerType>
								<conditonLineDelta>0</conditonLineDelta>
								<mStayOpen>0</mStayOpen>
								<mCommand></mCommand>
								<packageName></packageName>
								<mFgColor>#ff0000</mFgColor>
								<mBgColor>#ffff00</mBgColor>
								<mSoundFile></mSoundFile>
								<colorTriggerFgColor>#000000</colorTriggerFgColor>
								<colorTriggerBgColor>#000000</colorTriggerBgColor>
								<regexCodeList />
								<regexCodePropertyList />
								<Trigger isActive="yes" isFolder="no" isTempTrigger="no" isMultiline="no" isPerlSlashGOption="no" isColorizerTrigger="no" isFilterTrigger="no" isSoundTrigger="no" isColorTrigger="no" isColorTriggerFg="no" isColorTriggerBg="no">
									<name>transfix</name>
									<script>if matches[2] == snd.target then
 snd.target_got("transfixed")
end</script>
									<triggerType>0</triggerType>
									<conditonLineDelta>0</conditonLineDelta>
									<mStayOpen>0</mStayOpen>
									<mCommand></mCommand>
									<packageName></packageName>
									<mFgColor>#ff0000</mFgColor>
									<mBgColor>#ffff00</mBgColor>
									<mSoundFile></mSoundFile>
									<colorTriggerFgColor>#000000</colorTriggerFgColor>
									<colorTriggerBgColor>#000000</colorTriggerBgColor>
									<regexCodeList>
										<string>^\w+ stares fixedly at (\w+), and a ball of flame appears between them\. (the )?\w+ stops in mid-motion and concentrates deeply on the flame, transfixed by its splendour\.$</string>
										<string>^With blinding speed, .* transfixes (\w+) with a swirling pattern of fire and water\.$</string>
										<string>^\w+ uses Illumination Transfixion on (\w+).$</string>
										<string>^\w+ uses? .* Transfix on (\w+)</string>
									</regexCodeList>
									<regexCodePropertyList>
										<integer>1</integer>
										<integer>1</integer>
										<integer>1</integer>
										<integer>1</integer>
									</regexCodePropertyList>
								</Trigger>
								<Trigger isActive="yes" isFolder="no" isTempTrigger="no" isMultiline="no" isPerlSlashGOption="no" isColorizerTrigger="no" isFilterTrigger="no" isSoundTrigger="no" isColorTrigger="no" isColorTriggerFg="no" isColorTriggerBg="no">
									<name>writhe vamp gone</name>
									<script>if matches[2] == snd.target then
	snd.target_cured("feed")
end</script>
									<triggerType>0</triggerType>
									<conditonLineDelta>0</conditonLineDelta>
									<mStayOpen>0</mStayOpen>
									<mCommand></mCommand>
									<packageName></packageName>
									<mFgColor>#ff0000</mFgColor>
									<mBgColor>#ffff00</mBgColor>
									<mSoundFile></mSoundFile>
									<colorTriggerFgColor>#000000</colorTriggerFgColor>
									<colorTriggerBgColor>#000000</colorTriggerBgColor>
									<regexCodeList>
										<string>^Your feeding is suddenly interrupted as (\w+) writhes free of your embrace.$</string>
									</regexCodeList>
									<regexCodePropertyList>
										<integer>1</integer>
									</regexCodePropertyList>
								</Trigger>
								<Trigger isActive="yes" isFolder="no" isTempTrigger="no" isMultiline="no" isPerlSlashGOption="no" isColorizerTrigger="no" isFilterTrigger="no" isSoundTrigger="no" isColorTrigger="no" isColorTriggerFg="no" isColorTriggerBg="no">
									<name>writhe vamp feeding</name>
									<script>if matches[2] == snd.target then
	snd.target_got("feed")
end</script>
									<triggerType>0</triggerType>
									<conditonLineDelta>0</conditonLineDelta>
									<mStayOpen>0</mStayOpen>
									<mCommand></mCommand>
									<packageName></packageName>
									<mFgColor>#ff0000</mFgColor>
									<mBgColor>#ffff00</mBgColor>
									<mSoundFile></mSoundFile>
									<colorTriggerFgColor>#000000</colorTriggerFgColor>
									<colorTriggerBgColor>#000000</colorTriggerBgColor>
									<regexCodeList>
										<string>^Seeing your opportunity, you grab (\w+) and pull (the )?\w+ to you, tilting (the )?\w+ head back to expose soft flesh. Licking your lips in sordid anticipation, you bare your fangs and sink them luxuriously into the artery, savoring the release of sweet fluid. Raw pleasure overcomes you as the hot blood courses into your mouth.$</string>
										<string>^Your senses tingle with excitement and rejuvenation as you suckle away the lifeblood of (\w+).$</string>
									</regexCodeList>
									<regexCodePropertyList>
										<integer>1</integer>
										<integer>1</integer>
									</regexCodePropertyList>
								</Trigger>
								<Trigger isActive="yes" isFolder="no" isTempTrigger="no" isMultiline="no" isPerlSlashGOption="no" isColorizerTrigger="no" isFilterTrigger="no" isSoundTrigger="no" isColorTrigger="no" isColorTriggerFg="no" isColorTriggerBg="no">
									<name>Mentis Mesmerize</name>
									<script>if matches[2] == snd.target then
	if not snd.checkAff("transfixed") then 
		snd.target_got("transfixed")
	end
end</script>
									<triggerType>0</triggerType>
									<conditonLineDelta>0</conditonLineDelta>
									<mStayOpen>0</mStayOpen>
									<mCommand></mCommand>
									<packageName></packageName>
									<mFgColor>#ff0000</mFgColor>
									<mBgColor>#ffff00</mBgColor>
									<mSoundFile></mSoundFile>
									<colorTriggerFgColor>#000000</colorTriggerFgColor>
									<colorTriggerBgColor>#000000</colorTriggerBgColor>
									<regexCodeList>
										<string>^\w+ uses? Mentis Mesmerize on (\w+).$</string>
									</regexCodeList>
									<regexCodePropertyList>
										<integer>1</integer>
									</regexCodePropertyList>
								</Trigger>
								<Trigger isActive="yes" isFolder="no" isTempTrigger="no" isMultiline="no" isPerlSlashGOption="no" isColorizerTrigger="no" isFilterTrigger="no" isSoundTrigger="no" isColorTrigger="no" isColorTriggerFg="no" isColorTriggerBg="no">
									<name>Sanguis Feast</name>
									<script>if matches[2] == snd.target then
	if not snd.checkAff("feast") then 
		snd.target_got("feast")
		tempTimer(19.5, [[snd.target_cured("feast")]])
	end
	snd.used.paste = false
end</script>
									<triggerType>0</triggerType>
									<conditonLineDelta>0</conditonLineDelta>
									<mStayOpen>0</mStayOpen>
									<mCommand></mCommand>
									<packageName></packageName>
									<mFgColor>#ff0000</mFgColor>
									<mBgColor>#ffff00</mBgColor>
									<mSoundFile></mSoundFile>
									<colorTriggerFgColor>#000000</colorTriggerFgColor>
									<colorTriggerBgColor>#000000</colorTriggerBgColor>
									<regexCodeList>
										<string>^\w+ uses? Sanguis Feast on (\w+).$</string>
									</regexCodeList>
									<regexCodePropertyList>
										<integer>1</integer>
									</regexCodePropertyList>
								</Trigger>
							</TriggerGroup>
							<TriggerGroup isActive="yes" isFolder="yes" isTempTrigger="no" isMultiline="no" isPerlSlashGOption="no" isColorizerTrigger="no" isFilterTrigger="no" isSoundTrigger="no" isColorTrigger="no" isColorTriggerFg="no" isColorTriggerBg="no">
								<name>Indorani</name>
								<script></script>
								<triggerType>0</triggerType>
								<conditonLineDelta>0</conditonLineDelta>
								<mStayOpen>0</mStayOpen>
								<mCommand></mCommand>
								<packageName></packageName>
								<mFgColor>#ff0000</mFgColor>
								<mBgColor>#ffff00</mBgColor>
								<mSoundFile></mSoundFile>
								<colorTriggerFgColor>#000000</colorTriggerFgColor>
								<colorTriggerBgColor>#000000</colorTriggerBgColor>
								<regexCodeList />
								<regexCodePropertyList />
								<Trigger isActive="yes" isFolder="no" isTempTrigger="no" isMultiline="no" isPerlSlashGOption="no" isColorizerTrigger="no" isFilterTrigger="no" isSoundTrigger="no" isColorTrigger="no" isColorTriggerFg="no" isColorTriggerBg="no">
									<name>Adder hit</name>
									<script>if matches[2] == snd.target then
	snd.adder_attached = true
	snd.adder_ready = false
	snd.adderafflict = matches[2]
end</script>
									<triggerType>0</triggerType>
									<conditonLineDelta>0</conditonLineDelta>
									<mStayOpen>0</mStayOpen>
									<mCommand></mCommand>
									<packageName></packageName>
									<mFgColor>#ff0000</mFgColor>
									<mBgColor>#ffff00</mBgColor>
									<mSoundFile></mSoundFile>
									<colorTriggerFgColor>#000000</colorTriggerFgColor>
									<colorTriggerBgColor>#000000</colorTriggerBgColor>
									<regexCodeList>
										<string>^You dip the Adder tarot in (\w+) and fling it at (\w+). It hooks viciously into (the )?\w+ flesh, a small trail of blood dripping from where it pierced the skin.$</string>
									</regexCodeList>
									<regexCodePropertyList>
										<integer>1</integer>
									</regexCodePropertyList>
								</Trigger>
								<Trigger isActive="yes" isFolder="no" isTempTrigger="no" isMultiline="no" isPerlSlashGOption="no" isColorizerTrigger="no" isFilterTrigger="no" isSoundTrigger="no" isColorTrigger="no" isColorTriggerFg="no" isColorTriggerBg="no">
									<name>No adder at all</name>
									<script>if matches[2] == snd.target then
	snd.adder_attached = false
	snd.adder_ready = false
	snd.adderafflict = "none"
end</script>
									<triggerType>0</triggerType>
									<conditonLineDelta>0</conditonLineDelta>
									<mStayOpen>0</mStayOpen>
									<mCommand></mCommand>
									<packageName></packageName>
									<mFgColor>#ff0000</mFgColor>
									<mBgColor>#ffff00</mBgColor>
									<mSoundFile></mSoundFile>
									<colorTriggerFgColor>#000000</colorTriggerFgColor>
									<colorTriggerBgColor>#000000</colorTriggerBgColor>
									<regexCodeList>
										<string>^There is no Adder tarot attached to (\w+).$</string>
									</regexCodeList>
									<regexCodePropertyList>
										<integer>1</integer>
									</regexCodePropertyList>
								</Trigger>
								<Trigger isActive="yes" isFolder="no" isTempTrigger="no" isMultiline="no" isPerlSlashGOption="no" isColorizerTrigger="no" isFilterTrigger="no" isSoundTrigger="no" isColorTrigger="no" isColorTriggerFg="no" isColorTriggerBg="no">
									<name>Adder activate ready</name>
									<script>if matches[2] == snd.target then
	snd.adder_attached = true
	if matches[1]:find("tingle") then
		snd.adder_ready = true
	end
end</script>
									<triggerType>0</triggerType>
									<conditonLineDelta>0</conditonLineDelta>
									<mStayOpen>0</mStayOpen>
									<mCommand></mCommand>
									<packageName></packageName>
									<mFgColor>#ff0000</mFgColor>
									<mBgColor>#ffff00</mBgColor>
									<mSoundFile></mSoundFile>
									<colorTriggerFgColor>#000000</colorTriggerFgColor>
									<colorTriggerBgColor>#000000</colorTriggerBgColor>
									<regexCodeList>
										<string>^A tingle flows through you as the Adder on (\w+) readies itself.$</string>
										<string>^You have already placed the Adder upon (\w+).$</string>
									</regexCodeList>
									<regexCodePropertyList>
										<integer>1</integer>
										<integer>1</integer>
									</regexCodePropertyList>
								</Trigger>
								<Trigger isActive="yes" isFolder="no" isTempTrigger="no" isMultiline="no" isPerlSlashGOption="no" isColorizerTrigger="no" isFilterTrigger="no" isSoundTrigger="no" isColorTrigger="no" isColorTriggerFg="no" isColorTriggerBg="no">
									<name>Adder ripped</name>
									<script>if matches[2] == snd.target then
	snd.adder_attached = false
	snd.adder_ready = false
	snd.adderafflict = "none"
end</script>
									<triggerType>0</triggerType>
									<conditonLineDelta>0</conditonLineDelta>
									<mStayOpen>0</mStayOpen>
									<mCommand></mCommand>
									<packageName></packageName>
									<mFgColor>#ff0000</mFgColor>
									<mBgColor>#ffff00</mBgColor>
									<mSoundFile></mSoundFile>
									<colorTriggerFgColor>#000000</colorTriggerFgColor>
									<colorTriggerBgColor>#000000</colorTriggerBgColor>
									<regexCodeList>
										<string>^(\w+) rips the Adder tarot painfully from (the )?\w+ flesh.$  </string>
									</regexCodeList>
									<regexCodePropertyList>
										<integer>1</integer>
									</regexCodePropertyList>
								</Trigger>
								<Trigger isActive="yes" isFolder="no" isTempTrigger="no" isMultiline="no" isPerlSlashGOption="no" isColorizerTrigger="no" isFilterTrigger="no" isSoundTrigger="no" isColorTrigger="no" isColorTriggerFg="no" isColorTriggerBg="no">
									<name>Adder first given with haemophilia</name>
									<script>if matches[2] == snd.target then
	if not snd.checkAff("haemophilia") then 
		snd.target_got("haemophilia")
	end
	if matches[1]:find("You") then
	  snd.adder_attached = true
		snd.adder_ready = false
	end
end</script>
									<triggerType>0</triggerType>
									<conditonLineDelta>0</conditonLineDelta>
									<mStayOpen>0</mStayOpen>
									<mCommand></mCommand>
									<packageName></packageName>
									<mFgColor>#ff0000</mFgColor>
									<mBgColor>#ffff00</mBgColor>
									<mSoundFile></mSoundFile>
									<colorTriggerFgColor>#000000</colorTriggerFgColor>
									<colorTriggerBgColor>#000000</colorTriggerBgColor>
									<regexCodeList>
										<string>^\w+ uses? Tarot Adder on (\w+).$</string>
									</regexCodeList>
									<regexCodePropertyList>
										<integer>1</integer>
									</regexCodePropertyList>
								</Trigger>
								<Trigger isActive="yes" isFolder="no" isTempTrigger="no" isMultiline="no" isPerlSlashGOption="no" isColorizerTrigger="no" isFilterTrigger="no" isSoundTrigger="no" isColorTrigger="no" isColorTriggerFg="no" isColorTriggerBg="no">
									<name>Adder used</name>
									<script>snd.adder_attached = false
snd.adder_ready = false

local aff = snd.venomEffect(matches[3])
 
if matches[2] == snd.target then
	if not snd.checkAff(aff) then
		snd.target_got(aff)
	end
end</script>
									<triggerType>0</triggerType>
									<conditonLineDelta>0</conditonLineDelta>
									<mStayOpen>0</mStayOpen>
									<mCommand></mCommand>
									<packageName></packageName>
									<mFgColor>#ff0000</mFgColor>
									<mBgColor>#ffff00</mBgColor>
									<mSoundFile></mSoundFile>
									<colorTriggerFgColor>#000000</colorTriggerFgColor>
									<colorTriggerBgColor>#000000</colorTriggerBgColor>
									<regexCodeList>
										<string>^The Adder tarot on (\w+) suddenly lurches into motion as an adder rises up from underneath it. It strikes (the )?\w+ in the neck, (.*) glistening on its fangs.$</string>
									</regexCodeList>
									<regexCodePropertyList>
										<integer>1</integer>
									</regexCodePropertyList>
								</Trigger>
							</TriggerGroup>
						</TriggerGroup>
						<TriggerGroup isActive="yes" isFolder="yes" isTempTrigger="no" isMultiline="no" isPerlSlashGOption="no" isColorizerTrigger="no" isFilterTrigger="no" isSoundTrigger="no" isColorTrigger="no" isColorTriggerFg="no" isColorTriggerBg="no">
							<name>Cured Afflictions</name>
							<script></script>
							<triggerType>0</triggerType>
							<conditonLineDelta>0</conditonLineDelta>
							<mStayOpen>0</mStayOpen>
							<mCommand></mCommand>
							<packageName></packageName>
							<mFgColor>#ff0000</mFgColor>
							<mBgColor>#ffff00</mBgColor>
							<mSoundFile></mSoundFile>
							<colorTriggerFgColor>#000000</colorTriggerFgColor>
							<colorTriggerBgColor>#000000</colorTriggerBgColor>
							<regexCodeList />
							<regexCodePropertyList />
							<Trigger isActive="yes" isFolder="no" isTempTrigger="no" isMultiline="no" isPerlSlashGOption="no" isColorizerTrigger="no" isFilterTrigger="no" isSoundTrigger="no" isColorTrigger="no" isColorTriggerFg="no" isColorTriggerBg="no">
								<name>discern</name>
								<script>if snd.toggles.atkecho then
 deleteLine()
 snd.message(matches[2].." cured: "..matches[3]..".")
end
if matches[2] == snd.target then
 if matches[3] == "limp veins" then
  snd.target_cured("asthma")
 end
 snd.target_cured(matches[3])
end</script>
								<triggerType>0</triggerType>
								<conditonLineDelta>0</conditonLineDelta>
								<mStayOpen>0</mStayOpen>
								<mCommand></mCommand>
								<packageName></packageName>
								<mFgColor>#ff0000</mFgColor>
								<mBgColor>#ffff00</mBgColor>
								<mSoundFile></mSoundFile>
								<colorTriggerFgColor>#000000</colorTriggerFgColor>
								<colorTriggerBgColor>#000000</colorTriggerBgColor>
								<regexCodeList>
									<string>^You discern that (\w+) has cured the effects of (.*)\.$</string>
								</regexCodeList>
								<regexCodePropertyList>
									<integer>1</integer>
								</regexCodePropertyList>
							</Trigger>
							<Trigger isActive="yes" isFolder="no" isTempTrigger="no" isMultiline="no" isPerlSlashGOption="no" isColorizerTrigger="no" isFilterTrigger="no" isSoundTrigger="no" isColorTrigger="no" isColorTriggerFg="no" isColorTriggerBg="no">
								<name>ate herb</name>
								<script>if matches[2] == snd.target then
 snd.target_cured("anorexia")
 snd.target_used(matches[4])
end</script>
								<triggerType>0</triggerType>
								<conditonLineDelta>0</conditonLineDelta>
								<mStayOpen>0</mStayOpen>
								<mCommand></mCommand>
								<packageName></packageName>
								<mFgColor>#ff0000</mFgColor>
								<mBgColor>#ffff00</mBgColor>
								<mSoundFile></mSoundFile>
								<colorTriggerFgColor>#000000</colorTriggerFgColor>
								<colorTriggerBgColor>#000000</colorTriggerBgColor>
								<regexCodeList>
									<string>^(\w+) swallows (a|an) (.*) pill\.$</string>
									<string>^(\w+) swallows (a|an) pill of (.*)\.$</string>
								</regexCodeList>
								<regexCodePropertyList>
									<integer>1</integer>
									<integer>1</integer>
								</regexCodePropertyList>
							</Trigger>
							<Trigger isActive="yes" isFolder="no" isTempTrigger="no" isMultiline="no" isPerlSlashGOption="no" isColorizerTrigger="no" isFilterTrigger="no" isSoundTrigger="no" isColorTrigger="no" isColorTriggerFg="no" isColorTriggerBg="no">
								<name>smoked</name>
								<script>if matches[2] == snd.target then
 snd.target_cured("asthma")
 if snd.cures[matches[4]] ~= nil then
  snd.target_used(matches[4])
 end
end</script>
								<triggerType>0</triggerType>
								<conditonLineDelta>0</conditonLineDelta>
								<mStayOpen>0</mStayOpen>
								<mCommand></mCommand>
								<packageName></packageName>
								<mFgColor>#ff0000</mFgColor>
								<mBgColor>#ffff00</mBgColor>
								<mSoundFile></mSoundFile>
								<colorTriggerFgColor>#000000</colorTriggerFgColor>
								<colorTriggerBgColor>#000000</colorTriggerBgColor>
								<regexCodeList>
									<string>^(\w+) takes a long drag off (the )?\w+ pipe filled with (\w+)\.$</string>
								</regexCodeList>
								<regexCodePropertyList>
									<integer>1</integer>
								</regexCodePropertyList>
							</Trigger>
							<Trigger isActive="yes" isFolder="no" isTempTrigger="no" isMultiline="no" isPerlSlashGOption="no" isColorizerTrigger="no" isFilterTrigger="no" isSoundTrigger="no" isColorTrigger="no" isColorTriggerFg="no" isColorTriggerBg="no">
								<name>focus</name>
								<script>if matches[2]:lower() == snd.target:lower() then
	snd.target_used("focus")
	if snd.checkAff("gloom") and table.contains(gmcp.Room.Info.details, "darkness") == true then
		snd.target_got("nyctophobia")
	end
	snd.target_cured("muddled")
end</script>
								<triggerType>0</triggerType>
								<conditonLineDelta>0</conditonLineDelta>
								<mStayOpen>0</mStayOpen>
								<mCommand></mCommand>
								<packageName></packageName>
								<mFgColor>#ff0000</mFgColor>
								<mBgColor>#ffff00</mBgColor>
								<mSoundFile></mSoundFile>
								<colorTriggerFgColor>#000000</colorTriggerFgColor>
								<colorTriggerBgColor>#000000</colorTriggerBgColor>
								<regexCodeList>
									<string>^A look of extreme focus crosses the face of (\w+)\.$</string>
								</regexCodeList>
								<regexCodePropertyList>
									<integer>1</integer>
								</regexCodePropertyList>
							</Trigger>
							<Trigger isActive="yes" isFolder="no" isTempTrigger="no" isMultiline="no" isPerlSlashGOption="no" isColorizerTrigger="no" isFilterTrigger="no" isSoundTrigger="no" isColorTrigger="no" isColorTriggerFg="no" isColorTriggerBg="no">
								<name>fitness</name>
								<script>if matches[2] == snd.target then
 snd.target_cured("asthma")
end</script>
								<triggerType>0</triggerType>
								<conditonLineDelta>0</conditonLineDelta>
								<mStayOpen>0</mStayOpen>
								<mCommand></mCommand>
								<packageName></packageName>
								<mFgColor>#ff0000</mFgColor>
								<mBgColor>#ffff00</mBgColor>
								<mSoundFile></mSoundFile>
								<colorTriggerFgColor>#000000</colorTriggerFgColor>
								<colorTriggerBgColor>#000000</colorTriggerBgColor>
								<regexCodeList>
									<string>^(\w+) inhales deeply, filling (the )?\w+ lungs with air\.$</string>
								</regexCodeList>
								<regexCodePropertyList>
									<integer>1</integer>
								</regexCodePropertyList>
							</Trigger>
							<Trigger isActive="yes" isFolder="no" isTempTrigger="no" isMultiline="no" isPerlSlashGOption="no" isColorizerTrigger="no" isFilterTrigger="no" isSoundTrigger="no" isColorTrigger="no" isColorTriggerFg="no" isColorTriggerBg="no">
								<name>poultice</name>
								<script>if matches[2] == snd.target then
	snd.target_cured("slickness")
	snd.target_used(matches[4])
end

</script>
								<triggerType>0</triggerType>
								<conditonLineDelta>0</conditonLineDelta>
								<mStayOpen>0</mStayOpen>
								<mCommand></mCommand>
								<packageName></packageName>
								<mFgColor>#ff0000</mFgColor>
								<mBgColor>#ffff00</mBgColor>
								<mSoundFile></mSoundFile>
								<colorTriggerFgColor>#000000</colorTriggerFgColor>
								<colorTriggerBgColor>#000000</colorTriggerBgColor>
								<regexCodeList>
									<string>^(\w+) presses (a|an) (\w+) poultice against (the )?\w+ (.*), rubbing the poultice into (the )?\w+ flesh\.$</string>
								</regexCodeList>
								<regexCodePropertyList>
									<integer>1</integer>
								</regexCodePropertyList>
							</Trigger>
							<Trigger isActive="yes" isFolder="no" isTempTrigger="no" isMultiline="no" isPerlSlashGOption="no" isColorizerTrigger="no" isFilterTrigger="no" isSoundTrigger="no" isColorTrigger="no" isColorTriggerFg="no" isColorTriggerBg="no">
								<name>also smoked</name>
								<script>if matches[2] == snd.target then
 snd.target_cured("asthma")
end</script>
								<triggerType>0</triggerType>
								<conditonLineDelta>0</conditonLineDelta>
								<mStayOpen>0</mStayOpen>
								<mCommand></mCommand>
								<packageName></packageName>
								<mFgColor>#ff0000</mFgColor>
								<mBgColor>#ffff00</mBgColor>
								<mSoundFile></mSoundFile>
								<colorTriggerFgColor>#000000</colorTriggerFgColor>
								<colorTriggerBgColor>#000000</colorTriggerBgColor>
								<regexCodeList>
									<string>^(\w+) takes a long drag off (the )?\w+ pipe\.$</string>
								</regexCodeList>
								<regexCodePropertyList>
									<integer>1</integer>
								</regexCodePropertyList>
							</Trigger>
							<Trigger isActive="yes" isFolder="no" isTempTrigger="no" isMultiline="no" isPerlSlashGOption="no" isColorizerTrigger="no" isFilterTrigger="no" isSoundTrigger="no" isColorTrigger="no" isColorTriggerFg="no" isColorTriggerBg="no">
								<name>touched tree</name>
								<script>if matches[2] == snd.target then
 snd.target_cured("paresis")
 snd.target_cured("paralysis")
end</script>
								<triggerType>0</triggerType>
								<conditonLineDelta>0</conditonLineDelta>
								<mStayOpen>0</mStayOpen>
								<mCommand></mCommand>
								<packageName></packageName>
								<mFgColor>#ff0000</mFgColor>
								<mBgColor>#ffff00</mBgColor>
								<mSoundFile></mSoundFile>
								<colorTriggerFgColor>#000000</colorTriggerFgColor>
								<colorTriggerBgColor>#000000</colorTriggerBgColor>
								<regexCodeList>
									<string>^(.*) touches a tree of life tattoo\.$</string>
								</regexCodeList>
								<regexCodePropertyList>
									<integer>1</integer>
								</regexCodePropertyList>
							</Trigger>
							<Trigger isActive="yes" isFolder="no" isTempTrigger="no" isMultiline="no" isPerlSlashGOption="no" isColorizerTrigger="no" isFilterTrigger="no" isSoundTrigger="no" isColorTrigger="no" isColorTriggerFg="no" isColorTriggerBg="no">
								<name>soul disease</name>
								<script>if matches[2] == snd.target then
 snd.target_cured("soul_disease")
end</script>
								<triggerType>0</triggerType>
								<conditonLineDelta>0</conditonLineDelta>
								<mStayOpen>0</mStayOpen>
								<mCommand></mCommand>
								<packageName></packageName>
								<mFgColor>#ff0000</mFgColor>
								<mBgColor>#ffff00</mBgColor>
								<mSoundFile></mSoundFile>
								<colorTriggerFgColor>#000000</colorTriggerFgColor>
								<colorTriggerBgColor>#000000</colorTriggerBgColor>
								<regexCodeList>
									<string>^(\w+) looks more robust and healthy as (the )?\w+ soul's disease fades away\.$</string>
								</regexCodeList>
								<regexCodePropertyList>
									<integer>1</integer>
								</regexCodePropertyList>
							</Trigger>
							<Trigger isActive="yes" isFolder="no" isTempTrigger="no" isMultiline="no" isPerlSlashGOption="no" isColorizerTrigger="no" isFilterTrigger="no" isSoundTrigger="no" isColorTrigger="no" isColorTriggerFg="no" isColorTriggerBg="no">
								<name>soul wraith</name>
								<script>if matches[2] == snd.target then
 snd.target_cured("soul_wraith")
end</script>
								<triggerType>0</triggerType>
								<conditonLineDelta>0</conditonLineDelta>
								<mStayOpen>0</mStayOpen>
								<mCommand></mCommand>
								<packageName></packageName>
								<mFgColor>#ff0000</mFgColor>
								<mBgColor>#ffff00</mBgColor>
								<mSoundFile></mSoundFile>
								<colorTriggerFgColor>#000000</colorTriggerFgColor>
								<colorTriggerBgColor>#000000</colorTriggerBgColor>
								<regexCodeList>
									<string>^The sliver of soul infecting (\w+) slowly fades, its essence depleted\.$</string>
									<string>^As (\w+) attempts to cower behind (the )?\w+ shield, a coiled sliver of soul strikes, tearing itself apart as it rakes the protection to shreds\.$</string>
								</regexCodeList>
								<regexCodePropertyList>
									<integer>1</integer>
									<integer>1</integer>
								</regexCodePropertyList>
							</Trigger>
							<Trigger isActive="yes" isFolder="no" isTempTrigger="no" isMultiline="no" isPerlSlashGOption="no" isColorizerTrigger="no" isFilterTrigger="no" isSoundTrigger="no" isColorTrigger="no" isColorTriggerFg="no" isColorTriggerBg="no">
								<name>soul poison</name>
								<script>if matches[2] == snd.target then
 snd.target_cured("soul_poison")
end</script>
								<triggerType>0</triggerType>
								<conditonLineDelta>0</conditonLineDelta>
								<mStayOpen>0</mStayOpen>
								<mCommand></mCommand>
								<packageName></packageName>
								<mFgColor>#ff0000</mFgColor>
								<mBgColor>#ffff00</mBgColor>
								<mSoundFile></mSoundFile>
								<colorTriggerFgColor>#000000</colorTriggerFgColor>
								<colorTriggerBgColor>#000000</colorTriggerBgColor>
								<regexCodeList>
									<string>^The tenebrous souls plaguing (\w+) fade away with a wail\.$</string>
								</regexCodeList>
								<regexCodePropertyList>
									<integer>1</integer>
								</regexCodePropertyList>
							</Trigger>
							<Trigger isActive="yes" isFolder="no" isTempTrigger="no" isMultiline="no" isPerlSlashGOption="no" isColorizerTrigger="no" isFilterTrigger="no" isSoundTrigger="no" isColorTrigger="no" isColorTriggerFg="no" isColorTriggerBg="no">
								<name>glasslimb</name>
								<script>if matches[2] == snd.target then
 snd.target_cured("glasslimb")
end</script>
								<triggerType>0</triggerType>
								<conditonLineDelta>0</conditonLineDelta>
								<mStayOpen>0</mStayOpen>
								<mCommand></mCommand>
								<packageName></packageName>
								<mFgColor>#ff0000</mFgColor>
								<mBgColor>#ffff00</mBgColor>
								<mSoundFile></mSoundFile>
								<colorTriggerFgColor>#000000</colorTriggerFgColor>
								<colorTriggerBgColor>#000000</colorTriggerBgColor>
								<regexCodeList>
									<string>^The eerie wail from (\w+)('s|') resonating bones dies down as (the )?\w+ manages to shrug off the glass limb effect\.$</string>
								</regexCodeList>
								<regexCodePropertyList>
									<integer>1</integer>
								</regexCodePropertyList>
							</Trigger>
							<Trigger isActive="yes" isFolder="no" isTempTrigger="no" isMultiline="no" isPerlSlashGOption="no" isColorizerTrigger="no" isFilterTrigger="no" isSoundTrigger="no" isColorTrigger="no" isColorTriggerFg="no" isColorTriggerBg="no">
								<name>soul distort</name>
								<script>if matches[2] == snd.target then
 snd.target_cured("distortion")
end</script>
								<triggerType>0</triggerType>
								<conditonLineDelta>0</conditonLineDelta>
								<mStayOpen>0</mStayOpen>
								<mCommand></mCommand>
								<packageName></packageName>
								<mFgColor>#ff0000</mFgColor>
								<mBgColor>#ffff00</mBgColor>
								<mSoundFile></mSoundFile>
								<colorTriggerFgColor>#000000</colorTriggerFgColor>
								<colorTriggerBgColor>#000000</colorTriggerBgColor>
								<regexCodeList>
									<string>^Distortion has left (\w+)\.$</string>
									<string>^(\w+) flinches and hesitates as you strike at (the )?\w+, causing enough of a hesitation to allow your attack to slip past (the )?\w+ defenses\.$</string>
								</regexCodeList>
								<regexCodePropertyList>
									<integer>1</integer>
									<integer>1</integer>
								</regexCodePropertyList>
							</Trigger>
							<Trigger isActive="yes" isFolder="no" isTempTrigger="no" isMultiline="no" isPerlSlashGOption="no" isColorizerTrigger="no" isFilterTrigger="no" isSoundTrigger="no" isColorTrigger="no" isColorTriggerFg="no" isColorTriggerBg="no">
								<name>no crushed chest</name>
								<script>snd.target_cured("crushed_chest")</script>
								<triggerType>0</triggerType>
								<conditonLineDelta>0</conditonLineDelta>
								<mStayOpen>0</mStayOpen>
								<mCommand></mCommand>
								<packageName></packageName>
								<mFgColor>#ff0000</mFgColor>
								<mBgColor>#ffff00</mBgColor>
								<mSoundFile></mSoundFile>
								<colorTriggerFgColor>#000000</colorTriggerFgColor>
								<colorTriggerBgColor>#000000</colorTriggerBgColor>
								<regexCodeList>
									<string>Your target must have a crushed chest.</string>
								</regexCodeList>
								<regexCodePropertyList>
									<integer>3</integer>
								</regexCodePropertyList>
							</Trigger>
							<Trigger isActive="yes" isFolder="no" isTempTrigger="no" isMultiline="no" isPerlSlashGOption="no" isColorizerTrigger="no" isFilterTrigger="no" isSoundTrigger="no" isColorTrigger="no" isColorTriggerFg="no" isColorTriggerBg="no">
								<name>writhe</name>
								<script>if matches[2] == snd.target then
 if matches[4] == "state of transfixion" then
  snd.target_cured("transfixed")
 elseif matches[4] == "bindings" then
  snd.target_cured("webbed")
 elseif matches[4] == "thigh-jawlock" then
  snd.target_cured("thighlock")
 elseif matches[4] == "armpit-jawlock" then
  snd.target_cured("armpitlock")
 elseif matches[4] == "neck-jawlock" then
  snd.target_cured("necklock")
 elseif matches[4] == "entanglement by ropes" then
  snd.target_cured("ropes")
 end
 snd.jawlocked = false
end</script>
								<triggerType>0</triggerType>
								<conditonLineDelta>0</conditonLineDelta>
								<mStayOpen>0</mStayOpen>
								<mCommand></mCommand>
								<packageName></packageName>
								<mFgColor>#ff0000</mFgColor>
								<mBgColor>#ffff00</mBgColor>
								<mSoundFile></mSoundFile>
								<colorTriggerFgColor>#000000</colorTriggerFgColor>
								<colorTriggerBgColor>#000000</colorTriggerBgColor>
								<regexCodeList>
									<string>^(\w+) has writhed free of (the )?\w+ (.+)\.$</string>
								</regexCodeList>
								<regexCodePropertyList>
									<integer>1</integer>
								</regexCodePropertyList>
							</Trigger>
							<Trigger isActive="yes" isFolder="no" isTempTrigger="no" isMultiline="no" isPerlSlashGOption="no" isColorizerTrigger="no" isFilterTrigger="no" isSoundTrigger="no" isColorTrigger="no" isColorTriggerFg="no" isColorTriggerBg="no">
								<name>rupture</name>
								<script>snd.jawlocked = false
snd.target_cured("thighlock")
snd.target_cured("armpitlock")
snd.target_cured("necklock")</script>
								<triggerType>0</triggerType>
								<conditonLineDelta>0</conditonLineDelta>
								<mStayOpen>0</mStayOpen>
								<mCommand></mCommand>
								<packageName></packageName>
								<mFgColor>#ff0000</mFgColor>
								<mBgColor>#ffff00</mBgColor>
								<mSoundFile></mSoundFile>
								<colorTriggerFgColor>#000000</colorTriggerFgColor>
								<colorTriggerBgColor>#000000</colorTriggerBgColor>
								<regexCodeList>
									<string>^Snarling, you jerk your head violently from side to side, ripping off a chunk of (\w+)('s|') flesh and rupturing the wound in a spray of blood\.$</string>
								</regexCodeList>
								<regexCodePropertyList>
									<integer>1</integer>
								</regexCodePropertyList>
							</Trigger>
							<Trigger isActive="yes" isFolder="no" isTempTrigger="no" isMultiline="no" isPerlSlashGOption="no" isColorizerTrigger="no" isFilterTrigger="no" isSoundTrigger="no" isColorTrigger="no" isColorTriggerFg="no" isColorTriggerBg="no">
								<name>void</name>
								<script>if matches[2] == snd.target then
 if snd.last_cured ~= "" then
  if snd.cures[snd.last_cure] ~= nil then
   if table.contains(snd.cures[snd.last_cure], snd.last_cured) then
    snd.target_got(snd.last_cured)
	 end
  end
 end
 snd.target_cured("void")
end</script>
								<triggerType>0</triggerType>
								<conditonLineDelta>0</conditonLineDelta>
								<mStayOpen>0</mStayOpen>
								<mCommand></mCommand>
								<packageName></packageName>
								<mFgColor>#ff0000</mFgColor>
								<mBgColor>#ffff00</mBgColor>
								<mSoundFile></mSoundFile>
								<colorTriggerFgColor>#000000</colorTriggerFgColor>
								<colorTriggerBgColor>#000000</colorTriggerBgColor>
								<regexCodeList>
									<string>^The shadowy void around (\w+) disappears\.$</string>
								</regexCodeList>
								<regexCodePropertyList>
									<integer>1</integer>
								</regexCodePropertyList>
							</Trigger>
							<Trigger isActive="yes" isFolder="no" isTempTrigger="no" isMultiline="no" isPerlSlashGOption="no" isColorizerTrigger="no" isFilterTrigger="no" isSoundTrigger="no" isColorTrigger="no" isColorTriggerFg="no" isColorTriggerBg="no">
								<name>weak void</name>
								<script>if matches[2] == snd.target and snd.last_cured ~= "" then
 if snd.cures[snd.last_cure] ~= nil then
  if table.contains(snd.cures[snd.last_cure], snd.last_cured) then
   snd.target_got(snd.last_cured)
	end
 end
end</script>
								<triggerType>0</triggerType>
								<conditonLineDelta>0</conditonLineDelta>
								<mStayOpen>0</mStayOpen>
								<mCommand></mCommand>
								<packageName></packageName>
								<mFgColor>#ff0000</mFgColor>
								<mBgColor>#ffff00</mBgColor>
								<mSoundFile></mSoundFile>
								<colorTriggerFgColor>#000000</colorTriggerFgColor>
								<colorTriggerBgColor>#000000</colorTriggerBgColor>
								<regexCodeList>
									<string>^The shadowy void around (\w+) weakens\.$</string>
								</regexCodeList>
								<regexCodePropertyList>
									<integer>1</integer>
								</regexCodePropertyList>
							</Trigger>
							<Trigger isActive="yes" isFolder="no" isTempTrigger="no" isMultiline="no" isPerlSlashGOption="no" isColorizerTrigger="no" isFilterTrigger="no" isSoundTrigger="no" isColorTrigger="no" isColorTriggerFg="no" isColorTriggerBg="no">
								<name>shedding</name>
								<script>if matches[2] == snd.target then
 snd.target_cured("slickness")
end</script>
								<triggerType>0</triggerType>
								<conditonLineDelta>0</conditonLineDelta>
								<mStayOpen>0</mStayOpen>
								<mCommand></mCommand>
								<packageName></packageName>
								<mFgColor>#ff0000</mFgColor>
								<mBgColor>#ffff00</mBgColor>
								<mSoundFile></mSoundFile>
								<colorTriggerFgColor>#000000</colorTriggerFgColor>
								<colorTriggerBgColor>#000000</colorTriggerBgColor>
								<regexCodeList>
									<string>^(\w+) scrapes (the )?\w+ vigourously, shedding fur and the oily substance adhering to it\.$</string>
								</regexCodeList>
								<regexCodePropertyList>
									<integer>1</integer>
								</regexCodePropertyList>
							</Trigger>
							<Trigger isActive="yes" isFolder="no" isTempTrigger="no" isMultiline="yes" isPerlSlashGOption="no" isColorizerTrigger="no" isFilterTrigger="no" isSoundTrigger="no" isColorTrigger="no" isColorTriggerFg="no" isColorTriggerBg="no">
								<name>angel sacrifice</name>
								<script>if multimatches[1][2] == snd.target then
 snd.reset_target()
end</script>
								<triggerType>0</triggerType>
								<conditonLineDelta>2</conditonLineDelta>
								<mStayOpen>0</mStayOpen>
								<mCommand></mCommand>
								<packageName></packageName>
								<mFgColor>#ff0000</mFgColor>
								<mBgColor>#ffff00</mBgColor>
								<mSoundFile></mSoundFile>
								<colorTriggerFgColor>#000000</colorTriggerFgColor>
								<colorTriggerBgColor>#000000</colorTriggerBgColor>
								<regexCodeList>
									<string>^(\w+) uses Spirituality Sacrifice\.$</string>
									<string>1</string>
									<string>^A guardian angel begins to burn impossibly white as (\w+) eyes roll back in ecstasy\. As the light fades away, the angel is no where to be seen\.$</string>
								</regexCodeList>
								<regexCodePropertyList>
									<integer>1</integer>
									<integer>5</integer>
									<integer>1</integer>
								</regexCodePropertyList>
							</Trigger>
							<Trigger isActive="yes" isFolder="no" isTempTrigger="no" isMultiline="no" isPerlSlashGOption="no" isColorizerTrigger="no" isFilterTrigger="no" isSoundTrigger="no" isColorTrigger="no" isColorTriggerFg="no" isColorTriggerBg="no">
								<name>Disrupt cure</name>
								<script>if matches[2] == snd.target then
 snd.target_cured("disrupted")
 snd.target_cured("confusion")
end</script>
								<triggerType>0</triggerType>
								<conditonLineDelta>0</conditonLineDelta>
								<mStayOpen>0</mStayOpen>
								<mCommand></mCommand>
								<packageName></packageName>
								<mFgColor>#ff0000</mFgColor>
								<mBgColor>#ffff00</mBgColor>
								<mSoundFile></mSoundFile>
								<colorTriggerFgColor>#000000</colorTriggerFgColor>
								<colorTriggerBgColor>#000000</colorTriggerBgColor>
								<regexCodeList>
									<string>^(\w+)'s eyes lose their focus suddenly\.$</string>
								</regexCodeList>
								<regexCodePropertyList>
									<integer>1</integer>
								</regexCodePropertyList>
							</Trigger>
							<Trigger isActive="yes" isFolder="no" isTempTrigger="no" isMultiline="no" isPerlSlashGOption="no" isColorizerTrigger="no" isFilterTrigger="no" isSoundTrigger="no" isColorTrigger="no" isColorTriggerFg="no" isColorTriggerBg="no">
								<name>Spinecut fails</name>
								<script>if matches[3] == snd.target then
	snd.target_cured("a broken left leg")
	snd.target_cured("a broken right leg")
	snd.target_cured("confusion")
end</script>
								<triggerType>0</triggerType>
								<conditonLineDelta>0</conditonLineDelta>
								<mStayOpen>0</mStayOpen>
								<mCommand></mCommand>
								<packageName></packageName>
								<mFgColor>#ff0000</mFgColor>
								<mBgColor>#ffff00</mBgColor>
								<mSoundFile></mSoundFile>
								<colorTriggerFgColor>#000000</colorTriggerFgColor>
								<colorTriggerBgColor>#000000</colorTriggerBgColor>
								<regexCodeList>
									<string>^(\w+) uses? Dhuriv Spinecut Fail on (\w+)\.$</string>
								</regexCodeList>
								<regexCodePropertyList>
									<integer>1</integer>
								</regexCodePropertyList>
							</Trigger>
							<Trigger isActive="yes" isFolder="no" isTempTrigger="no" isMultiline="no" isPerlSlashGOption="no" isColorizerTrigger="no" isFilterTrigger="no" isSoundTrigger="no" isColorTrigger="no" isColorTriggerFg="no" isColorTriggerBg="no">
								<name>disperse out of all writhes</name>
								<script>if snd.target == matches[2] then
	snd.target_cured("impaled")
  snd.target_cured("transfixed")
  snd.target_cured("webbed")
  snd.target_cured("thighlock")
  snd.target_cured("armpitlock")
  snd.target_cured("necklock")
  snd.jawlocked = false
	snd.target_impaled = false
end
</script>
								<triggerType>0</triggerType>
								<conditonLineDelta>0</conditonLineDelta>
								<mStayOpen>0</mStayOpen>
								<mCommand></mCommand>
								<packageName></packageName>
								<mFgColor>#ff0000</mFgColor>
								<mBgColor>#ffff00</mBgColor>
								<mSoundFile></mSoundFile>
								<colorTriggerFgColor>#000000</colorTriggerFgColor>
								<colorTriggerBgColor>#000000</colorTriggerBgColor>
								<regexCodeList>
									<string>^\w+ uses Research Disperse on (\w+).$</string>
								</regexCodeList>
								<regexCodePropertyList>
									<integer>1</integer>
								</regexCodePropertyList>
							</Trigger>
							<Trigger isActive="yes" isFolder="no" isTempTrigger="no" isMultiline="no" isPerlSlashGOption="no" isColorizerTrigger="no" isFilterTrigger="no" isSoundTrigger="no" isColorTrigger="no" isColorTriggerFg="no" isColorTriggerBg="no">
								<name>flame tattoo</name>
								<script>if snd.target == matches[2] then
  snd.target_cured("webbed")
end
</script>
								<triggerType>0</triggerType>
								<conditonLineDelta>0</conditonLineDelta>
								<mStayOpen>0</mStayOpen>
								<mCommand></mCommand>
								<packageName></packageName>
								<mFgColor>#ff0000</mFgColor>
								<mBgColor>#ffff00</mBgColor>
								<mSoundFile></mSoundFile>
								<colorTriggerFgColor>#000000</colorTriggerFgColor>
								<colorTriggerBgColor>#000000</colorTriggerBgColor>
								<regexCodeList>
									<string>^(\w+)'s flame tattoo flares suddenly, melting away the webbing around \w+.$</string>
								</regexCodeList>
								<regexCodePropertyList>
									<integer>1</integer>
								</regexCodePropertyList>
							</Trigger>
							<Trigger isActive="yes" isFolder="no" isTempTrigger="no" isMultiline="no" isPerlSlashGOption="no" isColorizerTrigger="no" isFilterTrigger="no" isSoundTrigger="no" isColorTrigger="no" isColorTriggerFg="no" isColorTriggerBg="no">
								<name>Dhuriv Impale Fail</name>
								<script>if snd.target == matches[2] then
	snd.target_cured("impaled")
  snd.target_cured("transfixed")
  snd.target_cured("webbed")
  snd.target_cured("thighlock")
  snd.target_cured("armpitlock")
  snd.target_cured("necklock")
  snd.jawlocked = false
end
</script>
								<triggerType>0</triggerType>
								<conditonLineDelta>0</conditonLineDelta>
								<mStayOpen>0</mStayOpen>
								<mCommand></mCommand>
								<packageName></packageName>
								<mFgColor>#ff0000</mFgColor>
								<mBgColor>#ffff00</mBgColor>
								<mSoundFile></mSoundFile>
								<colorTriggerFgColor>#000000</colorTriggerFgColor>
								<colorTriggerBgColor>#000000</colorTriggerBgColor>
								<regexCodeList>
									<string>^\w+ uses? Dhuriv Impale \(failure\) on (\w+)\.$</string>
								</regexCodeList>
								<regexCodePropertyList>
									<integer>1</integer>
								</regexCodePropertyList>
							</Trigger>
						</TriggerGroup>
						<TriggerGroup isActive="yes" isFolder="yes" isTempTrigger="no" isMultiline="no" isPerlSlashGOption="no" isColorizerTrigger="no" isFilterTrigger="no" isSoundTrigger="no" isColorTrigger="no" isColorTriggerFg="no" isColorTriggerBg="no">
							<name>Resists/Undos</name>
							<script></script>
							<triggerType>0</triggerType>
							<conditonLineDelta>0</conditonLineDelta>
							<mStayOpen>0</mStayOpen>
							<mCommand></mCommand>
							<packageName></packageName>
							<mFgColor>#ff0000</mFgColor>
							<mBgColor>#ffff00</mBgColor>
							<mSoundFile></mSoundFile>
							<colorTriggerFgColor>#000000</colorTriggerFgColor>
							<colorTriggerBgColor>#000000</colorTriggerBgColor>
							<regexCodeList />
							<regexCodePropertyList />
							<Trigger isActive="no" isFolder="no" isTempTrigger="no" isMultiline="yes" isPerlSlashGOption="no" isColorizerTrigger="no" isFilterTrigger="no" isSoundTrigger="no" isColorTrigger="no" isColorTriggerFg="no" isColorTriggerBg="no">
								<name>resisted</name>
								<script>for i in pairs(snd.effects) do
 if snd.effects[i] == multimatches[1][2] then
  snd.target_cured(i)
 end
end</script>
								<triggerType>0</triggerType>
								<conditonLineDelta>1</conditonLineDelta>
								<mStayOpen>0</mStayOpen>
								<mCommand></mCommand>
								<packageName></packageName>
								<mFgColor>#ff0000</mFgColor>
								<mBgColor>#ffff00</mBgColor>
								<mSoundFile></mSoundFile>
								<colorTriggerFgColor>#000000</colorTriggerFgColor>
								<colorTriggerBgColor>#000000</colorTriggerBgColor>
								<regexCodeList>
									<string>^You discern that a layer of (\w+) has rubbed off your weapon\.$</string>
									<string>1</string>
									<string>^You discern that (\w+) has resisted the (\w+) affliction\.$</string>
								</regexCodeList>
								<regexCodePropertyList>
									<integer>1</integer>
									<integer>5</integer>
									<integer>1</integer>
								</regexCodePropertyList>
							</Trigger>
							<Trigger isActive="yes" isFolder="no" isTempTrigger="no" isMultiline="no" isPerlSlashGOption="no" isColorizerTrigger="no" isFilterTrigger="no" isSoundTrigger="no" isColorTrigger="no" isColorTriggerFg="no" isColorTriggerBg="no">
								<name>resisted venom</name>
								<script>if matches[2] == snd.target then
 for i in pairs(snd.effects) do
  if snd.effects[i] == matches[3] then
   snd.target_cured(i)
	end
 end
end</script>
								<triggerType>0</triggerType>
								<conditonLineDelta>0</conditonLineDelta>
								<mStayOpen>0</mStayOpen>
								<mCommand></mCommand>
								<packageName></packageName>
								<mFgColor>#ff0000</mFgColor>
								<mBgColor>#ffff00</mBgColor>
								<mSoundFile></mSoundFile>
								<colorTriggerFgColor>#000000</colorTriggerFgColor>
								<colorTriggerBgColor>#000000</colorTriggerBgColor>
								<regexCodeList>
									<string>^(\w+)'s? face flushes as .* body purges the (\w+) venom\.$</string>
									<string>^The countercurrent coating (\w+)'s skin wicks away (\w+) before it can take.$</string>
								</regexCodeList>
								<regexCodePropertyList>
									<integer>1</integer>
									<integer>1</integer>
								</regexCodePropertyList>
							</Trigger>
							<Trigger isActive="yes" isFolder="no" isTempTrigger="no" isMultiline="yes" isPerlSlashGOption="no" isColorizerTrigger="no" isFilterTrigger="no" isSoundTrigger="no" isColorTrigger="no" isColorTriggerFg="no" isColorTriggerBg="no">
								<name>chaos lord resist</name>
								<script>if multimatches[1][2] == snd.target then
 snd.target_cured(multimatches[3][3])
end</script>
								<triggerType>0</triggerType>
								<conditonLineDelta>2</conditonLineDelta>
								<mStayOpen>0</mStayOpen>
								<mCommand></mCommand>
								<packageName></packageName>
								<mFgColor>#ff0000</mFgColor>
								<mBgColor>#ffff00</mBgColor>
								<mSoundFile></mSoundFile>
								<colorTriggerFgColor>#000000</colorTriggerFgColor>
								<colorTriggerBgColor>#000000</colorTriggerBgColor>
								<regexCodeList>
									<string>^The crackling chaotic energies surrounding (\w+)'s? body absorb the affliction\.$</string>
									<string>1</string>
									<string>^You discern that (\w+) has resisted the (\w+) affliction\.$</string>
								</regexCodeList>
								<regexCodePropertyList>
									<integer>1</integer>
									<integer>5</integer>
									<integer>1</integer>
								</regexCodePropertyList>
							</Trigger>
							<Trigger isActive="yes" isFolder="no" isTempTrigger="no" isMultiline="no" isPerlSlashGOption="no" isColorizerTrigger="no" isFilterTrigger="no" isSoundTrigger="no" isColorTrigger="no" isColorTriggerFg="no" isColorTriggerBg="no">
								<name>undo in general</name>
								<script>if snd.getting_hit == snd.target then
if #snd.last_affs &gt;= 1 then
 if snd.last_affs[1] == "blaze" then
  snd.used.rebounding = true
 else
  for i in pairs(snd.last_affs) do
   snd.target_cured(snd.last_affs[i])
  end
 end
end
end</script>
								<triggerType>0</triggerType>
								<conditonLineDelta>0</conditonLineDelta>
								<mStayOpen>0</mStayOpen>
								<mCommand></mCommand>
								<packageName></packageName>
								<mFgColor>#ff0000</mFgColor>
								<mBgColor>#ffff00</mBgColor>
								<mSoundFile></mSoundFile>
								<colorTriggerFgColor>#000000</colorTriggerFgColor>
								<colorTriggerBgColor>#000000</colorTriggerBgColor>
								<regexCodeList>
									<string>^The attack rebounds back onto (\w+)\!$</string>
									<string>^Stepping quickly out of the way, (\w+) dodges the attack\.$</string>
									<string>^(\w+) parries the attack on (.*) with a deft maneuver\.$</string>
									<string>^(\w+) guards the attack on (.*)\.$</string>
									<string>^You discern that (\w+) has resisted the .+ affliction\.$</string>
									<string>^A reflection of (\w+) blinks out of existence\.$</string>
									<string>^The attack rebounds away from (\w+) aura!$</string>
									<string>^(\w+)'s? galeward protects (the )?\w+ from the (\w+) venom\.$</string>
									<string>^(\w+)'s? waterward protects (the )?\w+ from the (\w+) venom\.$</string>
									<string>^With a free hand, (\w+) fends off the attack on (the )?\w+ (.+)\.$</string>
								</regexCodeList>
								<regexCodePropertyList>
									<integer>1</integer>
									<integer>1</integer>
									<integer>1</integer>
									<integer>1</integer>
									<integer>1</integer>
									<integer>1</integer>
									<integer>1</integer>
									<integer>1</integer>
									<integer>1</integer>
									<integer>1</integer>
								</regexCodePropertyList>
							</Trigger>
							<Trigger isActive="yes" isFolder="no" isTempTrigger="no" isMultiline="no" isPerlSlashGOption="no" isColorizerTrigger="no" isFilterTrigger="no" isSoundTrigger="no" isColorTrigger="no" isColorTriggerFg="no" isColorTriggerBg="no">
								<name>New trigger</name>
								<script>snd.target_cured(matches[3])</script>
								<triggerType>0</triggerType>
								<conditonLineDelta>0</conditonLineDelta>
								<mStayOpen>0</mStayOpen>
								<mCommand></mCommand>
								<packageName></packageName>
								<mFgColor>#ff0000</mFgColor>
								<mBgColor>#ffff00</mBgColor>
								<mSoundFile></mSoundFile>
								<colorTriggerFgColor>#000000</colorTriggerFgColor>
								<colorTriggerBgColor>#000000</colorTriggerBgColor>
								<regexCodeList>
									<string>^You discern that (\w+) has resisted the (\w+) affliction.</string>
								</regexCodeList>
								<regexCodePropertyList>
									<integer>1</integer>
								</regexCodePropertyList>
							</Trigger>
						</TriggerGroup>
					</TriggerGroup>
					<TriggerGroup isActive="yes" isFolder="yes" isTempTrigger="no" isMultiline="no" isPerlSlashGOption="no" isColorizerTrigger="no" isFilterTrigger="no" isSoundTrigger="no" isColorTrigger="no" isColorTriggerFg="no" isColorTriggerBg="no">
						<name>Limbs</name>
						<script></script>
						<triggerType>0</triggerType>
						<conditonLineDelta>0</conditonLineDelta>
						<mStayOpen>0</mStayOpen>
						<mCommand></mCommand>
						<packageName></packageName>
						<mFgColor>#ff0000</mFgColor>
						<mBgColor>#ffff00</mBgColor>
						<mSoundFile></mSoundFile>
						<colorTriggerFgColor>#000000</colorTriggerFgColor>
						<colorTriggerBgColor>#000000</colorTriggerBgColor>
						<regexCodeList />
						<regexCodePropertyList />
						<TriggerGroup isActive="yes" isFolder="yes" isTempTrigger="no" isMultiline="no" isPerlSlashGOption="no" isColorizerTrigger="no" isFilterTrigger="no" isSoundTrigger="no" isColorTrigger="no" isColorTriggerFg="no" isColorTriggerBg="no">
							<name>Limb Hits</name>
							<script></script>
							<triggerType>0</triggerType>
							<conditonLineDelta>0</conditonLineDelta>
							<mStayOpen>0</mStayOpen>
							<mCommand></mCommand>
							<packageName></packageName>
							<mFgColor>#ff0000</mFgColor>
							<mBgColor>#ffff00</mBgColor>
							<mSoundFile></mSoundFile>
							<colorTriggerFgColor>#000000</colorTriggerFgColor>
							<colorTriggerBgColor>#000000</colorTriggerBgColor>
							<regexCodeList />
							<regexCodePropertyList />
							<TriggerGroup isActive="yes" isFolder="yes" isTempTrigger="no" isMultiline="no" isPerlSlashGOption="no" isColorizerTrigger="no" isFilterTrigger="no" isSoundTrigger="no" isColorTrigger="no" isColorTriggerFg="no" isColorTriggerBg="no">
								<name>Carnifex</name>
								<script></script>
								<triggerType>0</triggerType>
								<conditonLineDelta>0</conditonLineDelta>
								<mStayOpen>0</mStayOpen>
								<mCommand></mCommand>
								<packageName></packageName>
								<mFgColor>#ff0000</mFgColor>
								<mBgColor>#ffff00</mBgColor>
								<mSoundFile></mSoundFile>
								<colorTriggerFgColor>#000000</colorTriggerFgColor>
								<colorTriggerBgColor>#000000</colorTriggerBgColor>
								<regexCodeList />
								<regexCodePropertyList />
								<Trigger isActive="yes" isFolder="no" isTempTrigger="no" isMultiline="no" isPerlSlashGOption="no" isColorizerTrigger="no" isFilterTrigger="no" isSoundTrigger="no" isColorTrigger="no" isColorTriggerFg="no" isColorTriggerBg="no">
									<name>hit doublebash</name>
									<script>if matches[2] == snd.target then
 snd.last_hit_limb = matches[4]
 snd.last_limb_dmg = 7.41
 snd.took_limb_dmg(matches[4], snd.last_limb_dmg)
end</script>
									<triggerType>0</triggerType>
									<conditonLineDelta>0</conditonLineDelta>
									<mStayOpen>99</mStayOpen>
									<mCommand></mCommand>
									<packageName></packageName>
									<mFgColor>#ff0000</mFgColor>
									<mBgColor>#ffff00</mBgColor>
									<mSoundFile></mSoundFile>
									<colorTriggerFgColor>#000000</colorTriggerFgColor>
									<colorTriggerBgColor>#000000</colorTriggerBgColor>
									<regexCodeList>
										<string>^You powerfully swing .+ down upon (\w+)('s|') (.+) and pull back with ease, readying a second blow\.$</string>
										<string>^Lifting up .+, you slam it into (\w+)('s|') (.+) with numbing force\.$</string>
										<string>^You mutilate (\w+)('s|') (.+) with a vengeful blow from .*\.$</string>
										<string>^You step in, gruesomely smashing up (\w+)('s|') (.+) with .*\.$</string>
										<string>^You send (\w+)('s|') (.+) reeling with a mighty strike from .*\.$</string>
										<string>^You crush (\w+)('s|') (.+) beneath a mighty overhead blow from .*\.$</string>
										<string>^Winding up, you brutally smash .* into (\w+)('s|') (.+)\.$</string>
									</regexCodeList>
									<regexCodePropertyList>
										<integer>1</integer>
										<integer>1</integer>
										<integer>1</integer>
										<integer>1</integer>
										<integer>1</integer>
										<integer>1</integer>
										<integer>1</integer>
									</regexCodePropertyList>
									<Trigger isActive="yes" isFolder="no" isTempTrigger="no" isMultiline="no" isPerlSlashGOption="no" isColorizerTrigger="no" isFilterTrigger="no" isSoundTrigger="no" isColorTrigger="no" isColorTriggerFg="no" isColorTriggerBg="no">
										<name>hit doublebash end</name>
										<script>setTriggerStayOpen("hit doublebash", 0)
</script>
										<triggerType>0</triggerType>
										<conditonLineDelta>0</conditonLineDelta>
										<mStayOpen>0</mStayOpen>
										<mCommand></mCommand>
										<packageName></packageName>
										<mFgColor>#ff0000</mFgColor>
										<mBgColor>#ffff00</mBgColor>
										<mSoundFile></mSoundFile>
										<colorTriggerFgColor>#000000</colorTriggerFgColor>
										<colorTriggerBgColor>#000000</colorTriggerBgColor>
										<regexCodeList>
											<string>return isPrompt()</string>
										</regexCodeList>
										<regexCodePropertyList>
											<integer>4</integer>
										</regexCodePropertyList>
									</Trigger>
									<Trigger isActive="yes" isFolder="no" isTempTrigger="no" isMultiline="no" isPerlSlashGOption="no" isColorizerTrigger="no" isFilterTrigger="no" isSoundTrigger="no" isColorTrigger="no" isColorTriggerFg="no" isColorTriggerBg="no">
										<name>undo doublebash 1p</name>
										<script>snd.took_limb_dmg(snd.last_hit_limb, -snd.last_limb_dmg)
</script>
										<triggerType>0</triggerType>
										<conditonLineDelta>0</conditonLineDelta>
										<mStayOpen>0</mStayOpen>
										<mCommand></mCommand>
										<packageName></packageName>
										<mFgColor>#ff0000</mFgColor>
										<mBgColor>#ffff00</mBgColor>
										<mSoundFile></mSoundFile>
										<colorTriggerFgColor>#000000</colorTriggerFgColor>
										<colorTriggerBgColor>#000000</colorTriggerBgColor>
										<regexCodeList>
											<string>^The attack rebounds back onto (\w+)\!$</string>
											<string>^Stepping quickly out of the way, (\w+) dodges the attack\.$</string>
											<string>^(\w+) parries the attack on (.*) with a deft maneuver\.$</string>
											<string>^(\w+) guards the attack on (.*)\.$</string>
											<string>^A reflection of (\w+) blinks out of existence\.$</string>
											<string>^With a free hand, (\w+) fends off the attack on (the )?\w+ (.+)\.$</string>
										</regexCodeList>
										<regexCodePropertyList>
											<integer>1</integer>
											<integer>1</integer>
											<integer>1</integer>
											<integer>1</integer>
											<integer>1</integer>
											<integer>1</integer>
										</regexCodePropertyList>
									</Trigger>
									<Trigger isActive="yes" isFolder="no" isTempTrigger="no" isMultiline="no" isPerlSlashGOption="no" isColorizerTrigger="no" isFilterTrigger="no" isSoundTrigger="no" isColorTrigger="no" isColorTriggerFg="no" isColorTriggerBg="no">
										<name>glasslimb</name>
										<script>if matches[2] == snd.target then
 snd.last_hit_limb = matches[4]
 snd.last_limb_dmg = 5.00
 snd.took_limb_dmg(matches[4], snd.last_limb_dmg)
 snd.target_cured("glasslimb")
end
</script>
										<triggerType>0</triggerType>
										<conditonLineDelta>0</conditonLineDelta>
										<mStayOpen>0</mStayOpen>
										<mCommand></mCommand>
										<packageName></packageName>
										<mFgColor>#ff0000</mFgColor>
										<mBgColor>#ffff00</mBgColor>
										<mSoundFile></mSoundFile>
										<colorTriggerFgColor>#000000</colorTriggerFgColor>
										<colorTriggerBgColor>#000000</colorTriggerBgColor>
										<regexCodeList>
											<string>^(\w+)('s|') (.+) shatters like glass beneath the blow\.$</string>
										</regexCodeList>
										<regexCodePropertyList>
											<integer>1</integer>
										</regexCodePropertyList>
									</Trigger>
								</Trigger>
								<Trigger isActive="yes" isFolder="no" isTempTrigger="no" isMultiline="no" isPerlSlashGOption="no" isColorizerTrigger="no" isFilterTrigger="no" isSoundTrigger="no" isColorTrigger="no" isColorTriggerFg="no" isColorTriggerBg="no">
									<name>3p doublebash</name>
									<script>if snd.toggles.atkecho then
 deleteLine()
 snd.message(matches[2].." hit: "..matches[3].." "..matches[5]..".")
end
if matches[3] == snd.target then
 snd.last_hit_limb = matches[5]
 snd.last_limb_dmg = 7.41
 snd.took_limb_dmg(matches[5], snd.last_limb_dmg)
end</script>
									<triggerType>0</triggerType>
									<conditonLineDelta>0</conditonLineDelta>
									<mStayOpen>99</mStayOpen>
									<mCommand></mCommand>
									<packageName></packageName>
									<mFgColor>#ff0000</mFgColor>
									<mBgColor>#ffff00</mBgColor>
									<mSoundFile></mSoundFile>
									<colorTriggerFgColor>#000000</colorTriggerFgColor>
									<colorTriggerBgColor>#000000</colorTriggerBgColor>
									<regexCodeList>
										<string>^(\w+) powerfully swings .+ down upon (\w+)('s|') (.+) and pulls back with ease, readying a second blow\.$</string>
										<string>^Winding up, (\w+) brutally smashes .+ into (\w+)('s|') (.+)\.$</string>
										<string>^(\w+) sends (\w+)('s|') (.+) reeling with a mighty strike from .+\.$</string>
										<string>^(\w+) crushes (\w+)('s|') (.+) beneath a mighty overhead blow from .+\.$</string>
										<string>^(\w+) steps in, gruesomely smashing up (\w+)('s|') (.+) with .+\.$</string>
										<string>^Lifting up .+, (\w+) slams it into (\w+)('s|') (.+) with numbing force\.$</string>
										<string>^(\w+) mutilates (\w+)('s|') (.+) with a vengeful blow from .+\.$</string>
									</regexCodeList>
									<regexCodePropertyList>
										<integer>1</integer>
										<integer>1</integer>
										<integer>1</integer>
										<integer>1</integer>
										<integer>1</integer>
										<integer>1</integer>
										<integer>1</integer>
									</regexCodePropertyList>
									<Trigger isActive="yes" isFolder="no" isTempTrigger="no" isMultiline="no" isPerlSlashGOption="no" isColorizerTrigger="no" isFilterTrigger="no" isSoundTrigger="no" isColorTrigger="no" isColorTriggerFg="no" isColorTriggerBg="no">
										<name>3p doublebash end</name>
										<script>setTriggerStayOpen("3p doublebash", 0)
</script>
										<triggerType>0</triggerType>
										<conditonLineDelta>0</conditonLineDelta>
										<mStayOpen>0</mStayOpen>
										<mCommand></mCommand>
										<packageName></packageName>
										<mFgColor>#ff0000</mFgColor>
										<mBgColor>#ffff00</mBgColor>
										<mSoundFile></mSoundFile>
										<colorTriggerFgColor>#000000</colorTriggerFgColor>
										<colorTriggerBgColor>#000000</colorTriggerBgColor>
										<regexCodeList>
											<string>return isPrompt()</string>
										</regexCodeList>
										<regexCodePropertyList>
											<integer>4</integer>
										</regexCodePropertyList>
									</Trigger>
									<Trigger isActive="yes" isFolder="no" isTempTrigger="no" isMultiline="no" isPerlSlashGOption="no" isColorizerTrigger="no" isFilterTrigger="no" isSoundTrigger="no" isColorTrigger="no" isColorTriggerFg="no" isColorTriggerBg="no">
										<name>undo doublebash</name>
										<script>if matches[2] == snd.target then
	snd.took_limb_dmg(snd.last_hit_limb, -snd.last_limb_dmg)
end</script>
										<triggerType>0</triggerType>
										<conditonLineDelta>0</conditonLineDelta>
										<mStayOpen>0</mStayOpen>
										<mCommand></mCommand>
										<packageName></packageName>
										<mFgColor>#ff0000</mFgColor>
										<mBgColor>#ffff00</mBgColor>
										<mSoundFile></mSoundFile>
										<colorTriggerFgColor>#000000</colorTriggerFgColor>
										<colorTriggerBgColor>#000000</colorTriggerBgColor>
										<regexCodeList>
											<string>^The attack rebounds back onto (\w+)\!$</string>
											<string>^Stepping quickly out of the way, (\w+) dodges the attack\.$</string>
											<string>^(\w+) parries the attack on (.*) with a deft maneuver\.$</string>
											<string>^(\w+) guards the attack on (.*)\.$</string>
											<string>^A reflection of (\w+) blinks out of existence\.$</string>
											<string>^With a free hand, (\w+) fends off the attack on (the )?\w+ (.+)\.$</string>
										</regexCodeList>
										<regexCodePropertyList>
											<integer>1</integer>
											<integer>1</integer>
											<integer>1</integer>
											<integer>1</integer>
											<integer>1</integer>
											<integer>1</integer>
										</regexCodePropertyList>
									</Trigger>
									<Trigger isActive="yes" isFolder="no" isTempTrigger="no" isMultiline="no" isPerlSlashGOption="no" isColorizerTrigger="no" isFilterTrigger="no" isSoundTrigger="no" isColorTrigger="no" isColorTriggerFg="no" isColorTriggerBg="no">
										<name>glasslimb</name>
										<script>if matches[2] == snd.target then
 snd.last_hit_limb = matches[4]
 snd.last_limb_dmg = 5.00
 snd.took_limb_dmg(matches[4], snd.last_limb_dmg)
 snd.target_cured("glasslimb")
end
</script>
										<triggerType>0</triggerType>
										<conditonLineDelta>0</conditonLineDelta>
										<mStayOpen>0</mStayOpen>
										<mCommand></mCommand>
										<packageName></packageName>
										<mFgColor>#ff0000</mFgColor>
										<mBgColor>#ffff00</mBgColor>
										<mSoundFile></mSoundFile>
										<colorTriggerFgColor>#000000</colorTriggerFgColor>
										<colorTriggerBgColor>#000000</colorTriggerBgColor>
										<regexCodeList>
											<string>^(\w+)('s|') (.+) shatters like glass beneath the blow\.$</string>
										</regexCodeList>
										<regexCodePropertyList>
											<integer>1</integer>
										</regexCodePropertyList>
									</Trigger>
								</Trigger>
							</TriggerGroup>
							<TriggerGroup isActive="yes" isFolder="yes" isTempTrigger="no" isMultiline="no" isPerlSlashGOption="no" isColorizerTrigger="no" isFilterTrigger="no" isSoundTrigger="no" isColorTrigger="no" isColorTriggerFg="no" isColorTriggerBg="no">
								<name>Zealot</name>
								<script>-- i was forced</script>
								<triggerType>0</triggerType>
								<conditonLineDelta>0</conditonLineDelta>
								<mStayOpen>0</mStayOpen>
								<mCommand></mCommand>
								<packageName></packageName>
								<mFgColor>#ff0000</mFgColor>
								<mBgColor>#ffff00</mBgColor>
								<mSoundFile></mSoundFile>
								<colorTriggerFgColor>#000000</colorTriggerFgColor>
								<colorTriggerBgColor>#000000</colorTriggerBgColor>
								<regexCodeList />
								<regexCodePropertyList />
								<Trigger isActive="yes" isFolder="no" isTempTrigger="no" isMultiline="yes" isPerlSlashGOption="no" isColorizerTrigger="no" isFilterTrigger="no" isSoundTrigger="no" isColorTrigger="no" isColorTriggerFg="no" isColorTriggerBg="no">
									<name>Wanekick</name>
									<script>if multimatches[1][4] == snd.target then
	snd.last_hit_limb = multimatches[1][3]
	snd.last_limb_dmg = 9
	snd.took_limb_dmg(multimatches[1][3], snd.last_limb_dmg)
end

--^\w+'?s? blow lands heavily with weight.$</script>
									<triggerType>0</triggerType>
									<conditonLineDelta>3</conditonLineDelta>
									<mStayOpen>10</mStayOpen>
									<mCommand></mCommand>
									<packageName></packageName>
									<mFgColor>#ff0000</mFgColor>
									<mBgColor>#ffff00</mBgColor>
									<mSoundFile></mSoundFile>
									<colorTriggerFgColor>#000000</colorTriggerFgColor>
									<colorTriggerBgColor>#000000</colorTriggerBgColor>
									<regexCodeList>
										<string>^(\w+) uses? Zeal Wanekick \((.+)\) on (\w+).$</string>
									</regexCodeList>
									<regexCodePropertyList>
										<integer>1</integer>
									</regexCodePropertyList>
									<Trigger isActive="yes" isFolder="no" isTempTrigger="no" isMultiline="no" isPerlSlashGOption="no" isColorizerTrigger="no" isFilterTrigger="no" isSoundTrigger="no" isColorTrigger="no" isColorTriggerFg="no" isColorTriggerBg="no">
										<name>wanekick end</name>
										<script>setTriggerStayOpen("Wanekick", 0)
</script>
										<triggerType>0</triggerType>
										<conditonLineDelta>0</conditonLineDelta>
										<mStayOpen>0</mStayOpen>
										<mCommand></mCommand>
										<packageName></packageName>
										<mFgColor>#ff0000</mFgColor>
										<mBgColor>#ffff00</mBgColor>
										<mSoundFile></mSoundFile>
										<colorTriggerFgColor>#000000</colorTriggerFgColor>
										<colorTriggerBgColor>#000000</colorTriggerBgColor>
										<regexCodeList>
											<string>return isPrompt()</string>
										</regexCodeList>
										<regexCodePropertyList>
											<integer>4</integer>
										</regexCodePropertyList>
									</Trigger>
									<Trigger isActive="yes" isFolder="no" isTempTrigger="no" isMultiline="no" isPerlSlashGOption="no" isColorizerTrigger="no" isFilterTrigger="no" isSoundTrigger="no" isColorTrigger="no" isColorTriggerFg="no" isColorTriggerBg="no">
										<name>undo wanekick</name>
										<script>if matches[2] == snd.target then
  snd.took_limb_dmg(snd.last_hit_limb, -snd.last_limb_dmg)
end</script>
										<triggerType>0</triggerType>
										<conditonLineDelta>0</conditonLineDelta>
										<mStayOpen>0</mStayOpen>
										<mCommand></mCommand>
										<packageName></packageName>
										<mFgColor>#ff0000</mFgColor>
										<mBgColor>#ffff00</mBgColor>
										<mSoundFile></mSoundFile>
										<colorTriggerFgColor>#000000</colorTriggerFgColor>
										<colorTriggerBgColor>#000000</colorTriggerBgColor>
										<regexCodeList>
											<string>^With a free hand, (\w+) fends off the attack on (the )?\w+ (.+)\.$</string>
											<string>^Stepping quickly out of the way, (\w+) dodges the attack\.$</string>
											<string>^(\w+) parries the attack on (.*) with a deft maneuver\.$</string>
											<string>^(\w+) guards the attack on (.*)\.$</string>
											<string>^A reflection of (\w+) blinks out of existence\.$</string>
										</regexCodeList>
										<regexCodePropertyList>
											<integer>1</integer>
											<integer>1</integer>
											<integer>1</integer>
											<integer>1</integer>
											<integer>1</integer>
										</regexCodePropertyList>
									</Trigger>
								</Trigger>
								<Trigger isActive="yes" isFolder="no" isTempTrigger="no" isMultiline="yes" isPerlSlashGOption="no" isColorizerTrigger="no" isFilterTrigger="no" isSoundTrigger="no" isColorTrigger="no" isColorTriggerFg="no" isColorTriggerBg="no">
									<name>Twinpress</name>
									<script>if multimatches[1][4] == snd.target then
	snd.target_got("stiffness")
	snd.target_got("muscle spasms")
	table.insert(snd.last_affs, "stiffness")
	table.insert(snd.last_affs, "muscle spasms")
end</script>
									<triggerType>0</triggerType>
									<conditonLineDelta>3</conditonLineDelta>
									<mStayOpen>10</mStayOpen>
									<mCommand></mCommand>
									<packageName></packageName>
									<mFgColor>#ff0000</mFgColor>
									<mBgColor>#ffff00</mBgColor>
									<mSoundFile></mSoundFile>
									<colorTriggerFgColor>#000000</colorTriggerFgColor>
									<colorTriggerBgColor>#000000</colorTriggerBgColor>
									<regexCodeList>
										<string>^(\w+) uses? (Zeal Twinpress) on (\w+)\.$</string>
										<string>^(Upon contact, (the )?\w+ clutches at the location (the )?\w+ was struck.|Upon contact, (the )?\w+ clutches at the location you struck.)$</string>
									</regexCodeList>
									<regexCodePropertyList>
										<integer>1</integer>
										<integer>1</integer>
									</regexCodePropertyList>
									<Trigger isActive="yes" isFolder="no" isTempTrigger="no" isMultiline="no" isPerlSlashGOption="no" isColorizerTrigger="no" isFilterTrigger="no" isSoundTrigger="no" isColorTrigger="no" isColorTriggerFg="no" isColorTriggerBg="no">
										<name>twinpress end</name>
										<script>setTriggerStayOpen("Twinpress", 0)
</script>
										<triggerType>0</triggerType>
										<conditonLineDelta>0</conditonLineDelta>
										<mStayOpen>0</mStayOpen>
										<mCommand></mCommand>
										<packageName></packageName>
										<mFgColor>#ff0000</mFgColor>
										<mBgColor>#ffff00</mBgColor>
										<mSoundFile></mSoundFile>
										<colorTriggerFgColor>#000000</colorTriggerFgColor>
										<colorTriggerBgColor>#000000</colorTriggerBgColor>
										<regexCodeList>
											<string>return isPrompt()</string>
										</regexCodeList>
										<regexCodePropertyList>
											<integer>4</integer>
										</regexCodePropertyList>
									</Trigger>
									<Trigger isActive="yes" isFolder="no" isTempTrigger="no" isMultiline="no" isPerlSlashGOption="no" isColorizerTrigger="no" isFilterTrigger="no" isSoundTrigger="no" isColorTrigger="no" isColorTriggerFg="no" isColorTriggerBg="no">
										<name>undo Twinpress</name>
										<script>if matches[2] == snd.target then
  snd.took_limb_dmg(snd.last_hit_limb, -snd.last_limb_dmg)
end</script>
										<triggerType>0</triggerType>
										<conditonLineDelta>0</conditonLineDelta>
										<mStayOpen>0</mStayOpen>
										<mCommand></mCommand>
										<packageName></packageName>
										<mFgColor>#ff0000</mFgColor>
										<mBgColor>#ffff00</mBgColor>
										<mSoundFile></mSoundFile>
										<colorTriggerFgColor>#000000</colorTriggerFgColor>
										<colorTriggerBgColor>#000000</colorTriggerBgColor>
										<regexCodeList>
											<string>^With a free hand, (\w+) fends off the attack on (the )?\w+ (.+)\.$</string>
											<string>^Stepping quickly out of the way, (\w+) dodges the attack\.$</string>
											<string>^(\w+) parries the attack on (.*) with a deft maneuver\.$</string>
											<string>^(\w+) guards the attack on (.*)\.$</string>
											<string>^A reflection of (\w+) blinks out of existence\.$</string>
										</regexCodeList>
										<regexCodePropertyList>
											<integer>1</integer>
											<integer>1</integer>
											<integer>1</integer>
											<integer>1</integer>
											<integer>1</integer>
										</regexCodePropertyList>
									</Trigger>
								</Trigger>
								<Trigger isActive="yes" isFolder="no" isTempTrigger="no" isMultiline="yes" isPerlSlashGOption="no" isColorizerTrigger="no" isFilterTrigger="no" isSoundTrigger="no" isColorTrigger="no" isColorTriggerFg="no" isColorTriggerBg="no">
									<name>Sunkick</name>
									<script>if multimatches[1][4] == snd.target then
	snd.last_hit_limb = "head"
	snd.last_limb_dmg = 6
	snd.took_limb_dmg("head", snd.last_limb_dmg)
	snd.target_got("stupidity")
	snd.target_got("dizziness")
	table.insert(snd.last_affs, "stupidity")
	table.insert(snd.last_affs, "dizziness")
end</script>
									<triggerType>0</triggerType>
									<conditonLineDelta>3</conditonLineDelta>
									<mStayOpen>10</mStayOpen>
									<mCommand></mCommand>
									<packageName></packageName>
									<mFgColor>#ff0000</mFgColor>
									<mBgColor>#ffff00</mBgColor>
									<mSoundFile></mSoundFile>
									<colorTriggerFgColor>#000000</colorTriggerFgColor>
									<colorTriggerBgColor>#000000</colorTriggerBgColor>
									<regexCodeList>
										<string>^(\w+) uses? (Zeal Sunkick) on (\w+)\.$</string>
										<string>^(\w+ foot finds its mark, and (the )?\w+ stumbles backward.|Your foot finds its mark with satisfying resistance.)$</string>
									</regexCodeList>
									<regexCodePropertyList>
										<integer>1</integer>
										<integer>1</integer>
									</regexCodePropertyList>
									<Trigger isActive="yes" isFolder="no" isTempTrigger="no" isMultiline="no" isPerlSlashGOption="no" isColorizerTrigger="no" isFilterTrigger="no" isSoundTrigger="no" isColorTrigger="no" isColorTriggerFg="no" isColorTriggerBg="no">
										<name>Sunkick end</name>
										<script>setTriggerStayOpen("Sunkick", 0)
</script>
										<triggerType>0</triggerType>
										<conditonLineDelta>0</conditonLineDelta>
										<mStayOpen>0</mStayOpen>
										<mCommand></mCommand>
										<packageName></packageName>
										<mFgColor>#ff0000</mFgColor>
										<mBgColor>#ffff00</mBgColor>
										<mSoundFile></mSoundFile>
										<colorTriggerFgColor>#000000</colorTriggerFgColor>
										<colorTriggerBgColor>#000000</colorTriggerBgColor>
										<regexCodeList>
											<string>return isPrompt()</string>
										</regexCodeList>
										<regexCodePropertyList>
											<integer>4</integer>
										</regexCodePropertyList>
									</Trigger>
									<Trigger isActive="yes" isFolder="no" isTempTrigger="no" isMultiline="no" isPerlSlashGOption="no" isColorizerTrigger="no" isFilterTrigger="no" isSoundTrigger="no" isColorTrigger="no" isColorTriggerFg="no" isColorTriggerBg="no">
										<name>undo Sunkick</name>
										<script>if matches[2] == snd.target then
  snd.took_limb_dmg(snd.last_hit_limb, -snd.last_limb_dmg)
end</script>
										<triggerType>0</triggerType>
										<conditonLineDelta>0</conditonLineDelta>
										<mStayOpen>0</mStayOpen>
										<mCommand></mCommand>
										<packageName></packageName>
										<mFgColor>#ff0000</mFgColor>
										<mBgColor>#ffff00</mBgColor>
										<mSoundFile></mSoundFile>
										<colorTriggerFgColor>#000000</colorTriggerFgColor>
										<colorTriggerBgColor>#000000</colorTriggerBgColor>
										<regexCodeList>
											<string>^With a free hand, (\w+) fends off the attack on (the )?\w+ (.+)\.$</string>
											<string>^Stepping quickly out of the way, (\w+) dodges the attack\.$</string>
											<string>^(\w+) parries the attack on (.*) with a deft maneuver\.$</string>
											<string>^(\w+) guards the attack on (.*)\.$</string>
											<string>^A reflection of (\w+) blinks out of existence\.$</string>
										</regexCodeList>
										<regexCodePropertyList>
											<integer>1</integer>
											<integer>1</integer>
											<integer>1</integer>
											<integer>1</integer>
											<integer>1</integer>
										</regexCodePropertyList>
									</Trigger>
								</Trigger>
								<Trigger isActive="yes" isFolder="no" isTempTrigger="no" isMultiline="yes" isPerlSlashGOption="no" isColorizerTrigger="no" isFilterTrigger="no" isSoundTrigger="no" isColorTrigger="no" isColorTriggerFg="no" isColorTriggerBg="no">
									<name>Risekick</name>
									<script>if multimatches[1][4] == snd.target then
	snd.last_hit_limb = "torso"
	snd.last_limb_dmg = 5
	snd.took_limb_dmg("torso", snd.last_limb_dmg)
end</script>
									<triggerType>0</triggerType>
									<conditonLineDelta>3</conditonLineDelta>
									<mStayOpen>10</mStayOpen>
									<mCommand></mCommand>
									<packageName></packageName>
									<mFgColor>#ff0000</mFgColor>
									<mBgColor>#ffff00</mBgColor>
									<mSoundFile></mSoundFile>
									<colorTriggerFgColor>#000000</colorTriggerFgColor>
									<colorTriggerBgColor>#000000</colorTriggerBgColor>
									<regexCodeList>
										<string>^(\w+) uses? (Zeal Risekick) on (\w+)\.$</string>
										<string>^\w+ groans as it connects with (the )?\w+ stomach.$</string>
									</regexCodeList>
									<regexCodePropertyList>
										<integer>1</integer>
										<integer>1</integer>
									</regexCodePropertyList>
									<Trigger isActive="yes" isFolder="no" isTempTrigger="no" isMultiline="no" isPerlSlashGOption="no" isColorizerTrigger="no" isFilterTrigger="no" isSoundTrigger="no" isColorTrigger="no" isColorTriggerFg="no" isColorTriggerBg="no">
										<name>Risekick end</name>
										<script>setTriggerStayOpen("Risekick", 0)
</script>
										<triggerType>0</triggerType>
										<conditonLineDelta>0</conditonLineDelta>
										<mStayOpen>0</mStayOpen>
										<mCommand></mCommand>
										<packageName></packageName>
										<mFgColor>#ff0000</mFgColor>
										<mBgColor>#ffff00</mBgColor>
										<mSoundFile></mSoundFile>
										<colorTriggerFgColor>#000000</colorTriggerFgColor>
										<colorTriggerBgColor>#000000</colorTriggerBgColor>
										<regexCodeList>
											<string>return isPrompt()</string>
										</regexCodeList>
										<regexCodePropertyList>
											<integer>4</integer>
										</regexCodePropertyList>
									</Trigger>
									<Trigger isActive="yes" isFolder="no" isTempTrigger="no" isMultiline="no" isPerlSlashGOption="no" isColorizerTrigger="no" isFilterTrigger="no" isSoundTrigger="no" isColorTrigger="no" isColorTriggerFg="no" isColorTriggerBg="no">
										<name>undo Risekick</name>
										<script>if matches[2] == snd.target then
  snd.took_limb_dmg(snd.last_hit_limb, -snd.last_limb_dmg)
end</script>
										<triggerType>0</triggerType>
										<conditonLineDelta>0</conditonLineDelta>
										<mStayOpen>0</mStayOpen>
										<mCommand></mCommand>
										<packageName></packageName>
										<mFgColor>#ff0000</mFgColor>
										<mBgColor>#ffff00</mBgColor>
										<mSoundFile></mSoundFile>
										<colorTriggerFgColor>#000000</colorTriggerFgColor>
										<colorTriggerBgColor>#000000</colorTriggerBgColor>
										<regexCodeList>
											<string>^With a free hand, (\w+) fends off the attack on (the )?\w+ (.+)\.$</string>
											<string>^Stepping quickly out of the way, (\w+) dodges the attack\.$</string>
											<string>^(\w+) parries the attack on (.*) with a deft maneuver\.$</string>
											<string>^(\w+) guards the attack on (.*)\.$</string>
											<string>^A reflection of (\w+) blinks out of existence\.$</string>
										</regexCodeList>
										<regexCodePropertyList>
											<integer>1</integer>
											<integer>1</integer>
											<integer>1</integer>
											<integer>1</integer>
											<integer>1</integer>
										</regexCodePropertyList>
									</Trigger>
								</Trigger>
								<Trigger isActive="yes" isFolder="no" isTempTrigger="no" isMultiline="yes" isPerlSlashGOption="no" isColorizerTrigger="no" isFilterTrigger="no" isSoundTrigger="no" isColorTrigger="no" isColorTriggerFg="no" isColorTriggerBg="no">
									<name>Pummel</name>
									<script>if multimatches[1][4] == snd.target then
	snd.last_hit_limb = multimatches[1][3]
	snd.last_limb_dmg = 9.5
	snd.took_limb_dmg(multimatches[1][3], snd.last_limb_dmg)
end</script>
									<triggerType>0</triggerType>
									<conditonLineDelta>3</conditonLineDelta>
									<mStayOpen>10</mStayOpen>
									<mCommand></mCommand>
									<packageName></packageName>
									<mFgColor>#ff0000</mFgColor>
									<mBgColor>#ffff00</mBgColor>
									<mSoundFile></mSoundFile>
									<colorTriggerFgColor>#000000</colorTriggerFgColor>
									<colorTriggerBgColor>#000000</colorTriggerBgColor>
									<regexCodeList>
										<string>^(\w+) uses? Zeal Pummel \((.+)\) on (\w+).$</string>
										<string>^\w+'?s? blow lands heavily with weight.$</string>
									</regexCodeList>
									<regexCodePropertyList>
										<integer>1</integer>
										<integer>1</integer>
									</regexCodePropertyList>
									<Trigger isActive="yes" isFolder="no" isTempTrigger="no" isMultiline="no" isPerlSlashGOption="no" isColorizerTrigger="no" isFilterTrigger="no" isSoundTrigger="no" isColorTrigger="no" isColorTriggerFg="no" isColorTriggerBg="no">
										<name>undo Pummel</name>
										<script>if matches[2] == snd.target then
  snd.took_limb_dmg(snd.last_hit_limb, -snd.last_limb_dmg)
end</script>
										<triggerType>0</triggerType>
										<conditonLineDelta>0</conditonLineDelta>
										<mStayOpen>0</mStayOpen>
										<mCommand></mCommand>
										<packageName></packageName>
										<mFgColor>#ff0000</mFgColor>
										<mBgColor>#ffff00</mBgColor>
										<mSoundFile></mSoundFile>
										<colorTriggerFgColor>#000000</colorTriggerFgColor>
										<colorTriggerBgColor>#000000</colorTriggerBgColor>
										<regexCodeList>
											<string>^With a free hand, (\w+) fends off the attack on (the )?\w+ (.+)\.$</string>
											<string>^Stepping quickly out of the way, (\w+) dodges the attack\.$</string>
											<string>^(\w+) parries the attack on (.*) with a deft maneuver\.$</string>
											<string>^(\w+) guards the attack on (.*)\.$</string>
											<string>^A reflection of (\w+) blinks out of existence\.$</string>
										</regexCodeList>
										<regexCodePropertyList>
											<integer>1</integer>
											<integer>1</integer>
											<integer>1</integer>
											<integer>1</integer>
											<integer>1</integer>
										</regexCodePropertyList>
									</Trigger>
									<Trigger isActive="yes" isFolder="no" isTempTrigger="no" isMultiline="no" isPerlSlashGOption="no" isColorizerTrigger="no" isFilterTrigger="no" isSoundTrigger="no" isColorTrigger="no" isColorTriggerFg="no" isColorTriggerBg="no">
										<name>Pummel end</name>
										<script>setTriggerStayOpen("Pummel", 0)
</script>
										<triggerType>0</triggerType>
										<conditonLineDelta>0</conditonLineDelta>
										<mStayOpen>0</mStayOpen>
										<mCommand></mCommand>
										<packageName></packageName>
										<mFgColor>#ff0000</mFgColor>
										<mBgColor>#ffff00</mBgColor>
										<mSoundFile></mSoundFile>
										<colorTriggerFgColor>#000000</colorTriggerFgColor>
										<colorTriggerBgColor>#000000</colorTriggerBgColor>
										<regexCodeList>
											<string>return isPrompt()</string>
										</regexCodeList>
										<regexCodePropertyList>
											<integer>4</integer>
										</regexCodePropertyList>
									</Trigger>
								</Trigger>
								<Trigger isActive="yes" isFolder="no" isTempTrigger="no" isMultiline="yes" isPerlSlashGOption="no" isColorizerTrigger="no" isFilterTrigger="no" isSoundTrigger="no" isColorTrigger="no" isColorTriggerFg="no" isColorTriggerBg="no">
									<name>Edgekick</name>
									<script>if multimatches[1][4] == snd.target then
	snd.last_hit_limb = "head"
	snd.last_limb_dmg = 3.49
	snd.took_limb_dmg("head", snd.last_limb_dmg)
	snd.target_got("crippled throat")
end</script>
									<triggerType>0</triggerType>
									<conditonLineDelta>3</conditonLineDelta>
									<mStayOpen>10</mStayOpen>
									<mCommand></mCommand>
									<packageName></packageName>
									<mFgColor>#ff0000</mFgColor>
									<mBgColor>#ffff00</mBgColor>
									<mSoundFile></mSoundFile>
									<colorTriggerFgColor>#000000</colorTriggerFgColor>
									<colorTriggerBgColor>#000000</colorTriggerBgColor>
									<regexCodeList>
										<string>^(\w+) uses? (Zeal Edgekick) on (\w+)\.$</string>
										<string>^You (see|feel) (the )?\w+ throat dislodge under the force.$</string>
									</regexCodeList>
									<regexCodePropertyList>
										<integer>1</integer>
										<integer>1</integer>
									</regexCodePropertyList>
									<Trigger isActive="yes" isFolder="no" isTempTrigger="no" isMultiline="no" isPerlSlashGOption="no" isColorizerTrigger="no" isFilterTrigger="no" isSoundTrigger="no" isColorTrigger="no" isColorTriggerFg="no" isColorTriggerBg="no">
										<name>Edgekick end</name>
										<script>setTriggerStayOpen("Edgekick", 0)
</script>
										<triggerType>0</triggerType>
										<conditonLineDelta>0</conditonLineDelta>
										<mStayOpen>0</mStayOpen>
										<mCommand></mCommand>
										<packageName></packageName>
										<mFgColor>#ff0000</mFgColor>
										<mBgColor>#ffff00</mBgColor>
										<mSoundFile></mSoundFile>
										<colorTriggerFgColor>#000000</colorTriggerFgColor>
										<colorTriggerBgColor>#000000</colorTriggerBgColor>
										<regexCodeList>
											<string>return isPrompt()</string>
										</regexCodeList>
										<regexCodePropertyList>
											<integer>4</integer>
										</regexCodePropertyList>
									</Trigger>
									<Trigger isActive="yes" isFolder="no" isTempTrigger="no" isMultiline="no" isPerlSlashGOption="no" isColorizerTrigger="no" isFilterTrigger="no" isSoundTrigger="no" isColorTrigger="no" isColorTriggerFg="no" isColorTriggerBg="no">
										<name>undo Edgekick</name>
										<script>if matches[2] == snd.target then
  snd.took_limb_dmg(snd.last_hit_limb, -snd.last_limb_dmg)
end</script>
										<triggerType>0</triggerType>
										<conditonLineDelta>0</conditonLineDelta>
										<mStayOpen>0</mStayOpen>
										<mCommand></mCommand>
										<packageName></packageName>
										<mFgColor>#ff0000</mFgColor>
										<mBgColor>#ffff00</mBgColor>
										<mSoundFile></mSoundFile>
										<colorTriggerFgColor>#000000</colorTriggerFgColor>
										<colorTriggerBgColor>#000000</colorTriggerBgColor>
										<regexCodeList>
											<string>^The attack rebounds back onto (\w+)\!$</string>
											<string>^Stepping quickly out of the way, (\w+) dodges the attack\.$</string>
											<string>^(\w+) parries the attack on (.*) with a deft maneuver\.$</string>
											<string>^(\w+) guards the attack on (.*)\.$</string>
											<string>^A reflection of (\w+) blinks out of existence\.$</string>
											<string>^With a free hand, (\w+) fends off the attack on (the )?\w+ (.+)\.$</string>
										</regexCodeList>
										<regexCodePropertyList>
											<integer>1</integer>
											<integer>1</integer>
											<integer>1</integer>
											<integer>1</integer>
											<integer>1</integer>
											<integer>1</integer>
										</regexCodePropertyList>
									</Trigger>
								</Trigger>
								<Trigger isActive="yes" isFolder="no" isTempTrigger="no" isMultiline="yes" isPerlSlashGOption="no" isColorizerTrigger="no" isFilterTrigger="no" isSoundTrigger="no" isColorTrigger="no" isColorTriggerFg="no" isColorTriggerBg="no">
									<name>Direblow</name>
									<script>if (multimatches[1][3] == snd.target or multimatches[1][4] == snd.target) then
	if multimatches[1][2]:find("drive") then
		snd.last_limb_dmg = 20
  	snd.target_got("lightwound")
		snd.target_got("deepwound")
  	table.insert(snd.last_affs, "lightwound")
		table.insert(snd.last_affs, "deepwound")
	else
		snd.last_limb_dmg = 7.5
  	snd.target_got("lightwound")
  	table.insert(snd.last_affs, "lightwound")
	end
	snd.last_hit_limb = "torso"
	snd.took_limb_dmg("torso", snd.last_limb_dmg)
end</script>
									<triggerType>0</triggerType>
									<conditonLineDelta>2</conditonLineDelta>
									<mStayOpen>10</mStayOpen>
									<mCommand></mCommand>
									<packageName></packageName>
									<mFgColor>#ff0000</mFgColor>
									<mBgColor>#ffff00</mBgColor>
									<mSoundFile></mSoundFile>
									<colorTriggerFgColor>#000000</colorTriggerFgColor>
									<colorTriggerBgColor>#000000</colorTriggerBgColor>
									<regexCodeList>
										<string>(^With .* boundless strength, .+ drives? .+ rigid hand through (\w+).$|^Weakened, .+ thrusts? .+ rigid hand into (\w+) with low momentum.)</string>
										<string>(hand parts flesh and delivers a deep, gory wound.$|sinks partly in as blood oozes around it\.$)</string>
									</regexCodeList>
									<regexCodePropertyList>
										<integer>1</integer>
										<integer>1</integer>
									</regexCodePropertyList>
									<Trigger isActive="yes" isFolder="no" isTempTrigger="no" isMultiline="no" isPerlSlashGOption="no" isColorizerTrigger="no" isFilterTrigger="no" isSoundTrigger="no" isColorTrigger="no" isColorTriggerFg="no" isColorTriggerBg="no">
										<name>undo Direblow</name>
										<script>snd.took_limb_dmg(snd.last_hit_limb, -snd.last_limb_dmg)
</script>
										<triggerType>0</triggerType>
										<conditonLineDelta>0</conditonLineDelta>
										<mStayOpen>0</mStayOpen>
										<mCommand></mCommand>
										<packageName></packageName>
										<mFgColor>#ff0000</mFgColor>
										<mBgColor>#ffff00</mBgColor>
										<mSoundFile></mSoundFile>
										<colorTriggerFgColor>#000000</colorTriggerFgColor>
										<colorTriggerBgColor>#000000</colorTriggerBgColor>
										<regexCodeList>
											<string>^With a free hand, (\w+) fends off the attack on (the )?\w+ (.+)\.$</string>
											<string>^Stepping quickly out of the way, (\w+) dodges the attack\.$</string>
											<string>^(\w+) parries the attack on (.*) with a deft maneuver\.$</string>
											<string>^(\w+) guards the attack on (.*)\.$</string>
											<string>^A reflection of (\w+) blinks out of existence\.$</string>
										</regexCodeList>
										<regexCodePropertyList>
											<integer>1</integer>
											<integer>1</integer>
											<integer>1</integer>
											<integer>1</integer>
											<integer>1</integer>
										</regexCodePropertyList>
									</Trigger>
									<Trigger isActive="yes" isFolder="no" isTempTrigger="no" isMultiline="no" isPerlSlashGOption="no" isColorizerTrigger="no" isFilterTrigger="no" isSoundTrigger="no" isColorTrigger="no" isColorTriggerFg="no" isColorTriggerBg="no">
										<name>Direblow end</name>
										<script>if matches[2] == snd.target then
  snd.took_limb_dmg(snd.last_hit_limb, -snd.last_limb_dmg)
end</script>
										<triggerType>0</triggerType>
										<conditonLineDelta>0</conditonLineDelta>
										<mStayOpen>0</mStayOpen>
										<mCommand></mCommand>
										<packageName></packageName>
										<mFgColor>#ff0000</mFgColor>
										<mBgColor>#ffff00</mBgColor>
										<mSoundFile></mSoundFile>
										<colorTriggerFgColor>#000000</colorTriggerFgColor>
										<colorTriggerBgColor>#000000</colorTriggerBgColor>
										<regexCodeList>
											<string>return isPrompt()</string>
										</regexCodeList>
										<regexCodePropertyList>
											<integer>4</integer>
										</regexCodePropertyList>
									</Trigger>
								</Trigger>
								<Trigger isActive="yes" isFolder="no" isTempTrigger="no" isMultiline="yes" isPerlSlashGOption="no" isColorizerTrigger="no" isFilterTrigger="no" isSoundTrigger="no" isColorTrigger="no" isColorTriggerFg="no" isColorTriggerBg="no">
									<name>Clawtwist</name>
									<script>if multimatches[1][4] == snd.target then
	snd.last_hit_limb = "torso"
	snd.last_limb_dmg = 8.49
	snd.took_limb_dmg("torso", snd.last_limb_dmg)
end</script>
									<triggerType>0</triggerType>
									<conditonLineDelta>2</conditonLineDelta>
									<mStayOpen>10</mStayOpen>
									<mCommand></mCommand>
									<packageName></packageName>
									<mFgColor>#ff0000</mFgColor>
									<mBgColor>#ffff00</mBgColor>
									<mSoundFile></mSoundFile>
									<colorTriggerFgColor>#000000</colorTriggerFgColor>
									<colorTriggerBgColor>#000000</colorTriggerBgColor>
									<regexCodeList>
										<string>^Forming a claw with (the )?\w+ free hand, (the )?\w+ thrusts? it into the chest of (\w+)\.$</string>
										<string>^\w+ grips? what (the )?\w+ can and twists? viciously\.$</string>
									</regexCodeList>
									<regexCodePropertyList>
										<integer>1</integer>
										<integer>1</integer>
									</regexCodePropertyList>
									<Trigger isActive="yes" isFolder="no" isTempTrigger="no" isMultiline="no" isPerlSlashGOption="no" isColorizerTrigger="no" isFilterTrigger="no" isSoundTrigger="no" isColorTrigger="no" isColorTriggerFg="no" isColorTriggerBg="no">
										<name>Clawtwist end</name>
										<script>setTriggerStayOpen("Clawtwist", 0)
</script>
										<triggerType>0</triggerType>
										<conditonLineDelta>0</conditonLineDelta>
										<mStayOpen>0</mStayOpen>
										<mCommand></mCommand>
										<packageName></packageName>
										<mFgColor>#ff0000</mFgColor>
										<mBgColor>#ffff00</mBgColor>
										<mSoundFile></mSoundFile>
										<colorTriggerFgColor>#000000</colorTriggerFgColor>
										<colorTriggerBgColor>#000000</colorTriggerBgColor>
										<regexCodeList>
											<string>return isPrompt()</string>
										</regexCodeList>
										<regexCodePropertyList>
											<integer>4</integer>
										</regexCodePropertyList>
									</Trigger>
									<Trigger isActive="yes" isFolder="no" isTempTrigger="no" isMultiline="no" isPerlSlashGOption="no" isColorizerTrigger="no" isFilterTrigger="no" isSoundTrigger="no" isColorTrigger="no" isColorTriggerFg="no" isColorTriggerBg="no">
										<name>undo Clawtwist</name>
										<script>if matches[2] == snd.target then
  snd.took_limb_dmg(snd.last_hit_limb, -snd.last_limb_dmg)
end</script>
										<triggerType>0</triggerType>
										<conditonLineDelta>0</conditonLineDelta>
										<mStayOpen>0</mStayOpen>
										<mCommand></mCommand>
										<packageName></packageName>
										<mFgColor>#ff0000</mFgColor>
										<mBgColor>#ffff00</mBgColor>
										<mSoundFile></mSoundFile>
										<colorTriggerFgColor>#000000</colorTriggerFgColor>
										<colorTriggerBgColor>#000000</colorTriggerBgColor>
										<regexCodeList>
											<string>^With a free hand, (\w+) fends off the attack on (the )?\w+ (.+)\.$</string>
											<string>^Stepping quickly out of the way, (\w+) dodges the attack\.$</string>
											<string>^(\w+) parries the attack on (.*) with a deft maneuver\.$</string>
											<string>^(\w+) guards the attack on (.*)\.$</string>
											<string>^A reflection of (\w+) blinks out of existence\.$</string>
										</regexCodeList>
										<regexCodePropertyList>
											<integer>1</integer>
											<integer>1</integer>
											<integer>1</integer>
											<integer>1</integer>
											<integer>1</integer>
										</regexCodePropertyList>
									</Trigger>
								</Trigger>
								<Trigger isActive="yes" isFolder="no" isTempTrigger="no" isMultiline="yes" isPerlSlashGOption="no" isColorizerTrigger="no" isFilterTrigger="no" isSoundTrigger="no" isColorTrigger="no" isColorTriggerFg="no" isColorTriggerBg="no">
									<name>Heelrush 1st hit</name>
									<script>if multimatches[1][3] == snd.target then
	snd.last_hit_limb = multimatches[1][4]
	snd.last_limb_dmg = 5.49
	snd.took_limb_dmg(multimatches[1][4], snd.last_limb_dmg)
end</script>
									<triggerType>0</triggerType>
									<conditonLineDelta>3</conditonLineDelta>
									<mStayOpen>10</mStayOpen>
									<mCommand></mCommand>
									<packageName></packageName>
									<mFgColor>#ff0000</mFgColor>
									<mBgColor>#ffff00</mBgColor>
									<mSoundFile></mSoundFile>
									<colorTriggerFgColor>#000000</colorTriggerFgColor>
									<colorTriggerBgColor>#000000</colorTriggerBgColor>
									<regexCodeList>
										<string>^Spotting an opening, (\w+) lets? loose a kick into (\w+)'s (.+).$</string>
										<string>^\w+'?s? blow lands heavily with weight.$</string>
									</regexCodeList>
									<regexCodePropertyList>
										<integer>1</integer>
										<integer>1</integer>
									</regexCodePropertyList>
									<Trigger isActive="yes" isFolder="no" isTempTrigger="no" isMultiline="no" isPerlSlashGOption="no" isColorizerTrigger="no" isFilterTrigger="no" isSoundTrigger="no" isColorTrigger="no" isColorTriggerFg="no" isColorTriggerBg="no">
										<name>undo Heelrush 1st hit</name>
										<script>if matches[2] == snd.target then
  snd.took_limb_dmg(snd.last_hit_limb, -snd.last_limb_dmg)
end</script>
										<triggerType>0</triggerType>
										<conditonLineDelta>0</conditonLineDelta>
										<mStayOpen>0</mStayOpen>
										<mCommand></mCommand>
										<packageName></packageName>
										<mFgColor>#ff0000</mFgColor>
										<mBgColor>#ffff00</mBgColor>
										<mSoundFile></mSoundFile>
										<colorTriggerFgColor>#000000</colorTriggerFgColor>
										<colorTriggerBgColor>#000000</colorTriggerBgColor>
										<regexCodeList>
											<string>^With a free hand, (\w+) fends off the attack on (the )?\w+ (.+)\.$</string>
											<string>^Stepping quickly out of the way, (\w+) dodges the attack\.$</string>
											<string>^(\w+) parries the attack on (.*) with a deft maneuver\.$</string>
											<string>^(\w+) guards the attack on (.*)\.$</string>
											<string>^A reflection of (\w+) blinks out of existence\.$</string>
										</regexCodeList>
										<regexCodePropertyList>
											<integer>1</integer>
											<integer>1</integer>
											<integer>1</integer>
											<integer>1</integer>
											<integer>1</integer>
										</regexCodePropertyList>
									</Trigger>
									<Trigger isActive="yes" isFolder="no" isTempTrigger="no" isMultiline="no" isPerlSlashGOption="no" isColorizerTrigger="no" isFilterTrigger="no" isSoundTrigger="no" isColorTrigger="no" isColorTriggerFg="no" isColorTriggerBg="no">
										<name>Heelrush 1st hit end</name>
										<script>setTriggerStayOpen("Heelrush 1st hit", 0)
</script>
										<triggerType>0</triggerType>
										<conditonLineDelta>0</conditonLineDelta>
										<mStayOpen>0</mStayOpen>
										<mCommand></mCommand>
										<packageName></packageName>
										<mFgColor>#ff0000</mFgColor>
										<mBgColor>#ffff00</mBgColor>
										<mSoundFile></mSoundFile>
										<colorTriggerFgColor>#000000</colorTriggerFgColor>
										<colorTriggerBgColor>#000000</colorTriggerBgColor>
										<regexCodeList>
											<string>return isPrompt()</string>
										</regexCodeList>
										<regexCodePropertyList>
											<integer>4</integer>
										</regexCodePropertyList>
									</Trigger>
								</Trigger>
								<Trigger isActive="yes" isFolder="no" isTempTrigger="no" isMultiline="yes" isPerlSlashGOption="no" isColorizerTrigger="no" isFilterTrigger="no" isSoundTrigger="no" isColorTrigger="no" isColorTriggerFg="no" isColorTriggerBg="no">
									<name>Heelrush 2nd hit</name>
									<script>if multimatches[1][4] == snd.target then
	snd.last_hit_limb = multimatches[1][5]
	snd.last_limb_dmg = 8
	snd.took_limb_dmg(multimatches[1][5], snd.last_limb_dmg)
end</script>
									<triggerType>0</triggerType>
									<conditonLineDelta>3</conditonLineDelta>
									<mStayOpen>10</mStayOpen>
									<mCommand></mCommand>
									<packageName></packageName>
									<mFgColor>#ff0000</mFgColor>
									<mBgColor>#ffff00</mBgColor>
									<mSoundFile></mSoundFile>
									<colorTriggerFgColor>#000000</colorTriggerFgColor>
									<colorTriggerBgColor>#000000</colorTriggerBgColor>
									<regexCodeList>
										<string>^Whirling (the )?\w+ foot around, (\w+) lands? it into (\w+)'s (.+) with a second hit.$</string>
										<string>^\w+'?s? blow lands heavily with weight.$</string>
									</regexCodeList>
									<regexCodePropertyList>
										<integer>1</integer>
										<integer>1</integer>
									</regexCodePropertyList>
									<Trigger isActive="yes" isFolder="no" isTempTrigger="no" isMultiline="no" isPerlSlashGOption="no" isColorizerTrigger="no" isFilterTrigger="no" isSoundTrigger="no" isColorTrigger="no" isColorTriggerFg="no" isColorTriggerBg="no">
										<name>undo Heelrush 2nd hit</name>
										<script>if matches[2] == snd.target then
  snd.took_limb_dmg(snd.last_hit_limb, -snd.last_limb_dmg)
end</script>
										<triggerType>0</triggerType>
										<conditonLineDelta>0</conditonLineDelta>
										<mStayOpen>0</mStayOpen>
										<mCommand></mCommand>
										<packageName></packageName>
										<mFgColor>#ff0000</mFgColor>
										<mBgColor>#ffff00</mBgColor>
										<mSoundFile></mSoundFile>
										<colorTriggerFgColor>#000000</colorTriggerFgColor>
										<colorTriggerBgColor>#000000</colorTriggerBgColor>
										<regexCodeList>
											<string>^With a free hand, (\w+) fends off the attack on (the )?\w+ (.+)\.$</string>
											<string>^Stepping quickly out of the way, (\w+) dodges the attack\.$</string>
											<string>^(\w+) parries the attack on (.*) with a deft maneuver\.$</string>
											<string>^(\w+) guards the attack on (.*)\.$</string>
											<string>^A reflection of (\w+) blinks out of existence\.$</string>
										</regexCodeList>
										<regexCodePropertyList>
											<integer>1</integer>
											<integer>1</integer>
											<integer>1</integer>
											<integer>1</integer>
											<integer>1</integer>
										</regexCodePropertyList>
									</Trigger>
									<Trigger isActive="yes" isFolder="no" isTempTrigger="no" isMultiline="no" isPerlSlashGOption="no" isColorizerTrigger="no" isFilterTrigger="no" isSoundTrigger="no" isColorTrigger="no" isColorTriggerFg="no" isColorTriggerBg="no">
										<name>Heelrush 2nd hit end</name>
										<script>setTriggerStayOpen("Heelrush 2nd hit", 0)
</script>
										<triggerType>0</triggerType>
										<conditonLineDelta>0</conditonLineDelta>
										<mStayOpen>0</mStayOpen>
										<mCommand></mCommand>
										<packageName></packageName>
										<mFgColor>#ff0000</mFgColor>
										<mBgColor>#ffff00</mBgColor>
										<mSoundFile></mSoundFile>
										<colorTriggerFgColor>#000000</colorTriggerFgColor>
										<colorTriggerBgColor>#000000</colorTriggerBgColor>
										<regexCodeList>
											<string>return isPrompt()</string>
										</regexCodeList>
										<regexCodePropertyList>
											<integer>4</integer>
										</regexCodePropertyList>
									</Trigger>
								</Trigger>
								<Trigger isActive="yes" isFolder="no" isTempTrigger="no" isMultiline="yes" isPerlSlashGOption="no" isColorizerTrigger="no" isFilterTrigger="no" isSoundTrigger="no" isColorTrigger="no" isColorTriggerFg="no" isColorTriggerBg="no">
									<name>Heelrush 3rd hit</name>
									<script>if multimatches[1][4] == snd.target then
	snd.last_hit_limb = multimatches[1][5]
	snd.last_limb_dmg = 10
	snd.took_limb_dmg(multimatches[1][5], snd.last_limb_dmg)
end</script>
									<triggerType>0</triggerType>
									<conditonLineDelta>3</conditonLineDelta>
									<mStayOpen>10</mStayOpen>
									<mCommand></mCommand>
									<packageName></packageName>
									<mFgColor>#ff0000</mFgColor>
									<mBgColor>#ffff00</mBgColor>
									<mSoundFile></mSoundFile>
									<colorTriggerFgColor>#000000</colorTriggerFgColor>
									<colorTriggerBgColor>#000000</colorTriggerBgColor>
									<regexCodeList>
										<string>^With the last of (the )?\w+ momentum, (\w+) heaves? a straight kick into (\w+)'s (.+).$</string>
										<string>^\w+'?s? blow lands heavily with weight.$</string>
									</regexCodeList>
									<regexCodePropertyList>
										<integer>1</integer>
										<integer>1</integer>
									</regexCodePropertyList>
									<Trigger isActive="yes" isFolder="no" isTempTrigger="no" isMultiline="no" isPerlSlashGOption="no" isColorizerTrigger="no" isFilterTrigger="no" isSoundTrigger="no" isColorTrigger="no" isColorTriggerFg="no" isColorTriggerBg="no">
										<name>undo Heelrush 3rd hit</name>
										<script>if matches[2] == snd.target then
  snd.took_limb_dmg(snd.last_hit_limb, -snd.last_limb_dmg)
end</script>
										<triggerType>0</triggerType>
										<conditonLineDelta>0</conditonLineDelta>
										<mStayOpen>0</mStayOpen>
										<mCommand></mCommand>
										<packageName></packageName>
										<mFgColor>#ff0000</mFgColor>
										<mBgColor>#ffff00</mBgColor>
										<mSoundFile></mSoundFile>
										<colorTriggerFgColor>#000000</colorTriggerFgColor>
										<colorTriggerBgColor>#000000</colorTriggerBgColor>
										<regexCodeList>
											<string>^With a free hand, (\w+) fends off the attack on (the )?\w+ (.+)\.$</string>
											<string>^Stepping quickly out of the way, (\w+) dodges the attack\.$</string>
											<string>^(\w+) parries the attack on (.*) with a deft maneuver\.$</string>
											<string>^(\w+) guards the attack on (.*)\.$</string>
											<string>^A reflection of (\w+) blinks out of existence\.$</string>
										</regexCodeList>
										<regexCodePropertyList>
											<integer>1</integer>
											<integer>1</integer>
											<integer>1</integer>
											<integer>1</integer>
											<integer>1</integer>
										</regexCodePropertyList>
									</Trigger>
									<Trigger isActive="yes" isFolder="no" isTempTrigger="no" isMultiline="no" isPerlSlashGOption="no" isColorizerTrigger="no" isFilterTrigger="no" isSoundTrigger="no" isColorTrigger="no" isColorTriggerFg="no" isColorTriggerBg="no">
										<name>Heelrush 3rd hit end</name>
										<script>setTriggerStayOpen("Heelrush 3rd hit", 0)
</script>
										<triggerType>0</triggerType>
										<conditonLineDelta>0</conditonLineDelta>
										<mStayOpen>0</mStayOpen>
										<mCommand></mCommand>
										<packageName></packageName>
										<mFgColor>#ff0000</mFgColor>
										<mBgColor>#ffff00</mBgColor>
										<mSoundFile></mSoundFile>
										<colorTriggerFgColor>#000000</colorTriggerFgColor>
										<colorTriggerBgColor>#000000</colorTriggerBgColor>
										<regexCodeList>
											<string>return isPrompt()</string>
										</regexCodeList>
										<regexCodePropertyList>
											<integer>4</integer>
										</regexCodePropertyList>
									</Trigger>
								</Trigger>
								<Trigger isActive="yes" isFolder="no" isTempTrigger="no" isMultiline="no" isPerlSlashGOption="no" isColorizerTrigger="no" isFilterTrigger="no" isSoundTrigger="no" isColorTrigger="no" isColorTriggerFg="no" isColorTriggerBg="no">
									<name>Soothing</name>
									<script>if matches[2] == snd.target then
  if snd.toggles.atkecho then
    deleteLine()
    snd.message(matches[2] .. ": soothing " .. matches[3])
  end
  if snd.checkAff("whiplash") and matches[4] == "head" then
    snd.target_cured("whiplash")
  elseif snd.checkAff("backstrain") and matches[4] == "torso" then
    snd.target_cured("backsrain")
  elseif snd.checkAff("muscle spasms") and matches[4] == "torso" then
    snd.target_cured("muscle spasms")
  elseif snd.checkAff("stiffness") then
    snd.target_cured("stiffness")
  elseif snd.checkAff("sore wrist") and matches[4]:find("arm") then
    snd.target_cured("sore wrist")
  elseif snd.checkAff("weak grip") then
    snd.target_cured("weak grip")
  elseif snd.checkAff("sore ankle") and matches[4]:find("leg") then
    snd.target_cured("sore ankle")
  end
end</script>
									<triggerType>0</triggerType>
									<conditonLineDelta>0</conditonLineDelta>
									<mStayOpen>0</mStayOpen>
									<mCommand></mCommand>
									<packageName></packageName>
									<mFgColor>#ff0000</mFgColor>
									<mBgColor>#ffff00</mBgColor>
									<mSoundFile></mSoundFile>
									<colorTriggerFgColor>#000000</colorTriggerFgColor>
									<colorTriggerBgColor>#000000</colorTriggerBgColor>
									<regexCodeList>
										<string>^(\w+) presses a soothing poultice against (the )?\w+ (.+), rubbing the poultice into (the )?\w+ flesh\.$</string>
									</regexCodeList>
									<regexCodePropertyList>
										<integer>1</integer>
									</regexCodePropertyList>
								</Trigger>
								<Trigger isActive="yes" isFolder="no" isTempTrigger="no" isMultiline="no" isPerlSlashGOption="no" isColorizerTrigger="no" isFilterTrigger="no" isSoundTrigger="no" isColorTrigger="no" isColorTriggerFg="no" isColorTriggerBg="no">
									<name>Zealot clear affs on new attack in same combo</name>
									<script>if snd.target == matches[2] then
	snd.last_aff = ""
	snd.last_affs = {}
end</script>
									<triggerType>0</triggerType>
									<conditonLineDelta>0</conditonLineDelta>
									<mStayOpen>0</mStayOpen>
									<mCommand></mCommand>
									<packageName></packageName>
									<mFgColor>#ff0000</mFgColor>
									<mBgColor>#ffff00</mBgColor>
									<mSoundFile></mSoundFile>
									<colorTriggerFgColor>#000000</colorTriggerFgColor>
									<colorTriggerBgColor>#000000</colorTriggerBgColor>
									<regexCodeList>
										<string>^\w+ uses? Zeal .+ on (\w+)\.$</string>
									</regexCodeList>
									<regexCodePropertyList>
										<integer>1</integer>
									</regexCodePropertyList>
								</Trigger>
								<Trigger isActive="yes" isFolder="no" isTempTrigger="no" isMultiline="yes" isPerlSlashGOption="no" isColorizerTrigger="no" isFilterTrigger="no" isSoundTrigger="no" isColorTrigger="no" isColorTriggerFg="no" isColorTriggerBg="no">
									<name>Dislocate</name>
									<script>if multimatches[1][4] == snd.target then
	snd.target_got(multimatches[1][3].." dislocated")
end</script>
									<triggerType>0</triggerType>
									<conditonLineDelta>3</conditonLineDelta>
									<mStayOpen>0</mStayOpen>
									<mCommand></mCommand>
									<packageName></packageName>
									<mFgColor>#ff0000</mFgColor>
									<mBgColor>#ffff00</mBgColor>
									<mSoundFile></mSoundFile>
									<colorTriggerFgColor>#000000</colorTriggerFgColor>
									<colorTriggerBgColor>#000000</colorTriggerBgColor>
									<regexCodeList>
										<string>^(\w+) uses? Zeal Dislocate \((.+)\) on (\w+).$</string>
										<string>^\w+ appl(ies|y) a bit of force and.+hear a (the )?\w+ 'pop'.$</string>
									</regexCodeList>
									<regexCodePropertyList>
										<integer>1</integer>
										<integer>1</integer>
									</regexCodePropertyList>
								</Trigger>
								<Trigger isActive="yes" isFolder="no" isTempTrigger="no" isMultiline="no" isPerlSlashGOption="no" isColorizerTrigger="no" isFilterTrigger="no" isSoundTrigger="no" isColorTrigger="no" isColorTriggerFg="no" isColorTriggerBg="no">
									<name>Blitz</name>
									<script>
local basic_limb_affs = {
["left leg"] = "a broken left leg",
["right leg"] = "a broken right leg",
["left arm"] = "a broken left arm",
["right arm"] = "a broken right arm",
}

if matches[2] == snd.target then
 snd.target_got(basic_limb_affs[matches[3]])
end</script>
									<triggerType>0</triggerType>
									<conditonLineDelta>0</conditonLineDelta>
									<mStayOpen>0</mStayOpen>
									<mCommand></mCommand>
									<packageName></packageName>
									<mFgColor>#ff0000</mFgColor>
									<mBgColor>#ffff00</mBgColor>
									<mSoundFile></mSoundFile>
									<colorTriggerFgColor>#000000</colorTriggerFgColor>
									<colorTriggerBgColor>#000000</colorTriggerBgColor>
									<regexCodeList>
										<string>^ (\w+)\'s (.+) twists and breaks under the blow.$</string>
									</regexCodeList>
									<regexCodePropertyList>
										<integer>1</integer>
									</regexCodePropertyList>
								</Trigger>
								<Trigger isActive="yes" isFolder="no" isTempTrigger="no" isMultiline="yes" isPerlSlashGOption="no" isColorizerTrigger="no" isFilterTrigger="no" isSoundTrigger="no" isColorTrigger="no" isColorTriggerFg="no" isColorTriggerBg="no">
									<name>Palmforce</name>
									<script>if multimatches[1][3] == snd.target then
	snd.target_prone = true
end</script>
									<triggerType>0</triggerType>
									<conditonLineDelta>3</conditonLineDelta>
									<mStayOpen>0</mStayOpen>
									<mCommand></mCommand>
									<packageName></packageName>
									<mFgColor>#ff0000</mFgColor>
									<mBgColor>#ffff00</mBgColor>
									<mSoundFile></mSoundFile>
									<colorTriggerFgColor>#000000</colorTriggerFgColor>
									<colorTriggerBgColor>#000000</colorTriggerBgColor>
									<regexCodeList>
										<string>^(\w+) uses? Zeal Palmforce on (\w+).$</string>
										<string>^The generated force knocks (the )?\w+ to the floor.$</string>
									</regexCodeList>
									<regexCodePropertyList>
										<integer>1</integer>
										<integer>1</integer>
									</regexCodePropertyList>
								</Trigger>
								<Trigger isActive="yes" isFolder="no" isTempTrigger="no" isMultiline="no" isPerlSlashGOption="no" isColorizerTrigger="no" isFilterTrigger="no" isSoundTrigger="no" isColorTrigger="no" isColorTriggerFg="no" isColorTriggerBg="no">
									<name>Chain attacks</name>
									<script>if matches[4] == snd.target then
	if matches[3] == "Anklepin" then
		snd.target_got("sore ankle")
	table.insert(snd.last_affs, "sore ankle")
	end
	
	if matches[3] == "Jawcrack" then
		snd.target_got("stuttering")
	table.insert(snd.last_affs, "stuttering")
			snd.target_got("blurry vision")
	table.insert(snd.last_affs, "blurry vision")
	end
	
	if matches[3] == "Descent" then
		snd.target_got("backstrain")
	table.insert(snd.last_affs, "backstrain")
	end
	
	if matches[3] == "Wristlash" then
		snd.target_got("sore wrist")
	table.insert(snd.last_affs, "sore wrist")
	end
	
	if matches[3] == "Uprise" then
		snd.target_got("whiplash")
	table.insert(snd.last_affs, "whiplash")
	end
end

</script>
									<triggerType>0</triggerType>
									<conditonLineDelta>0</conditonLineDelta>
									<mStayOpen>0</mStayOpen>
									<mCommand></mCommand>
									<packageName></packageName>
									<mFgColor>#ff0000</mFgColor>
									<mBgColor>#ffff00</mBgColor>
									<mSoundFile></mSoundFile>
									<colorTriggerFgColor>#000000</colorTriggerFgColor>
									<colorTriggerBgColor>#000000</colorTriggerBgColor>
									<regexCodeList>
										<string>^(\w+) uses? Zeal (\w+) on (\w+).$</string>
									</regexCodeList>
									<regexCodePropertyList>
										<integer>1</integer>
									</regexCodePropertyList>
								</Trigger>
								<Trigger isActive="yes" isFolder="no" isTempTrigger="no" isMultiline="no" isPerlSlashGOption="no" isColorizerTrigger="no" isFilterTrigger="no" isSoundTrigger="no" isColorTrigger="no" isColorTriggerFg="no" isColorTriggerBg="no">
									<name>Wrath - Parry watching</name>
									<script>if matches[2] == snd.target then
 snd.parried_limb = matches[4]
end</script>
									<triggerType>0</triggerType>
									<conditonLineDelta>0</conditonLineDelta>
									<mStayOpen>0</mStayOpen>
									<mCommand></mCommand>
									<packageName></packageName>
									<mFgColor>#ff0000</mFgColor>
									<mBgColor>#ffff00</mBgColor>
									<mSoundFile></mSoundFile>
									<colorTriggerFgColor>#000000</colorTriggerFgColor>
									<colorTriggerBgColor>#000000</colorTriggerBgColor>
									<regexCodeList>
										<string>^You see (\w+) shift .+ parry to (his|her|their|its) (.+)\.$</string>
									</regexCodeList>
									<regexCodePropertyList>
										<integer>1</integer>
									</regexCodePropertyList>
								</Trigger>
								<Trigger isActive="yes" isFolder="no" isTempTrigger="no" isMultiline="no" isPerlSlashGOption="no" isColorizerTrigger="no" isFilterTrigger="no" isSoundTrigger="no" isColorTrigger="no" isColorTriggerFg="no" isColorTriggerBg="no">
									<name>Zeal Attack DMG Reset</name>
									<script>if matches[4] == snd.target then
  snd.last_limb_dmg = 0
  snd.last_hit_limb = "none"
 end</script>
									<triggerType>0</triggerType>
									<conditonLineDelta>0</conditonLineDelta>
									<mStayOpen>0</mStayOpen>
									<mCommand></mCommand>
									<packageName></packageName>
									<mFgColor>#ff0000</mFgColor>
									<mBgColor>#ffff00</mBgColor>
									<mSoundFile></mSoundFile>
									<colorTriggerFgColor>#000000</colorTriggerFgColor>
									<colorTriggerBgColor>#000000</colorTriggerBgColor>
									<regexCodeList>
										<string>^(\w+) uses? Zeal Wanekick \((.+)\) on (\w+).$</string>
									</regexCodeList>
									<regexCodePropertyList>
										<integer>0</integer>
									</regexCodePropertyList>
								</Trigger>
							</TriggerGroup>
							<TriggerGroup isActive="yes" isFolder="yes" isTempTrigger="no" isMultiline="no" isPerlSlashGOption="no" isColorizerTrigger="no" isFilterTrigger="no" isSoundTrigger="no" isColorTrigger="no" isColorTriggerFg="no" isColorTriggerBg="no">
								<name>Generic limb stuff</name>
								<script></script>
								<triggerType>0</triggerType>
								<conditonLineDelta>0</conditonLineDelta>
								<mStayOpen>0</mStayOpen>
								<mCommand></mCommand>
								<packageName></packageName>
								<mFgColor>#ff0000</mFgColor>
								<mBgColor>#ffff00</mBgColor>
								<mSoundFile></mSoundFile>
								<colorTriggerFgColor>#000000</colorTriggerFgColor>
								<colorTriggerBgColor>#000000</colorTriggerBgColor>
								<regexCodeList />
								<regexCodePropertyList />
								<Trigger isActive="yes" isFolder="no" isTempTrigger="no" isMultiline="no" isPerlSlashGOption="no" isColorizerTrigger="no" isFilterTrigger="no" isSoundTrigger="no" isColorTrigger="no" isColorTriggerFg="no" isColorTriggerBg="no">
									<name>broke</name>
									<script>deleteLine()
snd.message("&lt;red&gt;Broke: &lt;white&gt;"..matches[2]..matches[3].." "..matches[4])
if matches[2] == snd.target then
 snd.limb_status[matches[4]] = "broken"
 
  if matches[2] == snd.target and matches[4]~= "head" and matches[4] ~= "torso" then
   snd.target_got("a broken "..matches[4])
  end
end
</script>
									<triggerType>0</triggerType>
									<conditonLineDelta>0</conditonLineDelta>
									<mStayOpen>0</mStayOpen>
									<mCommand></mCommand>
									<packageName></packageName>
									<mFgColor>#ff0000</mFgColor>
									<mBgColor>#ffff00</mBgColor>
									<mSoundFile></mSoundFile>
									<colorTriggerFgColor>#000000</colorTriggerFgColor>
									<colorTriggerBgColor>#000000</colorTriggerBgColor>
									<regexCodeList>
										<string>^(\w+)('s|') (.+) breaks from all the damage\.$</string>
									</regexCodeList>
									<regexCodePropertyList>
										<integer>1</integer>
									</regexCodePropertyList>
								</Trigger>
								<Trigger isActive="yes" isFolder="no" isTempTrigger="no" isMultiline="no" isPerlSlashGOption="no" isColorizerTrigger="no" isFilterTrigger="no" isSoundTrigger="no" isColorTrigger="no" isColorTriggerFg="no" isColorTriggerBg="no">
									<name>mangled</name>
									<script>deleteLine()
snd.message("&lt;red&gt;Mangled: &lt;white&gt;"..matches[2]..matches[3].." "..matches[4])
if matches[2] == snd.target then
 snd.last_hit_limb = matches[4]
 snd.last_limb_dmg = 66.66-snd.limb_dmg[matches[4]]
 snd.took_limb_dmg(snd.last_hit_limb, snd.last_limb_dmg)
 snd.limb_status[matches[4]] = "mangled"
end
</script>
									<triggerType>0</triggerType>
									<conditonLineDelta>0</conditonLineDelta>
									<mStayOpen>0</mStayOpen>
									<mCommand></mCommand>
									<packageName></packageName>
									<mFgColor>#ff0000</mFgColor>
									<mBgColor>#ffff00</mBgColor>
									<mSoundFile></mSoundFile>
									<colorTriggerFgColor>#000000</colorTriggerFgColor>
									<colorTriggerBgColor>#000000</colorTriggerBgColor>
									<regexCodeList>
										<string>^(\w+)('s|') (.+) has been beaten into uselessness\.$</string>
									</regexCodeList>
									<regexCodePropertyList>
										<integer>1</integer>
									</regexCodePropertyList>
								</Trigger>
								<Trigger isActive="yes" isFolder="no" isTempTrigger="no" isMultiline="no" isPerlSlashGOption="no" isColorizerTrigger="no" isFilterTrigger="no" isSoundTrigger="no" isColorTrigger="no" isColorTriggerFg="no" isColorTriggerBg="no">
									<name>mending</name>
									<script>if snd.toggles.atkecho then
 deleteLine()
 snd.message(matches[2]..": mending "..matches[3])
end
if matches[2] == snd.target then
	if not snd.checkAff("burnt_skin") then
   if snd.limb_bruising[matches[4]] &gt;= 3 then
    snd.limb_bruising[matches[4]] = snd.limb_bruising[matches[4]]-1
   elseif snd.checkAff("destroyed_throat") then
   	snd.target_cured("destroyed_throat") 
   elseif snd.checkAff("crippled throat") and matches[4] == "head" then
   	snd.target_cured("crippled throat")
   elseif snd.checkAff("lightwound") and matches[4] == "torso" then
   	snd.target_cured("lightwound")
   elseif snd.checkAff("ablaze") and (matches[4] == "torso" or matches[4] == "skin") then
   	snd.target_cured("ablaze")
		snd.target_cured("crispy")
   elseif snd.checkAff("a broken "..matches[4]) then
    snd.target_cured("a broken "..matches[4])
   elseif snd.checkAff("a broken arm") and matches[4]:find("arm") then
    snd.target_cured("a broken arm")
   elseif snd.checkAff("a broken leg") and matches[4]:find ("leg") then
    snd.target_cured("a broken leg")
   elseif matches[3] == "torso" and snd.checkAff("cracked_ribs") then
    snd.target_cured("cracked ribs")
   elseif snd.limb_bruising[matches[4]] &gt; 0 then
    snd.limb_bruising[matches[4]] = snd.limb_bruising[matches[4]]-1
   elseif snd.checkAff(matches[4].." dislocated") then
   	snd.target_cured(matches[4].." dislocated")
   end
	end
end</script>
									<triggerType>0</triggerType>
									<conditonLineDelta>0</conditonLineDelta>
									<mStayOpen>0</mStayOpen>
									<mCommand></mCommand>
									<packageName></packageName>
									<mFgColor>#ff0000</mFgColor>
									<mBgColor>#ffff00</mBgColor>
									<mSoundFile></mSoundFile>
									<colorTriggerFgColor>#000000</colorTriggerFgColor>
									<colorTriggerBgColor>#000000</colorTriggerBgColor>
									<regexCodeList>
										<string>^(\w+) presses a mending poultice against (the )?\w+ (head|torso|right leg|left leg|right arm|left arm|skin), rubbing the poultice into (the )?\w+ flesh\.$</string>
									</regexCodeList>
									<regexCodePropertyList>
										<integer>1</integer>
									</regexCodePropertyList>
								</Trigger>
								<Trigger isActive="yes" isFolder="no" isTempTrigger="no" isMultiline="no" isPerlSlashGOption="no" isColorizerTrigger="no" isFilterTrigger="no" isSoundTrigger="no" isColorTrigger="no" isColorTriggerFg="no" isColorTriggerBg="no">
									<name>restoration</name>
									<script>if matches[2] == snd.target then
  snd.resto_limb = matches[4]
	snd.enemy_used_regenerate = false
  if snd.resto_limb == "torso" then
    if snd.checkAff("collapsed_lung") then
      tempTimer(4.05, [[snd.target_cured("collapsed_lung")]])
    elseif snd.checkAff("spinal_rip") then
      tempTimer(4.05, [[snd.target_cured("spinal_rip")]])
    elseif snd.checkAff("burnt_skin") then
      tempTimer(4.05, [[snd.target_cured("burnt_skin")]])
    elseif snd.checkAff("crushed_chest") and snd.limb_status["torso"] == "healed" then
      tempTimer(4.05, [[snd.target_cured("crushed_chest")]])
    elseif snd.checkAff("heatspear") and snd.limb_status["torso"] == "healed" then
      tempTimer(4.05, [[snd.target_cured("heatspear")]])
    elseif snd.checkAff("deepwound") and snd.limb_status["torso"] == "healed" then
      tempTimer(4.05, [[snd.target_cured("deepwound")]])
    else
      tempTimer(4.05, [[if snd.enemy_used_regenerate == true then
                          snd.took_limb_dmg(snd.resto_limb, -40)
                        else 
                          snd.took_limb_dmg(snd.resto_limb, -30)
                        end
                          ]])
    end
  elseif snd.resto_limb == "head" then
    if snd.checkAff("mauled_face") then
      tempTimer(4.05, [[snd.target_cured("mauled_face")]])
    elseif snd.checkAff("smashed_throat") and snd.limb_status["torso"] == "healed" then
      tempTimer(4.05, [[snd.target_cured("smashed_throat")]])
    elseif snd.checkAff("voidgaze") and snd.limb_status["torso"] == "healed" then
      tempTimer(4.05, [[snd.target_cured("voidgaze")]])
    else
            tempTimer(4.05, [[if snd.enemy_used_regenerate == true then
                          snd.took_limb_dmg(snd.resto_limb, -40)
                        else 
                          snd.took_limb_dmg(snd.resto_limb, -30)
                        end
                          ]])
    end
	--All limbs don't have special resto affs, so just remove the damage accrued.
  else
          tempTimer(4.05, [[if snd.enemy_used_regenerate == true then
                          snd.took_limb_dmg(snd.resto_limb, -40)
                        else 
                          snd.took_limb_dmg(snd.resto_limb, -30)
                        end
                          ]])
  end

snd.enemy_restoration_balance = false
tempTimer(3,[[snd.enemy_restoration_balance = true]])

end

</script>
									<triggerType>0</triggerType>
									<conditonLineDelta>0</conditonLineDelta>
									<mStayOpen>0</mStayOpen>
									<mCommand></mCommand>
									<packageName></packageName>
									<mFgColor>#ff0000</mFgColor>
									<mBgColor>#ffff00</mBgColor>
									<mSoundFile></mSoundFile>
									<colorTriggerFgColor>#000000</colorTriggerFgColor>
									<colorTriggerBgColor>#000000</colorTriggerBgColor>
									<regexCodeList>
										<string>^(\w+) presses a restoration poultice against (the )?\w+ (head|torso|right leg|left leg|right arm|left arm), rubbing the poultice into (the )?\w+ flesh\.$</string>
									</regexCodeList>
									<regexCodePropertyList>
										<integer>1</integer>
									</regexCodePropertyList>
								</Trigger>
								<Trigger isActive="yes" isFolder="no" isTempTrigger="no" isMultiline="no" isPerlSlashGOption="no" isColorizerTrigger="no" isFilterTrigger="no" isSoundTrigger="no" isColorTrigger="no" isColorTriggerFg="no" isColorTriggerBg="no">
									<name>Prone w/leg breaks</name>
									<script>deleteLine()
snd.message("&lt;red&gt;Broke: &lt;white&gt;"..matches[2]..matches[3].." "..matches[4])
if matches[2] == snd.target then
 snd.limb_status[matches[4]] = "broken"
 snd.target_prone = true
end
</script>
									<triggerType>0</triggerType>
									<conditonLineDelta>0</conditonLineDelta>
									<mStayOpen>0</mStayOpen>
									<mCommand></mCommand>
									<packageName></packageName>
									<mFgColor>#ff0000</mFgColor>
									<mBgColor>#ffff00</mBgColor>
									<mSoundFile></mSoundFile>
									<colorTriggerFgColor>#000000</colorTriggerFgColor>
									<colorTriggerBgColor>#000000</colorTriggerBgColor>
									<regexCodeList>
										<string>^(\w+)'s legs give way as (the )?\w+ (.+) breaks.$</string>
									</regexCodeList>
									<regexCodePropertyList>
										<integer>1</integer>
									</regexCodePropertyList>
								</Trigger>
								<Trigger isActive="yes" isFolder="no" isTempTrigger="no" isMultiline="no" isPerlSlashGOption="no" isColorizerTrigger="no" isFilterTrigger="no" isSoundTrigger="no" isColorTrigger="no" isColorTriggerFg="no" isColorTriggerBg="no">
									<name>Survival restore</name>
									<script>if matches[2] == snd.target then
	if snd.checkAff("a broken right arm") and not snd.checkAff("right arm damaged") then
		snd.target_cured("a broken right arm")
	elseif snd.checkAff("a broken left arm") and not snd.checkAff("left arm damaged") then
		snd.target_cured("a broken left arm")
	elseif snd.checkAff("a broken left leg") and not snd.checkAff("left leg damaged") then
  	snd.target_cured("a broken left leg")
  elseif snd.checkAff("a broken right leg") and not snd.checkAff("right leg damaged") then
  	snd.target_cured("a broken right leg")
	end
end</script>
									<triggerType>0</triggerType>
									<conditonLineDelta>0</conditonLineDelta>
									<mStayOpen>0</mStayOpen>
									<mCommand></mCommand>
									<packageName></packageName>
									<mFgColor>#ff0000</mFgColor>
									<mBgColor>#ffff00</mBgColor>
									<mSoundFile></mSoundFile>
									<colorTriggerFgColor>#000000</colorTriggerFgColor>
									<colorTriggerBgColor>#000000</colorTriggerBgColor>
									<regexCodeList>
										<string>^(\w+) crackles with blue energy that wreathes itself about (the )?\w+ limbs.$</string>
									</regexCodeList>
									<regexCodePropertyList>
										<integer>1</integer>
									</regexCodePropertyList>
								</Trigger>
								<Trigger isActive="yes" isFolder="no" isTempTrigger="no" isMultiline="no" isPerlSlashGOption="no" isColorizerTrigger="no" isFilterTrigger="no" isSoundTrigger="no" isColorTrigger="no" isColorTriggerFg="no" isColorTriggerBg="no">
									<name>3P limb breaks from random sources</name>
									<script>local basic_limb_affs = {
["left leg"] = "a broken left leg",
["right leg"] = "a broken right leg",
["left arm"] = "a broken left arm",
["right arm"] = "a broken right arm",
}

if matches[2] == snd.target then
 snd.target_got(basic_limb_affs[matches[3]])
end</script>
									<triggerType>0</triggerType>
									<conditonLineDelta>0</conditonLineDelta>
									<mStayOpen>0</mStayOpen>
									<mCommand></mCommand>
									<packageName></packageName>
									<mFgColor>#ff0000</mFgColor>
									<mBgColor>#ffff00</mBgColor>
									<mSoundFile></mSoundFile>
									<colorTriggerFgColor>#000000</colorTriggerFgColor>
									<colorTriggerBgColor>#000000</colorTriggerBgColor>
									<regexCodeList>
										<string>^The crone withers (\w+)'s (.*) into uselessness.$</string>
										<string>^A .* golem reaches out and seizes (\w+)'s (.*) in its powerful grip, pulling and twisting until the bone snaps.$</string>
										<string>^\w+ reaches out to grab (\w+)'s (.*), and it shrivels away.$</string>
										<string>^You hear the sharp snap of bone as .* rends (\w+)'s (.*).$</string>
										<string>^\w+ spins (the )?\w+ flail in a blazing arc towards (\w+)'s (.*), crushing it.$ </string>
										<string>^You find that (\w+)'s (.*) is already shriveled.$</string>
										<string>^You quickly adjust the momentum of your flail, smashing it into (\w+)'s (.*).$</string>
									</regexCodeList>
									<regexCodePropertyList>
										<integer>1</integer>
										<integer>1</integer>
										<integer>1</integer>
										<integer>1</integer>
										<integer>1</integer>
										<integer>1</integer>
										<integer>1</integer>
									</regexCodePropertyList>
								</Trigger>
								<Trigger isActive="yes" isFolder="no" isTempTrigger="no" isMultiline="no" isPerlSlashGOption="no" isColorizerTrigger="no" isFilterTrigger="no" isSoundTrigger="no" isColorTrigger="no" isColorTriggerFg="no" isColorTriggerBg="no">
									<name>cold hit</name>
									<script>if snd.toggles.atkecho then
 deleteLine()
 snd.message("Chilled: "..matches[2]..".")
end
if matches[2] == snd.target then
 if snd.checkAff("frozen") then
 
 elseif snd.checkAff("shivering") then
  snd.target_cured("shivering")
  snd.target_got("frozen")
 elseif snd.checkAff("no_caloric") then
  snd.target_got("shivering")
 else
  snd.target_got("no_caloric")
 end
end</script>
									<triggerType>0</triggerType>
									<conditonLineDelta>0</conditonLineDelta>
									<mStayOpen>0</mStayOpen>
									<mCommand></mCommand>
									<packageName></packageName>
									<mFgColor>#ff0000</mFgColor>
									<mBgColor>#ffff00</mBgColor>
									<mSoundFile></mSoundFile>
									<colorTriggerFgColor>#000000</colorTriggerFgColor>
									<colorTriggerBgColor>#000000</colorTriggerBgColor>
									<regexCodeList>
										<string>^You use Bladefire Iceblast \(one\-hand\) on (\w+)\.$</string>
										<string>^Frost forms upon a blackened warhammer and spreads to (\w+)\.$</string>
										<string>^At .+ command, .+ howls with frosty breath, chilling (\w+)('s|') wounds\.$</string>
										<string>^.+ opens its maw wide before breathing forth a stream of freezing air towards (\w+)\.$</string>
										<string>^\w+ uses? Woodlore Icebreath on (\w+)\.$</string>
									</regexCodeList>
									<regexCodePropertyList>
										<integer>1</integer>
										<integer>1</integer>
										<integer>1</integer>
										<integer>1</integer>
										<integer>1</integer>
									</regexCodePropertyList>
								</Trigger>
								<Trigger isActive="yes" isFolder="no" isTempTrigger="no" isMultiline="no" isPerlSlashGOption="no" isColorizerTrigger="no" isFilterTrigger="no" isSoundTrigger="no" isColorTrigger="no" isColorTriggerFg="no" isColorTriggerBg="no">
									<name>bruising</name>
									<script>deleteLine()
snd.message("&lt;white&gt;Bruising on "..matches[5]..": &lt;red&gt;"..string.upper(matches[2]))
if matches[2] == "light" then
 snd.limb_bruising[matches[5]] = 1
elseif matches[2] == "moderate" then
 snd.limb_bruising[matches[5]] = 2
elseif matches[2] == "critical" then
 snd.limb_bruising[matches[5]] = 3
end

</script>
									<triggerType>0</triggerType>
									<conditonLineDelta>0</conditonLineDelta>
									<mStayOpen>0</mStayOpen>
									<mCommand></mCommand>
									<packageName></packageName>
									<mFgColor>#ff0000</mFgColor>
									<mBgColor>#ffff00</mBgColor>
									<mSoundFile></mSoundFile>
									<colorTriggerFgColor>#000000</colorTriggerFgColor>
									<colorTriggerBgColor>#000000</colorTriggerBgColor>
									<regexCodeList>
										<string>^Your strikes cause (\w+) bruising on (\w+)('s|') (.+)\.$</string>
									</regexCodeList>
									<regexCodePropertyList>
										<integer>1</integer>
									</regexCodePropertyList>
								</Trigger>
								<Trigger isActive="yes" isFolder="no" isTempTrigger="no" isMultiline="no" isPerlSlashGOption="no" isColorizerTrigger="no" isFilterTrigger="no" isSoundTrigger="no" isColorTrigger="no" isColorTriggerFg="no" isColorTriggerBg="no">
									<name>Regenerate</name>
									<script>if matches[2] == snd.target then
  snd.enemy_used_regenerate = true
 end</script>
									<triggerType>0</triggerType>
									<conditonLineDelta>0</conditonLineDelta>
									<mStayOpen>0</mStayOpen>
									<mCommand></mCommand>
									<packageName></packageName>
									<mFgColor>#ff0000</mFgColor>
									<mBgColor>#ffff00</mBgColor>
									<mSoundFile></mSoundFile>
									<colorTriggerFgColor>#000000</colorTriggerFgColor>
									<colorTriggerBgColor>#000000</colorTriggerBgColor>
									<regexCodeList>
										<string>^(\w+) becomes flushed as .+ heals with quickened haste.$</string>
									</regexCodeList>
									<regexCodePropertyList>
										<integer>1</integer>
									</regexCodePropertyList>
								</Trigger>
							</TriggerGroup>
							<TriggerGroup isActive="yes" isFolder="yes" isTempTrigger="no" isMultiline="no" isPerlSlashGOption="no" isColorizerTrigger="no" isFilterTrigger="no" isSoundTrigger="no" isColorTrigger="no" isColorTriggerFg="no" isColorTriggerBg="no">
								<name>Teradrim</name>
								<script></script>
								<triggerType>0</triggerType>
								<conditonLineDelta>0</conditonLineDelta>
								<mStayOpen>0</mStayOpen>
								<mCommand></mCommand>
								<packageName></packageName>
								<mFgColor>#ff0000</mFgColor>
								<mBgColor>#ffff00</mBgColor>
								<mSoundFile></mSoundFile>
								<colorTriggerFgColor>#000000</colorTriggerFgColor>
								<colorTriggerBgColor>#000000</colorTriggerBgColor>
								<regexCodeList />
								<regexCodePropertyList />
								<Trigger isActive="yes" isFolder="no" isTempTrigger="no" isMultiline="no" isPerlSlashGOption="no" isColorizerTrigger="no" isFilterTrigger="no" isSoundTrigger="no" isColorTrigger="no" isColorTriggerFg="no" isColorTriggerBg="no">
									<name>Sand shred</name>
									<script>if matches[3] == snd.target then
 snd.last_hit_limb = matches[2]
 snd.last_limb_dmg = 7
 snd.took_limb_dmg(matches[2], snd.last_limb_dmg)
end</script>
									<triggerType>0</triggerType>
									<conditonLineDelta>0</conditonLineDelta>
									<mStayOpen>10</mStayOpen>
									<mCommand></mCommand>
									<packageName></packageName>
									<mFgColor>#ff0000</mFgColor>
									<mBgColor>#ffff00</mBgColor>
									<mSoundFile></mSoundFile>
									<colorTriggerFgColor>#000000</colorTriggerFgColor>
									<colorTriggerBgColor>#000000</colorTriggerBgColor>
									<regexCodeList>
										<string>^\w+ uses? Desiccation Shred \((.+)\) on (\w+)\.$</string>
									</regexCodeList>
									<regexCodePropertyList>
										<integer>1</integer>
									</regexCodePropertyList>
									<Trigger isActive="yes" isFolder="no" isTempTrigger="no" isMultiline="no" isPerlSlashGOption="no" isColorizerTrigger="no" isFilterTrigger="no" isSoundTrigger="no" isColorTrigger="no" isColorTriggerFg="no" isColorTriggerBg="no">
										<name>sand shred finished</name>
										<script>setTriggerStayOpen("Sand shred", 0)
</script>
										<triggerType>0</triggerType>
										<conditonLineDelta>0</conditonLineDelta>
										<mStayOpen>0</mStayOpen>
										<mCommand></mCommand>
										<packageName></packageName>
										<mFgColor>#ff0000</mFgColor>
										<mBgColor>#ffff00</mBgColor>
										<mSoundFile></mSoundFile>
										<colorTriggerFgColor>#000000</colorTriggerFgColor>
										<colorTriggerBgColor>#000000</colorTriggerBgColor>
										<regexCodeList>
											<string>return isPrompt()</string>
										</regexCodeList>
										<regexCodePropertyList>
											<integer>4</integer>
										</regexCodePropertyList>
									</Trigger>
									<Trigger isActive="yes" isFolder="no" isTempTrigger="no" isMultiline="no" isPerlSlashGOption="no" isColorizerTrigger="no" isFilterTrigger="no" isSoundTrigger="no" isColorTrigger="no" isColorTriggerFg="no" isColorTriggerBg="no">
										<name>undo sand shred</name>
										<script>snd.took_limb_dmg(snd.last_hit_limb, -snd.last_limb_dmg)
</script>
										<triggerType>0</triggerType>
										<conditonLineDelta>0</conditonLineDelta>
										<mStayOpen>0</mStayOpen>
										<mCommand></mCommand>
										<packageName></packageName>
										<mFgColor>#ff0000</mFgColor>
										<mBgColor>#ffff00</mBgColor>
										<mSoundFile></mSoundFile>
										<colorTriggerFgColor>#000000</colorTriggerFgColor>
										<colorTriggerBgColor>#000000</colorTriggerBgColor>
										<regexCodeList>
											<string>^The attack rebounds back onto (\w+)\!$</string>
											<string>^Stepping quickly out of the way, (\w+) dodges the attack\.$</string>
											<string>^(\w+) parries the attack on (.*) with a deft maneuver\.$</string>
											<string>^(\w+) guards the attack on (.*)\.$</string>
											<string>^A reflection of (\w+) blinks out of existence\.$</string>
											<string>^With a free hand, (\w+) fends off the attack on (the )?\w+ (.+)\.$</string>
										</regexCodeList>
										<regexCodePropertyList>
											<integer>1</integer>
											<integer>1</integer>
											<integer>1</integer>
											<integer>1</integer>
											<integer>1</integer>
											<integer>1</integer>
										</regexCodePropertyList>
									</Trigger>
								</Trigger>
								<Trigger isActive="yes" isFolder="no" isTempTrigger="no" isMultiline="no" isPerlSlashGOption="no" isColorizerTrigger="no" isFilterTrigger="no" isSoundTrigger="no" isColorTrigger="no" isColorTriggerFg="no" isColorTriggerBg="no">
									<name>gutsmash</name>
									<script>if matches[2] == snd.target then
 	snd.last_hit_limb = "torso"
	snd.last_limb_dmg = 12
	snd.took_limb_dmg("torso", snd.last_limb_dmg)
end</script>
									<triggerType>0</triggerType>
									<conditonLineDelta>0</conditonLineDelta>
									<mStayOpen>10</mStayOpen>
									<mCommand></mCommand>
									<packageName></packageName>
									<mFgColor>#ff0000</mFgColor>
									<mBgColor>#ffff00</mBgColor>
									<mSoundFile></mSoundFile>
									<colorTriggerFgColor>#000000</colorTriggerFgColor>
									<colorTriggerBgColor>#000000</colorTriggerBgColor>
									<regexCodeList>
										<string>^\w+ uses? Terramancy Gutsmash on (\w+)\.$</string>
									</regexCodeList>
									<regexCodePropertyList>
										<integer>1</integer>
									</regexCodePropertyList>
									<Trigger isActive="yes" isFolder="no" isTempTrigger="no" isMultiline="no" isPerlSlashGOption="no" isColorizerTrigger="no" isFilterTrigger="no" isSoundTrigger="no" isColorTrigger="no" isColorTriggerFg="no" isColorTriggerBg="no">
										<name>gutsmash finished</name>
										<script>setTriggerStayOpen("gutsmash", 0)
</script>
										<triggerType>0</triggerType>
										<conditonLineDelta>0</conditonLineDelta>
										<mStayOpen>0</mStayOpen>
										<mCommand></mCommand>
										<packageName></packageName>
										<mFgColor>#ff0000</mFgColor>
										<mBgColor>#ffff00</mBgColor>
										<mSoundFile></mSoundFile>
										<colorTriggerFgColor>#000000</colorTriggerFgColor>
										<colorTriggerBgColor>#000000</colorTriggerBgColor>
										<regexCodeList>
											<string>return isPrompt()</string>
										</regexCodeList>
										<regexCodePropertyList>
											<integer>4</integer>
										</regexCodePropertyList>
									</Trigger>
									<Trigger isActive="yes" isFolder="no" isTempTrigger="no" isMultiline="no" isPerlSlashGOption="no" isColorizerTrigger="no" isFilterTrigger="no" isSoundTrigger="no" isColorTrigger="no" isColorTriggerFg="no" isColorTriggerBg="no">
										<name>undo gutsmash</name>
										<script>snd.took_limb_dmg(snd.last_hit_limb, -snd.last_limb_dmg)
</script>
										<triggerType>0</triggerType>
										<conditonLineDelta>0</conditonLineDelta>
										<mStayOpen>0</mStayOpen>
										<mCommand></mCommand>
										<packageName></packageName>
										<mFgColor>#ff0000</mFgColor>
										<mBgColor>#ffff00</mBgColor>
										<mSoundFile></mSoundFile>
										<colorTriggerFgColor>#000000</colorTriggerFgColor>
										<colorTriggerBgColor>#000000</colorTriggerBgColor>
										<regexCodeList>
											<string>^The attack rebounds back onto (\w+)\!$</string>
											<string>^Stepping quickly out of the way, (\w+) dodges the attack\.$</string>
											<string>^(\w+) parries the attack on (.*) with a deft maneuver\.$</string>
											<string>^(\w+) guards the attack on (.*)\.$</string>
											<string>^A reflection of (\w+) blinks out of existence\.$</string>
											<string>^With a free hand, (\w+) fends off the attack on (the )?\w+ (.+)\.$</string>
										</regexCodeList>
										<regexCodePropertyList>
											<integer>1</integer>
											<integer>1</integer>
											<integer>1</integer>
											<integer>1</integer>
											<integer>1</integer>
											<integer>1</integer>
										</regexCodePropertyList>
									</Trigger>
								</Trigger>
								<Trigger isActive="yes" isFolder="no" isTempTrigger="no" isMultiline="no" isPerlSlashGOption="no" isColorizerTrigger="no" isFilterTrigger="no" isSoundTrigger="no" isColorTrigger="no" isColorTriggerFg="no" isColorTriggerBg="no">
									<name>facesmash</name>
									<script>if matches[2] == snd.target then
 	snd.last_hit_limb = "head"
	snd.last_limb_dmg = 13
	snd.took_limb_dmg("head", snd.last_limb_dmg)
end</script>
									<triggerType>0</triggerType>
									<conditonLineDelta>0</conditonLineDelta>
									<mStayOpen>10</mStayOpen>
									<mCommand></mCommand>
									<packageName></packageName>
									<mFgColor>#ff0000</mFgColor>
									<mBgColor>#ffff00</mBgColor>
									<mSoundFile></mSoundFile>
									<colorTriggerFgColor>#000000</colorTriggerFgColor>
									<colorTriggerBgColor>#000000</colorTriggerBgColor>
									<regexCodeList>
										<string>^\w+ uses? Terramancy Facesmash on (\w+)\.$</string>
									</regexCodeList>
									<regexCodePropertyList>
										<integer>1</integer>
									</regexCodePropertyList>
									<Trigger isActive="yes" isFolder="no" isTempTrigger="no" isMultiline="no" isPerlSlashGOption="no" isColorizerTrigger="no" isFilterTrigger="no" isSoundTrigger="no" isColorTrigger="no" isColorTriggerFg="no" isColorTriggerBg="no">
										<name>facesmash finished</name>
										<script>setTriggerStayOpen("facesmash", 0)
</script>
										<triggerType>0</triggerType>
										<conditonLineDelta>0</conditonLineDelta>
										<mStayOpen>0</mStayOpen>
										<mCommand></mCommand>
										<packageName></packageName>
										<mFgColor>#ff0000</mFgColor>
										<mBgColor>#ffff00</mBgColor>
										<mSoundFile></mSoundFile>
										<colorTriggerFgColor>#000000</colorTriggerFgColor>
										<colorTriggerBgColor>#000000</colorTriggerBgColor>
										<regexCodeList>
											<string>return isPrompt()</string>
										</regexCodeList>
										<regexCodePropertyList>
											<integer>4</integer>
										</regexCodePropertyList>
									</Trigger>
									<Trigger isActive="yes" isFolder="no" isTempTrigger="no" isMultiline="no" isPerlSlashGOption="no" isColorizerTrigger="no" isFilterTrigger="no" isSoundTrigger="no" isColorTrigger="no" isColorTriggerFg="no" isColorTriggerBg="no">
										<name>undo facesamash</name>
										<script>snd.took_limb_dmg(snd.last_hit_limb, -snd.last_limb_dmg)
</script>
										<triggerType>0</triggerType>
										<conditonLineDelta>0</conditonLineDelta>
										<mStayOpen>0</mStayOpen>
										<mCommand></mCommand>
										<packageName></packageName>
										<mFgColor>#ff0000</mFgColor>
										<mBgColor>#ffff00</mBgColor>
										<mSoundFile></mSoundFile>
										<colorTriggerFgColor>#000000</colorTriggerFgColor>
										<colorTriggerBgColor>#000000</colorTriggerBgColor>
										<regexCodeList>
											<string>^The attack rebounds back onto (\w+)\!$</string>
											<string>^Stepping quickly out of the way, (\w+) dodges the attack\.$</string>
											<string>^(\w+) parries the attack on (.*) with a deft maneuver\.$</string>
											<string>^(\w+) guards the attack on (.*)\.$</string>
											<string>^A reflection of (\w+) blinks out of existence\.$</string>
											<string>^With a free hand, (\w+) fends off the attack on (the )?\w+ (.+)\.$</string>
										</regexCodeList>
										<regexCodePropertyList>
											<integer>1</integer>
											<integer>1</integer>
											<integer>1</integer>
											<integer>1</integer>
											<integer>1</integer>
											<integer>1</integer>
										</regexCodePropertyList>
									</Trigger>
								</Trigger>
								<Trigger isActive="yes" isFolder="no" isTempTrigger="no" isMultiline="no" isPerlSlashGOption="no" isColorizerTrigger="no" isFilterTrigger="no" isSoundTrigger="no" isColorTrigger="no" isColorTriggerFg="no" isColorTriggerBg="no">
									<name>Terramancy slam</name>
									<script>if matches[3] == snd.target then
 	snd.last_hit_limb = matches[2]
	snd.last_limb_dmg = 10
	snd.took_limb_dmg(matches[2], snd.last_limb_dmg)
end</script>
									<triggerType>0</triggerType>
									<conditonLineDelta>0</conditonLineDelta>
									<mStayOpen>10</mStayOpen>
									<mCommand></mCommand>
									<packageName></packageName>
									<mFgColor>#ff0000</mFgColor>
									<mBgColor>#ffff00</mBgColor>
									<mSoundFile></mSoundFile>
									<colorTriggerFgColor>#000000</colorTriggerFgColor>
									<colorTriggerBgColor>#000000</colorTriggerBgColor>
									<regexCodeList>
										<string>^\w+ uses? Terramancy Slam \((.+)\) on (\w+)\.$</string>
									</regexCodeList>
									<regexCodePropertyList>
										<integer>1</integer>
									</regexCodePropertyList>
									<Trigger isActive="yes" isFolder="no" isTempTrigger="no" isMultiline="no" isPerlSlashGOption="no" isColorizerTrigger="no" isFilterTrigger="no" isSoundTrigger="no" isColorTrigger="no" isColorTriggerFg="no" isColorTriggerBg="no">
										<name>facesmash finished</name>
										<script>setTriggerStayOpen("facesmash", 0)
</script>
										<triggerType>0</triggerType>
										<conditonLineDelta>0</conditonLineDelta>
										<mStayOpen>0</mStayOpen>
										<mCommand></mCommand>
										<packageName></packageName>
										<mFgColor>#ff0000</mFgColor>
										<mBgColor>#ffff00</mBgColor>
										<mSoundFile></mSoundFile>
										<colorTriggerFgColor>#000000</colorTriggerFgColor>
										<colorTriggerBgColor>#000000</colorTriggerBgColor>
										<regexCodeList>
											<string>return isPrompt()</string>
										</regexCodeList>
										<regexCodePropertyList>
											<integer>4</integer>
										</regexCodePropertyList>
									</Trigger>
									<Trigger isActive="yes" isFolder="no" isTempTrigger="no" isMultiline="no" isPerlSlashGOption="no" isColorizerTrigger="no" isFilterTrigger="no" isSoundTrigger="no" isColorTrigger="no" isColorTriggerFg="no" isColorTriggerBg="no">
										<name>undo slam</name>
										<script>snd.took_limb_dmg(snd.last_hit_limb, -snd.last_limb_dmg)
</script>
										<triggerType>0</triggerType>
										<conditonLineDelta>0</conditonLineDelta>
										<mStayOpen>0</mStayOpen>
										<mCommand></mCommand>
										<packageName></packageName>
										<mFgColor>#ff0000</mFgColor>
										<mBgColor>#ffff00</mBgColor>
										<mSoundFile></mSoundFile>
										<colorTriggerFgColor>#000000</colorTriggerFgColor>
										<colorTriggerBgColor>#000000</colorTriggerBgColor>
										<regexCodeList>
											<string>^The attack rebounds back onto (\w+)\!$</string>
											<string>^Stepping quickly out of the way, (\w+) dodges the attack\.$</string>
											<string>^(\w+) parries the attack on (.*) with a deft maneuver\.$</string>
											<string>^(\w+) guards the attack on (.*)\.$</string>
											<string>^A reflection of (\w+) blinks out of existence\.$</string>
											<string>^With a free hand, (\w+) fends off the attack on (the )?\w+ (.+)\.$</string>
										</regexCodeList>
										<regexCodePropertyList>
											<integer>1</integer>
											<integer>1</integer>
											<integer>1</integer>
											<integer>1</integer>
											<integer>1</integer>
											<integer>1</integer>
										</regexCodePropertyList>
									</Trigger>
								</Trigger>
								<Trigger isActive="yes" isFolder="no" isTempTrigger="no" isMultiline="no" isPerlSlashGOption="no" isColorizerTrigger="no" isFilterTrigger="no" isSoundTrigger="no" isColorTrigger="no" isColorTriggerFg="no" isColorTriggerBg="no">
									<name>Heartflutter</name>
									<script>if matches[2] == snd.target then
	if not snd.checkAff("heartflutter") then 
		snd.target_got("heartflutter")
	end
end</script>
									<triggerType>0</triggerType>
									<conditonLineDelta>0</conditonLineDelta>
									<mStayOpen>0</mStayOpen>
									<mCommand></mCommand>
									<packageName></packageName>
									<mFgColor>#ff0000</mFgColor>
									<mBgColor>#ffff00</mBgColor>
									<mSoundFile></mSoundFile>
									<colorTriggerFgColor>#000000</colorTriggerFgColor>
									<colorTriggerBgColor>#000000</colorTriggerBgColor>
									<regexCodeList>
										<string>^Your Minor Green rune shimmers and (\w+) clutches (the )?\w+ chest.$</string>
										<string>^(\w+) gasps and staggers as .* golem punches (the )?\w+ hard in the chest.$</string>
									</regexCodeList>
									<regexCodePropertyList>
										<integer>1</integer>
										<integer>1</integer>
									</regexCodePropertyList>
								</Trigger>
								<Trigger isActive="yes" isFolder="no" isTempTrigger="no" isMultiline="no" isPerlSlashGOption="no" isColorizerTrigger="no" isFilterTrigger="no" isSoundTrigger="no" isColorTrigger="no" isColorTriggerFg="no" isColorTriggerBg="no">
									<name>Overhand</name>
									<script>if matches[2] == snd.target then
	snd.target_got("prone")
end</script>
									<triggerType>0</triggerType>
									<conditonLineDelta>0</conditonLineDelta>
									<mStayOpen>0</mStayOpen>
									<mCommand></mCommand>
									<packageName></packageName>
									<mFgColor>#ff0000</mFgColor>
									<mBgColor>#ffff00</mBgColor>
									<mSoundFile></mSoundFile>
									<colorTriggerFgColor>#000000</colorTriggerFgColor>
									<colorTriggerBgColor>#000000</colorTriggerBgColor>
									<regexCodeList>
										<string>^\w+ uses? Terramancy Overhand on (\w+).$</string>
									</regexCodeList>
									<regexCodePropertyList>
										<integer>1</integer>
									</regexCodePropertyList>
								</Trigger>
								<Trigger isActive="yes" isFolder="no" isTempTrigger="no" isMultiline="no" isPerlSlashGOption="no" isColorizerTrigger="no" isFilterTrigger="no" isSoundTrigger="no" isColorTrigger="no" isColorTriggerFg="no" isColorTriggerBg="no">
									<name>Shockwave</name>
									<script>if matches[2] == snd.target then
	if not snd.checkAff("prone") then 
		snd.target_got("prone")
	end
end</script>
									<triggerType>0</triggerType>
									<conditonLineDelta>0</conditonLineDelta>
									<mStayOpen>10</mStayOpen>
									<mCommand></mCommand>
									<packageName></packageName>
									<mFgColor>#ff0000</mFgColor>
									<mBgColor>#ffff00</mBgColor>
									<mSoundFile></mSoundFile>
									<colorTriggerFgColor>#000000</colorTriggerFgColor>
									<colorTriggerBgColor>#000000</colorTriggerBgColor>
									<regexCodeList>
										<string>^You slam your fists into the ground, sending a rippling shockwave that buckles the ground beneath (\w+) and knocks (the )?\w+ off (the )?\w+ feet.$ </string>
									</regexCodeList>
									<regexCodePropertyList>
										<integer>1</integer>
									</regexCodePropertyList>
									<Trigger isActive="yes" isFolder="no" isTempTrigger="no" isMultiline="no" isPerlSlashGOption="no" isColorizerTrigger="no" isFilterTrigger="no" isSoundTrigger="no" isColorTrigger="no" isColorTriggerFg="no" isColorTriggerBg="no">
										<name>Limb breaks after schockwave</name>
										<script>local basic_limb_affs = {
["left leg"] = "a broken left leg",
["right leg"] = "a broken right leg",
["left arm"] = "a broken left arm",
["right arm"] = "a broken right arm",
}

snd.target_got(basic_limb_affs[matches[2]])</script>
										<triggerType>0</triggerType>
										<conditonLineDelta>0</conditonLineDelta>
										<mStayOpen>0</mStayOpen>
										<mCommand></mCommand>
										<packageName></packageName>
										<mFgColor>#ff0000</mFgColor>
										<mBgColor>#ffff00</mBgColor>
										<mSoundFile></mSoundFile>
										<colorTriggerFgColor>#000000</colorTriggerFgColor>
										<colorTriggerBgColor>#000000</colorTriggerBgColor>
										<regexCodeList>
											<string>^\w+ (.*) snaps under the impact.$</string>
										</regexCodeList>
										<regexCodePropertyList>
											<integer>1</integer>
										</regexCodePropertyList>
									</Trigger>
								</Trigger>
								<Trigger isActive="yes" isFolder="no" isTempTrigger="no" isMultiline="no" isPerlSlashGOption="no" isColorizerTrigger="no" isFilterTrigger="no" isSoundTrigger="no" isColorTrigger="no" isColorTriggerFg="no" isColorTriggerBg="no">
									<name>Dislocate enemy limb</name>
									<script>if matches[2] == snd.target then
	snd.target_got(matches[3].." dislocated")
end</script>
									<triggerType>0</triggerType>
									<conditonLineDelta>0</conditonLineDelta>
									<mStayOpen>0</mStayOpen>
									<mCommand></mCommand>
									<packageName></packageName>
									<mFgColor>#ff0000</mFgColor>
									<mBgColor>#ffff00</mBgColor>
									<mSoundFile></mSoundFile>
									<colorTriggerFgColor>#000000</colorTriggerFgColor>
									<colorTriggerBgColor>#000000</colorTriggerBgColor>
									<regexCodeList>
										<string>^Grabbing hold of (\w+)'s (.*), .* golem casually wrenches it out of its socket.$</string>
									</regexCodeList>
									<regexCodePropertyList>
										<integer>1</integer>
									</regexCodePropertyList>
								</Trigger>
								<Trigger isActive="yes" isFolder="no" isTempTrigger="no" isMultiline="no" isPerlSlashGOption="no" isColorizerTrigger="no" isFilterTrigger="no" isSoundTrigger="no" isColorTrigger="no" isColorTriggerFg="no" isColorTriggerBg="no">
									<name>Barrage hit</name>
									<script>if matches[2] == snd.target then
 snd.last_hit_limb = matches[3]
 snd.last_limb_dmg = 4
 snd.took_limb_dmg(matches[3], snd.last_limb_dmg)
end</script>
									<triggerType>0</triggerType>
									<conditonLineDelta>0</conditonLineDelta>
									<mStayOpen>0</mStayOpen>
									<mCommand></mCommand>
									<packageName></packageName>
									<mFgColor>#ff0000</mFgColor>
									<mBgColor>#ffff00</mBgColor>
									<mSoundFile></mSoundFile>
									<colorTriggerFgColor>#000000</colorTriggerFgColor>
									<colorTriggerBgColor>#000000</colorTriggerBgColor>
									<regexCodeList>
										<string>^You strike out at (\w+)'s (.*) as your barrage continues.$</string>
									</regexCodeList>
									<regexCodePropertyList>
										<integer>1</integer>
									</regexCodePropertyList>
								</Trigger>
								<Trigger isActive="yes" isFolder="no" isTempTrigger="no" isMultiline="no" isPerlSlashGOption="no" isColorizerTrigger="no" isFilterTrigger="no" isSoundTrigger="no" isColorTrigger="no" isColorTriggerFg="no" isColorTriggerBg="no">
									<name>Earth Pulp</name>
									<script>if matches[2] == snd.target then
 snd.last_hit_limb = "torso"
 snd.last_limb_dmg = 11
 snd.took_limb_dmg("torso", snd.last_limb_dmg)
 snd.target_got("collapsed_lung")
end

</script>
									<triggerType>0</triggerType>
									<conditonLineDelta>0</conditonLineDelta>
									<mStayOpen>0</mStayOpen>
									<mCommand></mCommand>
									<packageName></packageName>
									<mFgColor>#ff0000</mFgColor>
									<mBgColor>#ffff00</mBgColor>
									<mSoundFile></mSoundFile>
									<colorTriggerFgColor>#000000</colorTriggerFgColor>
									<colorTriggerBgColor>#000000</colorTriggerBgColor>
									<regexCodeList>
										<string>^Standing over (\w+)'s supine form, (the )?\w+ brings? (the )?\w+ flail smashing down hard into (the )?\w+ chest.$</string>
									</regexCodeList>
									<regexCodePropertyList>
										<integer>1</integer>
									</regexCodePropertyList>
								</Trigger>
							</TriggerGroup>
							<TriggerGroup isActive="yes" isFolder="yes" isTempTrigger="no" isMultiline="no" isPerlSlashGOption="no" isColorizerTrigger="no" isFilterTrigger="no" isSoundTrigger="no" isColorTrigger="no" isColorTriggerFg="no" isColorTriggerBg="no">
								<name>Lycan</name>
								<script></script>
								<triggerType>0</triggerType>
								<conditonLineDelta>0</conditonLineDelta>
								<mStayOpen>0</mStayOpen>
								<mCommand></mCommand>
								<packageName></packageName>
								<mFgColor>#ff0000</mFgColor>
								<mBgColor>#ffff00</mBgColor>
								<mSoundFile></mSoundFile>
								<colorTriggerFgColor>#000000</colorTriggerFgColor>
								<colorTriggerBgColor>#000000</colorTriggerBgColor>
								<regexCodeList />
								<regexCodePropertyList />
								<Trigger isActive="yes" isFolder="no" isTempTrigger="no" isMultiline="no" isPerlSlashGOption="no" isColorizerTrigger="no" isFilterTrigger="no" isSoundTrigger="no" isColorTrigger="no" isColorTriggerFg="no" isColorTriggerBg="no">
									<name>flurry</name>
									<script>if matches[2] == snd.target then
 hitting = true
end</script>
									<triggerType>0</triggerType>
									<conditonLineDelta>0</conditonLineDelta>
									<mStayOpen>99</mStayOpen>
									<mCommand></mCommand>
									<packageName></packageName>
									<mFgColor>#ff0000</mFgColor>
									<mBgColor>#ffff00</mBgColor>
									<mSoundFile></mSoundFile>
									<colorTriggerFgColor>#000000</colorTriggerFgColor>
									<colorTriggerBgColor>#000000</colorTriggerBgColor>
									<regexCodeList>
										<string>^\w+ uses? Ferality Flurry on (\w+)\.$</string>
									</regexCodeList>
									<regexCodePropertyList>
										<integer>1</integer>
									</regexCodePropertyList>
									<Trigger isActive="yes" isFolder="no" isTempTrigger="no" isMultiline="no" isPerlSlashGOption="no" isColorizerTrigger="no" isFilterTrigger="no" isSoundTrigger="no" isColorTrigger="no" isColorTriggerFg="no" isColorTriggerBg="no">
										<name>flurry hit</name>
										<script>if hitting then
 snd.last_hit_limb = matches[4]
 snd.last_limb_dmg = 9.99
 snd.took_limb_dmg(matches[4], snd.last_limb_dmg)
end</script>
										<triggerType>0</triggerType>
										<conditonLineDelta>0</conditonLineDelta>
										<mStayOpen>2</mStayOpen>
										<mCommand></mCommand>
										<packageName></packageName>
										<mFgColor>#ff0000</mFgColor>
										<mBgColor>#ffff00</mBgColor>
										<mSoundFile></mSoundFile>
										<colorTriggerFgColor>#000000</colorTriggerFgColor>
										<colorTriggerBgColor>#000000</colorTriggerBgColor>
										<regexCodeList>
											<string>^\w+ (powerful jaws|deadly claws) dig deep, lethal wounds into (the )?\w+ (.+)\.$</string>
										</regexCodeList>
										<regexCodePropertyList>
											<integer>1</integer>
										</regexCodePropertyList>
										<Trigger isActive="yes" isFolder="no" isTempTrigger="no" isMultiline="no" isPerlSlashGOption="no" isColorizerTrigger="no" isFilterTrigger="no" isSoundTrigger="no" isColorTrigger="no" isColorTriggerFg="no" isColorTriggerBg="no">
											<name>undo flurry</name>
											<script>echo("works")
if hitting then
 snd.took_limb_dmg(snd.last_hit_limb, -snd.last_limb_dmg)
end</script>
											<triggerType>0</triggerType>
											<conditonLineDelta>0</conditonLineDelta>
											<mStayOpen>0</mStayOpen>
											<mCommand></mCommand>
											<packageName></packageName>
											<mFgColor>#ff0000</mFgColor>
											<mBgColor>#ffff00</mBgColor>
											<mSoundFile></mSoundFile>
											<colorTriggerFgColor>#000000</colorTriggerFgColor>
											<colorTriggerBgColor>#000000</colorTriggerBgColor>
											<regexCodeList>
												<string>^Stepping quickly out of the way, (\w+) dodges the attack\.$</string>
												<string>^(\w+) parries the attack on (.*) with a deft maneuver\.$</string>
												<string>^(\w+) guards the attack on (.*)\.$</string>
												<string>^A reflection of (\w+) blinks out of existence\.$</string>
												<string>^With a free hand, (\w+) fends off the attack on (the )?\w+ (.+)\.$</string>
											</regexCodeList>
											<regexCodePropertyList>
												<integer>1</integer>
												<integer>1</integer>
												<integer>1</integer>
												<integer>1</integer>
												<integer>1</integer>
											</regexCodePropertyList>
										</Trigger>
									</Trigger>
									<Trigger isActive="yes" isFolder="no" isTempTrigger="no" isMultiline="no" isPerlSlashGOption="no" isColorizerTrigger="no" isFilterTrigger="no" isSoundTrigger="no" isColorTrigger="no" isColorTriggerFg="no" isColorTriggerBg="no">
										<name>flurry end</name>
										<script>setTriggerStayOpen("flurry", 0)
hitting = false</script>
										<triggerType>0</triggerType>
										<conditonLineDelta>0</conditonLineDelta>
										<mStayOpen>0</mStayOpen>
										<mCommand></mCommand>
										<packageName></packageName>
										<mFgColor>#ff0000</mFgColor>
										<mBgColor>#ffff00</mBgColor>
										<mSoundFile></mSoundFile>
										<colorTriggerFgColor>#000000</colorTriggerFgColor>
										<colorTriggerBgColor>#000000</colorTriggerBgColor>
										<regexCodeList>
											<string>^(Left Hand Balance|Right Hand Balance) Used: (.*) seconds$</string>
										</regexCodeList>
										<regexCodePropertyList>
											<integer>1</integer>
										</regexCodePropertyList>
									</Trigger>
								</Trigger>
								<Trigger isActive="yes" isFolder="no" isTempTrigger="no" isMultiline="yes" isPerlSlashGOption="no" isColorizerTrigger="no" isFilterTrigger="no" isSoundTrigger="no" isColorTrigger="yes" isColorTriggerFg="no" isColorTriggerBg="no">
									<name>ferality</name>
									<script>snd.last_limb_dmg = 0
snd.last_hit_limb = "none"
if multimatches[1][4] == snd.target then
 hitting = true
 snd.last_aff = "nothing"
 if multimatches[1][2] == "Slash" then
  snd.last_limb_dmg = 7.49
 elseif multimatches[1][2] == "Bite" then
  snd.last_limb_dmg = 8.99
 elseif multimatches[1][2] == "Hamstring" or multimatches[1][2] == "Rend" then
  snd.last_limb_dmg = 3.38
	if not snd.checkAff("a broken "..multimatches[1][3]) then
		snd.target_got("a broken "..multimatches[1][3])
		snd.last_aff = "a broken "..multimatches[1][3]
	end
 end
 snd.last_hit_limb = multimatches[1][3]
 snd.took_limb_dmg(snd.last_hit_limb, snd.last_limb_dmg)
end</script>
									<triggerType>0</triggerType>
									<conditonLineDelta>2</conditonLineDelta>
									<mStayOpen>99</mStayOpen>
									<mCommand></mCommand>
									<packageName></packageName>
									<mFgColor>#ff0000</mFgColor>
									<mBgColor>#ffff00</mBgColor>
									<mSoundFile></mSoundFile>
									<colorTriggerFgColor>#ff0000</colorTriggerFgColor>
									<colorTriggerBgColor>#000000</colorTriggerBgColor>
									<regexCodeList>
										<string>^\w+ \w+ Ferality (Slash|Bite|Hamstring|Rend) \((.+)\) on (.+)\.$</string>
										<string>1</string>
										<string>^(.*)$</string>
									</regexCodeList>
									<regexCodePropertyList>
										<integer>1</integer>
										<integer>5</integer>
										<integer>1</integer>
									</regexCodePropertyList>
									<Trigger isActive="yes" isFolder="no" isTempTrigger="no" isMultiline="no" isPerlSlashGOption="no" isColorizerTrigger="no" isFilterTrigger="no" isSoundTrigger="no" isColorTrigger="no" isColorTriggerFg="no" isColorTriggerBg="no">
										<name>undo ferality</name>
										<script>if hitting then
 snd.took_limb_dmg(snd.last_hit_limb, -snd.last_limb_dmg)
 if snd.last_aff ~= "nothing" then
  snd.target_cured(snd.last_aff)
	snd.last_aff = "nothing"
 end
end</script>
										<triggerType>0</triggerType>
										<conditonLineDelta>0</conditonLineDelta>
										<mStayOpen>0</mStayOpen>
										<mCommand></mCommand>
										<packageName></packageName>
										<mFgColor>#ff0000</mFgColor>
										<mBgColor>#ffff00</mBgColor>
										<mSoundFile></mSoundFile>
										<colorTriggerFgColor>#000000</colorTriggerFgColor>
										<colorTriggerBgColor>#000000</colorTriggerBgColor>
										<regexCodeList>
											<string>^Stepping quickly out of the way, (\w+) dodges the attack\.$</string>
											<string>^(\w+) parries the attack on (.*) with a deft maneuver\.$</string>
											<string>^(\w+) guards the attack on (.*)\.$</string>
											<string>^A reflection of (\w+) blinks out of existence\.$</string>
											<string>You strike out clumsily.</string>
											<string>^With a free hand, (\w+) fends off the attack on (the )?\w+ (.+)\.$</string>
										</regexCodeList>
										<regexCodePropertyList>
											<integer>1</integer>
											<integer>1</integer>
											<integer>1</integer>
											<integer>1</integer>
											<integer>3</integer>
											<integer>1</integer>
										</regexCodePropertyList>
									</Trigger>
									<Trigger isActive="yes" isFolder="no" isTempTrigger="no" isMultiline="no" isPerlSlashGOption="no" isColorizerTrigger="no" isFilterTrigger="no" isSoundTrigger="no" isColorTrigger="no" isColorTriggerFg="no" isColorTriggerBg="no">
										<name>ferality end</name>
										<script>setTriggerStayOpen("ferality", 0)
hitting = false</script>
										<triggerType>0</triggerType>
										<conditonLineDelta>0</conditonLineDelta>
										<mStayOpen>0</mStayOpen>
										<mCommand></mCommand>
										<packageName></packageName>
										<mFgColor>#ff0000</mFgColor>
										<mBgColor>#ffff00</mBgColor>
										<mSoundFile></mSoundFile>
										<colorTriggerFgColor>#000000</colorTriggerFgColor>
										<colorTriggerBgColor>#000000</colorTriggerBgColor>
										<regexCodeList>
											<string>^(Left Hand Balance|Right Hand Balance) Used: (.*) seconds$</string>
											<string></string>
											<string>^\w+ rakes? (the )?\w+'s .+ with (the )?\w+ claws.$</string>
										</regexCodeList>
										<regexCodePropertyList>
											<integer>1</integer>
											<integer>7</integer>
											<integer>1</integer>
										</regexCodePropertyList>
									</Trigger>
									<Trigger isActive="yes" isFolder="no" isTempTrigger="no" isMultiline="no" isPerlSlashGOption="no" isColorizerTrigger="no" isFilterTrigger="no" isSoundTrigger="no" isColorTrigger="no" isColorTriggerFg="no" isColorTriggerBg="no">
										<name>resisted</name>
										<script>if matches[2] == snd.target then
 snd.target_cured(matches[3])
 snd.last_aff = "nothing"
end</script>
										<triggerType>0</triggerType>
										<conditonLineDelta>0</conditonLineDelta>
										<mStayOpen>0</mStayOpen>
										<mCommand></mCommand>
										<packageName></packageName>
										<mFgColor>#ff0000</mFgColor>
										<mBgColor>#ffff00</mBgColor>
										<mSoundFile></mSoundFile>
										<colorTriggerFgColor>#000000</colorTriggerFgColor>
										<colorTriggerBgColor>#000000</colorTriggerBgColor>
										<regexCodeList>
											<string>^You discern that (\w+) has resisted the (.+) affliction\.$</string>
										</regexCodeList>
										<regexCodePropertyList>
											<integer>1</integer>
										</regexCodePropertyList>
									</Trigger>
								</Trigger>
								<Trigger isActive="yes" isFolder="no" isTempTrigger="no" isMultiline="no" isPerlSlashGOption="no" isColorizerTrigger="no" isFilterTrigger="no" isSoundTrigger="no" isColorTrigger="no" isColorTriggerFg="no" isColorTriggerBg="no">
									<name>not crippled</name>
									<script>snd.target_cured("a broken "..matches[2])</script>
									<triggerType>0</triggerType>
									<conditonLineDelta>0</conditonLineDelta>
									<mStayOpen>0</mStayOpen>
									<mCommand></mCommand>
									<packageName></packageName>
									<mFgColor>#ff0000</mFgColor>
									<mBgColor>#ffff00</mBgColor>
									<mSoundFile></mSoundFile>
									<colorTriggerFgColor>#000000</colorTriggerFgColor>
									<colorTriggerBgColor>#000000</colorTriggerBgColor>
									<regexCodeList>
										<string>^There is no point in trying to mangle the (.+) as it is unbroken\.$</string>
									</regexCodeList>
									<regexCodePropertyList>
										<integer>1</integer>
									</regexCodePropertyList>
								</Trigger>
								<Trigger isActive="yes" isFolder="no" isTempTrigger="no" isMultiline="no" isPerlSlashGOption="no" isColorizerTrigger="no" isFilterTrigger="no" isSoundTrigger="no" isColorTrigger="no" isColorTriggerFg="no" isColorTriggerBg="no">
									<name>not broken</name>
									<script>snd.limb_status[matches[2]] = "healed"</script>
									<triggerType>0</triggerType>
									<conditonLineDelta>0</conditonLineDelta>
									<mStayOpen>0</mStayOpen>
									<mCommand></mCommand>
									<packageName></packageName>
									<mFgColor>#ff0000</mFgColor>
									<mBgColor>#ffff00</mBgColor>
									<mSoundFile></mSoundFile>
									<colorTriggerFgColor>#000000</colorTriggerFgColor>
									<colorTriggerBgColor>#000000</colorTriggerBgColor>
									<regexCodeList>
										<string>^The (.+) is not damaged enough to destroy it\.$</string>
										<string>^There is no point in trying to mangle the (.+) as it is unbroken\.$</string>
									</regexCodeList>
									<regexCodePropertyList>
										<integer>1</integer>
										<integer>1</integer>
									</regexCodePropertyList>
								</Trigger>
							</TriggerGroup>
							<Trigger isActive="yes" isFolder="no" isTempTrigger="no" isMultiline="no" isPerlSlashGOption="no" isColorizerTrigger="no" isFilterTrigger="no" isSoundTrigger="no" isColorTrigger="no" isColorTriggerFg="no" isColorTriggerBg="no">
								<name>Tekura placeholder</name>
								<script>snd.last_limb_dmg = 0
snd.last_hit_limb = "none"</script>
								<triggerType>0</triggerType>
								<conditonLineDelta>0</conditonLineDelta>
								<mStayOpen>0</mStayOpen>
								<mCommand></mCommand>
								<packageName></packageName>
								<mFgColor>#ff0000</mFgColor>
								<mBgColor>#ffff00</mBgColor>
								<mSoundFile></mSoundFile>
								<colorTriggerFgColor>#000000</colorTriggerFgColor>
								<colorTriggerBgColor>#000000</colorTriggerBgColor>
								<regexCodeList>
									<string>^\w+ uses Tekura (.+) on (.+)\.$</string>
								</regexCodeList>
								<regexCodePropertyList>
									<integer>1</integer>
								</regexCodePropertyList>
							</Trigger>
							<Trigger isActive="yes" isFolder="no" isTempTrigger="no" isMultiline="no" isPerlSlashGOption="no" isColorizerTrigger="no" isFilterTrigger="no" isSoundTrigger="no" isColorTrigger="no" isColorTriggerFg="no" isColorTriggerBg="no">
								<name>hit</name>
								<script>if snd.toggles.atkecho then
 deleteLine()
 snd.message("Empower: trauma.")
end
if matches[2] == snd.target then
 snd.last_hit_limb = matches[4]
 snd.took_limb_dmg(matches[4], snd.limb_dmg_done)
end</script>
								<triggerType>0</triggerType>
								<conditonLineDelta>0</conditonLineDelta>
								<mStayOpen>0</mStayOpen>
								<mCommand></mCommand>
								<packageName></packageName>
								<mFgColor>#ff0000</mFgColor>
								<mBgColor>#ffff00</mBgColor>
								<mSoundFile></mSoundFile>
								<colorTriggerFgColor>#000000</colorTriggerFgColor>
								<colorTriggerBgColor>#000000</colorTriggerBgColor>
								<regexCodeList>
									<string>^As .+ strikes (\w+)('s|) (.+), it sends a pulse of destructive power into it\.$</string>
								</regexCodeList>
								<regexCodePropertyList>
									<integer>1</integer>
								</regexCodePropertyList>
							</Trigger>
							<TriggerGroup isActive="no" isFolder="yes" isTempTrigger="no" isMultiline="no" isPerlSlashGOption="no" isColorizerTrigger="no" isFilterTrigger="no" isSoundTrigger="no" isColorTrigger="no" isColorTriggerFg="no" isColorTriggerBg="no">
								<name>Wayfarer</name>
								<script>if matches[2] == snd.target then
 snd.last_hit_limb = matches[4]
 if 
 snd.last_limb_dmg = 7.41
 snd.took_limb_dmg(matches[4], snd.last_limb_dmg)
end</script>
								<triggerType>0</triggerType>
								<conditonLineDelta>0</conditonLineDelta>
								<mStayOpen>0</mStayOpen>
								<mCommand></mCommand>
								<packageName></packageName>
								<mFgColor>#ff0000</mFgColor>
								<mBgColor>#ffff00</mBgColor>
								<mSoundFile></mSoundFile>
								<colorTriggerFgColor>#000000</colorTriggerFgColor>
								<colorTriggerBgColor>#000000</colorTriggerBgColor>
								<regexCodeList />
								<regexCodePropertyList />
							</TriggerGroup>
						</TriggerGroup>
						<TriggerGroup isActive="yes" isFolder="yes" isTempTrigger="no" isMultiline="no" isPerlSlashGOption="no" isColorizerTrigger="no" isFilterTrigger="no" isSoundTrigger="no" isColorTrigger="no" isColorTriggerFg="no" isColorTriggerBg="no">
							<name>Parrying</name>
							<script></script>
							<triggerType>0</triggerType>
							<conditonLineDelta>0</conditonLineDelta>
							<mStayOpen>0</mStayOpen>
							<mCommand></mCommand>
							<packageName></packageName>
							<mFgColor>#ff0000</mFgColor>
							<mBgColor>#ffff00</mBgColor>
							<mSoundFile></mSoundFile>
							<colorTriggerFgColor>#000000</colorTriggerFgColor>
							<colorTriggerBgColor>#000000</colorTriggerBgColor>
							<regexCodeList />
							<regexCodePropertyList />
							<Trigger isActive="yes" isFolder="no" isTempTrigger="no" isMultiline="no" isPerlSlashGOption="no" isColorizerTrigger="no" isFilterTrigger="no" isSoundTrigger="no" isColorTrigger="no" isColorTriggerFg="no" isColorTriggerBg="no">
								<name>parry</name>
								<script>if matches[2] == snd.target then
 snd.parried_limb = matches[4]
end</script>
								<triggerType>0</triggerType>
								<conditonLineDelta>0</conditonLineDelta>
								<mStayOpen>0</mStayOpen>
								<mCommand></mCommand>
								<packageName></packageName>
								<mFgColor>#ff0000</mFgColor>
								<mBgColor>#ffff00</mBgColor>
								<mSoundFile></mSoundFile>
								<colorTriggerFgColor>#000000</colorTriggerFgColor>
								<colorTriggerBgColor>#000000</colorTriggerBgColor>
								<regexCodeList>
									<string>^(.*) parries the attack on (the )?\w+ (.*) with a deft maneuver\.$</string>
									<string>^(.*) steps into the attack on (the )?\w+ (.*), grabs your arm, and shakes you violently\.$</string>
									<string>^(.*) guards the attack on (the )?\w+ (.*)\.$</string>
									<string>^With a free hand, (\w+) fends off the attack on (the )?\w+ (.+)\.$</string>
								</regexCodeList>
								<regexCodePropertyList>
									<integer>1</integer>
									<integer>1</integer>
									<integer>1</integer>
									<integer>1</integer>
								</regexCodePropertyList>
							</Trigger>
							<Trigger isActive="yes" isFolder="no" isTempTrigger="no" isMultiline="no" isPerlSlashGOption="no" isColorizerTrigger="no" isFilterTrigger="no" isSoundTrigger="no" isColorTrigger="no" isColorTriggerFg="no" isColorTriggerBg="no">
								<name>targeting</name>
								<script>snd.targeting[matches[3]] = matches[2]</script>
								<triggerType>0</triggerType>
								<conditonLineDelta>0</conditonLineDelta>
								<mStayOpen>0</mStayOpen>
								<mCommand></mCommand>
								<packageName></packageName>
								<mFgColor>#ff0000</mFgColor>
								<mBgColor>#ffff00</mBgColor>
								<mSoundFile></mSoundFile>
								<colorTriggerFgColor>#000000</colorTriggerFgColor>
								<colorTriggerBgColor>#000000</colorTriggerBgColor>
								<regexCodeList>
									<string>^You will now target the (.*) of your opponent with your (right|left) arm\.$</string>
								</regexCodeList>
								<regexCodePropertyList>
									<integer>1</integer>
								</regexCodePropertyList>
							</Trigger>
							<Trigger isActive="yes" isFolder="no" isTempTrigger="no" isMultiline="no" isPerlSlashGOption="no" isColorizerTrigger="no" isFilterTrigger="no" isSoundTrigger="no" isColorTrigger="no" isColorTriggerFg="no" isColorTriggerBg="no">
								<name>not targeting</name>
								<script>snd.targeting[matches[2]] = "none"</script>
								<triggerType>0</triggerType>
								<conditonLineDelta>0</conditonLineDelta>
								<mStayOpen>0</mStayOpen>
								<mCommand></mCommand>
								<packageName></packageName>
								<mFgColor>#ff0000</mFgColor>
								<mBgColor>#ffff00</mBgColor>
								<mSoundFile></mSoundFile>
								<colorTriggerFgColor>#000000</colorTriggerFgColor>
								<colorTriggerBgColor>#000000</colorTriggerBgColor>
								<regexCodeList>
									<string>^You will now target attacks with your (right|left) arm wherever you see an opening\.$</string>
								</regexCodeList>
								<regexCodePropertyList>
									<integer>1</integer>
								</regexCodePropertyList>
							</Trigger>
						</TriggerGroup>
					</TriggerGroup>
					<TriggerGroup isActive="yes" isFolder="yes" isTempTrigger="no" isMultiline="no" isPerlSlashGOption="no" isColorizerTrigger="no" isFilterTrigger="no" isSoundTrigger="no" isColorTrigger="no" isColorTriggerFg="no" isColorTriggerBg="no">
						<name>Third Person Tracking</name>
						<script></script>
						<triggerType>0</triggerType>
						<conditonLineDelta>0</conditonLineDelta>
						<mStayOpen>0</mStayOpen>
						<mCommand></mCommand>
						<packageName></packageName>
						<mFgColor>#ff0000</mFgColor>
						<mBgColor>#ffff00</mBgColor>
						<mSoundFile></mSoundFile>
						<colorTriggerFgColor>#000000</colorTriggerFgColor>
						<colorTriggerBgColor>#000000</colorTriggerBgColor>
						<regexCodeList />
						<regexCodePropertyList />
						<Trigger isActive="yes" isFolder="no" isTempTrigger="no" isMultiline="yes" isPerlSlashGOption="no" isColorizerTrigger="no" isFilterTrigger="no" isSoundTrigger="no" isColorTrigger="no" isColorTriggerFg="no" isColorTriggerBg="no">
							<name>attacked</name>
							<script>deleteLine()
snd.hitting = multimatches[1][2]
snd.getting_hit = multimatches[1][4]
if multimatches[1][3] == "Spirituality Chasten" and snd.getting_hit == snd.target then
 snd.last_affs = {}
 if snd.battle_aff ~= "none" then
  snd.target_got(snd.battle_aff)
	table.insert(snd.last_affs, snd.battle_aff)
 end
 if snd.chasten_aff ~= "none" then
  snd.target_got(snd.chasten_aff)
	table.insert(snd.last_affs, snd.chasten_aff)
 end
end</script>
							<triggerType>0</triggerType>
							<conditonLineDelta>1</conditonLineDelta>
							<mStayOpen>0</mStayOpen>
							<mCommand></mCommand>
							<packageName></packageName>
							<mFgColor>#ff0000</mFgColor>
							<mBgColor>#ffff00</mBgColor>
							<mSoundFile></mSoundFile>
							<colorTriggerFgColor>#000000</colorTriggerFgColor>
							<colorTriggerBgColor>#000000</colorTriggerBgColor>
							<regexCodeList>
								<string>^(\w+) uses? (.+) on (.+)\.$</string>
								<string>1</string>
								<string>^(.+)$</string>
							</regexCodeList>
							<regexCodePropertyList>
								<integer>1</integer>
								<integer>5</integer>
								<integer>1</integer>
							</regexCodePropertyList>
						</Trigger>
						<Trigger isActive="yes" isFolder="no" isTempTrigger="no" isMultiline="no" isPerlSlashGOption="no" isColorizerTrigger="no" isFilterTrigger="no" isSoundTrigger="no" isColorTrigger="no" isColorTriggerFg="no" isColorTriggerBg="no">
							<name>aff called</name>
							<script>if string.title(matches[3]) == snd.target then
 snd.maybe_affs = {}
 for aff in string.gmatch(matches[4], '([^, ]+)') do
	  table.insert(snd.maybe_affs, aff)
 end
 snd.hitting = matches[2]
end
</script>
							<triggerType>0</triggerType>
							<conditonLineDelta>0</conditonLineDelta>
							<mStayOpen>50</mStayOpen>
							<mCommand></mCommand>
							<packageName></packageName>
							<mFgColor>#ff0000</mFgColor>
							<mBgColor>#ffff00</mBgColor>
							<mSoundFile></mSoundFile>
							<colorTriggerFgColor>#000000</colorTriggerFgColor>
							<colorTriggerBgColor>#000000</colorTriggerBgColor>
							<regexCodeList>
								<string>^\(Web\)\: (\w+) says, \"Afflicting (\w+): (.*)\.\"$</string>
								<string>^\(Web\): (\w+) says, \"Vinelash (\w+): (\w+)\.\"$</string>
								<string>^\(Web\)\: (\w+) says, \"(\[\w+] )?Afflicting (\w+): (.*)(.|,)\"$</string>
							</regexCodeList>
							<regexCodePropertyList>
								<integer>1</integer>
								<integer>1</integer>
								<integer>1</integer>
							</regexCodePropertyList>
							<Trigger isActive="yes" isFolder="no" isTempTrigger="no" isMultiline="yes" isPerlSlashGOption="no" isColorizerTrigger="no" isFilterTrigger="no" isSoundTrigger="no" isColorTrigger="no" isColorTriggerFg="no" isColorTriggerBg="no">
								<name>vorpal</name>
								<script>snd.onHit(multimatches[1][3])</script>
								<triggerType>0</triggerType>
								<conditonLineDelta>2</conditonLineDelta>
								<mStayOpen>0</mStayOpen>
								<mCommand></mCommand>
								<packageName></packageName>
								<mFgColor>#ff0000</mFgColor>
								<mBgColor>#ffff00</mBgColor>
								<mSoundFile></mSoundFile>
								<colorTriggerFgColor>#000000</colorTriggerFgColor>
								<colorTriggerBgColor>#000000</colorTriggerBgColor>
								<regexCodeList>
									<string>^(\w+) uses Bladefire Vorpal on (\w+)\.$</string>
									<string>1</string>
									<string>^Shimmering with vorpal power, (the )?\w+ directs .+ at (\w+), and (the )?\w+ is struck by something unseen\.$</string>
								</regexCodeList>
								<regexCodePropertyList>
									<integer>1</integer>
									<integer>5</integer>
									<integer>1</integer>
								</regexCodePropertyList>
							</Trigger>
							<Trigger isActive="yes" isFolder="no" isTempTrigger="no" isMultiline="no" isPerlSlashGOption="no" isColorizerTrigger="no" isFilterTrigger="no" isSoundTrigger="no" isColorTrigger="no" isColorTriggerFg="no" isColorTriggerBg="no">
								<name>end</name>
								<script>setTriggerStayOpen("aff called", 0)
snd.maybe_affs = {}</script>
								<triggerType>0</triggerType>
								<conditonLineDelta>0</conditonLineDelta>
								<mStayOpen>0</mStayOpen>
								<mCommand></mCommand>
								<packageName></packageName>
								<mFgColor>#ff0000</mFgColor>
								<mBgColor>#ffff00</mBgColor>
								<mSoundFile></mSoundFile>
								<colorTriggerFgColor>#000000</colorTriggerFgColor>
								<colorTriggerBgColor>#000000</colorTriggerBgColor>
								<regexCodeList>
									<string>return isPrompt()</string>
								</regexCodeList>
								<regexCodePropertyList>
									<integer>4</integer>
								</regexCodePropertyList>
							</Trigger>
						</Trigger>
						<Trigger isActive="yes" isFolder="no" isTempTrigger="no" isMultiline="no" isPerlSlashGOption="no" isColorizerTrigger="no" isFilterTrigger="no" isSoundTrigger="no" isColorTrigger="no" isColorTriggerFg="no" isColorTriggerBg="no">
							<name>batter call</name>
							<script>if string.title(matches[3]) == snd.target then
 snd.maybe_affs = {}
 for aff in string.gmatch(matches[4], '([^, ]+)') do
  table.insert(snd.maybe_affs, aff)
 end
end
for aff in pairs(snd.maybe_affs) do
 snd.target_got(snd.maybe_affs[aff])
end</script>
							<triggerType>0</triggerType>
							<conditonLineDelta>0</conditonLineDelta>
							<mStayOpen>20</mStayOpen>
							<mCommand></mCommand>
							<packageName></packageName>
							<mFgColor>#ff0000</mFgColor>
							<mBgColor>#ffff00</mBgColor>
							<mSoundFile></mSoundFile>
							<colorTriggerFgColor>#000000</colorTriggerFgColor>
							<colorTriggerBgColor>#000000</colorTriggerBgColor>
							<regexCodeList>
								<string>^\(Web\)\: (\w+) says, \"(Battering|Battered) (\w+): (.*)\.\"$</string>
							</regexCodeList>
							<regexCodePropertyList>
								<integer>1</integer>
							</regexCodePropertyList>
							<Trigger isActive="yes" isFolder="no" isTempTrigger="no" isMultiline="no" isPerlSlashGOption="no" isColorizerTrigger="no" isFilterTrigger="no" isSoundTrigger="no" isColorTrigger="no" isColorTriggerFg="no" isColorTriggerBg="no">
								<name>undo</name>
								<script>if matches[2] == snd.target then
 snd.target_cured(matches[3])
end</script>
								<triggerType>0</triggerType>
								<conditonLineDelta>0</conditonLineDelta>
								<mStayOpen>0</mStayOpen>
								<mCommand></mCommand>
								<packageName></packageName>
								<mFgColor>#ff0000</mFgColor>
								<mBgColor>#ffff00</mBgColor>
								<mSoundFile></mSoundFile>
								<colorTriggerFgColor>#000000</colorTriggerFgColor>
								<colorTriggerBgColor>#000000</colorTriggerBgColor>
								<regexCodeList>
									<string>^You discern that (\w+) has resisted the (\w+) affliction\.$</string>
								</regexCodeList>
								<regexCodePropertyList>
									<integer>1</integer>
								</regexCodePropertyList>
							</Trigger>
							<Trigger isActive="yes" isFolder="no" isTempTrigger="no" isMultiline="no" isPerlSlashGOption="no" isColorizerTrigger="no" isFilterTrigger="no" isSoundTrigger="no" isColorTrigger="no" isColorTriggerFg="no" isColorTriggerBg="no">
								<name>end</name>
								<script>setTriggerStayOpen("affliction call", 0)</script>
								<triggerType>0</triggerType>
								<conditonLineDelta>0</conditonLineDelta>
								<mStayOpen>0</mStayOpen>
								<mCommand></mCommand>
								<packageName></packageName>
								<mFgColor>#ff0000</mFgColor>
								<mBgColor>#ffff00</mBgColor>
								<mSoundFile></mSoundFile>
								<colorTriggerFgColor>#000000</colorTriggerFgColor>
								<colorTriggerBgColor>#000000</colorTriggerBgColor>
								<regexCodeList>
									<string>return isPrompt()</string>
								</regexCodeList>
								<regexCodePropertyList>
									<integer>4</integer>
								</regexCodePropertyList>
							</Trigger>
						</Trigger>
						<TriggerGroup isActive="yes" isFolder="yes" isTempTrigger="no" isMultiline="no" isPerlSlashGOption="no" isColorizerTrigger="no" isFilterTrigger="no" isSoundTrigger="no" isColorTrigger="no" isColorTriggerFg="no" isColorTriggerBg="no">
							<name>Luminary</name>
							<script></script>
							<triggerType>0</triggerType>
							<conditonLineDelta>0</conditonLineDelta>
							<mStayOpen>0</mStayOpen>
							<mCommand></mCommand>
							<packageName></packageName>
							<mFgColor>#ff0000</mFgColor>
							<mBgColor>#ffff00</mBgColor>
							<mSoundFile></mSoundFile>
							<colorTriggerFgColor>#000000</colorTriggerFgColor>
							<colorTriggerBgColor>#000000</colorTriggerBgColor>
							<regexCodeList />
							<regexCodePropertyList />
							<Trigger isActive="yes" isFolder="no" isTempTrigger="no" isMultiline="yes" isPerlSlashGOption="no" isColorizerTrigger="no" isFilterTrigger="no" isSoundTrigger="no" isColorTrigger="no" isColorTriggerFg="no" isColorTriggerBg="no">
								<name>spirituality attack</name>
								<script>if snd.toggles.atkecho then
 deleteLine()
 if multimatches[1][4] == "you" then
  snd.got_hit(string.lower(multimatches[1][3]), multimatches[1][2])
 else
  snd.third_hit(string.lower(multimatches[1][3]), multimatches[1][2], multimatches[1][4])
 end
end
if multimatches[1][4] == snd.target then
 snd.last_affs = {}
 if multimatches[1][3] == "Strike" then
  snd.target_got("paresis")
  table.insert(snd.last_affs, "paresis")
 elseif multimatches[1][3] == "Punch" then
  snd.target_got("weariness")
  table.insert(snd.last_affs, "weariness")
 elseif multimatches[1][3] == "Slam" then
  snd.target_got("asthma")
	snd.target_got("haemophilia")
  table.insert(snd.last_affs, "asthma")
	table.insert(snd.last_affs, "haemophilia")
 elseif multimatches[1][3] == "Facesmash" then
  snd.target_got("sight")
	snd.target_got("berserking")
  table.insert(snd.last_affs, "sight")
	table.insert(snd.last_affs, "berserking")
 elseif multimatches[1][3] == "Brilliance" then
  snd.target_got("sight")
	table.insert(snd.last_affs, "sight")
 end
end</script>
								<triggerType>0</triggerType>
								<conditonLineDelta>2</conditonLineDelta>
								<mStayOpen>10</mStayOpen>
								<mCommand></mCommand>
								<packageName></packageName>
								<mFgColor>#ff0000</mFgColor>
								<mBgColor>#ffff00</mBgColor>
								<mSoundFile></mSoundFile>
								<colorTriggerFgColor>#000000</colorTriggerFgColor>
								<colorTriggerBgColor>#000000</colorTriggerBgColor>
								<regexCodeList>
									<string>^(\w+) uses Spirituality (\w+) on (\w+)\.$</string>
									<string>1</string>
									<string>^(.*)$</string>
								</regexCodeList>
								<regexCodePropertyList>
									<integer>1</integer>
									<integer>5</integer>
									<integer>1</integer>
								</regexCodePropertyList>
								<Trigger isActive="yes" isFolder="no" isTempTrigger="no" isMultiline="no" isPerlSlashGOption="no" isColorizerTrigger="no" isFilterTrigger="no" isSoundTrigger="no" isColorTrigger="no" isColorTriggerFg="no" isColorTriggerBg="no">
									<name>undo spirituality</name>
									<script>if snd.last_aff ~= "" and snd.target == matches[2] then
 snd.target_cured(snd.last_aff)
end</script>
									<triggerType>0</triggerType>
									<conditonLineDelta>0</conditonLineDelta>
									<mStayOpen>0</mStayOpen>
									<mCommand></mCommand>
									<packageName></packageName>
									<mFgColor>#ff0000</mFgColor>
									<mBgColor>#ffff00</mBgColor>
									<mSoundFile></mSoundFile>
									<colorTriggerFgColor>#000000</colorTriggerFgColor>
									<colorTriggerBgColor>#000000</colorTriggerBgColor>
									<regexCodeList>
										<string>^The attack rebounds back onto (\w+)\!$</string>
										<string>^Stepping quickly out of the way, (\w+) dodges the attack\.$</string>
										<string>^(\w+) parries the attack on (.*) with a deft maneuver\.$</string>
										<string>^(\w+) guards the attack on (.*)\.$</string>
										<string>^You discern that (\w+) has resisted the asthma affliction\.$</string>
										<string>^A reflection of (\w+) blinks out of existence\.$</string>
										<string>^With a free hand, (\w+) fends off the attack on (the )?\w+ (.+)\.$</string>
									</regexCodeList>
									<regexCodePropertyList>
										<integer>1</integer>
										<integer>1</integer>
										<integer>1</integer>
										<integer>1</integer>
										<integer>1</integer>
										<integer>1</integer>
										<integer>1</integer>
									</regexCodePropertyList>
								</Trigger>
								<Trigger isActive="yes" isFolder="no" isTempTrigger="no" isMultiline="no" isPerlSlashGOption="no" isColorizerTrigger="no" isFilterTrigger="no" isSoundTrigger="no" isColorTrigger="no" isColorTriggerFg="no" isColorTriggerBg="no">
									<name>spirituality attack end</name>
									<script>setTriggerStayOpen("spirituality attack", 0)</script>
									<triggerType>0</triggerType>
									<conditonLineDelta>0</conditonLineDelta>
									<mStayOpen>0</mStayOpen>
									<mCommand></mCommand>
									<packageName></packageName>
									<mFgColor>#ff0000</mFgColor>
									<mBgColor>#ffff00</mBgColor>
									<mSoundFile></mSoundFile>
									<colorTriggerFgColor>#000000</colorTriggerFgColor>
									<colorTriggerBgColor>#000000</colorTriggerBgColor>
									<regexCodeList>
										<string>return isPrompt()</string>
										<string>^(\w+) uses</string>
									</regexCodeList>
									<regexCodePropertyList>
										<integer>4</integer>
										<integer>1</integer>
									</regexCodePropertyList>
								</Trigger>
							</Trigger>
							<Trigger isActive="yes" isFolder="no" isTempTrigger="no" isMultiline="no" isPerlSlashGOption="no" isColorizerTrigger="no" isFilterTrigger="no" isSoundTrigger="no" isColorTrigger="no" isColorTriggerFg="no" isColorTriggerBg="no">
								<name>dazzle</name>
								<script>if matches[2] == snd.target then
 snd.target_got("confusion")
 snd.target_got("dizziness")
end</script>
								<triggerType>0</triggerType>
								<conditonLineDelta>0</conditonLineDelta>
								<mStayOpen>0</mStayOpen>
								<mCommand></mCommand>
								<packageName></packageName>
								<mFgColor>#ff0000</mFgColor>
								<mBgColor>#ffff00</mBgColor>
								<mSoundFile></mSoundFile>
								<colorTriggerFgColor>#000000</colorTriggerFgColor>
								<colorTriggerBgColor>#000000</colorTriggerBgColor>
								<regexCodeList>
									<string>^\w+ directs a dazzling ray of light at (\w+)\.$</string>
									<string>^You use Devotion Dazzle on (\w+)\.$</string>
								</regexCodeList>
								<regexCodePropertyList>
									<integer>1</integer>
									<integer>1</integer>
								</regexCodePropertyList>
							</Trigger>
							<Trigger isActive="yes" isFolder="no" isTempTrigger="no" isMultiline="no" isPerlSlashGOption="no" isColorizerTrigger="no" isFilterTrigger="no" isSoundTrigger="no" isColorTrigger="no" isColorTriggerFg="no" isColorTriggerBg="no">
								<name>battle call</name>
								<script>snd.battle_aff = matches[4]</script>
								<triggerType>0</triggerType>
								<conditonLineDelta>0</conditonLineDelta>
								<mStayOpen>0</mStayOpen>
								<mCommand></mCommand>
								<packageName></packageName>
								<mFgColor>#ff0000</mFgColor>
								<mBgColor>#ffff00</mBgColor>
								<mSoundFile></mSoundFile>
								<colorTriggerFgColor>#000000</colorTriggerFgColor>
								<colorTriggerBgColor>#000000</colorTriggerBgColor>
								<regexCodeList>
									<string>^\(Web\)\: (\w+) says, \"Battle (\w+): (.*)\.\"$</string>
								</regexCodeList>
								<regexCodePropertyList>
									<integer>1</integer>
								</regexCodePropertyList>
							</Trigger>
							<Trigger isActive="yes" isFolder="no" isTempTrigger="no" isMultiline="no" isPerlSlashGOption="no" isColorizerTrigger="no" isFilterTrigger="no" isSoundTrigger="no" isColorTrigger="no" isColorTriggerFg="no" isColorTriggerBg="no">
								<name>chasten call</name>
								<script>snd.chasten_aff = matches[4]</script>
								<triggerType>0</triggerType>
								<conditonLineDelta>0</conditonLineDelta>
								<mStayOpen>0</mStayOpen>
								<mCommand></mCommand>
								<packageName></packageName>
								<mFgColor>#ff0000</mFgColor>
								<mBgColor>#ffff00</mBgColor>
								<mSoundFile></mSoundFile>
								<colorTriggerFgColor>#000000</colorTriggerFgColor>
								<colorTriggerBgColor>#000000</colorTriggerBgColor>
								<regexCodeList>
									<string>^\(Web\)\: (\w+) says, \"Chasten (\w+): (.*)\.\"$</string>
								</regexCodeList>
								<regexCodePropertyList>
									<integer>1</integer>
								</regexCodePropertyList>
							</Trigger>
						</TriggerGroup>
						<TriggerGroup isActive="yes" isFolder="yes" isTempTrigger="no" isMultiline="no" isPerlSlashGOption="no" isColorizerTrigger="no" isFilterTrigger="no" isSoundTrigger="no" isColorTrigger="no" isColorTriggerFg="no" isColorTriggerBg="no">
							<name>Carnifex</name>
							<script></script>
							<triggerType>0</triggerType>
							<conditonLineDelta>0</conditonLineDelta>
							<mStayOpen>0</mStayOpen>
							<mCommand></mCommand>
							<packageName></packageName>
							<mFgColor>#ff0000</mFgColor>
							<mBgColor>#ffff00</mBgColor>
							<mSoundFile></mSoundFile>
							<colorTriggerFgColor>#000000</colorTriggerFgColor>
							<colorTriggerBgColor>#000000</colorTriggerBgColor>
							<regexCodeList />
							<regexCodePropertyList />
							<Trigger isActive="yes" isFolder="no" isTempTrigger="no" isMultiline="no" isPerlSlashGOption="no" isColorizerTrigger="no" isFilterTrigger="no" isSoundTrigger="no" isColorTrigger="no" isColorTriggerFg="no" isColorTriggerBg="no">
								<name>attacked</name>
								<script>deleteLine()
snd.hitting = matches[2]</script>
								<triggerType>0</triggerType>
								<conditonLineDelta>0</conditonLineDelta>
								<mStayOpen>99</mStayOpen>
								<mCommand></mCommand>
								<packageName></packageName>
								<mFgColor>#ff0000</mFgColor>
								<mBgColor>#ffff00</mBgColor>
								<mSoundFile></mSoundFile>
								<colorTriggerFgColor>#000000</colorTriggerFgColor>
								<colorTriggerBgColor>#000000</colorTriggerBgColor>
								<regexCodeList>
									<string>^(\w+) uses Savagery Spinning on (\w+)\.$</string>
									<string>^(\w+) uses Savagery Raze.+ on (\w+)\.$</string>
								</regexCodeList>
								<regexCodePropertyList>
									<integer>1</integer>
									<integer>1</integer>
								</regexCodePropertyList>
								<Trigger isActive="yes" isFolder="no" isTempTrigger="no" isMultiline="no" isPerlSlashGOption="no" isColorizerTrigger="no" isFilterTrigger="no" isSoundTrigger="no" isColorTrigger="no" isColorTriggerFg="no" isColorTriggerBg="no">
									<name>weapon attacks</name>
									<script>if snd.toggles.atkecho then
 deleteLine()
 snd.message(snd.hitting.." hit: "..matches[2]..".")
end
if #snd.maybe_affs &gt;= 1 and (matches[2] == snd.target) then
 aff = ""
 for i in pairs(snd.effects) do
  if snd.effects[i] == snd.maybe_affs[1] then
   aff = i
  end
 end
 if aff ~= "" then
  snd.target_got(aff)
  table.remove(snd.maybe_affs, 1)
 end
 snd.last_aff = aff
else
 snd.last_aff = ""
end</script>
									<triggerType>0</triggerType>
									<conditonLineDelta>0</conditonLineDelta>
									<mStayOpen>1</mStayOpen>
									<mCommand></mCommand>
									<packageName></packageName>
									<mFgColor>#ff007f</mFgColor>
									<mBgColor>#000000</mBgColor>
									<mSoundFile></mSoundFile>
									<colorTriggerFgColor>#000000</colorTriggerFgColor>
									<colorTriggerBgColor>#000000</colorTriggerBgColor>
									<regexCodeList>
										<string>^Cutting forcefully, .* rends (\w+) with .+\.$</string>
										<string>^\w+ viciously skewers (\w+) with a thrust from .+\.$</string>
										<string>^With a brutal swipe of .+, .* rips up (\w+)\.$</string>
										<string>^\w+ hefts .+ over .* head before lunging forward and viciously hacking into (\w+), rending (the )?\w+ flesh messily with the deadly blade\.$</string>
										<string>^Swinging .+ in a powerful arc, .* tears into (\w+)\.$</string>
										<string>^With a powerful jab, .* gouges into (\w+) with .+\.$</string>
										<string>^\w+ scores (\w+) with a wild blow from .+\.$</string>
										<string>^Lancing forward, .* drives .+ into (\w+)\.$</string>
										<string>^\w+ scores (\w+) with a wild blow from .+\.$</string>
										<string>^Slicing downward with .+, .* carves (\w+) open\.$</string>
										<string>^\w+ hacks into (\w+) ruthlessly with .+\.$</string>
									</regexCodeList>
									<regexCodePropertyList>
										<integer>1</integer>
										<integer>1</integer>
										<integer>1</integer>
										<integer>1</integer>
										<integer>1</integer>
										<integer>1</integer>
										<integer>1</integer>
										<integer>1</integer>
										<integer>1</integer>
										<integer>1</integer>
										<integer>1</integer>
									</regexCodePropertyList>
									<Trigger isActive="yes" isFolder="no" isTempTrigger="no" isMultiline="no" isPerlSlashGOption="no" isColorizerTrigger="no" isFilterTrigger="no" isSoundTrigger="no" isColorTrigger="no" isColorTriggerFg="no" isColorTriggerBg="no">
										<name>undo carnifex</name>
										<script>if snd.last_aff ~= "" and snd.target == matches[2] then
 snd.target_cured(snd.last_aff)
end</script>
										<triggerType>0</triggerType>
										<conditonLineDelta>0</conditonLineDelta>
										<mStayOpen>0</mStayOpen>
										<mCommand></mCommand>
										<packageName></packageName>
										<mFgColor>#ff0000</mFgColor>
										<mBgColor>#ffff00</mBgColor>
										<mSoundFile></mSoundFile>
										<colorTriggerFgColor>#000000</colorTriggerFgColor>
										<colorTriggerBgColor>#000000</colorTriggerBgColor>
										<regexCodeList>
											<string>^The attack rebounds back onto (\w+)\!$</string>
											<string>^Stepping quickly out of the way, (\w+) dodges the attack\.$</string>
											<string>^(\w+) parries the attack on (.*) with a deft maneuver\.$</string>
											<string>^(\w+) guards the attack on (.*)\.$</string>
											<string>^You discern that (\w+) has resisted the (the )?\w+ affliction\.$</string>
											<string>^A reflection of (\w+) blinks out of existence\.$</string>
											<string>^With a free hand, (\w+) fends off the attack on (the )?\w+ (.+)\.$</string>
										</regexCodeList>
										<regexCodePropertyList>
											<integer>1</integer>
											<integer>1</integer>
											<integer>1</integer>
											<integer>1</integer>
											<integer>1</integer>
											<integer>1</integer>
											<integer>1</integer>
										</regexCodePropertyList>
									</Trigger>
								</Trigger>
								<Trigger isActive="yes" isFolder="no" isTempTrigger="no" isMultiline="no" isPerlSlashGOption="no" isColorizerTrigger="no" isFilterTrigger="no" isSoundTrigger="no" isColorTrigger="no" isColorTriggerFg="no" isColorTriggerBg="no">
									<name>end</name>
									<script>setTriggerStayOpen("attacked", 0)
snd.maybe_affs = {}</script>
									<triggerType>0</triggerType>
									<conditonLineDelta>0</conditonLineDelta>
									<mStayOpen>0</mStayOpen>
									<mCommand></mCommand>
									<packageName></packageName>
									<mFgColor>#ff0000</mFgColor>
									<mBgColor>#ffff00</mBgColor>
									<mSoundFile></mSoundFile>
									<colorTriggerFgColor>#000000</colorTriggerFgColor>
									<colorTriggerBgColor>#000000</colorTriggerBgColor>
									<regexCodeList>
										<string>return isPrompt()</string>
									</regexCodeList>
									<regexCodePropertyList>
										<integer>4</integer>
									</regexCodePropertyList>
								</Trigger>
							</Trigger>
							<Trigger isActive="yes" isFolder="no" isTempTrigger="no" isMultiline="no" isPerlSlashGOption="no" isColorizerTrigger="no" isFilterTrigger="no" isSoundTrigger="no" isColorTrigger="no" isColorTriggerFg="no" isColorTriggerBg="no">
								<name>crushed chest</name>
								<script>if matches[3] == snd.target then
 snd.target_got("crushed_chest")
end</script>
								<triggerType>0</triggerType>
								<conditonLineDelta>0</conditonLineDelta>
								<mStayOpen>1</mStayOpen>
								<mCommand></mCommand>
								<packageName></packageName>
								<mFgColor>#ff0000</mFgColor>
								<mBgColor>#ffff00</mBgColor>
								<mSoundFile></mSoundFile>
								<colorTriggerFgColor>#000000</colorTriggerFgColor>
								<colorTriggerBgColor>#000000</colorTriggerBgColor>
								<regexCodeList>
									<string>^Swinging .+ around in a wide arc, (\w+) smashes it savagely into (\w+)('s|') torso's chest, which visibly collapses inwards as it is crushed\.$</string>
								</regexCodeList>
								<regexCodePropertyList>
									<integer>1</integer>
								</regexCodePropertyList>
								<Trigger isActive="yes" isFolder="no" isTempTrigger="no" isMultiline="no" isPerlSlashGOption="no" isColorizerTrigger="no" isFilterTrigger="no" isSoundTrigger="no" isColorTrigger="no" isColorTriggerFg="no" isColorTriggerBg="no">
									<name>undo crushed chest</name>
									<script>snd.target_cured("crushed_chest")</script>
									<triggerType>0</triggerType>
									<conditonLineDelta>0</conditonLineDelta>
									<mStayOpen>0</mStayOpen>
									<mCommand></mCommand>
									<packageName></packageName>
									<mFgColor>#ff0000</mFgColor>
									<mBgColor>#ffff00</mBgColor>
									<mSoundFile></mSoundFile>
									<colorTriggerFgColor>#000000</colorTriggerFgColor>
									<colorTriggerBgColor>#000000</colorTriggerBgColor>
									<regexCodeList>
										<string>^The attack rebounds back onto (\w+)\!$</string>
										<string>^(\w+) parries the attack on (.*) with a deft maneuver\.$</string>
										<string>^(\w+) guards the attack on (.*)\.$</string>
										<string>^A reflection of (\w+) blinks out of existence\.$</string>
										<string>^With a free hand, (\w+) fends off the attack on (the )?\w+ (.+)\.$</string>
									</regexCodeList>
									<regexCodePropertyList>
										<integer>1</integer>
										<integer>1</integer>
										<integer>1</integer>
										<integer>1</integer>
										<integer>1</integer>
									</regexCodePropertyList>
								</Trigger>
							</Trigger>
							<Trigger isActive="yes" isFolder="no" isTempTrigger="no" isMultiline="no" isPerlSlashGOption="no" isColorizerTrigger="no" isFilterTrigger="no" isSoundTrigger="no" isColorTrigger="no" isColorTriggerFg="no" isColorTriggerBg="no">
								<name>cracked ribs</name>
								<script>if matches[3] == snd.target then
 snd.target_got("cracked_ribs")
end</script>
								<triggerType>0</triggerType>
								<conditonLineDelta>0</conditonLineDelta>
								<mStayOpen>0</mStayOpen>
								<mCommand></mCommand>
								<packageName></packageName>
								<mFgColor>#ff0000</mFgColor>
								<mBgColor>#ffff00</mBgColor>
								<mSoundFile></mSoundFile>
								<colorTriggerFgColor>#000000</colorTriggerFgColor>
								<colorTriggerBgColor>#000000</colorTriggerBgColor>
								<regexCodeList>
									<string>^Swinging .+ around in a wide arc, (\w+) smashes it savagely into (\w+)('s|') torso, eliciting an audible 'crunch' as ribs break before the blow\.$</string>
								</regexCodeList>
								<regexCodePropertyList>
									<integer>1</integer>
								</regexCodePropertyList>
								<Trigger isActive="yes" isFolder="no" isTempTrigger="no" isMultiline="no" isPerlSlashGOption="no" isColorizerTrigger="no" isFilterTrigger="no" isSoundTrigger="no" isColorTrigger="no" isColorTriggerFg="no" isColorTriggerBg="no">
									<name>undo cracked ribs</name>
									<script>snd.target_cured("cracked_ribs")</script>
									<triggerType>0</triggerType>
									<conditonLineDelta>0</conditonLineDelta>
									<mStayOpen>0</mStayOpen>
									<mCommand></mCommand>
									<packageName></packageName>
									<mFgColor>#ff0000</mFgColor>
									<mBgColor>#ffff00</mBgColor>
									<mSoundFile></mSoundFile>
									<colorTriggerFgColor>#000000</colorTriggerFgColor>
									<colorTriggerBgColor>#000000</colorTriggerBgColor>
									<regexCodeList>
										<string>^The attack rebounds back onto (\w+)\!$</string>
										<string>^(\w+) parries the attack on (.*) with a deft maneuver\.$</string>
										<string>^(\w+) guards the attack on (.*)\.$</string>
										<string>^A reflection of (\w+) blinks out of existence\.$</string>
										<string>^With a free hand, (\w+) fends off the attack on (the )?\w+ (.+)\.$</string>
									</regexCodeList>
									<regexCodePropertyList>
										<integer>1</integer>
										<integer>1</integer>
										<integer>1</integer>
										<integer>1</integer>
										<integer>1</integer>
									</regexCodePropertyList>
								</Trigger>
							</Trigger>
						</TriggerGroup>
						<TriggerGroup isActive="yes" isFolder="yes" isTempTrigger="no" isMultiline="no" isPerlSlashGOption="no" isColorizerTrigger="no" isFilterTrigger="no" isSoundTrigger="no" isColorTrigger="no" isColorTriggerFg="no" isColorTriggerBg="no">
							<name>Sentinel</name>
							<script></script>
							<triggerType>0</triggerType>
							<conditonLineDelta>0</conditonLineDelta>
							<mStayOpen>0</mStayOpen>
							<mCommand></mCommand>
							<packageName></packageName>
							<mFgColor>#ff0000</mFgColor>
							<mBgColor>#ffff00</mBgColor>
							<mSoundFile></mSoundFile>
							<colorTriggerFgColor>#000000</colorTriggerFgColor>
							<colorTriggerBgColor>#000000</colorTriggerBgColor>
							<regexCodeList />
							<regexCodePropertyList />
							<Trigger isActive="yes" isFolder="no" isTempTrigger="no" isMultiline="yes" isPerlSlashGOption="no" isColorizerTrigger="no" isFilterTrigger="no" isSoundTrigger="no" isColorTrigger="no" isColorTriggerFg="no" isColorTriggerBg="no">
								<name>dhuriv attack</name>
								<script>snd.last_aff = ""
snd.last_affs = {}
if snd.toggles.atkecho then
 deleteLine()
 if multimatches[1][4] == "you" then
  snd.got_hit(string.lower(multimatches[1][3]), multimatches[1][2])
 elseif not multimatches[1][1] == "you" then
  snd.third_hit(string.lower(multimatches[1][3]), multimatches[1][2], multimatches[1][4])
 end
end
if multimatches[1][4] == snd.target then
 if multimatches[1][3] == "Heartbreaker" then
  snd.target_got("heartflutter")
  snd.last_aff = "heartflutter"
 elseif multimatches[1][3] == "Twirl" then
  snd.target_got("confusion")
  snd.last_aff = "confusion"
elseif multimatches[1][3] == "Weaken" then
  snd.target_got("lethargy")
  snd.last_aff = "lethargy"
elseif multimatches[1][3] == "Reave" then
	snd.used.rebounding = false
 elseif multimatches[1][3] == "Trip" then		
	snd.target_prone = true
 elseif multimatches[1][3] == "Crosscut" then
  snd.target_got("impairment")
  snd.last_aff = "impairment"
 elseif multimatches[1][3] == "Throatcrush" then
  snd.target_got("destroyed_throat")
  snd.last_aff = "destroyed_throat"
 elseif multimatches[1][3] == "Gouge" then
  snd.target_got("impatience")
  snd.last_aff = "impatience"
 elseif multimatches[1][3] == "Slam" then
	if not table.contains(snd.target_has, "epilepsy") then
		if not table.contains(snd.target_has, "laxity") then
  		snd.target_got("epilepsy")
			snd.target_got("laxity")
			table.insert(snd.last_affs, "laxity")
			table.insert(snd.last_affs, "epilepsy")
		else
			 snd.target_got("epilepsy")
			 snd.last_aff = ("epilepsy")
		end
	elseif not table.contains(snd.target_has, "laxity") then
			 snd.target_got("laxity")
			 snd.last_aff = ("laxity")
	end
 elseif multimatches[1][3] == "Blind" then
  if snd.checkAff("sight") then
	 snd.target_got("blurry vision")
	 snd.last_aff = "blurry vision"
	else
	 snd.target_got("sight")
	 snd.last_aff = "sight"
	end
 elseif multimatches[1][3] == "Slash" or multimatches[1][3] == "Stab" or multimatches[1][3] == "Thrust" or multimatches[1][3] == "Flourish" then
  if #snd.maybe_affs &gt;= 1 then
   aff = ""
   for i in pairs(snd.effects) do
    if snd.effects[i] == snd.maybe_affs[1] then
     aff = i
    end
   end
   if aff ~= "" then
    snd.target_got(aff)
    table.remove(snd.maybe_affs, 1)
	 end
  end
 end
end</script>
								<triggerType>0</triggerType>
								<conditonLineDelta>2</conditonLineDelta>
								<mStayOpen>10</mStayOpen>
								<mCommand></mCommand>
								<packageName></packageName>
								<mFgColor>#ff0000</mFgColor>
								<mBgColor>#ffff00</mBgColor>
								<mSoundFile></mSoundFile>
								<colorTriggerFgColor>#000000</colorTriggerFgColor>
								<colorTriggerBgColor>#000000</colorTriggerBgColor>
								<regexCodeList>
									<string>^(\w+) uses? Dhuriv (\w+) on (\w+)\.$</string>
									<string>1</string>
									<string>^(.*)$</string>
								</regexCodeList>
								<regexCodePropertyList>
									<integer>1</integer>
									<integer>5</integer>
									<integer>1</integer>
								</regexCodePropertyList>
								<Trigger isActive="yes" isFolder="no" isTempTrigger="no" isMultiline="no" isPerlSlashGOption="no" isColorizerTrigger="no" isFilterTrigger="no" isSoundTrigger="no" isColorTrigger="no" isColorTriggerFg="no" isColorTriggerBg="no">
									<name>undo dhurive</name>
									<script>if snd.last_aff ~= "" and snd.target == matches[2] then
 snd.target_cured(snd.last_aff)
end</script>
									<triggerType>0</triggerType>
									<conditonLineDelta>0</conditonLineDelta>
									<mStayOpen>0</mStayOpen>
									<mCommand></mCommand>
									<packageName></packageName>
									<mFgColor>#ff0000</mFgColor>
									<mBgColor>#ffff00</mBgColor>
									<mSoundFile></mSoundFile>
									<colorTriggerFgColor>#000000</colorTriggerFgColor>
									<colorTriggerBgColor>#000000</colorTriggerBgColor>
									<regexCodeList>
										<string>^The attack rebounds back onto (\w+)\!$</string>
										<string>^Stepping quickly out of the way, (\w+) dodges the attack\.$</string>
										<string>^(\w+) parries the attack on (.*) with a deft maneuver\.$</string>
										<string>^(\w+) guards the attack on (.*)\.$</string>
										<string>^You discern that (\w+) has resisted the (the )?\w+ affliction\.$</string>
										<string>^A reflection of (\w+) blinks out of existence\.$</string>
										<string>^With a free hand, (\w+) fends off the attack on (the )?\w+ (.+)\.$</string>
									</regexCodeList>
									<regexCodePropertyList>
										<integer>1</integer>
										<integer>1</integer>
										<integer>1</integer>
										<integer>1</integer>
										<integer>1</integer>
										<integer>1</integer>
										<integer>1</integer>
									</regexCodePropertyList>
								</Trigger>
								<Trigger isActive="yes" isFolder="no" isTempTrigger="no" isMultiline="no" isPerlSlashGOption="no" isColorizerTrigger="no" isFilterTrigger="no" isSoundTrigger="no" isColorTrigger="no" isColorTriggerFg="no" isColorTriggerBg="no">
									<name>dhuriv attack end</name>
									<script>setTriggerStayOpen("dhuriv attack", 0)</script>
									<triggerType>0</triggerType>
									<conditonLineDelta>0</conditonLineDelta>
									<mStayOpen>0</mStayOpen>
									<mCommand></mCommand>
									<packageName></packageName>
									<mFgColor>#ff0000</mFgColor>
									<mBgColor>#ffff00</mBgColor>
									<mSoundFile></mSoundFile>
									<colorTriggerFgColor>#000000</colorTriggerFgColor>
									<colorTriggerBgColor>#000000</colorTriggerBgColor>
									<regexCodeList>
										<string>return isPrompt()</string>
										<string>^(\w+) uses</string>
									</regexCodeList>
									<regexCodePropertyList>
										<integer>4</integer>
										<integer>1</integer>
									</regexCodePropertyList>
								</Trigger>
							</Trigger>
							<Trigger isActive="yes" isFolder="no" isTempTrigger="no" isMultiline="no" isPerlSlashGOption="no" isColorizerTrigger="no" isFilterTrigger="no" isSoundTrigger="no" isColorTrigger="no" isColorTriggerFg="no" isColorTriggerBg="no">
								<name>Secondary blurry vision Proc</name>
								<script>if matches[2] == snd.target then
	snd.target_got("blurry vision")
	snd.last_aff = "blurry vision"
end</script>
								<triggerType>0</triggerType>
								<conditonLineDelta>0</conditonLineDelta>
								<mStayOpen>0</mStayOpen>
								<mCommand></mCommand>
								<packageName></packageName>
								<mFgColor>#ff0000</mFgColor>
								<mBgColor>#ffff00</mBgColor>
								<mSoundFile></mSoundFile>
								<colorTriggerFgColor>#000000</colorTriggerFgColor>
								<colorTriggerBgColor>#000000</colorTriggerBgColor>
								<regexCodeList>
									<string>^(\w+) clenches (the )?\w+ eyes shut as blood covers (the )?\w+ vision.$</string>
								</regexCodeList>
								<regexCodePropertyList>
									<integer>1</integer>
								</regexCodePropertyList>
							</Trigger>
							<Trigger isActive="yes" isFolder="no" isTempTrigger="no" isMultiline="no" isPerlSlashGOption="no" isColorizerTrigger="no" isFilterTrigger="no" isSoundTrigger="no" isColorTrigger="no" isColorTriggerFg="no" isColorTriggerBg="no">
								<name>burnt_skin</name>
								<script>if matches[2] == snd.target then
	snd.target_got("burnt_skin")
end</script>
								<triggerType>0</triggerType>
								<conditonLineDelta>0</conditonLineDelta>
								<mStayOpen>0</mStayOpen>
								<mCommand></mCommand>
								<packageName></packageName>
								<mFgColor>#ff0000</mFgColor>
								<mBgColor>#ffff00</mBgColor>
								<mSoundFile></mSoundFile>
								<colorTriggerFgColor>#000000</colorTriggerFgColor>
								<colorTriggerBgColor>#000000</colorTriggerBgColor>
								<regexCodeList>
									<string>^The intense flame of the resin leaves (\w+) cringing as (the )?\w+ skin turns black.$</string>
								</regexCodeList>
								<regexCodePropertyList>
									<integer>1</integer>
								</regexCodePropertyList>
							</Trigger>
							<Trigger isActive="yes" isFolder="no" isTempTrigger="no" isMultiline="no" isPerlSlashGOption="no" isColorizerTrigger="no" isFilterTrigger="no" isSoundTrigger="no" isColorTrigger="no" isColorTriggerFg="no" isColorTriggerBg="no">
								<name>Reave</name>
								<script>if matches[3] == snd.target then
	if matches[2] == "shield" then
		snd.used.shield = false
	else
		snd.used.shield = false
		snd.used.rebounding = false
	end
end</script>
								<triggerType>0</triggerType>
								<conditonLineDelta>0</conditonLineDelta>
								<mStayOpen>0</mStayOpen>
								<mCommand></mCommand>
								<packageName></packageName>
								<mFgColor>#ff0000</mFgColor>
								<mBgColor>#ffff00</mBgColor>
								<mSoundFile></mSoundFile>
								<colorTriggerFgColor>#000000</colorTriggerFgColor>
								<colorTriggerBgColor>#000000</colorTriggerBgColor>
								<regexCodeList>
									<string>^\w+ uses? Dhuriv Reave \((.+)\) on (\w+)\.$</string>
								</regexCodeList>
								<regexCodePropertyList>
									<integer>1</integer>
								</regexCodePropertyList>
							</Trigger>
						</TriggerGroup>
						<TriggerGroup isActive="yes" isFolder="yes" isTempTrigger="no" isMultiline="no" isPerlSlashGOption="no" isColorizerTrigger="no" isFilterTrigger="no" isSoundTrigger="no" isColorTrigger="no" isColorTriggerFg="no" isColorTriggerBg="no">
							<name>Wayfarer</name>
							<script></script>
							<triggerType>0</triggerType>
							<conditonLineDelta>0</conditonLineDelta>
							<mStayOpen>0</mStayOpen>
							<mCommand></mCommand>
							<packageName></packageName>
							<mFgColor>#ff0000</mFgColor>
							<mBgColor>#ffff00</mBgColor>
							<mSoundFile></mSoundFile>
							<colorTriggerFgColor>#000000</colorTriggerFgColor>
							<colorTriggerBgColor>#000000</colorTriggerBgColor>
							<regexCodeList />
							<regexCodePropertyList />
							<Trigger isActive="yes" isFolder="no" isTempTrigger="no" isMultiline="yes" isPerlSlashGOption="no" isColorizerTrigger="no" isFilterTrigger="no" isSoundTrigger="no" isColorTrigger="no" isColorTriggerFg="no" isColorTriggerBg="no">
								<name>Tenacity attacks</name>
								<script>snd.last_aff = ""
snd.last_affs = {}
if snd.toggles.atkecho then
 deleteLine()
 if multimatches[1][4] == "you" then
  snd.got_hit(string.lower(multimatches[1][3]), multimatches[1][2])
 else
  snd.third_hit(string.lower(multimatches[1][3]), multimatches[1][2], multimatches[1][4])
 end
end
if multimatches[1][4] == snd.target then
 if multimatches[1][3] == "Bash" then
  if snd.checkAff("hearing") then
	 snd.target_got("dizziness")
	 snd.last_aff = "dizziness"
	else
	 snd.target_got("hearing")
	 snd.last_aff = "hearing"
	end
 elseif multimatches[1][3] == "Slaughter" then
  if #snd.maybe_affs &gt;= 1 then
   aff = ""
   for i in pairs(snd.effects) do
    if snd.effects[i] == snd.maybe_affs[1] then
     aff = i
    end
   end
   if aff ~= "" then
    snd.target_got(aff)
    table.remove(snd.maybe_affs, 1)
	 end
  end
  if #snd.maybe_affs &gt;= 1 then
   aff = ""
   for i in pairs(snd.effects) do
    if snd.effects[i] == snd.maybe_affs[1] then
     aff = i
    end
   end
   if aff ~= "" then
    snd.target_got(aff)
    table.remove(snd.maybe_affs, 1)
	 end
  end
	elseif multimatches[1][3] == "Lacerate" then
    if not snd.checkAff("haemophilia") then
      snd.target_got("haemophilia")
      snd.last_aff = "haemophilia"
     end
  elseif multimatches[1][3] == "Carve" then
		if not snd.checkAff("vomiting") then
      snd.target_got("vomiting")
      snd.last_aff = "vomiting"
    end
 elseif multimatches[1][3] == "Lob" or multimatches[1][3] == "Chop" or multimatches[1][3] == "Assault" or multimatches[1][3] == "Cripple" then
  if #snd.maybe_affs &gt;= 1 then
   aff = ""
   for i in pairs(snd.effects) do
    if snd.effects[i] == snd.maybe_affs[1] then
     aff = i
    end
   end
   if aff ~= "" then
    snd.target_got(aff)
    table.remove(snd.maybe_affs, 1)
	 end
  end
 end
end</script>
								<triggerType>0</triggerType>
								<conditonLineDelta>2</conditonLineDelta>
								<mStayOpen>10</mStayOpen>
								<mCommand></mCommand>
								<packageName></packageName>
								<mFgColor>#ff0000</mFgColor>
								<mBgColor>#ffff00</mBgColor>
								<mSoundFile></mSoundFile>
								<colorTriggerFgColor>#000000</colorTriggerFgColor>
								<colorTriggerBgColor>#000000</colorTriggerBgColor>
								<regexCodeList>
									<string>^(\w+) uses? Tenacity (\w+) on (\w+)\.$</string>
									<string>1</string>
									<string>^(.*)$</string>
								</regexCodeList>
								<regexCodePropertyList>
									<integer>1</integer>
									<integer>5</integer>
									<integer>1</integer>
								</regexCodePropertyList>
								<Trigger isActive="yes" isFolder="no" isTempTrigger="no" isMultiline="no" isPerlSlashGOption="no" isColorizerTrigger="no" isFilterTrigger="no" isSoundTrigger="no" isColorTrigger="no" isColorTriggerFg="no" isColorTriggerBg="no">
									<name>undo tenacity attacks</name>
									<script>if snd.last_aff ~= "" and snd.target == matches[2] then
 snd.target_cured(snd.last_aff)
end</script>
									<triggerType>0</triggerType>
									<conditonLineDelta>0</conditonLineDelta>
									<mStayOpen>0</mStayOpen>
									<mCommand></mCommand>
									<packageName></packageName>
									<mFgColor>#ff0000</mFgColor>
									<mBgColor>#ffff00</mBgColor>
									<mSoundFile></mSoundFile>
									<colorTriggerFgColor>#000000</colorTriggerFgColor>
									<colorTriggerBgColor>#000000</colorTriggerBgColor>
									<regexCodeList>
										<string>^Stepping quickly out of the way, (\w+) dodges the attack\.$</string>
										<string>^The attack rebounds back onto (\w+)\!$</string>
										<string>^(\w+) parries the attack on (.*) with a deft maneuver\.$</string>
										<string>^(\w+) guards the attack on (.*)\.$</string>
										<string>^You discern that (\w+) has resisted the (the )?\w+ affliction\.$</string>
										<string>^A reflection of (\w+) blinks out of existence\.$</string>
										<string>^With a free hand, (\w+) fends off the attack on (the )?\w+ (.+)\.$</string>
									</regexCodeList>
									<regexCodePropertyList>
										<integer>1</integer>
										<integer>1</integer>
										<integer>1</integer>
										<integer>1</integer>
										<integer>1</integer>
										<integer>1</integer>
										<integer>1</integer>
									</regexCodePropertyList>
								</Trigger>
								<Trigger isActive="yes" isFolder="no" isTempTrigger="no" isMultiline="no" isPerlSlashGOption="no" isColorizerTrigger="no" isFilterTrigger="no" isSoundTrigger="no" isColorTrigger="no" isColorTriggerFg="no" isColorTriggerBg="no">
									<name>tenacity attack end</name>
									<script>setTriggerStayOpen("Tenacity attacks", 0)</script>
									<triggerType>0</triggerType>
									<conditonLineDelta>0</conditonLineDelta>
									<mStayOpen>0</mStayOpen>
									<mCommand></mCommand>
									<packageName></packageName>
									<mFgColor>#ff0000</mFgColor>
									<mBgColor>#ffff00</mBgColor>
									<mSoundFile></mSoundFile>
									<colorTriggerFgColor>#000000</colorTriggerFgColor>
									<colorTriggerBgColor>#000000</colorTriggerBgColor>
									<regexCodeList>
										<string>return isPrompt()</string>
										<string>^(\w+) uses</string>
									</regexCodeList>
									<regexCodePropertyList>
										<integer>4</integer>
										<integer>1</integer>
									</regexCodePropertyList>
								</Trigger>
							</Trigger>
							<Trigger isActive="yes" isFolder="no" isTempTrigger="no" isMultiline="no" isPerlSlashGOption="no" isColorizerTrigger="no" isFilterTrigger="no" isSoundTrigger="no" isColorTrigger="no" isColorTriggerFg="no" isColorTriggerBg="no">
								<name>tenacity cripple</name>
								<script>local basic_limb_affs = {
["left leg"] = "a broken left leg",
["right leg"] = "a broken right leg",
["left arm"] = "a broken left arm",
["right arm"] = "a broken right arm",
}
if matches[2] == snd.target then
 snd.target_got(basic_limb_affs[matches[4]])
end</script>
								<triggerType>0</triggerType>
								<conditonLineDelta>0</conditonLineDelta>
								<mStayOpen>0</mStayOpen>
								<mCommand></mCommand>
								<packageName></packageName>
								<mFgColor>#ff0000</mFgColor>
								<mBgColor>#ffff00</mBgColor>
								<mSoundFile></mSoundFile>
								<colorTriggerFgColor>#000000</colorTriggerFgColor>
								<colorTriggerBgColor>#000000</colorTriggerBgColor>
								<regexCodeList>
									<string>^(\w+)'s (left leg|right leg|left arm|right arm) is badly crippled under the handaxe.$</string>
									<string>^(\w+)('s|') (.+) breaks in half.$</string>
								</regexCodeList>
								<regexCodePropertyList>
									<integer>1</integer>
									<integer>1</integer>
								</regexCodePropertyList>
							</Trigger>
							<Trigger isActive="yes" isFolder="no" isTempTrigger="no" isMultiline="no" isPerlSlashGOption="no" isColorizerTrigger="no" isFilterTrigger="no" isSoundTrigger="no" isColorTrigger="no" isColorTriggerFg="no" isColorTriggerBg="no">
								<name>Fury non boosted</name>
								<script>local fury_affs = {
["Warcry"] = "hearing",
["Threaten"] = "hatred",
["Shake"] = "weariness",
["Halt"] = "lethargy",
["Exhaust"] = "exhausted",
}

if matches[3] == snd.target then
		snd.target_got(fury_affs[matches[2]])
end</script>
								<triggerType>0</triggerType>
								<conditonLineDelta>0</conditonLineDelta>
								<mStayOpen>0</mStayOpen>
								<mCommand></mCommand>
								<packageName></packageName>
								<mFgColor>#ff0000</mFgColor>
								<mBgColor>#ffff00</mBgColor>
								<mSoundFile></mSoundFile>
								<colorTriggerFgColor>#000000</colorTriggerFgColor>
								<colorTriggerBgColor>#000000</colorTriggerBgColor>
								<regexCodeList>
									<string>^\w+ uses? Fury (Warcry|Threaten|Halt|Exhaust|Shake) on (\w+)\.$</string>
								</regexCodeList>
								<regexCodePropertyList>
									<integer>1</integer>
								</regexCodePropertyList>
							</Trigger>
							<Trigger isActive="yes" isFolder="no" isTempTrigger="no" isMultiline="no" isPerlSlashGOption="no" isColorizerTrigger="no" isFilterTrigger="no" isSoundTrigger="no" isColorTrigger="no" isColorTriggerFg="no" isColorTriggerBg="no">
								<name>Fury boosted</name>
								<script>local fury_affs = {
["Warcry"] = "hearing",
["Threaten"] = "hatred",
["Shake"] = "weariness",
["Halt"] = "lethargy",
["Exhaust"] = "exhausted",
["Shatter"] = "muddled"
}

if matches[3] == snd.target then
 	snd.target_got(fury_affs[matches[2]:gsub(" %b()","")])
	if matches[2]:find("Warcry") then 
		snd.target_got("ringing ears")
	elseif matches[2]:find("Threaten" ) then 
		snd.target_got("masochism")
    elseif matches[2]:find("Shatter") then
    tempTimer(3.5,[[snd.target_cured("muddled")]])
	end
end</script>
								<triggerType>0</triggerType>
								<conditonLineDelta>0</conditonLineDelta>
								<mStayOpen>0</mStayOpen>
								<mCommand></mCommand>
								<packageName></packageName>
								<mFgColor>#ff0000</mFgColor>
								<mBgColor>#ffff00</mBgColor>
								<mSoundFile></mSoundFile>
								<colorTriggerFgColor>#000000</colorTriggerFgColor>
								<colorTriggerBgColor>#000000</colorTriggerBgColor>
								<regexCodeList>
									<string>^\w+ uses? Fury (Warcry \(boosted\)|Threaten \(boosted\)|Halt \(boosted\)|Exhaust \(boosted\)|Shatter \(boosted\)|Shake \(boosted\)) on (\w+)\.$</string>
								</regexCodeList>
								<regexCodePropertyList>
									<integer>1</integer>
								</regexCodePropertyList>
							</Trigger>
							<Trigger isActive="yes" isFolder="no" isTempTrigger="no" isMultiline="no" isPerlSlashGOption="no" isColorizerTrigger="no" isFilterTrigger="no" isSoundTrigger="no" isColorTrigger="no" isColorTriggerFg="no" isColorTriggerBg="no">
								<name>Sweep</name>
								<script>if matches[2] == snd.target then
	snd.target_prone = true
end</script>
								<triggerType>0</triggerType>
								<conditonLineDelta>0</conditonLineDelta>
								<mStayOpen>0</mStayOpen>
								<mCommand></mCommand>
								<packageName></packageName>
								<mFgColor>#ff0000</mFgColor>
								<mBgColor>#ffff00</mBgColor>
								<mSoundFile></mSoundFile>
								<colorTriggerFgColor>#000000</colorTriggerFgColor>
								<colorTriggerBgColor>#000000</colorTriggerBgColor>
								<regexCodeList>
									<string>^\w+ uses? Tenacity Sweep on (\w+)\.$</string>
								</regexCodeList>
								<regexCodePropertyList>
									<integer>1</integer>
								</regexCodePropertyList>
							</Trigger>
							<Trigger isActive="yes" isFolder="no" isTempTrigger="no" isMultiline="no" isPerlSlashGOption="no" isColorizerTrigger="no" isFilterTrigger="no" isSoundTrigger="no" isColorTrigger="no" isColorTriggerFg="no" isColorTriggerBg="no">
								<name>return</name>
								<script>snd.assaulted_limb = ""</script>
								<triggerType>0</triggerType>
								<conditonLineDelta>0</conditonLineDelta>
								<mStayOpen>0</mStayOpen>
								<mCommand></mCommand>
								<packageName></packageName>
								<mFgColor>#ff0000</mFgColor>
								<mBgColor>#ffff00</mBgColor>
								<mSoundFile></mSoundFile>
								<colorTriggerFgColor>#000000</colorTriggerFgColor>
								<colorTriggerBgColor>#000000</colorTriggerBgColor>
								<regexCodeList>
									<string>^You catch your flying axe with your \w+ hand.</string>
								</regexCodeList>
								<regexCodePropertyList>
									<integer>1</integer>
								</regexCodePropertyList>
							</Trigger>
							<Trigger isActive="yes" isFolder="no" isTempTrigger="no" isMultiline="no" isPerlSlashGOption="no" isColorizerTrigger="no" isFilterTrigger="no" isSoundTrigger="no" isColorTrigger="no" isColorTriggerFg="no" isColorTriggerBg="no">
								<name>Assault</name>
								<script>if matches[2] == snd.target then
	snd.last_hit_limb = matches[3]
	snd.last_limb_dmg = 4
	snd.took_limb_dmg(matches[3], snd.last_limb_dmg)
	snd.assaulted_limb = matches[3]
end</script>
								<triggerType>0</triggerType>
								<conditonLineDelta>0</conditonLineDelta>
								<mStayOpen>0</mStayOpen>
								<mCommand></mCommand>
								<packageName></packageName>
								<mFgColor>#ff0000</mFgColor>
								<mBgColor>#ffff00</mBgColor>
								<mSoundFile></mSoundFile>
								<colorTriggerFgColor>#000000</colorTriggerFgColor>
								<colorTriggerBgColor>#000000</colorTriggerBgColor>
								<regexCodeList>
									<string>^With a quick overhand throw, you hurl a throwing axe at (\w+), the blade tearing into the flesh of \w+ (.+).$</string>
								</regexCodeList>
								<regexCodePropertyList>
									<integer>1</integer>
								</regexCodePropertyList>
							</Trigger>
							<Trigger isActive="yes" isFolder="no" isTempTrigger="no" isMultiline="no" isPerlSlashGOption="no" isColorizerTrigger="no" isFilterTrigger="no" isSoundTrigger="no" isColorTrigger="no" isColorTriggerFg="no" isColorTriggerBg="no">
								<name>Chop</name>
								<script>if matches[2] == snd.target then
  if snd.assaulted_limb == matches[3] then
	snd.last_hit_limb = matches[3]
	snd.last_limb_dmg = 11
	snd.took_limb_dmg(matches[3], snd.last_limb_dmg)
	snd.assaulted_limb = ""
  else

	snd.last_hit_limb = matches[3]
	snd.last_limb_dmg = 8
	snd.took_limb_dmg(matches[3], snd.last_limb_dmg)
	snd.assaulted_limb = ""
  end
end</script>
								<triggerType>0</triggerType>
								<conditonLineDelta>0</conditonLineDelta>
								<mStayOpen>0</mStayOpen>
								<mCommand></mCommand>
								<packageName></packageName>
								<mFgColor>#ff0000</mFgColor>
								<mBgColor>#ffff00</mBgColor>
								<mSoundFile></mSoundFile>
								<colorTriggerFgColor>#000000</colorTriggerFgColor>
								<colorTriggerBgColor>#000000</colorTriggerBgColor>
								<regexCodeList>
									<string>You chop into (\w+)'s (.+) with a powerful draw of a throwing axe, the blade sinking into \w+flesh.</string>
								</regexCodeList>
								<regexCodePropertyList>
									<integer>1</integer>
								</regexCodePropertyList>
							</Trigger>
						</TriggerGroup>
						<TriggerGroup isActive="yes" isFolder="yes" isTempTrigger="no" isMultiline="no" isPerlSlashGOption="no" isColorizerTrigger="no" isFilterTrigger="no" isSoundTrigger="no" isColorTrigger="no" isColorTriggerFg="no" isColorTriggerBg="no">
							<name>Weapon Hits</name>
							<script></script>
							<triggerType>0</triggerType>
							<conditonLineDelta>0</conditonLineDelta>
							<mStayOpen>0</mStayOpen>
							<mCommand></mCommand>
							<packageName></packageName>
							<mFgColor>#ff0000</mFgColor>
							<mBgColor>#ffff00</mBgColor>
							<mSoundFile></mSoundFile>
							<colorTriggerFgColor>#000000</colorTriggerFgColor>
							<colorTriggerBgColor>#000000</colorTriggerBgColor>
							<regexCodeList />
							<regexCodePropertyList />
							<Trigger isActive="yes" isFolder="no" isTempTrigger="no" isMultiline="no" isPerlSlashGOption="no" isColorizerTrigger="no" isFilterTrigger="no" isSoundTrigger="no" isColorTrigger="no" isColorTriggerFg="no" isColorTriggerBg="no">
								<name>longsword attacks</name>
								<script>if matches[1]:find("longsword") then
	snd.onHit()
end</script>
								<triggerType>0</triggerType>
								<conditonLineDelta>0</conditonLineDelta>
								<mStayOpen>0</mStayOpen>
								<mCommand></mCommand>
								<packageName></packageName>
								<mFgColor>#ff0000</mFgColor>
								<mBgColor>#ffff00</mBgColor>
								<mSoundFile></mSoundFile>
								<colorTriggerFgColor>#000000</colorTriggerFgColor>
								<colorTriggerBgColor>#000000</colorTriggerBgColor>
								<regexCodeList>
									<string>^Advancing with a quick step, (the )?\w+ twists .+ into (.+)\.$</string>
									<string>^\w+ punctures (.+) with a swift jab of .+\.$</string>
									<string>^\w+ scores (.+) deeply with a blow from .+\.$</string>
									<string>^\w+ catches (.+) with an upswing of .+\.$</string>
									<string>^\w+ wounds (.+) with a wide strike of .+\.$</string>
									<string>^\w+ messily hacks into (.+) with .+\.$</string>
									<string>^\w+ attacks, ripping a furrow in (.+) with .+\.$</string>
									<string>^\w+ lays (.+) open with a descending chop from .+\.$</string>
									<string>^\w+ cruelly stabs .+ deep into (.+)\.$</string>
									<string>^\w+ slices across (.+) with the edge of .+\.$</string>
									<string>^\w+ wounds (.+) with a diagonal swipe of .+\.$</string>
									<string>^\w+ neatly slashes (.+) with .+\.$</string>
								</regexCodeList>
								<regexCodePropertyList>
									<integer>1</integer>
									<integer>1</integer>
									<integer>1</integer>
									<integer>1</integer>
									<integer>1</integer>
									<integer>1</integer>
									<integer>1</integer>
									<integer>1</integer>
									<integer>1</integer>
									<integer>1</integer>
									<integer>1</integer>
									<integer>1</integer>
								</regexCodePropertyList>
							</Trigger>
							<Trigger isActive="yes" isFolder="no" isTempTrigger="no" isMultiline="no" isPerlSlashGOption="no" isColorizerTrigger="no" isFilterTrigger="no" isSoundTrigger="no" isColorTrigger="no" isColorTriggerFg="no" isColorTriggerBg="no">
								<name>shortsword attacks</name>
								<script>if matches[1]:find("shortsword") then
	snd.onHit()
end</script>
								<triggerType>0</triggerType>
								<conditonLineDelta>0</conditonLineDelta>
								<mStayOpen>0</mStayOpen>
								<mCommand></mCommand>
								<packageName></packageName>
								<mFgColor>#ff0000</mFgColor>
								<mBgColor>#ffff00</mBgColor>
								<mSoundFile></mSoundFile>
								<colorTriggerFgColor>#000000</colorTriggerFgColor>
								<colorTriggerBgColor>#000000</colorTriggerBgColor>
								<regexCodeList>
									<string>^\w+ carves into (\w+) with .+\.$</string>
									<string>^Thrusting .+ forward, (the )?\w+ skewers (\w+)\.$</string>
									<string>^With a sharp pass of .+, (the )?\w+ scores (\w+)\.$</string>
									<string>^Bringing about .+, (the )?\w+ slashes into (\w+)\.$</string>
									<string>^\w+ hacks open (\w+) with .+\.$</string>
									<string>^Slicing sideways with .+, (the )?\w+ cuts into (\w+)\.$</string>
									<string>^Cutting with precision, (the )?\w+ strikes (\w+) with .+\.$</string>
									<string>^\w+ lacerates (\w+) with a swing of .+\.$</string>
									<string>^\w+ steps in quickly, wounding (\w+) with .+\.$</string>
									<string>^\w+ swipe .+ across (\w+), gashing (the )?\w+\.$</string>
									<string>^Lunging in, (the )?\w+ stabs (\w+) with .+\.$</string>
									<string>^\w+ punctures (\w+) with a quick jab of .+\.$</string>
								</regexCodeList>
								<regexCodePropertyList>
									<integer>1</integer>
									<integer>1</integer>
									<integer>1</integer>
									<integer>1</integer>
									<integer>1</integer>
									<integer>1</integer>
									<integer>1</integer>
									<integer>1</integer>
									<integer>1</integer>
									<integer>1</integer>
									<integer>1</integer>
									<integer>1</integer>
								</regexCodePropertyList>
							</Trigger>
							<Trigger isActive="yes" isFolder="no" isTempTrigger="no" isMultiline="no" isPerlSlashGOption="no" isColorizerTrigger="no" isFilterTrigger="no" isSoundTrigger="no" isColorTrigger="no" isColorTriggerFg="no" isColorTriggerBg="no">
								<name>falchion</name>
								<script>if matches[1]:find("falchion") then
	snd.onHit()
end</script>
								<triggerType>0</triggerType>
								<conditonLineDelta>0</conditonLineDelta>
								<mStayOpen>0</mStayOpen>
								<mCommand></mCommand>
								<packageName></packageName>
								<mFgColor>#ff0000</mFgColor>
								<mBgColor>#ffff00</mBgColor>
								<mSoundFile></mSoundFile>
								<colorTriggerFgColor>#000000</colorTriggerFgColor>
								<colorTriggerBgColor>#000000</colorTriggerBgColor>
								<regexCodeList>
									<string>^\w+ neatly pierces (\w+) with .+\.$</string>
									<string>^\w+ gashes open (\w+) with a flick of .+\.$</string>
									<string>^With a sharp jab, (the )?\w+ buries .+ into (\w+)\.$</string>
									<string>^\w+ quickly strikes (\w+) with .+\.$</string>
									<string>^\w+ drives .+ into (\w+) with a quick thrust\.$</string>
									<string>^\w+ lacerates (\w+) with a swing of .+\.$</string>
								</regexCodeList>
								<regexCodePropertyList>
									<integer>1</integer>
									<integer>1</integer>
									<integer>1</integer>
									<integer>1</integer>
									<integer>1</integer>
									<integer>1</integer>
								</regexCodePropertyList>
							</Trigger>
							<Trigger isActive="yes" isFolder="no" isTempTrigger="no" isMultiline="no" isPerlSlashGOption="no" isColorizerTrigger="no" isFilterTrigger="no" isSoundTrigger="no" isColorTrigger="no" isColorTriggerFg="no" isColorTriggerBg="no">
								<name>dirk dstab</name>
								<script>snd.onHit()
</script>
								<triggerType>0</triggerType>
								<conditonLineDelta>0</conditonLineDelta>
								<mStayOpen>0</mStayOpen>
								<mCommand></mCommand>
								<packageName></packageName>
								<mFgColor>#ff0000</mFgColor>
								<mBgColor>#ffff00</mBgColor>
								<mSoundFile></mSoundFile>
								<colorTriggerFgColor>#000000</colorTriggerFgColor>
								<colorTriggerBgColor>#000000</colorTriggerBgColor>
								<regexCodeList>
									<string>^Lunging in, (the )?\w+ sticks (\w+) with .+\.$</string>
									<string>^\w+ drives .+ into (\w+) with a vicious stab\.$</string>
									<string>^\w+ jabs (\w+) with .+\.$</string>
									<string>^Deftly twirling the weapon in (the )?\w+ hand, (the )?\w+ jabs (the )?\w+ with it once more\.$</string>
									<string>^\w+ neatly skewers (\w+) with a stab from .+\.$</string>
								</regexCodeList>
								<regexCodePropertyList>
									<integer>1</integer>
									<integer>1</integer>
									<integer>1</integer>
									<integer>1</integer>
									<integer>1</integer>
								</regexCodePropertyList>
							</Trigger>
							<Trigger isActive="yes" isFolder="no" isTempTrigger="no" isMultiline="no" isPerlSlashGOption="no" isColorizerTrigger="no" isFilterTrigger="no" isSoundTrigger="no" isColorTrigger="no" isColorTriggerFg="no" isColorTriggerBg="no">
								<name>trident attacks</name>
								<script>if matches[1]:find("trident") then
	snd.onHit()
end</script>
								<triggerType>0</triggerType>
								<conditonLineDelta>0</conditonLineDelta>
								<mStayOpen>0</mStayOpen>
								<mCommand></mCommand>
								<packageName></packageName>
								<mFgColor>#ff0000</mFgColor>
								<mBgColor>#ffff00</mBgColor>
								<mSoundFile></mSoundFile>
								<colorTriggerFgColor>#000000</colorTriggerFgColor>
								<colorTriggerBgColor>#000000</colorTriggerBgColor>
								<regexCodeList>
									<string>^\w+ slashes into (\w+) wickedly with .+\.$</string>
									<string>^\w+ rams .+ hard into (\w+)\.$</string>
									<string>^\w+ jaggedly rends (\w+) with .+\.$</string>
									<string>^\w+ gouges into (\w+) with .+ prongs\.$</string>
									<string>^\w+ deeply punctures (\w+) with .+\.$</string>
									<string>^\w+ sharply jabs (\w+) with .+\.$</string>
								</regexCodeList>
								<regexCodePropertyList>
									<integer>1</integer>
									<integer>1</integer>
									<integer>1</integer>
									<integer>1</integer>
									<integer>1</integer>
									<integer>1</integer>
								</regexCodePropertyList>
							</Trigger>
							<Trigger isActive="yes" isFolder="no" isTempTrigger="no" isMultiline="no" isPerlSlashGOption="no" isColorizerTrigger="no" isFilterTrigger="no" isSoundTrigger="no" isColorTrigger="no" isColorTriggerFg="no" isColorTriggerBg="no">
								<name>sarissa attacks</name>
								<script>if matches[1]:find("sarissa") then
	snd.onHit()
end</script>
								<triggerType>0</triggerType>
								<conditonLineDelta>0</conditonLineDelta>
								<mStayOpen>0</mStayOpen>
								<mCommand></mCommand>
								<packageName></packageName>
								<mFgColor>#ff0000</mFgColor>
								<mBgColor>#ffff00</mBgColor>
								<mSoundFile></mSoundFile>
								<colorTriggerFgColor>#000000</colorTriggerFgColor>
								<colorTriggerBgColor>#000000</colorTriggerBgColor>
								<regexCodeList>
									<string>^\w+ quickly strikes (\w+) with .+\.$</string>
								</regexCodeList>
								<regexCodePropertyList>
									<integer>1</integer>
								</regexCodePropertyList>
							</Trigger>
							<Trigger isActive="yes" isFolder="no" isTempTrigger="no" isMultiline="no" isPerlSlashGOption="no" isColorizerTrigger="no" isFilterTrigger="no" isSoundTrigger="no" isColorTrigger="no" isColorTriggerFg="no" isColorTriggerBg="no">
								<name>broadsword attacks</name>
								<script>if matches[1]:find("bastard") then
	snd.onHit()
end</script>
								<triggerType>0</triggerType>
								<conditonLineDelta>0</conditonLineDelta>
								<mStayOpen>0</mStayOpen>
								<mCommand></mCommand>
								<packageName></packageName>
								<mFgColor>#ff0000</mFgColor>
								<mBgColor>#ffff00</mBgColor>
								<mSoundFile></mSoundFile>
								<colorTriggerFgColor>#000000</colorTriggerFgColor>
								<colorTriggerBgColor>#000000</colorTriggerBgColor>
								<regexCodeList>
									<string>^\w+ slashes hard into (\w+) with .+\.$</string>
									<string>^\w+ shears across (\w+) with the wide edge of .+\.$</string>
									<string>^\w+ plows into (\w+) with a powerful jab of .+\.$</string>
									<string>^\w+ presses in, ripping (\w+) asunder with .+\.$</string>
									<string>^\w+ gouges (\w+) with a powerful stroke of .+\.$</string>
									<string>^\w+ slams the end of .+ deep into (\w+)\.$</string>
									<string>^\w+ bites into (\w+) with a solid swipe of .+\.$</string>
									<string>^\w+ rends (\w+) mercilessly with a blow from .+\.$</string>
									<string>^\w+ batters (\w+) with a strong upswing of .+\.$</string>
								</regexCodeList>
								<regexCodePropertyList>
									<integer>1</integer>
									<integer>1</integer>
									<integer>1</integer>
									<integer>1</integer>
									<integer>1</integer>
									<integer>1</integer>
									<integer>1</integer>
									<integer>1</integer>
									<integer>1</integer>
								</regexCodePropertyList>
							</Trigger>
							<Trigger isActive="yes" isFolder="no" isTempTrigger="no" isMultiline="no" isPerlSlashGOption="no" isColorizerTrigger="no" isFilterTrigger="no" isSoundTrigger="no" isColorTrigger="no" isColorTriggerFg="no" isColorTriggerBg="no">
								<name>battleaxe attacks</name>
								<script>if matches[1]:find("battleaxe") then
	snd.onHit()
end</script>
								<triggerType>0</triggerType>
								<conditonLineDelta>0</conditonLineDelta>
								<mStayOpen>0</mStayOpen>
								<mCommand></mCommand>
								<packageName></packageName>
								<mFgColor>#ff0000</mFgColor>
								<mBgColor>#ffff00</mBgColor>
								<mSoundFile></mSoundFile>
								<colorTriggerFgColor>#000000</colorTriggerFgColor>
								<colorTriggerBgColor>#000000</colorTriggerBgColor>
								<regexCodeList>
									<string>^.+ moves in a wicked blur as (the )?\w+ buries it in (\w+)\.$</string>
									<string>^Whirling .+ around (the )?\w+ body, (the )?\w+ chops fiercely into (\w+)\.$</string>
									<string>^Charging forward, (the )?\w+ hews into (\w+) with .+\.$</string>
									<string>^With a diagonal slash, (the )?\w+ cleaves into (\w+) with .+\.$</string>
									<string>^\w+ sweeps .+ before (the )?\w+, brutally carving into (\w+)\.$</string>
									<string>^Leaping in, (the )?\w+ rips (\w+) open with .+\.$</string>
									<string>^With a violent upward swing, (the )?\w+ mangles (\w+) with .+\.$</string>
									<string>^With an arcing blow, (the )?\w+ swing at (\w+) with .+\.$</string>
								</regexCodeList>
								<regexCodePropertyList>
									<integer>1</integer>
									<integer>1</integer>
									<integer>1</integer>
									<integer>1</integer>
									<integer>1</integer>
									<integer>1</integer>
									<integer>1</integer>
									<integer>1</integer>
								</regexCodePropertyList>
							</Trigger>
							<Trigger isActive="yes" isFolder="no" isTempTrigger="no" isMultiline="no" isPerlSlashGOption="no" isColorizerTrigger="no" isFilterTrigger="no" isSoundTrigger="no" isColorTrigger="no" isColorTriggerFg="no" isColorTriggerBg="no">
								<name>rapier attacks</name>
								<script>if matches[1]:find("rapier") then
	snd.onHit()
end</script>
								<triggerType>0</triggerType>
								<conditonLineDelta>0</conditonLineDelta>
								<mStayOpen>0</mStayOpen>
								<mCommand></mCommand>
								<packageName></packageName>
								<mFgColor>#ff0000</mFgColor>
								<mBgColor>#ffff00</mBgColor>
								<mSoundFile></mSoundFile>
								<colorTriggerFgColor>#000000</colorTriggerFgColor>
								<colorTriggerBgColor>#000000</colorTriggerBgColor>
								<regexCodeList>
									<string>^(\w+) drives .+ into (the )?\w+ with a quick thrust\.$</string>
									<string>^(\w+) nimbly cuts into (the )?\w+ with .+\.$</string>
									<string>^(\w+) neatly pierces (the )?\w+ with .+\.$</string>
									<string>^With a sharp jab, (\w+) buries .+ into (the )?\w+\.$</string>
									<string>^(\w+) gashes open (the )?\w+ with a flick of .+\.$</string>
									<string>^(\w+) lacerates (the )?\w+ with a swing of .+\.$</string>
								</regexCodeList>
								<regexCodePropertyList>
									<integer>1</integer>
									<integer>1</integer>
									<integer>1</integer>
									<integer>1</integer>
									<integer>1</integer>
									<integer>1</integer>
								</regexCodePropertyList>
							</Trigger>
							<Trigger isActive="yes" isFolder="no" isTempTrigger="no" isMultiline="no" isPerlSlashGOption="no" isColorizerTrigger="no" isFilterTrigger="no" isSoundTrigger="no" isColorTrigger="no" isColorTriggerFg="no" isColorTriggerBg="no">
								<name>flyssa attacks</name>
								<script>if matches[1]:find("flyssa") then
	snd.onHit()
end</script>
								<triggerType>0</triggerType>
								<conditonLineDelta>0</conditonLineDelta>
								<mStayOpen>0</mStayOpen>
								<mCommand></mCommand>
								<packageName></packageName>
								<mFgColor>#ff0000</mFgColor>
								<mBgColor>#ffff00</mBgColor>
								<mSoundFile></mSoundFile>
								<colorTriggerFgColor>#000000</colorTriggerFgColor>
								<colorTriggerBgColor>#000000</colorTriggerBgColor>
								<regexCodeList>
									<string>^(\w+) gashes open (the )?\w+ with a flick of .+\.$</string>
									<string>^(\w+) drives .+ into (the )?\w+ with a quick thrust\.$</string>
									<string>^(\w+) lacerates (the )?\w+ with a swing of .+\.$</string>
									<string>^(\w+) equickly strikes (the )?\w+ with .+\.$</string>
									<string>^(\w+) neatly pierces (the )?\w+ with .+\.$</string>
									<string>^With a sharp jab, (\w+) buries .+ into (the )?\w+\.$</string>
									<string>^(\w+) nimbly cuts into (the )?\w+ with .+\.$</string>
								</regexCodeList>
								<regexCodePropertyList>
									<integer>1</integer>
									<integer>1</integer>
									<integer>1</integer>
									<integer>1</integer>
									<integer>1</integer>
									<integer>1</integer>
									<integer>1</integer>
								</regexCodePropertyList>
							</Trigger>
							<Trigger isActive="yes" isFolder="no" isTempTrigger="no" isMultiline="no" isPerlSlashGOption="no" isColorizerTrigger="no" isFilterTrigger="no" isSoundTrigger="no" isColorTrigger="no" isColorTriggerFg="no" isColorTriggerBg="no">
								<name>spear attacks</name>
								<script>if matches[1]:find("spear") then
	snd.onHit()
end</script>
								<triggerType>0</triggerType>
								<conditonLineDelta>0</conditonLineDelta>
								<mStayOpen>0</mStayOpen>
								<mCommand></mCommand>
								<packageName></packageName>
								<mFgColor>#ff0000</mFgColor>
								<mBgColor>#ffff00</mBgColor>
								<mSoundFile></mSoundFile>
								<colorTriggerFgColor>#000000</colorTriggerFgColor>
								<colorTriggerBgColor>#000000</colorTriggerBgColor>
								<regexCodeList>
									<string>^\w+ throws (the )?\w+ weight behind .+, driving it into (\w+)\.$</string>
									<string>^\w+ punctures (\w+) with .+\.$</string>
									<string>^Thrusting forward, (the )?\w+ drives .+ into (\w+)\.$</string>
								</regexCodeList>
								<regexCodePropertyList>
									<integer>1</integer>
									<integer>1</integer>
									<integer>1</integer>
								</regexCodePropertyList>
							</Trigger>
							<Trigger isActive="yes" isFolder="no" isTempTrigger="no" isMultiline="no" isPerlSlashGOption="no" isColorizerTrigger="no" isFilterTrigger="no" isSoundTrigger="no" isColorTrigger="no" isColorTriggerFg="no" isColorTriggerBg="no">
								<name>scimitar attacks</name>
								<script>if matches[1]:find("scimitar") then
	snd.onHit()
end</script>
								<triggerType>0</triggerType>
								<conditonLineDelta>0</conditonLineDelta>
								<mStayOpen>0</mStayOpen>
								<mCommand></mCommand>
								<packageName></packageName>
								<mFgColor>#ff0000</mFgColor>
								<mBgColor>#ffff00</mBgColor>
								<mSoundFile></mSoundFile>
								<colorTriggerFgColor>#000000</colorTriggerFgColor>
								<colorTriggerBgColor>#000000</colorTriggerBgColor>
								<regexCodeList>
									<string>^(\w+) chops harshly into (the )?\w+ with .+\.$</string>
									<string>^(\w+) lunges in, rending (the )?\w+ with .+\.$</string>
									<string>^(\w+) carves up (the )?\w+ with .+\.$</string>
									<string>^(\w+) cuts sharply with .+, wounding (the )?\w+\.$</string>
									<string>^(\w+) scores (the )?\w+ with an agile jab of .+\.$</string>
									<string>^(\w+) thrusts with the point of .+, biting deeply into (the )?\w+\.$</string>
									<string>^(\w+) drives .+, gashing open (the )?\w+\.$</string>
									<string>^Throwing himself forward, (\w+) hacks into (the )?\w+ with .+\.$</string>
									<string>^(\w+) wickedly drags the curve of .+ across (the )?\w+\.$</string>
									<string>^(\w+) catches (the )?\w+ with an arcing swing of .+\.$</string>
									<string>^Angling .+, (\w+) viciously sticks (the )?\w+\.$</string>
								</regexCodeList>
								<regexCodePropertyList>
									<integer>1</integer>
									<integer>1</integer>
									<integer>1</integer>
									<integer>1</integer>
									<integer>1</integer>
									<integer>1</integer>
									<integer>1</integer>
									<integer>1</integer>
									<integer>1</integer>
									<integer>1</integer>
									<integer>1</integer>
								</regexCodePropertyList>
							</Trigger>
							<Trigger isActive="yes" isFolder="no" isTempTrigger="no" isMultiline="no" isPerlSlashGOption="no" isColorizerTrigger="no" isFilterTrigger="no" isSoundTrigger="no" isColorTrigger="no" isColorTriggerFg="no" isColorTriggerBg="no">
								<name>whip attacks</name>
								<script>snd.onHit()</script>
								<triggerType>0</triggerType>
								<conditonLineDelta>0</conditonLineDelta>
								<mStayOpen>0</mStayOpen>
								<mCommand></mCommand>
								<packageName></packageName>
								<mFgColor>#ff0000</mFgColor>
								<mBgColor>#ffff00</mBgColor>
								<mSoundFile></mSoundFile>
								<colorTriggerFgColor>#000000</colorTriggerFgColor>
								<colorTriggerBgColor>#000000</colorTriggerBgColor>
								<regexCodeList>
									<string>^(\w+) seems to jolt as (the )?\w+ flays the (shield|rebounding) defence from (the )?\w+\.$</string>
								</regexCodeList>
								<regexCodePropertyList>
									<integer>1</integer>
								</regexCodePropertyList>
							</Trigger>
							<Trigger isActive="yes" isFolder="no" isTempTrigger="no" isMultiline="no" isPerlSlashGOption="no" isColorizerTrigger="no" isFilterTrigger="no" isSoundTrigger="no" isColorTrigger="no" isColorTriggerFg="no" isColorTriggerBg="no">
								<name>finesse undo</name>
								<script>if matches[4] == snd.target then
  if #snd.last_affs &gt;= 1 then
    for i in pairs(snd.last_affs) do
    	snd.target_cured(snd.last_affs[i])
   	end
  end
end</script>
								<triggerType>0</triggerType>
								<conditonLineDelta>0</conditonLineDelta>
								<mStayOpen>0</mStayOpen>
								<mCommand></mCommand>
								<packageName></packageName>
								<mFgColor>#ff0000</mFgColor>
								<mBgColor>#ffff00</mBgColor>
								<mSoundFile></mSoundFile>
								<colorTriggerFgColor>#000000</colorTriggerFgColor>
								<colorTriggerBgColor>#000000</colorTriggerBgColor>
								<regexCodeList>
									<string>^(\w+) stops short as (the )?\w+ comes upon (\w+)'s rebounding aura and deftly pulls away.$</string>
								</regexCodeList>
								<regexCodePropertyList>
									<integer>1</integer>
								</regexCodePropertyList>
							</Trigger>
						</TriggerGroup>
						<TriggerGroup isActive="yes" isFolder="yes" isTempTrigger="no" isMultiline="no" isPerlSlashGOption="no" isColorizerTrigger="no" isFilterTrigger="no" isSoundTrigger="no" isColorTrigger="no" isColorTriggerFg="no" isColorTriggerBg="no">
							<name>3p uncalled affs</name>
							<script></script>
							<triggerType>0</triggerType>
							<conditonLineDelta>0</conditonLineDelta>
							<mStayOpen>0</mStayOpen>
							<mCommand></mCommand>
							<packageName></packageName>
							<mFgColor>#ff0000</mFgColor>
							<mBgColor>#ffff00</mBgColor>
							<mSoundFile></mSoundFile>
							<colorTriggerFgColor>#000000</colorTriggerFgColor>
							<colorTriggerBgColor>#000000</colorTriggerBgColor>
							<regexCodeList />
							<regexCodePropertyList />
							<Trigger isActive="yes" isFolder="no" isTempTrigger="no" isMultiline="no" isPerlSlashGOption="no" isColorizerTrigger="no" isFilterTrigger="no" isSoundTrigger="no" isColorTrigger="no" isColorTriggerFg="no" isColorTriggerBg="no">
								<name>Epilepsy</name>
								<script>if matches[2] == snd.target then
  if not snd.checkAff("epilepsy") then 
		snd.target_got("epilepsy")
	end
end</script>
								<triggerType>0</triggerType>
								<conditonLineDelta>0</conditonLineDelta>
								<mStayOpen>0</mStayOpen>
								<mCommand></mCommand>
								<packageName></packageName>
								<mFgColor>#ff0000</mFgColor>
								<mBgColor>#ffff00</mBgColor>
								<mSoundFile></mSoundFile>
								<colorTriggerFgColor>#000000</colorTriggerFgColor>
								<colorTriggerBgColor>#000000</colorTriggerBgColor>
								<regexCodeList>
									<string>^(\w+) begins to jerk and shake violently, foaming at the mouth.$</string>
									<string>^(\w+) begins to shake wildly.$</string>
								</regexCodeList>
								<regexCodePropertyList>
									<integer>1</integer>
									<integer>1</integer>
								</regexCodePropertyList>
							</Trigger>
							<Trigger isActive="yes" isFolder="no" isTempTrigger="no" isMultiline="no" isPerlSlashGOption="no" isColorizerTrigger="no" isFilterTrigger="no" isSoundTrigger="no" isColorTrigger="no" isColorTriggerFg="no" isColorTriggerBg="no">
								<name>berserking</name>
								<script>if matches[2] == snd.target then
	if not snd.checkAff("berserking") then 
		snd.target_got("berserking")
	end
end</script>
								<triggerType>0</triggerType>
								<conditonLineDelta>0</conditonLineDelta>
								<mStayOpen>0</mStayOpen>
								<mCommand></mCommand>
								<packageName></packageName>
								<mFgColor>#ff0000</mFgColor>
								<mBgColor>#ffff00</mBgColor>
								<mSoundFile></mSoundFile>
								<colorTriggerFgColor>#000000</colorTriggerFgColor>
								<colorTriggerBgColor>#000000</colorTriggerBgColor>
								<regexCodeList>
									<string>^(\w+) begins to fume at the mouth and turns bright red.$</string>
									<string>^(\w+) grabs your arm and begins to chew, drooling all the while.$</string>
								</regexCodeList>
								<regexCodePropertyList>
									<integer>1</integer>
									<integer>1</integer>
								</regexCodePropertyList>
							</Trigger>
							<Trigger isActive="yes" isFolder="no" isTempTrigger="no" isMultiline="no" isPerlSlashGOption="no" isColorizerTrigger="no" isFilterTrigger="no" isSoundTrigger="no" isColorTrigger="no" isColorTriggerFg="no" isColorTriggerBg="no">
								<name>loneliness</name>
								<script>if matches[2] == snd.target then
	if not snd.checkAff("loneliness") then 
		snd.target_got("loneliness")
	end
end</script>
								<triggerType>0</triggerType>
								<conditonLineDelta>0</conditonLineDelta>
								<mStayOpen>0</mStayOpen>
								<mCommand></mCommand>
								<packageName></packageName>
								<mFgColor>#ff0000</mFgColor>
								<mBgColor>#ffff00</mBgColor>
								<mSoundFile></mSoundFile>
								<colorTriggerFgColor>#000000</colorTriggerFgColor>
								<colorTriggerBgColor>#000000</colorTriggerBgColor>
								<regexCodeList>
									<string>^(\w+) glances nervously around the room.$</string>
								</regexCodeList>
								<regexCodePropertyList>
									<integer>1</integer>
								</regexCodePropertyList>
							</Trigger>
							<Trigger isActive="yes" isFolder="no" isTempTrigger="no" isMultiline="no" isPerlSlashGOption="no" isColorizerTrigger="no" isFilterTrigger="no" isSoundTrigger="no" isColorTrigger="no" isColorTriggerFg="no" isColorTriggerBg="no">
								<name>vertigo</name>
								<script>if matches[2] == snd.target then
  if not snd.checkAff("vertigo") then 
		snd.target_got("vertigo")
	end
end
</script>
								<triggerType>0</triggerType>
								<conditonLineDelta>0</conditonLineDelta>
								<mStayOpen>0</mStayOpen>
								<mCommand></mCommand>
								<packageName></packageName>
								<mFgColor>#ff0000</mFgColor>
								<mBgColor>#ffff00</mBgColor>
								<mSoundFile></mSoundFile>
								<colorTriggerFgColor>#000000</colorTriggerFgColor>
								<colorTriggerBgColor>#000000</colorTriggerBgColor>
								<regexCodeList>
									<string>^(\w+) looks around at the ground longingly.$</string>
								</regexCodeList>
								<regexCodePropertyList>
									<integer>1</integer>
								</regexCodePropertyList>
							</Trigger>
							<Trigger isActive="yes" isFolder="no" isTempTrigger="no" isMultiline="no" isPerlSlashGOption="no" isColorizerTrigger="no" isFilterTrigger="no" isSoundTrigger="no" isColorTrigger="no" isColorTriggerFg="no" isColorTriggerBg="no">
								<name>pacifism</name>
								<script>if matches[2] == snd.target then
  if not snd.checkAff("pacifism") then 
		snd.target_got("pacifism")
	end
end</script>
								<triggerType>0</triggerType>
								<conditonLineDelta>0</conditonLineDelta>
								<mStayOpen>0</mStayOpen>
								<mCommand></mCommand>
								<packageName></packageName>
								<mFgColor>#ff0000</mFgColor>
								<mBgColor>#ffff00</mBgColor>
								<mSoundFile></mSoundFile>
								<colorTriggerFgColor>#000000</colorTriggerFgColor>
								<colorTriggerBgColor>#000000</colorTriggerBgColor>
								<regexCodeList>
									<string>^(\w+) smiles, a look of radiant peace spread across (the )?\w+ features.$</string>
								</regexCodeList>
								<regexCodePropertyList>
									<integer>1</integer>
								</regexCodePropertyList>
							</Trigger>
							<Trigger isActive="yes" isFolder="no" isTempTrigger="no" isMultiline="no" isPerlSlashGOption="no" isColorizerTrigger="no" isFilterTrigger="no" isSoundTrigger="no" isColorTrigger="no" isColorTriggerFg="no" isColorTriggerBg="no">
								<name>deafness</name>
								<script>if matches[2] == snd.target then
  if not snd.checkAff("deafness") then 
		snd.target_got("deafness")
	end
end</script>
								<triggerType>0</triggerType>
								<conditonLineDelta>0</conditonLineDelta>
								<mStayOpen>0</mStayOpen>
								<mCommand></mCommand>
								<packageName></packageName>
								<mFgColor>#ff0000</mFgColor>
								<mBgColor>#ffff00</mBgColor>
								<mSoundFile></mSoundFile>
								<colorTriggerFgColor>#000000</colorTriggerFgColor>
								<colorTriggerBgColor>#000000</colorTriggerBgColor>
								<regexCodeList>
									<string>^(\w+) clutches (the )?\w+ ears, attempting to block out an unheard noise.$</string>
									<string>^The lion head upon your chimera suddenly opens its maw and lets forth a mighty roar at (\w+), stunning (the )?\w+ with its power.$</string>
									<string>^The lion head upon your chimera lets forth a powerful roar at (\w+), but (the )?\w+ appears unfazed by the attack.$</string>
								</regexCodeList>
								<regexCodePropertyList>
									<integer>1</integer>
									<integer>1</integer>
									<integer>1</integer>
								</regexCodePropertyList>
							</Trigger>
							<Trigger isActive="yes" isFolder="no" isTempTrigger="no" isMultiline="no" isPerlSlashGOption="no" isColorizerTrigger="no" isFilterTrigger="no" isSoundTrigger="no" isColorTrigger="no" isColorTriggerFg="no" isColorTriggerBg="no">
								<name>Chill/Freezing</name>
								<script>if snd.toggles.atkecho then
 deleteLine()
 snd.message("Chilled: "..matches[2]..".")
end
if matches[2] == snd.target then
 if snd.checkAff("frozen") then
 
 elseif snd.checkAff("shivering") then
  snd.target_got("frozen")
 elseif snd.checkAff("no_caloric") then
  snd.target_got("shivering")
 else
  snd.target_got("no_caloric")
 end
end</script>
								<triggerType>0</triggerType>
								<conditonLineDelta>0</conditonLineDelta>
								<mStayOpen>0</mStayOpen>
								<mCommand></mCommand>
								<packageName></packageName>
								<mFgColor>#ff0000</mFgColor>
								<mBgColor>#ffff00</mBgColor>
								<mSoundFile></mSoundFile>
								<colorTriggerFgColor>#000000</colorTriggerFgColor>
								<colorTriggerBgColor>#000000</colorTriggerBgColor>
								<regexCodeList>
									<string>^Frost appears on (\w+)'s flesh as an inky shadeling reaches out to touch (the )?\w+.$</string>
									<string>^You send the cold of the grave to freeze (\w+).$</string>
									<string>^(\w+) shivers slightly as the fist strikes (the )?\w+.$</string>
									<string>^You reach out and grab (\w+)'s arm, chilling (the )?\w+ to the bone.$</string>
									<string>^(\w+) suddenly shudders as (the )?\w+ is struck by a sudden chill.$</string>
									<string>^At your command, a vicious warhound howls with frosty breath, chilling (\w+)'s wounds.$</string>
								</regexCodeList>
								<regexCodePropertyList>
									<integer>1</integer>
									<integer>1</integer>
									<integer>1</integer>
									<integer>1</integer>
									<integer>1</integer>
									<integer>1</integer>
								</regexCodePropertyList>
							</Trigger>
							<Trigger isActive="yes" isFolder="no" isTempTrigger="no" isMultiline="no" isPerlSlashGOption="no" isColorizerTrigger="no" isFilterTrigger="no" isSoundTrigger="no" isColorTrigger="no" isColorTriggerFg="no" isColorTriggerBg="no">
								<name>paresis</name>
								<script>if matches[2] == snd.target then
  if not snd.checkAff("paresis") then 
		snd.target_got("paresis")
	end
end</script>
								<triggerType>0</triggerType>
								<conditonLineDelta>0</conditonLineDelta>
								<mStayOpen>0</mStayOpen>
								<mCommand></mCommand>
								<packageName></packageName>
								<mFgColor>#ff0000</mFgColor>
								<mBgColor>#ffff00</mBgColor>
								<mSoundFile></mSoundFile>
								<colorTriggerFgColor>#000000</colorTriggerFgColor>
								<colorTriggerBgColor>#000000</colorTriggerBgColor>
								<regexCodeList>
									<string>^(\w+) suddenly stiffens as a ghast brushes (the )?\w+ with a finger.$</string>
									<string>^(\w+) stiffens suddenly, (the )?\w+ features frozen in a visage of agony.$</string>
									<string>^An undead .* wildly grabs (\w+)'s wrist within (the )?\w+ gnarled fingers.$</string>
									<string>^(\w+) fights (the )?\w+ seizing muscles with reckless abandon.$</string>
									<string>^(\w+)'s? limbs go limp under (the )?\w+ allergies, leaving (the )?\w+ unable to move\.$</string>
								</regexCodeList>
								<regexCodePropertyList>
									<integer>1</integer>
									<integer>1</integer>
									<integer>1</integer>
									<integer>1</integer>
									<integer>1</integer>
								</regexCodePropertyList>
							</Trigger>
							<Trigger isActive="yes" isFolder="no" isTempTrigger="no" isMultiline="no" isPerlSlashGOption="no" isColorizerTrigger="no" isFilterTrigger="no" isSoundTrigger="no" isColorTrigger="no" isColorTriggerFg="no" isColorTriggerBg="no">
								<name>ablazeit</name>
								<script>if matches[2] == snd.target then
  if not snd.checkAff("ablaze") then 
		snd.target_got("ablaze")
	end
end</script>
								<triggerType>0</triggerType>
								<conditonLineDelta>0</conditonLineDelta>
								<mStayOpen>0</mStayOpen>
								<mCommand></mCommand>
								<packageName></packageName>
								<mFgColor>#ff0000</mFgColor>
								<mBgColor>#ffff00</mBgColor>
								<mSoundFile></mSoundFile>
								<colorTriggerFgColor>#000000</colorTriggerFgColor>
								<colorTriggerBgColor>#000000</colorTriggerBgColor>
								<regexCodeList>
									<string>^Flames leap around (\w+), charring his flesh.$</string>
									<string>^Flames spew from a firelord, engulfing (\w+) and consumes (the )?\w+ flesh.$</string>
									<string>^Flames spew in from the .*, engulfing (\w+) and consuming (the )?\w+ flesh.$</string>
									<string>^Flames spew from a firelord, engulfing (\w+) and consuming (the )?\w+ flesh.$</string>
								</regexCodeList>
								<regexCodePropertyList>
									<integer>1</integer>
									<integer>1</integer>
									<integer>1</integer>
									<integer>1</integer>
								</regexCodePropertyList>
							</Trigger>
							<Trigger isActive="yes" isFolder="no" isTempTrigger="no" isMultiline="no" isPerlSlashGOption="no" isColorizerTrigger="no" isFilterTrigger="no" isSoundTrigger="no" isColorTrigger="no" isColorTriggerFg="no" isColorTriggerBg="no">
								<name>clumsiness</name>
								<script>if matches[2] == snd.target then
  if not snd.checkAff("clumsiness") then 
		snd.target_got("clumsiness")
	end
end</script>
								<triggerType>0</triggerType>
								<conditonLineDelta>0</conditonLineDelta>
								<mStayOpen>0</mStayOpen>
								<mCommand></mCommand>
								<packageName></packageName>
								<mFgColor>#ff0000</mFgColor>
								<mBgColor>#ffff00</mBgColor>
								<mSoundFile></mSoundFile>
								<colorTriggerFgColor>#000000</colorTriggerFgColor>
								<colorTriggerBgColor>#000000</colorTriggerBgColor>
								<regexCodeList>
									<string>^(\w+) strikes clumsily at (the )?\w+ with .*, completely missing.$</string>
								</regexCodeList>
								<regexCodePropertyList>
									<integer>1</integer>
								</regexCodePropertyList>
							</Trigger>
							<Trigger isActive="yes" isFolder="no" isTempTrigger="no" isMultiline="no" isPerlSlashGOption="no" isColorizerTrigger="no" isFilterTrigger="no" isSoundTrigger="no" isColorTrigger="no" isColorTriggerFg="no" isColorTriggerBg="no">
								<name>Impatience</name>
								<script>if matches[2] == snd.target then
  if not snd.checkAff("impatience") then 
		snd.target_got("impatience")
	end
end</script>
								<triggerType>0</triggerType>
								<conditonLineDelta>0</conditonLineDelta>
								<mStayOpen>0</mStayOpen>
								<mCommand></mCommand>
								<packageName></packageName>
								<mFgColor>#ff0000</mFgColor>
								<mBgColor>#ffff00</mBgColor>
								<mSoundFile></mSoundFile>
								<colorTriggerFgColor>#000000</colorTriggerFgColor>
								<colorTriggerBgColor>#000000</colorTriggerBgColor>
								<regexCodeList>
									<string>^(\w+) shuffles (the )?\w+ feet in boredom.$</string>
								</regexCodeList>
								<regexCodePropertyList>
									<integer>1</integer>
								</regexCodePropertyList>
							</Trigger>
							<Trigger isActive="yes" isFolder="no" isTempTrigger="no" isMultiline="no" isPerlSlashGOption="no" isColorizerTrigger="no" isFilterTrigger="no" isSoundTrigger="no" isColorTrigger="no" isColorTriggerFg="no" isColorTriggerBg="no">
								<name>webbed</name>
								<script>if matches[2] == snd.target then
 snd.target_got("webbed")
end</script>
								<triggerType>0</triggerType>
								<conditonLineDelta>0</conditonLineDelta>
								<mStayOpen>0</mStayOpen>
								<mCommand></mCommand>
								<packageName></packageName>
								<mFgColor>#ff0000</mFgColor>
								<mBgColor>#ffff00</mBgColor>
								<mSoundFile></mSoundFile>
								<colorTriggerFgColor>#000000</colorTriggerFgColor>
								<colorTriggerBgColor>#000000</colorTriggerBgColor>
								<regexCodeList>
									<string>^Sticky strands of webbing spray out from .* to cover (\w+)\.$</string>
									<string>^Deftly spinning a web of silk, .+ traps (\w+) within it\.$</string>
									<string>^Sticky strands of webbing spray out to cover (\w+) as you touch the web tattoo\.$</string>
									<string>^\w+ uses? Relic Entangle on (\w+)\.$</string>
									<string>^\w+ uses? Relic Webspray on (\w+)\.$</string>
								</regexCodeList>
								<regexCodePropertyList>
									<integer>1</integer>
									<integer>1</integer>
									<integer>1</integer>
									<integer>1</integer>
									<integer>1</integer>
								</regexCodePropertyList>
							</Trigger>
							<Trigger isActive="yes" isFolder="no" isTempTrigger="no" isMultiline="no" isPerlSlashGOption="no" isColorizerTrigger="no" isFilterTrigger="no" isSoundTrigger="no" isColorTrigger="no" isColorTriggerFg="no" isColorTriggerBg="no">
								<name>Deadly flames</name>
								<script>if matches[2] == snd.target then
  if snd.checkAff("ablaze") then
    snd.target_got("crispy")
  end
end</script>
								<triggerType>0</triggerType>
								<conditonLineDelta>0</conditonLineDelta>
								<mStayOpen>0</mStayOpen>
								<mCommand></mCommand>
								<packageName></packageName>
								<mFgColor>#ff0000</mFgColor>
								<mBgColor>#ffff00</mBgColor>
								<mSoundFile></mSoundFile>
								<colorTriggerFgColor>#000000</colorTriggerFgColor>
								<colorTriggerBgColor>#000000</colorTriggerBgColor>
								<regexCodeList>
									<string>^Deadly flames leap around (\w+), charring (the )?\w+ flesh.$</string>
								</regexCodeList>
								<regexCodePropertyList>
									<integer>1</integer>
								</regexCodePropertyList>
							</Trigger>
							<Trigger isActive="yes" isFolder="no" isTempTrigger="no" isMultiline="no" isPerlSlashGOption="no" isColorizerTrigger="no" isFilterTrigger="no" isSoundTrigger="no" isColorTrigger="no" isColorTriggerFg="no" isColorTriggerBg="no">
								<name>fireblock proc</name>
								<script>if matches[2] == snd.target then
	snd.target_cured("ablaze")
end</script>
								<triggerType>0</triggerType>
								<conditonLineDelta>0</conditonLineDelta>
								<mStayOpen>0</mStayOpen>
								<mCommand></mCommand>
								<packageName></packageName>
								<mFgColor>#ff0000</mFgColor>
								<mBgColor>#ffff00</mBgColor>
								<mSoundFile></mSoundFile>
								<colorTriggerFgColor>#000000</colorTriggerFgColor>
								<colorTriggerBgColor>#000000</colorTriggerBgColor>
								<regexCodeList>
									<string>^(\w+)'s shield of flame repels the fiery attack.</string>
								</regexCodeList>
								<regexCodePropertyList>
									<integer>1</integer>
								</regexCodePropertyList>
							</Trigger>
							<Trigger isActive="yes" isFolder="no" isTempTrigger="no" isMultiline="no" isPerlSlashGOption="no" isColorizerTrigger="no" isFilterTrigger="no" isSoundTrigger="no" isColorTrigger="no" isColorTriggerFg="no" isColorTriggerBg="no">
								<name>Failed attacks to remove writhes</name>
								<script>if snd.target == matches[2] or matches[1]:find("unable") then
	snd.target_cured("impaled")
  snd.target_cured("transfixed")
  snd.target_cured("webbed")
  snd.target_cured("thighlock")
  snd.target_cured("armpitlock")
  snd.target_cured("necklock")
  snd.jawlocked = false
	snd.target_impaled = false
end
</script>
								<triggerType>0</triggerType>
								<conditonLineDelta>0</conditonLineDelta>
								<mStayOpen>0</mStayOpen>
								<mCommand></mCommand>
								<packageName></packageName>
								<mFgColor>#ff0000</mFgColor>
								<mBgColor>#ffff00</mBgColor>
								<mSoundFile></mSoundFile>
								<colorTriggerFgColor>#000000</colorTriggerFgColor>
								<colorTriggerBgColor>#000000</colorTriggerBgColor>
								<regexCodeList>
									<string>^\w+ uses Dhuriv Impale \(failure\) on (\w+)\.$</string>
									<string>^Your target is not prone; you are unable to overwhelm them.$</string>
								</regexCodeList>
								<regexCodePropertyList>
									<integer>1</integer>
									<integer>1</integer>
								</regexCodePropertyList>
							</Trigger>
							<Trigger isActive="yes" isFolder="no" isTempTrigger="no" isMultiline="no" isPerlSlashGOption="no" isColorizerTrigger="no" isFilterTrigger="no" isSoundTrigger="no" isColorTrigger="no" isColorTriggerFg="no" isColorTriggerBg="no">
								<name>Broken Leg Check</name>
								<script>if matches[2] == snd.target then
 snd.target_got("a broken left leg")
 snd.target_got("a broken right leg")
 snd.target_prone = true
end</script>
								<triggerType>0</triggerType>
								<conditonLineDelta>0</conditonLineDelta>
								<mStayOpen>0</mStayOpen>
								<mCommand></mCommand>
								<packageName></packageName>
								<mFgColor>#ff0000</mFgColor>
								<mBgColor>#ffff00</mBgColor>
								<mSoundFile></mSoundFile>
								<colorTriggerFgColor>#000000</colorTriggerFgColor>
								<colorTriggerBgColor>#000000</colorTriggerBgColor>
								<regexCodeList>
									<string>^(\w+)'s broken legs cause (the )?\w+ to fall to the ground in a heap.$</string>
									<string>^Your hear two loud snaps and see (\w+) fall to the ground.$</string>
								</regexCodeList>
								<regexCodePropertyList>
									<integer>1</integer>
									<integer>1</integer>
								</regexCodePropertyList>
							</Trigger>
							<Trigger isActive="yes" isFolder="no" isTempTrigger="no" isMultiline="no" isPerlSlashGOption="no" isColorizerTrigger="no" isFilterTrigger="no" isSoundTrigger="no" isColorTrigger="no" isColorTriggerFg="no" isColorTriggerBg="no">
								<name>Vomiting extra line</name>
								<script>if matches[2] == snd.target then
 snd.target_got("vomiting")
end</script>
								<triggerType>0</triggerType>
								<conditonLineDelta>0</conditonLineDelta>
								<mStayOpen>0</mStayOpen>
								<mCommand></mCommand>
								<packageName></packageName>
								<mFgColor>#ff0000</mFgColor>
								<mBgColor>#ffff00</mBgColor>
								<mSoundFile></mSoundFile>
								<colorTriggerFgColor>#000000</colorTriggerFgColor>
								<colorTriggerBgColor>#000000</colorTriggerBgColor>
								<regexCodeList>
									<string>^(\w+) doubles over, vomiting violently.$</string>
								</regexCodeList>
								<regexCodePropertyList>
									<integer>1</integer>
								</regexCodePropertyList>
							</Trigger>
							<Trigger isActive="yes" isFolder="no" isTempTrigger="no" isMultiline="no" isPerlSlashGOption="no" isColorizerTrigger="no" isFilterTrigger="no" isSoundTrigger="no" isColorTrigger="no" isColorTriggerFg="no" isColorTriggerBg="no">
								<name>Zealot indifference</name>
								<script>if matches[2] == snd.target then
    snd.target_got("indifference")
end</script>
								<triggerType>0</triggerType>
								<conditonLineDelta>0</conditonLineDelta>
								<mStayOpen>0</mStayOpen>
								<mCommand></mCommand>
								<packageName></packageName>
								<mFgColor>#ff0000</mFgColor>
								<mBgColor>#ffff00</mBgColor>
								<mSoundFile></mSoundFile>
								<colorTriggerFgColor>#000000</colorTriggerFgColor>
								<colorTriggerBgColor>#000000</colorTriggerBgColor>
								<regexCodeList>
									<string>^(\w+)'s eyelids droop as .+ expression turns lax.$</string>
								</regexCodeList>
								<regexCodePropertyList>
									<integer>1</integer>
								</regexCodePropertyList>
							</Trigger>
						</TriggerGroup>
						<TriggerGroup isActive="yes" isFolder="yes" isTempTrigger="no" isMultiline="no" isPerlSlashGOption="no" isColorizerTrigger="no" isFilterTrigger="no" isSoundTrigger="no" isColorTrigger="no" isColorTriggerFg="no" isColorTriggerBg="no">
							<name>Vamp</name>
							<script></script>
							<triggerType>0</triggerType>
							<conditonLineDelta>0</conditonLineDelta>
							<mStayOpen>0</mStayOpen>
							<mCommand></mCommand>
							<packageName></packageName>
							<mFgColor>#ff0000</mFgColor>
							<mBgColor>#ffff00</mBgColor>
							<mSoundFile></mSoundFile>
							<colorTriggerFgColor>#000000</colorTriggerFgColor>
							<colorTriggerBgColor>#000000</colorTriggerBgColor>
							<regexCodeList />
							<regexCodePropertyList />
							<Trigger isActive="yes" isFolder="no" isTempTrigger="no" isMultiline="no" isPerlSlashGOption="no" isColorizerTrigger="no" isFilterTrigger="no" isSoundTrigger="no" isColorTrigger="no" isColorTriggerFg="no" isColorTriggerBg="no">
								<name>blood_curse</name>
								<script>if matches[3] == snd.target then
	if not snd.checkAff("blood_curse") then 
		snd.target_got("blood_curse")
	end
end</script>
								<triggerType>0</triggerType>
								<conditonLineDelta>0</conditonLineDelta>
								<mStayOpen>0</mStayOpen>
								<mCommand></mCommand>
								<packageName></packageName>
								<mFgColor>#ff0000</mFgColor>
								<mBgColor>#ffff00</mBgColor>
								<mSoundFile></mSoundFile>
								<colorTriggerFgColor>#000000</colorTriggerFgColor>
								<colorTriggerBgColor>#000000</colorTriggerBgColor>
								<regexCodeList>
									<string>^\w+ uses? Sanguis Curse on (\w+).$</string>
								</regexCodeList>
								<regexCodePropertyList>
									<integer>1</integer>
								</regexCodePropertyList>
							</Trigger>
							<Trigger isActive="yes" isFolder="no" isTempTrigger="no" isMultiline="no" isPerlSlashGOption="no" isColorizerTrigger="no" isFilterTrigger="no" isSoundTrigger="no" isColorTrigger="no" isColorTriggerFg="no" isColorTriggerBg="no">
								<name>Deadbreath</name>
								<script>if matches[2] == snd.target then
	if not snd.checkAff("slickness") then 
		snd.target_got("slickness")
	end
end</script>
								<triggerType>0</triggerType>
								<conditonLineDelta>0</conditonLineDelta>
								<mStayOpen>0</mStayOpen>
								<mCommand></mCommand>
								<packageName></packageName>
								<mFgColor>#ff0000</mFgColor>
								<mBgColor>#ffff00</mBgColor>
								<mSoundFile></mSoundFile>
								<colorTriggerFgColor>#000000</colorTriggerFgColor>
								<colorTriggerBgColor>#000000</colorTriggerBgColor>
								<regexCodeList>
									<string>^\w+ uses? Corpus Deadbreath on (\w+)\.$</string>
								</regexCodeList>
								<regexCodePropertyList>
									<integer>1</integer>
								</regexCodePropertyList>
							</Trigger>
							<Trigger isActive="yes" isFolder="no" isTempTrigger="no" isMultiline="no" isPerlSlashGOption="no" isColorizerTrigger="no" isFilterTrigger="no" isSoundTrigger="no" isColorTrigger="no" isColorTriggerFg="no" isColorTriggerBg="no">
								<name>spew</name>
								<script>if matches[2] == snd.target then
	snd.target_got("hearing")
	snd.target_got("sight")
end</script>
								<triggerType>0</triggerType>
								<conditonLineDelta>0</conditonLineDelta>
								<mStayOpen>0</mStayOpen>
								<mCommand></mCommand>
								<packageName></packageName>
								<mFgColor>#ff0000</mFgColor>
								<mBgColor>#ffff00</mBgColor>
								<mSoundFile></mSoundFile>
								<colorTriggerFgColor>#000000</colorTriggerFgColor>
								<colorTriggerBgColor>#000000</colorTriggerBgColor>
								<regexCodeList>
									<string>^\w+ uses? Sanguis Spew on (\w+)\.$</string>
								</regexCodeList>
								<regexCodePropertyList>
									<integer>1</integer>
								</regexCodePropertyList>
							</Trigger>
							<Trigger isActive="yes" isFolder="no" isTempTrigger="no" isMultiline="no" isPerlSlashGOption="no" isColorizerTrigger="no" isFilterTrigger="no" isSoundTrigger="no" isColorTrigger="no" isColorTriggerFg="no" isColorTriggerBg="no">
								<name>blood_poison</name>
								<script>if matches[2] == snd.target then
	if not snd.checkAff("blood_poison") then 
		snd.target_got("blood_poison")
	end
end</script>
								<triggerType>0</triggerType>
								<conditonLineDelta>0</conditonLineDelta>
								<mStayOpen>0</mStayOpen>
								<mCommand></mCommand>
								<packageName></packageName>
								<mFgColor>#ff0000</mFgColor>
								<mBgColor>#ffff00</mBgColor>
								<mSoundFile></mSoundFile>
								<colorTriggerFgColor>#000000</colorTriggerFgColor>
								<colorTriggerBgColor>#000000</colorTriggerBgColor>
								<regexCodeList>
									<string>^\w+ uses? Sanguis Blood Poison on (\w+).$</string>
								</regexCodeList>
								<regexCodePropertyList>
									<integer>1</integer>
								</regexCodePropertyList>
							</Trigger>
							<Trigger isActive="yes" isFolder="no" isTempTrigger="no" isMultiline="no" isPerlSlashGOption="no" isColorizerTrigger="no" isFilterTrigger="no" isSoundTrigger="no" isColorTrigger="no" isColorTriggerFg="no" isColorTriggerBg="no">
								<name>seduction</name>
								<script>if matches[2] == snd.target then
	if not snd.checkAff("seduction") then 
		snd.target_got("seduction")
	end
end</script>
								<triggerType>0</triggerType>
								<conditonLineDelta>0</conditonLineDelta>
								<mStayOpen>0</mStayOpen>
								<mCommand></mCommand>
								<packageName></packageName>
								<mFgColor>#ff0000</mFgColor>
								<mBgColor>#ffff00</mBgColor>
								<mSoundFile></mSoundFile>
								<colorTriggerFgColor>#000000</colorTriggerFgColor>
								<colorTriggerBgColor>#000000</colorTriggerBgColor>
								<regexCodeList>
									<string>^(\w+) staggers for a moment, clutching (the )?\w+ head.$</string>
								</regexCodeList>
								<regexCodePropertyList>
									<integer>1</integer>
								</regexCodePropertyList>
							</Trigger>
							<Trigger isActive="yes" isFolder="no" isTempTrigger="no" isMultiline="no" isPerlSlashGOption="no" isColorizerTrigger="no" isFilterTrigger="no" isSoundTrigger="no" isColorTrigger="no" isColorTriggerFg="no" isColorTriggerBg="no">
								<name>temptation</name>
								<script>if matches[2] == snd.target then
	if not snd.checkAff("temptation") then 
		snd.target_got("temptation")
	end
end</script>
								<triggerType>0</triggerType>
								<conditonLineDelta>0</conditonLineDelta>
								<mStayOpen>0</mStayOpen>
								<mCommand></mCommand>
								<packageName></packageName>
								<mFgColor>#ff0000</mFgColor>
								<mBgColor>#ffff00</mBgColor>
								<mSoundFile></mSoundFile>
								<colorTriggerFgColor>#000000</colorTriggerFgColor>
								<colorTriggerBgColor>#000000</colorTriggerBgColor>
								<regexCodeList>
									<string>^(\w+) slumps, appearing physically weakened.$</string>
								</regexCodeList>
								<regexCodePropertyList>
									<integer>1</integer>
								</regexCodePropertyList>
							</Trigger>
							<Trigger isActive="yes" isFolder="no" isTempTrigger="no" isMultiline="no" isPerlSlashGOption="no" isColorizerTrigger="no" isFilterTrigger="no" isSoundTrigger="no" isColorTrigger="no" isColorTriggerFg="no" isColorTriggerBg="no">
								<name>3p Mentis</name>
								<script>local aff = matches[2]:lower()
if matches[3] == snd.target then
	if not snd.checkAff(aff) then
		snd.target_got(aff)
	end
end</script>
								<triggerType>0</triggerType>
								<conditonLineDelta>0</conditonLineDelta>
								<mStayOpen>0</mStayOpen>
								<mCommand></mCommand>
								<packageName></packageName>
								<mFgColor>#ff0000</mFgColor>
								<mBgColor>#ffff00</mBgColor>
								<mSoundFile></mSoundFile>
								<colorTriggerFgColor>#000000</colorTriggerFgColor>
								<colorTriggerBgColor>#000000</colorTriggerBgColor>
								<regexCodeList>
									<string>^\w+ uses Mentis Whisper (\w+) on (\w+).$</string>
								</regexCodeList>
								<regexCodePropertyList>
									<integer>1</integer>
								</regexCodePropertyList>
							</Trigger>
						</TriggerGroup>
						<TriggerGroup isActive="yes" isFolder="yes" isTempTrigger="no" isMultiline="no" isPerlSlashGOption="no" isColorizerTrigger="no" isFilterTrigger="no" isSoundTrigger="no" isColorTrigger="no" isColorTriggerFg="no" isColorTriggerBg="no">
							<name>Indorani</name>
							<script></script>
							<triggerType>0</triggerType>
							<conditonLineDelta>0</conditonLineDelta>
							<mStayOpen>0</mStayOpen>
							<mCommand></mCommand>
							<packageName></packageName>
							<mFgColor>#ff0000</mFgColor>
							<mBgColor>#ffff00</mBgColor>
							<mSoundFile></mSoundFile>
							<colorTriggerFgColor>#000000</colorTriggerFgColor>
							<colorTriggerBgColor>#000000</colorTriggerBgColor>
							<regexCodeList />
							<regexCodePropertyList />
							<TriggerGroup isActive="yes" isFolder="yes" isTempTrigger="no" isMultiline="no" isPerlSlashGOption="no" isColorizerTrigger="no" isFilterTrigger="no" isSoundTrigger="no" isColorTrigger="no" isColorTriggerFg="no" isColorTriggerBg="no">
								<name>Indorani ents</name>
								<script></script>
								<triggerType>0</triggerType>
								<conditonLineDelta>0</conditonLineDelta>
								<mStayOpen>0</mStayOpen>
								<mCommand></mCommand>
								<packageName></packageName>
								<mFgColor>#ff0000</mFgColor>
								<mBgColor>#ffff00</mBgColor>
								<mSoundFile></mSoundFile>
								<colorTriggerFgColor>#000000</colorTriggerFgColor>
								<colorTriggerBgColor>#000000</colorTriggerBgColor>
								<regexCodeList />
								<regexCodePropertyList />
								<Trigger isActive="yes" isFolder="no" isTempTrigger="no" isMultiline="no" isPerlSlashGOption="no" isColorizerTrigger="no" isFilterTrigger="no" isSoundTrigger="no" isColorTrigger="no" isColorTriggerFg="no" isColorTriggerBg="no">
									<name>Chimera ready</name>
									<script>snd.balance.chimera = true</script>
									<triggerType>0</triggerType>
									<conditonLineDelta>0</conditonLineDelta>
									<mStayOpen>0</mStayOpen>
									<mCommand></mCommand>
									<packageName></packageName>
									<mFgColor>#ff0000</mFgColor>
									<mBgColor>#ffff00</mBgColor>
									<mSoundFile></mSoundFile>
									<colorTriggerFgColor>#000000</colorTriggerFgColor>
									<colorTriggerBgColor>#000000</colorTriggerBgColor>
									<regexCodeList>
										<string>Your chimera paces in anticipation, ready to deliver another attack.</string>
										<string>You may order your chimera to attack once more.</string>
									</regexCodeList>
									<regexCodePropertyList>
										<integer>3</integer>
										<integer>3</integer>
									</regexCodePropertyList>
								</Trigger>
								<Trigger isActive="yes" isFolder="no" isTempTrigger="no" isMultiline="no" isPerlSlashGOption="no" isColorizerTrigger="no" isFilterTrigger="no" isSoundTrigger="no" isColorTrigger="no" isColorTriggerFg="no" isColorTriggerBg="no">
									<name>Chimera not ready</name>
									<script>snd.balance.chimera = false</script>
									<triggerType>0</triggerType>
									<conditonLineDelta>0</conditonLineDelta>
									<mStayOpen>0</mStayOpen>
									<mCommand></mCommand>
									<packageName></packageName>
									<mFgColor>#ff0000</mFgColor>
									<mBgColor>#ffff00</mBgColor>
									<mSoundFile></mSoundFile>
									<colorTriggerFgColor>#000000</colorTriggerFgColor>
									<colorTriggerBgColor>#000000</colorTriggerBgColor>
									<regexCodeList>
										<string>You chimera isn't ready to attack just yet.</string>
									</regexCodeList>
									<regexCodePropertyList>
										<integer>3</integer>
									</regexCodePropertyList>
								</Trigger>
								<Trigger isActive="yes" isFolder="no" isTempTrigger="no" isMultiline="no" isPerlSlashGOption="no" isColorizerTrigger="no" isFilterTrigger="no" isSoundTrigger="no" isColorTrigger="no" isColorTriggerFg="no" isColorTriggerBg="no">
									<name>Soulmaster</name>
									<script>snd.balance.soulmaster = false</script>
									<triggerType>0</triggerType>
									<conditonLineDelta>0</conditonLineDelta>
									<mStayOpen>0</mStayOpen>
									<mCommand></mCommand>
									<packageName></packageName>
									<mFgColor>#ff0000</mFgColor>
									<mBgColor>#ffff00</mBgColor>
									<mSoundFile></mSoundFile>
									<colorTriggerFgColor>#000000</colorTriggerFgColor>
									<colorTriggerBgColor>#000000</colorTriggerBgColor>
									<regexCodeList>
										<string>^You order the soulmaster entity to manipulate (\w+).$</string>
										<string>A soulmaster tells you, "I am unable to possess that soul right now, Master."</string>
										<string>^Your soulmaster is wrestling for control of (\w+)'s soul and cannot command or hallucinate at (the )?\w+ right now.$</string>
									</regexCodeList>
									<regexCodePropertyList>
										<integer>1</integer>
										<integer>3</integer>
										<integer>1</integer>
									</regexCodePropertyList>
								</Trigger>
								<Trigger isActive="yes" isFolder="no" isTempTrigger="no" isMultiline="no" isPerlSlashGOption="no" isColorizerTrigger="no" isFilterTrigger="no" isSoundTrigger="no" isColorTrigger="no" isColorTriggerFg="no" isColorTriggerBg="no">
									<name>Bubonis afflict enemy</name>
									<script>if matches[2] == snd.target then
	snd.target_got(matches[3])
end</script>
									<triggerType>0</triggerType>
									<conditonLineDelta>0</conditonLineDelta>
									<mStayOpen>0</mStayOpen>
									<mCommand></mCommand>
									<packageName></packageName>
									<mFgColor>#ff0000</mFgColor>
									<mBgColor>#ffff00</mBgColor>
									<mSoundFile></mSoundFile>
									<colorTriggerFgColor>#000000</colorTriggerFgColor>
									<colorTriggerBgColor>#000000</colorTriggerBgColor>
									<regexCodeList>
										<string>^Your bubonis has afflicted (\w+) with (.*).$</string>
									</regexCodeList>
									<regexCodePropertyList>
										<integer>1</integer>
									</regexCodePropertyList>
								</Trigger>
								<Trigger isActive="yes" isFolder="no" isTempTrigger="no" isMultiline="no" isPerlSlashGOption="no" isColorizerTrigger="no" isFilterTrigger="no" isSoundTrigger="no" isColorTrigger="no" isColorTriggerFg="no" isColorTriggerBg="no">
									<name>Soulmaster ready</name>
									<script>snd.balance.soulmaster = true</script>
									<triggerType>0</triggerType>
									<conditonLineDelta>0</conditonLineDelta>
									<mStayOpen>0</mStayOpen>
									<mCommand></mCommand>
									<packageName></packageName>
									<mFgColor>#ff0000</mFgColor>
									<mBgColor>#ffff00</mBgColor>
									<mSoundFile></mSoundFile>
									<colorTriggerFgColor>#000000</colorTriggerFgColor>
									<colorTriggerBgColor>#000000</colorTriggerBgColor>
									<regexCodeList>
										<string>^You sense that the soulmaster entity is in control of (\w+)'s being.$</string>
									</regexCodeList>
									<regexCodePropertyList>
										<integer>1</integer>
									</regexCodePropertyList>
								</Trigger>
								<Trigger isActive="no" isFolder="no" isTempTrigger="no" isMultiline="no" isPerlSlashGOption="no" isColorizerTrigger="no" isFilterTrigger="no" isSoundTrigger="no" isColorTrigger="no" isColorTriggerFg="no" isColorTriggerBg="no">
									<name>Insomnia strip enemy</name>
									<script></script>
									<triggerType>0</triggerType>
									<conditonLineDelta>0</conditonLineDelta>
									<mStayOpen>0</mStayOpen>
									<mCommand></mCommand>
									<packageName></packageName>
									<mFgColor>#ff0000</mFgColor>
									<mBgColor>#ffff00</mBgColor>
									<mSoundFile></mSoundFile>
									<colorTriggerFgColor>#000000</colorTriggerFgColor>
									<colorTriggerBgColor>#000000</colorTriggerBgColor>
									<regexCodeList>
										<string>^The chimera's dragon head exhales a cloud of gas at (\w+).$</string>
									</regexCodeList>
									<regexCodePropertyList>
										<integer>1</integer>
									</regexCodePropertyList>
								</Trigger>
								<Trigger isActive="yes" isFolder="no" isTempTrigger="no" isMultiline="no" isPerlSlashGOption="no" isColorizerTrigger="no" isFilterTrigger="no" isSoundTrigger="no" isColorTrigger="no" isColorTriggerFg="no" isColorTriggerBg="no">
									<name>Slime ready to attack</name>
									<script>snd.balance.envelop = true</script>
									<triggerType>0</triggerType>
									<conditonLineDelta>0</conditonLineDelta>
									<mStayOpen>0</mStayOpen>
									<mCommand></mCommand>
									<packageName></packageName>
									<mFgColor>#ff0000</mFgColor>
									<mBgColor>#ffff00</mBgColor>
									<mSoundFile></mSoundFile>
									<colorTriggerFgColor>#000000</colorTriggerFgColor>
									<colorTriggerBgColor>#000000</colorTriggerBgColor>
									<regexCodeList>
										<string>You may order your slime to envelop once more.</string>
									</regexCodeList>
									<regexCodePropertyList>
										<integer>3</integer>
									</regexCodePropertyList>
								</Trigger>
								<Trigger isActive="yes" isFolder="no" isTempTrigger="no" isMultiline="no" isPerlSlashGOption="no" isColorizerTrigger="no" isFilterTrigger="no" isSoundTrigger="no" isColorTrigger="no" isColorTriggerFg="no" isColorTriggerBg="no">
									<name>Slime enveloped used</name>
									<script>snd.balance.envelop = false</script>
									<triggerType>0</triggerType>
									<conditonLineDelta>0</conditonLineDelta>
									<mStayOpen>0</mStayOpen>
									<mCommand></mCommand>
									<packageName></packageName>
									<mFgColor>#ff0000</mFgColor>
									<mBgColor>#ffff00</mBgColor>
									<mSoundFile></mSoundFile>
									<colorTriggerFgColor>#000000</colorTriggerFgColor>
									<colorTriggerBgColor>#000000</colorTriggerBgColor>
									<regexCodeList>
										<string>^You use Domination Slime Envelop on (\w+).$</string>
									</regexCodeList>
									<regexCodePropertyList>
										<integer>1</integer>
									</regexCodePropertyList>
								</Trigger>
								<Trigger isActive="yes" isFolder="no" isTempTrigger="no" isMultiline="no" isPerlSlashGOption="no" isColorizerTrigger="no" isFilterTrigger="no" isSoundTrigger="no" isColorTrigger="no" isColorTriggerFg="no" isColorTriggerBg="no">
									<name>Slime Envelop finished</name>
									<script>snd.balance.envelop = false</script>
									<triggerType>0</triggerType>
									<conditonLineDelta>0</conditonLineDelta>
									<mStayOpen>0</mStayOpen>
									<mCommand></mCommand>
									<packageName></packageName>
									<mFgColor>#ff0000</mFgColor>
									<mBgColor>#ffff00</mBgColor>
									<mSoundFile></mSoundFile>
									<colorTriggerFgColor>#000000</colorTriggerFgColor>
									<colorTriggerBgColor>#000000</colorTriggerBgColor>
									<regexCodeList>
										<string>^The slime upon (\w+) shrinks into little more then an irritation.$</string>
									</regexCodeList>
									<regexCodePropertyList>
										<integer>1</integer>
									</regexCodePropertyList>
								</Trigger>
								<Trigger isActive="no" isFolder="no" isTempTrigger="no" isMultiline="no" isPerlSlashGOption="no" isColorizerTrigger="no" isFilterTrigger="no" isSoundTrigger="no" isColorTrigger="no" isColorTriggerFg="no" isColorTriggerBg="no">
									<name>Ranged doppleganger</name>
									<script></script>
									<triggerType>0</triggerType>
									<conditonLineDelta>0</conditonLineDelta>
									<mStayOpen>0</mStayOpen>
									<mCommand></mCommand>
									<packageName></packageName>
									<mFgColor>#ff0000</mFgColor>
									<mBgColor>#ffff00</mBgColor>
									<mSoundFile></mSoundFile>
									<colorTriggerFgColor>#000000</colorTriggerFgColor>
									<colorTriggerBgColor>#000000</colorTriggerBgColor>
									<regexCodeList>
										<string>^Your doppleganger has arrived at \'.*\'.$</string>
										<string>^\(Tells\): (the )?\w+ tells you, "I am already there, Master."$</string>
									</regexCodeList>
									<regexCodePropertyList>
										<integer>1</integer>
										<integer>1</integer>
									</regexCodePropertyList>
								</Trigger>
								<Trigger isActive="yes" isFolder="no" isTempTrigger="no" isMultiline="no" isPerlSlashGOption="no" isColorizerTrigger="no" isFilterTrigger="no" isSoundTrigger="no" isColorTrigger="no" isColorTriggerFg="no" isColorTriggerBg="no">
									<name>3P Stupidity</name>
									<script>if matches[2] == snd.target then
  if not snd.checkAff("stupidity") then 
		snd.target_got("stupidity")
	end
end</script>
									<triggerType>0</triggerType>
									<conditonLineDelta>0</conditonLineDelta>
									<mStayOpen>0</mStayOpen>
									<mCommand></mCommand>
									<packageName></packageName>
									<mFgColor>#ff0000</mFgColor>
									<mBgColor>#ffff00</mBgColor>
									<mSoundFile></mSoundFile>
									<colorTriggerFgColor>#000000</colorTriggerFgColor>
									<colorTriggerBgColor>#000000</colorTriggerBgColor>
									<regexCodeList>
										<string>^A glazed look descends over the features of (\w+).$</string>
									</regexCodeList>
									<regexCodePropertyList>
										<integer>1</integer>
									</regexCodePropertyList>
								</Trigger>
							</TriggerGroup>
							<TriggerGroup isActive="yes" isFolder="yes" isTempTrigger="no" isMultiline="no" isPerlSlashGOption="no" isColorizerTrigger="no" isFilterTrigger="no" isSoundTrigger="no" isColorTrigger="no" isColorTriggerFg="no" isColorTriggerBg="no">
								<name>Indorani shrivels galore</name>
								<script></script>
								<triggerType>0</triggerType>
								<conditonLineDelta>0</conditonLineDelta>
								<mStayOpen>0</mStayOpen>
								<mCommand></mCommand>
								<packageName></packageName>
								<mFgColor>#ff0000</mFgColor>
								<mBgColor>#ffff00</mBgColor>
								<mSoundFile></mSoundFile>
								<colorTriggerFgColor>#000000</colorTriggerFgColor>
								<colorTriggerBgColor>#000000</colorTriggerBgColor>
								<regexCodeList />
								<regexCodePropertyList />
								<Trigger isActive="yes" isFolder="no" isTempTrigger="no" isMultiline="no" isPerlSlashGOption="no" isColorizerTrigger="no" isFilterTrigger="no" isSoundTrigger="no" isColorTrigger="no" isColorTriggerFg="no" isColorTriggerBg="no">
									<name>Other 1P Shrivel</name>
									<script>local basic_limb_affs = {
["left leg"] = "a broken left leg",
["right leg"] = "a broken right leg",
["left arm"] = "a broken left arm",
["right arm"] = "a broken right arm",
}

if matches[3] == snd.target then
 snd.target_got(basic_limb_affs[matches[2]])
end</script>
									<triggerType>0</triggerType>
									<conditonLineDelta>0</conditonLineDelta>
									<mStayOpen>0</mStayOpen>
									<mCommand></mCommand>
									<packageName></packageName>
									<mFgColor>#ff0000</mFgColor>
									<mBgColor>#ffff00</mBgColor>
									<mSoundFile></mSoundFile>
									<colorTriggerFgColor>#000000</colorTriggerFgColor>
									<colorTriggerBgColor>#000000</colorTriggerBgColor>
									<regexCodeList>
										<string>^You reach out and stroke the (.*) of (\w+), and it withers away.$</string>
									</regexCodeList>
									<regexCodePropertyList>
										<integer>1</integer>
									</regexCodePropertyList>
								</Trigger>
								<Trigger isActive="yes" isFolder="no" isTempTrigger="no" isMultiline="no" isPerlSlashGOption="no" isColorizerTrigger="no" isFilterTrigger="no" isSoundTrigger="no" isColorTrigger="no" isColorTriggerFg="no" isColorTriggerBg="no">
									<name>Shrivel any further</name>
									<script>local basic_limb_affs = {
["left leg"] = "a broken left leg",
["right leg"] = "a broken right leg",
["left arm"] = "a broken left arm",
["right arm"] = "a broken right arm",
}

snd.target_got(basic_limb_affs[matches[2]])</script>
									<triggerType>0</triggerType>
									<conditonLineDelta>0</conditonLineDelta>
									<mStayOpen>0</mStayOpen>
									<mCommand></mCommand>
									<packageName></packageName>
									<mFgColor>#ff0000</mFgColor>
									<mBgColor>#ffff00</mBgColor>
									<mSoundFile></mSoundFile>
									<colorTriggerFgColor>#000000</colorTriggerFgColor>
									<colorTriggerBgColor>#000000</colorTriggerBgColor>
									<regexCodeList>
										<string>^You find that you cannot shrivel the (.*) any further.$</string>
									</regexCodeList>
									<regexCodePropertyList>
										<integer>1</integer>
									</regexCodePropertyList>
								</Trigger>
								<Trigger isActive="yes" isFolder="no" isTempTrigger="no" isMultiline="no" isPerlSlashGOption="no" isColorizerTrigger="no" isFilterTrigger="no" isSoundTrigger="no" isColorTrigger="no" isColorTriggerFg="no" isColorTriggerBg="no">
									<name>Main Shrivel</name>
									<script>local basic_limb_affs = {
["left leg"] = "a broken left leg",
["right leg"] = "a broken right leg",
["left arm"] = "a broken left arm",
["right arm"] = "a broken right arm",
}

if matches[2] == snd.target then
 snd.target_got(basic_limb_affs[matches[3]])
end</script>
									<triggerType>0</triggerType>
									<conditonLineDelta>0</conditonLineDelta>
									<mStayOpen>0</mStayOpen>
									<mCommand></mCommand>
									<packageName></packageName>
									<mFgColor>#ff0000</mFgColor>
									<mBgColor>#ffff00</mBgColor>
									<mSoundFile></mSoundFile>
									<colorTriggerFgColor>#000000</colorTriggerFgColor>
									<colorTriggerBgColor>#000000</colorTriggerBgColor>
									<regexCodeList>
										<string>^You touch (\w+)'s (.*), and it shrivels away.$</string>
										<string>^You reach out and grasp (\w+)'s (.*) in an iron grip, and it shrivels feebly under your necromantic might.$</string>
									</regexCodeList>
									<regexCodePropertyList>
										<integer>1</integer>
										<integer>1</integer>
									</regexCodePropertyList>
								</Trigger>
								<Trigger isActive="yes" isFolder="no" isTempTrigger="no" isMultiline="no" isPerlSlashGOption="no" isColorizerTrigger="no" isFilterTrigger="no" isSoundTrigger="no" isColorTrigger="no" isColorTriggerFg="no" isColorTriggerBg="no">
									<name>Legs already shriveled</name>
									<script>if matches[2] == snd.target then
		snd.target_got("a broken right leg")
		snd.target_got("a broken left leg")
end</script>
									<triggerType>0</triggerType>
									<conditonLineDelta>0</conditonLineDelta>
									<mStayOpen>0</mStayOpen>
									<mCommand></mCommand>
									<packageName></packageName>
									<mFgColor>#ff0000</mFgColor>
									<mBgColor>#ffff00</mBgColor>
									<mSoundFile></mSoundFile>
									<colorTriggerFgColor>#000000</colorTriggerFgColor>
									<colorTriggerBgColor>#000000</colorTriggerBgColor>
									<regexCodeList>
										<string>^You find that both of (\w+) legs are already shriveled.$</string>
									</regexCodeList>
									<regexCodePropertyList>
										<integer>1</integer>
									</regexCodePropertyList>
								</Trigger>
								<Trigger isActive="yes" isFolder="no" isTempTrigger="no" isMultiline="no" isPerlSlashGOption="no" isColorizerTrigger="no" isFilterTrigger="no" isSoundTrigger="no" isColorTrigger="no" isColorTriggerFg="no" isColorTriggerBg="no">
									<name>Limb already shriveled</name>
									<script>local basic_limb_affs = {
["left leg"] = "a broken left leg",
["right leg"] = "a broken right leg",
["left arm"] = "a broken left arm",
["right arm"] = "a broken right arm",
}

if matches[3] == snd.target then
 snd.target_got(basic_limb_affs[matches[3]])
end</script>
									<triggerType>0</triggerType>
									<conditonLineDelta>0</conditonLineDelta>
									<mStayOpen>0</mStayOpen>
									<mCommand></mCommand>
									<packageName></packageName>
									<mFgColor>#ff0000</mFgColor>
									<mBgColor>#ffff00</mBgColor>
									<mSoundFile></mSoundFile>
									<colorTriggerFgColor>#000000</colorTriggerFgColor>
									<colorTriggerBgColor>#000000</colorTriggerBgColor>
									<regexCodeList>
										<string>^You find that (\w+)'s (.*) is already shriveled.$</string>
									</regexCodeList>
									<regexCodePropertyList>
										<integer>1</integer>
									</regexCodePropertyList>
								</Trigger>
								<Trigger isActive="yes" isFolder="no" isTempTrigger="no" isMultiline="no" isPerlSlashGOption="no" isColorizerTrigger="no" isFilterTrigger="no" isSoundTrigger="no" isColorTrigger="no" isColorTriggerFg="no" isColorTriggerBg="no">
									<name>Arms shriveled</name>
									<script>if matches[2] == snd.target then
		snd.target_got("a broken right arm")
		snd.target_got("a broken left arm")
end</script>
									<triggerType>0</triggerType>
									<conditonLineDelta>0</conditonLineDelta>
									<mStayOpen>0</mStayOpen>
									<mCommand></mCommand>
									<packageName></packageName>
									<mFgColor>#ff0000</mFgColor>
									<mBgColor>#ffff00</mBgColor>
									<mSoundFile></mSoundFile>
									<colorTriggerFgColor>#000000</colorTriggerFgColor>
									<colorTriggerBgColor>#000000</colorTriggerBgColor>
									<regexCodeList>
										<string>^You find that both of (\w+) arms are already shriveled.$</string>
									</regexCodeList>
									<regexCodePropertyList>
										<integer>1</integer>
									</regexCodePropertyList>
								</Trigger>
							</TriggerGroup>
							<TriggerGroup isActive="yes" isFolder="yes" isTempTrigger="no" isMultiline="no" isPerlSlashGOption="no" isColorizerTrigger="no" isFilterTrigger="no" isSoundTrigger="no" isColorTrigger="no" isColorTriggerFg="no" isColorTriggerBg="no">
								<name>Indorani misc</name>
								<script></script>
								<triggerType>0</triggerType>
								<conditonLineDelta>0</conditonLineDelta>
								<mStayOpen>0</mStayOpen>
								<mCommand></mCommand>
								<packageName></packageName>
								<mFgColor>#ff0000</mFgColor>
								<mBgColor>#ffff00</mBgColor>
								<mSoundFile></mSoundFile>
								<colorTriggerFgColor>#000000</colorTriggerFgColor>
								<colorTriggerBgColor>#000000</colorTriggerBgColor>
								<regexCodeList />
								<regexCodePropertyList />
								<Trigger isActive="yes" isFolder="no" isTempTrigger="no" isMultiline="no" isPerlSlashGOption="no" isColorizerTrigger="no" isFilterTrigger="no" isSoundTrigger="no" isColorTrigger="no" isColorTriggerFg="no" isColorTriggerBg="no">
									<name>Death aura</name>
									<script>if matches[2] == snd.target then
	local aff = matches[3]
	if aff == "dizzy" then
		snd.target_got("dizziness")
	elseif aff == "deranged" then
		snd.target_got("dementia")
	elseif aff == "ill" then
		snd.target_got("vomiting")
	end
end</script>
									<triggerType>0</triggerType>
									<conditonLineDelta>0</conditonLineDelta>
									<mStayOpen>0</mStayOpen>
									<mCommand></mCommand>
									<packageName></packageName>
									<mFgColor>#ff0000</mFgColor>
									<mBgColor>#ffff00</mBgColor>
									<mSoundFile></mSoundFile>
									<colorTriggerFgColor>#000000</colorTriggerFgColor>
									<colorTriggerBgColor>#000000</colorTriggerBgColor>
									<regexCodeList>
										<string>^(\w+) appears (\w+) from your aura of death.$</string>
									</regexCodeList>
									<regexCodePropertyList>
										<integer>1</integer>
									</regexCodePropertyList>
								</Trigger>
								<Trigger isActive="yes" isFolder="no" isTempTrigger="no" isMultiline="no" isPerlSlashGOption="no" isColorizerTrigger="no" isFilterTrigger="no" isSoundTrigger="no" isColorTrigger="no" isColorTriggerFg="no" isColorTriggerBg="no">
									<name>Necromancy Chill</name>
									<script>if snd.toggles.atkecho then
 deleteLine()
 snd.message("Chilled: "..matches[2]..".")
end
if matches[2] == snd.target then
 if snd.checkAff("frozen") then
 
 elseif snd.checkAff("shivering") then
  snd.target_got("frozen")
 elseif snd.checkAff("no_caloric") then
  snd.target_got("shivering")
 else
  snd.target_got("no_caloric")
 end
end</script>
									<triggerType>0</triggerType>
									<conditonLineDelta>0</conditonLineDelta>
									<mStayOpen>0</mStayOpen>
									<mCommand></mCommand>
									<packageName></packageName>
									<mFgColor>#ff0000</mFgColor>
									<mBgColor>#ffff00</mBgColor>
									<mSoundFile></mSoundFile>
									<colorTriggerFgColor>#000000</colorTriggerFgColor>
									<colorTriggerBgColor>#000000</colorTriggerBgColor>
									<regexCodeList>
										<string>^You reach out with a frosted finger and stroke (\w+), who writhes in torment as ice form sunder your touch.$</string>
									</regexCodeList>
									<regexCodePropertyList>
										<integer>1</integer>
									</regexCodePropertyList>
								</Trigger>
								<Trigger isActive="yes" isFolder="no" isTempTrigger="no" isMultiline="no" isPerlSlashGOption="no" isColorizerTrigger="no" isFilterTrigger="no" isSoundTrigger="no" isColorTrigger="no" isColorTriggerFg="no" isColorTriggerBg="no">
									<name>deform hit</name>
									<script>-- Kept for purposes of those who want to track if they've hit deform and to damage kill off of it.</script>
									<triggerType>0</triggerType>
									<conditonLineDelta>0</conditonLineDelta>
									<mStayOpen>0</mStayOpen>
									<mCommand></mCommand>
									<packageName></packageName>
									<mFgColor>#ff0000</mFgColor>
									<mBgColor>#ffff00</mBgColor>
									<mSoundFile></mSoundFile>
									<colorTriggerFgColor>#000000</colorTriggerFgColor>
									<colorTriggerBgColor>#000000</colorTriggerBgColor>
									<regexCodeList>
										<string>^You use Necromancy Deform on (\w+).$</string>
										<string>^You bend your will upon (\w+), twisting (the )?\w+ essence into knots as you attempt to exacerbate (the )?\w+ physical deformities.$</string>
									</regexCodeList>
									<regexCodePropertyList>
										<integer>1</integer>
										<integer>1</integer>
									</regexCodePropertyList>
								</Trigger>
								<Trigger isActive="no" isFolder="no" isTempTrigger="no" isMultiline="no" isPerlSlashGOption="no" isColorizerTrigger="no" isFilterTrigger="no" isSoundTrigger="no" isColorTrigger="no" isColorTriggerFg="no" isColorTriggerBg="no">
									<name>Belch gone</name>
									<script>-- Not sure it's necessary to track this. Keeping incase an Indorani wants it.</script>
									<triggerType>0</triggerType>
									<conditonLineDelta>0</conditonLineDelta>
									<mStayOpen>0</mStayOpen>
									<mCommand></mCommand>
									<packageName></packageName>
									<mFgColor>#ff0000</mFgColor>
									<mBgColor>#ffff00</mBgColor>
									<mSoundFile></mSoundFile>
									<colorTriggerFgColor>#000000</colorTriggerFgColor>
									<colorTriggerBgColor>#000000</colorTriggerBgColor>
									<regexCodeList>
										<string>The noxious cloud dissipates.</string>
										<string>You use Necromancy Inhale on a noxious cloud.</string>
										<string>You expand your lungs as you inhale the noxious cloud around you. As the last of it is drawn into your mouth, you swallow, removing it from the air.</string>
									</regexCodeList>
									<regexCodePropertyList>
										<integer>3</integer>
										<integer>3</integer>
										<integer>3</integer>
									</regexCodePropertyList>
								</Trigger>
								<Trigger isActive="no" isFolder="no" isTempTrigger="no" isMultiline="no" isPerlSlashGOption="no" isColorizerTrigger="no" isFilterTrigger="no" isSoundTrigger="no" isColorTrigger="no" isColorTriggerFg="no" isColorTriggerBg="no">
									<name>Belch</name>
									<script>-- Not sure it's necessary to track this. Keeping incase an Indorani wants it.</script>
									<triggerType>0</triggerType>
									<conditonLineDelta>0</conditonLineDelta>
									<mStayOpen>0</mStayOpen>
									<mCommand></mCommand>
									<packageName></packageName>
									<mFgColor>#ff0000</mFgColor>
									<mBgColor>#ffff00</mBgColor>
									<mSoundFile></mSoundFile>
									<colorTriggerFgColor>#000000</colorTriggerFgColor>
									<colorTriggerBgColor>#000000</colorTriggerBgColor>
									<regexCodeList>
										<string>A stinking noxious cloud floats here.</string>
										<string>You belch a cloud of stinking gas out of your lungs and into your surroundings.</string>
										<string>You use Necromancy Belch.</string>
									</regexCodeList>
									<regexCodePropertyList>
										<integer>3</integer>
										<integer>3</integer>
										<integer>3</integer>
									</regexCodePropertyList>
								</Trigger>
								<Trigger isActive="yes" isFolder="no" isTempTrigger="no" isMultiline="no" isPerlSlashGOption="no" isColorizerTrigger="no" isFilterTrigger="no" isSoundTrigger="no" isColorTrigger="no" isColorTriggerFg="no" isColorTriggerBg="no">
									<name>Already leeched</name>
									<script>if matches[2] == snd.target then
  snd.target_has_aura = false
  snd.need_leech_aura = false
	if not snd.checkAff("leeched_aura") then 
		snd.target_got("leeched_aura")
	end
end</script>
									<triggerType>0</triggerType>
									<conditonLineDelta>0</conditonLineDelta>
									<mStayOpen>0</mStayOpen>
									<mCommand></mCommand>
									<packageName></packageName>
									<mFgColor>#ff0000</mFgColor>
									<mBgColor>#ffff00</mBgColor>
									<mSoundFile></mSoundFile>
									<colorTriggerFgColor>#000000</colorTriggerFgColor>
									<colorTriggerBgColor>#000000</colorTriggerBgColor>
									<regexCodeList>
										<string>^The life aura of (\w+) has already been leeched away.$</string>
									</regexCodeList>
									<regexCodePropertyList>
										<integer>1</integer>
									</regexCodePropertyList>
								</Trigger>
								<Trigger isActive="yes" isFolder="no" isTempTrigger="no" isMultiline="no" isPerlSlashGOption="no" isColorizerTrigger="no" isFilterTrigger="no" isSoundTrigger="no" isColorTrigger="no" isColorTriggerFg="no" isColorTriggerBg="no">
									<name>Aura regained or still on</name>
									<script>if matches[2] == snd.target then
  snd.target_has_aura = true
  snd.need_leech_aura = true
	snd.target_cured("leeched_aura")
end</script>
									<triggerType>0</triggerType>
									<conditonLineDelta>0</conditonLineDelta>
									<mStayOpen>0</mStayOpen>
									<mCommand></mCommand>
									<packageName></packageName>
									<mFgColor>#ff0000</mFgColor>
									<mBgColor>#ffff00</mBgColor>
									<mSoundFile></mSoundFile>
									<colorTriggerFgColor>#000000</colorTriggerFgColor>
									<colorTriggerBgColor>#000000</colorTriggerBgColor>
									<regexCodeList>
										<string>^(\w+) appears to regain a little colour.$</string>
										<string>^The life aura surrounding (\w+) protects (the )?\w+ from harm.$</string>
									</regexCodeList>
									<regexCodePropertyList>
										<integer>1</integer>
										<integer>0</integer>
									</regexCodePropertyList>
								</Trigger>
								<Trigger isActive="yes" isFolder="no" isTempTrigger="no" isMultiline="no" isPerlSlashGOption="no" isColorizerTrigger="no" isFilterTrigger="no" isSoundTrigger="no" isColorTrigger="no" isColorTriggerFg="no" isColorTriggerBg="no">
									<name>Leeched_aura true</name>
									<script>if matches[2] == snd.target then
  snd.target_has_aura = false
  snd.need_leech_aura = false
	if not snd.checkAff("leeched_aura") then 
		snd.target_got("leeched_aura")
	end
end</script>
									<triggerType>0</triggerType>
									<conditonLineDelta>0</conditonLineDelta>
									<mStayOpen>0</mStayOpen>
									<mCommand></mCommand>
									<packageName></packageName>
									<mFgColor>#ff0000</mFgColor>
									<mBgColor>#ffff00</mBgColor>
									<mSoundFile></mSoundFile>
									<colorTriggerFgColor>#000000</colorTriggerFgColor>
									<colorTriggerBgColor>#000000</colorTriggerBgColor>
									<regexCodeList>
										<string>^(\w+) seems to droop as the colour drains from (the )?\w+ face.$</string>
									</regexCodeList>
									<regexCodePropertyList>
										<integer>1</integer>
									</regexCodePropertyList>
								</Trigger>
								<Trigger isActive="yes" isFolder="no" isTempTrigger="no" isMultiline="no" isPerlSlashGOption="no" isColorizerTrigger="no" isFilterTrigger="no" isSoundTrigger="no" isColorTrigger="no" isColorTriggerFg="no" isColorTriggerBg="no">
									<name>Leech started</name>
									<script>if matches[2] == snd.target then
  snd.target_has_aura = true
  snd.need_leech_aura = false
end</script>
									<triggerType>0</triggerType>
									<conditonLineDelta>0</conditonLineDelta>
									<mStayOpen>0</mStayOpen>
									<mCommand></mCommand>
									<packageName></packageName>
									<mFgColor>#ff0000</mFgColor>
									<mBgColor>#ffff00</mBgColor>
									<mSoundFile></mSoundFile>
									<colorTriggerFgColor>#000000</colorTriggerFgColor>
									<colorTriggerBgColor>#000000</colorTriggerBgColor>
									<regexCodeList>
										<string>^You use Necromancy Leech on (\w+).$</string>
										<string>^You laugh sadistically as you grasp the life aura around (\w+) and let it begin to leech away.$</string>
									</regexCodeList>
									<regexCodePropertyList>
										<integer>1</integer>
										<integer>1</integer>
									</regexCodePropertyList>
								</Trigger>
							</TriggerGroup>
							<TriggerGroup isActive="yes" isFolder="yes" isTempTrigger="no" isMultiline="no" isPerlSlashGOption="no" isColorizerTrigger="no" isFilterTrigger="no" isSoundTrigger="no" isColorTrigger="no" isColorTriggerFg="no" isColorTriggerBg="no">
								<name>Tarot Fixed</name>
								<script></script>
								<triggerType>0</triggerType>
								<conditonLineDelta>0</conditonLineDelta>
								<mStayOpen>0</mStayOpen>
								<mCommand></mCommand>
								<packageName></packageName>
								<mFgColor>#ff0000</mFgColor>
								<mBgColor>#ffff00</mBgColor>
								<mSoundFile></mSoundFile>
								<colorTriggerFgColor>#000000</colorTriggerFgColor>
								<colorTriggerBgColor>#000000</colorTriggerBgColor>
								<regexCodeList />
								<regexCodePropertyList />
								<Trigger isActive="yes" isFolder="no" isTempTrigger="no" isMultiline="no" isPerlSlashGOption="no" isColorizerTrigger="no" isFilterTrigger="no" isSoundTrigger="no" isColorTrigger="no" isColorTriggerFg="no" isColorTriggerBg="no">
									<name>Tarot Lovers</name>
									<script>if matches[2] == snd.target then
  if not snd.checkAff("lovers_effect") then 
		snd.target_got("lovers_effect")
	end
end</script>
									<triggerType>0</triggerType>
									<conditonLineDelta>0</conditonLineDelta>
									<mStayOpen>0</mStayOpen>
									<mCommand></mCommand>
									<packageName></packageName>
									<mFgColor>#ff0000</mFgColor>
									<mBgColor>#ffff00</mBgColor>
									<mSoundFile></mSoundFile>
									<colorTriggerFgColor>#000000</colorTriggerFgColor>
									<colorTriggerBgColor>#000000</colorTriggerBgColor>
									<regexCodeList>
										<string>^\w+ uses? Tarot Lovers on (\w+)\.$</string>
									</regexCodeList>
									<regexCodePropertyList>
										<integer>1</integer>
									</regexCodePropertyList>
								</Trigger>
								<Trigger isActive="yes" isFolder="no" isTempTrigger="no" isMultiline="no" isPerlSlashGOption="no" isColorizerTrigger="no" isFilterTrigger="no" isSoundTrigger="no" isColorTrigger="no" isColorTriggerFg="no" isColorTriggerBg="no">
									<name>cannot aeon</name>
									<script>snd.balance.aeon = false</script>
									<triggerType>0</triggerType>
									<conditonLineDelta>0</conditonLineDelta>
									<mStayOpen>0</mStayOpen>
									<mCommand></mCommand>
									<packageName></packageName>
									<mFgColor>#ff0000</mFgColor>
									<mBgColor>#ffff00</mBgColor>
									<mSoundFile></mSoundFile>
									<colorTriggerFgColor>#000000</colorTriggerFgColor>
									<colorTriggerBgColor>#000000</colorTriggerBgColor>
									<regexCodeList>
										<string>You cannot deliver the curse of Aeon again so soon.</string>
									</regexCodeList>
									<regexCodePropertyList>
										<integer>3</integer>
									</regexCodePropertyList>
								</Trigger>
								<Trigger isActive="yes" isFolder="no" isTempTrigger="no" isMultiline="no" isPerlSlashGOption="no" isColorizerTrigger="no" isFilterTrigger="no" isSoundTrigger="no" isColorTrigger="no" isColorTriggerFg="no" isColorTriggerBg="no">
									<name>Can aeon</name>
									<script>snd.balance.aeon = true</script>
									<triggerType>0</triggerType>
									<conditonLineDelta>0</conditonLineDelta>
									<mStayOpen>0</mStayOpen>
									<mCommand></mCommand>
									<packageName></packageName>
									<mFgColor>#ff0000</mFgColor>
									<mBgColor>#ffff00</mBgColor>
									<mSoundFile></mSoundFile>
									<colorTriggerFgColor>#000000</colorTriggerFgColor>
									<colorTriggerBgColor>#000000</colorTriggerBgColor>
									<regexCodeList>
										<string>You may induce the curse of Aeon once more.</string>
									</regexCodeList>
									<regexCodePropertyList>
										<integer>3</integer>
									</regexCodePropertyList>
								</Trigger>
								<Trigger isActive="yes" isFolder="no" isTempTrigger="no" isMultiline="no" isPerlSlashGOption="no" isColorizerTrigger="no" isFilterTrigger="no" isSoundTrigger="no" isColorTrigger="no" isColorTriggerFg="no" isColorTriggerBg="no">
									<name>Aeon given to enemy</name>
									<script>if matches[3] == snd.target then
  if not snd.checkAff("aeon") then 
		snd.target_got("aeon")
	end
	if matches[1]:find("You") then
		snd.balance.aeon = false
	end
end</script>
									<triggerType>0</triggerType>
									<conditonLineDelta>0</conditonLineDelta>
									<mStayOpen>0</mStayOpen>
									<mCommand></mCommand>
									<packageName></packageName>
									<mFgColor>#ff0000</mFgColor>
									<mBgColor>#ffff00</mBgColor>
									<mSoundFile></mSoundFile>
									<colorTriggerFgColor>#000000</colorTriggerFgColor>
									<colorTriggerBgColor>#000000</colorTriggerBgColor>
									<regexCodeList>
										<string>^\w+ uses? Tarot Aeon( \(speed\))? on (\w+)\.</string>
									</regexCodeList>
									<regexCodePropertyList>
										<integer>1</integer>
									</regexCodePropertyList>
								</Trigger>
								<Trigger isActive="yes" isFolder="no" isTempTrigger="no" isMultiline="no" isPerlSlashGOption="no" isColorizerTrigger="no" isFilterTrigger="no" isSoundTrigger="no" isColorTrigger="no" isColorTriggerFg="no" isColorTriggerBg="no">
									<name>hangedman</name>
									<script>if matches[4] == snd.target then
  if matches[3] == "prone" then
  	snd.target_prone = true
  else
  	snd.target_got("ropes")
  end
end</script>
									<triggerType>0</triggerType>
									<conditonLineDelta>0</conditonLineDelta>
									<mStayOpen>0</mStayOpen>
									<mCommand></mCommand>
									<packageName></packageName>
									<mFgColor>#ff0000</mFgColor>
									<mBgColor>#ffff00</mBgColor>
									<mSoundFile></mSoundFile>
									<colorTriggerFgColor>#000000</colorTriggerFgColor>
									<colorTriggerBgColor>#000000</colorTriggerBgColor>
									<regexCodeList>
										<string>^(\w+) uses? Tarot Hangedman \((\w+)\) on (\w+)\.$</string>
									</regexCodeList>
									<regexCodePropertyList>
										<integer>1</integer>
									</regexCodePropertyList>
								</Trigger>
								<Trigger isActive="yes" isFolder="no" isTempTrigger="no" isMultiline="no" isPerlSlashGOption="no" isColorizerTrigger="no" isFilterTrigger="no" isSoundTrigger="no" isColorTrigger="no" isColorTriggerFg="no" isColorTriggerBg="no">
									<name>Justice</name>
									<script>if matches[2] == snd.target then
  if not snd.checkAff("justice") then 
		snd.target_got("justice")
	end
end</script>
									<triggerType>0</triggerType>
									<conditonLineDelta>0</conditonLineDelta>
									<mStayOpen>0</mStayOpen>
									<mCommand></mCommand>
									<packageName></packageName>
									<mFgColor>#ff0000</mFgColor>
									<mBgColor>#ffff00</mBgColor>
									<mSoundFile></mSoundFile>
									<colorTriggerFgColor>#000000</colorTriggerFgColor>
									<colorTriggerBgColor>#000000</colorTriggerBgColor>
									<regexCodeList>
										<string>^With a mocking prayer, you fling your tarot card at (\w+). A set of scales appears above (the )?\w+ head and one side of the scale quickly descends. Justice will be done.$</string>
										<string>^Justice is dealt out and (\w+)'s attack rebounds onto (the )?\w+.$</string>
									</regexCodeList>
									<regexCodePropertyList>
										<integer>1</integer>
										<integer>1</integer>
									</regexCodePropertyList>
								</Trigger>
								<Trigger isActive="yes" isFolder="no" isTempTrigger="no" isMultiline="no" isPerlSlashGOption="no" isColorizerTrigger="no" isFilterTrigger="no" isSoundTrigger="no" isColorTrigger="no" isColorTriggerFg="no" isColorTriggerBg="no">
									<name>Moon and sun tarot given</name>
									<script>
local aff = matches[3]:lower()
if matches[4] == snd.target then
	if not snd.checkAff(aff) then
		snd.target_got(aff)
	end
end
--Have concerns about some of the affs being read correctly, but we'll see</script>
									<triggerType>0</triggerType>
									<conditonLineDelta>0</conditonLineDelta>
									<mStayOpen>0</mStayOpen>
									<mCommand></mCommand>
									<packageName></packageName>
									<mFgColor>#ff0000</mFgColor>
									<mBgColor>#ffff00</mBgColor>
									<mSoundFile></mSoundFile>
									<colorTriggerFgColor>#000000</colorTriggerFgColor>
									<colorTriggerBgColor>#000000</colorTriggerBgColor>
									<regexCodeList>
										<string>^The (the )?\w+ tarot is eclipsed and passes on (.*) to (\w+).$</string>
										<string>^The (the )?\w+ tarot has passed on (.*) to (\w+).$</string>
									</regexCodeList>
									<regexCodePropertyList>
										<integer>1</integer>
										<integer>1</integer>
									</regexCodePropertyList>
								</Trigger>
								<Trigger isActive="yes" isFolder="no" isTempTrigger="no" isMultiline="no" isPerlSlashGOption="no" isColorizerTrigger="no" isFilterTrigger="no" isSoundTrigger="no" isColorTrigger="no" isColorTriggerFg="no" isColorTriggerBg="no">
									<name>Sun tarot strip</name>
									<script>if matches[2] == snd.target then
  if not snd.checkAff("deafness") then 
		snd.target_got("deafness")
	end
end</script>
									<triggerType>0</triggerType>
									<conditonLineDelta>0</conditonLineDelta>
									<mStayOpen>0</mStayOpen>
									<mCommand></mCommand>
									<packageName></packageName>
									<mFgColor>#ff0000</mFgColor>
									<mBgColor>#ffff00</mBgColor>
									<mSoundFile></mSoundFile>
									<colorTriggerFgColor>#000000</colorTriggerFgColor>
									<colorTriggerBgColor>#000000</colorTriggerBgColor>
									<regexCodeList>
										<string>^The Sun tarot has stripped (\w+)'s deafness.$</string>
									</regexCodeList>
									<regexCodePropertyList>
										<integer>1</integer>
									</regexCodePropertyList>
								</Trigger>
								<Trigger isActive="yes" isFolder="no" isTempTrigger="no" isMultiline="no" isPerlSlashGOption="no" isColorizerTrigger="no" isFilterTrigger="no" isSoundTrigger="no" isColorTrigger="no" isColorTriggerFg="no" isColorTriggerBg="no">
									<name>3p tarot card hit</name>
									<script>if matches[3] == snd.target then
	local aff_grab = snd.maybe_affs[1]
	if matches[2]:lower() == snd.indorani_cards[aff_grab] then
		snd.target_got(aff_grab)
    table.remove(snd.maybe_affs, 1)
	end
end</script>
									<triggerType>0</triggerType>
									<conditonLineDelta>0</conditonLineDelta>
									<mStayOpen>0</mStayOpen>
									<mCommand></mCommand>
									<packageName></packageName>
									<mFgColor>#ff0000</mFgColor>
									<mBgColor>#ffff00</mBgColor>
									<mSoundFile></mSoundFile>
									<colorTriggerFgColor>#000000</colorTriggerFgColor>
									<colorTriggerBgColor>#000000</colorTriggerBgColor>
									<regexCodeList>
										<string>^\w+ uses Tarot (\w+)+ on (\w+)\.$</string>
									</regexCodeList>
									<regexCodePropertyList>
										<integer>1</integer>
									</regexCodePropertyList>
								</Trigger>
								<Trigger isActive="yes" isFolder="no" isTempTrigger="no" isMultiline="no" isPerlSlashGOption="no" isColorizerTrigger="no" isFilterTrigger="no" isSoundTrigger="no" isColorTrigger="no" isColorTriggerFg="no" isColorTriggerBg="no">
									<name>3p tarot card dodge</name>
									<script>if matches[3] == snd.target then
   table.remove(snd.maybe_affs, 1)
end</script>
									<triggerType>0</triggerType>
									<conditonLineDelta>0</conditonLineDelta>
									<mStayOpen>0</mStayOpen>
									<mCommand></mCommand>
									<packageName></packageName>
									<mFgColor>#ff0000</mFgColor>
									<mBgColor>#ffff00</mBgColor>
									<mSoundFile></mSoundFile>
									<colorTriggerFgColor>#000000</colorTriggerFgColor>
									<colorTriggerBgColor>#000000</colorTriggerBgColor>
									<regexCodeList>
										<string>^\w+ uses Tarot (the )?\w+ \(dodge\) on (\w+)\.$</string>
									</regexCodeList>
									<regexCodePropertyList>
										<integer>1</integer>
									</regexCodePropertyList>
								</Trigger>
								<Trigger isActive="yes" isFolder="no" isTempTrigger="no" isMultiline="no" isPerlSlashGOption="no" isColorizerTrigger="no" isFilterTrigger="no" isSoundTrigger="no" isColorTrigger="no" isColorTriggerFg="no" isColorTriggerBg="no">
									<name>Warrior hit</name>
									<script>if matches[2] == snd.target then
 snd.last_hit_limb = matches[4]
 snd.last_limb_dmg = 12.49
 snd.took_limb_dmg(matches[3], snd.last_limb_dmg)
end</script>
									<triggerType>0</triggerType>
									<conditonLineDelta>0</conditonLineDelta>
									<mStayOpen>0</mStayOpen>
									<mCommand></mCommand>
									<packageName></packageName>
									<mFgColor>#ff0000</mFgColor>
									<mBgColor>#ffff00</mBgColor>
									<mSoundFile></mSoundFile>
									<colorTriggerFgColor>#000000</colorTriggerFgColor>
									<colorTriggerBgColor>#000000</colorTriggerBgColor>
									<regexCodeList>
										<string>^You fling the Warrior towards (\w+) where it strikes solidly with (the )?\w+ (.*), and falls to the ground heavily.$</string>
									</regexCodeList>
									<regexCodePropertyList>
										<integer>1</integer>
									</regexCodePropertyList>
								</Trigger>
							</TriggerGroup>
						</TriggerGroup>
						<TriggerGroup isActive="yes" isFolder="yes" isTempTrigger="no" isMultiline="no" isPerlSlashGOption="no" isColorizerTrigger="no" isFilterTrigger="no" isSoundTrigger="no" isColorTrigger="no" isColorTriggerFg="no" isColorTriggerBg="no">
							<name>Ascendril</name>
							<script></script>
							<triggerType>0</triggerType>
							<conditonLineDelta>0</conditonLineDelta>
							<mStayOpen>0</mStayOpen>
							<mCommand></mCommand>
							<packageName></packageName>
							<mFgColor>#ff0000</mFgColor>
							<mBgColor>#ffff00</mBgColor>
							<mSoundFile></mSoundFile>
							<colorTriggerFgColor>#000000</colorTriggerFgColor>
							<colorTriggerBgColor>#000000</colorTriggerBgColor>
							<regexCodeList />
							<regexCodePropertyList />
							<TriggerGroup isActive="yes" isFolder="yes" isTempTrigger="no" isMultiline="no" isPerlSlashGOption="no" isColorizerTrigger="no" isFilterTrigger="no" isSoundTrigger="no" isColorTrigger="no" isColorTriggerFg="no" isColorTriggerBg="no">
								<name>Elemancy</name>
								<script></script>
								<triggerType>0</triggerType>
								<conditonLineDelta>0</conditonLineDelta>
								<mStayOpen>0</mStayOpen>
								<mCommand></mCommand>
								<packageName></packageName>
								<mFgColor>#ff0000</mFgColor>
								<mBgColor>#ffff00</mBgColor>
								<mSoundFile></mSoundFile>
								<colorTriggerFgColor>#000000</colorTriggerFgColor>
								<colorTriggerBgColor>#000000</colorTriggerBgColor>
								<regexCodeList />
								<regexCodePropertyList />
								<Trigger isActive="yes" isFolder="no" isTempTrigger="no" isMultiline="no" isPerlSlashGOption="no" isColorizerTrigger="no" isFilterTrigger="no" isSoundTrigger="no" isColorTrigger="no" isColorTriggerFg="no" isColorTriggerBg="no">
									<name>Ignite</name>
									<script>if matches[2] == snd.target then
	snd.target_got("ablaze")
end</script>
									<triggerType>0</triggerType>
									<conditonLineDelta>0</conditonLineDelta>
									<mStayOpen>0</mStayOpen>
									<mCommand></mCommand>
									<packageName></packageName>
									<mFgColor>#ff0000</mFgColor>
									<mBgColor>#ffff00</mBgColor>
									<mSoundFile></mSoundFile>
									<colorTriggerFgColor>#000000</colorTriggerFgColor>
									<colorTriggerBgColor>#000000</colorTriggerBgColor>
									<regexCodeList>
										<string>^\w+ uses? Elemancy Ignite Ablaze on (\w+)\.$</string>
									</regexCodeList>
									<regexCodePropertyList>
										<integer>1</integer>
									</regexCodePropertyList>
								</Trigger>
								<Trigger isActive="yes" isFolder="no" isTempTrigger="no" isMultiline="no" isPerlSlashGOption="no" isColorizerTrigger="no" isFilterTrigger="no" isSoundTrigger="no" isColorTrigger="no" isColorTriggerFg="no" isColorTriggerBg="no">
									<name>firelash</name>
									<script>if matches[4] == snd.target then
	snd.last_hit_limb = matches[3]
	snd.last_limb_dmg = 12
	snd.took_limb_dmg(matches[3], snd.last_limb_dmg)
	if snd.flamewreathed_limb == "" and matches[2] == "Fire" then
		snd.flamewreathed_limb = matches[3]
	end
end</script>
									<triggerType>0</triggerType>
									<conditonLineDelta>0</conditonLineDelta>
									<mStayOpen>10</mStayOpen>
									<mCommand></mCommand>
									<packageName></packageName>
									<mFgColor>#ff0000</mFgColor>
									<mBgColor>#ffff00</mBgColor>
									<mSoundFile></mSoundFile>
									<colorTriggerFgColor>#000000</colorTriggerFgColor>
									<colorTriggerBgColor>#000000</colorTriggerBgColor>
									<regexCodeList>
										<string>^\w+ uses? Elemancy Firelash-(\w+) \((.+)\) on (\w+)\.$</string>
									</regexCodeList>
									<regexCodePropertyList>
										<integer>1</integer>
									</regexCodePropertyList>
									<Trigger isActive="yes" isFolder="no" isTempTrigger="no" isMultiline="no" isPerlSlashGOption="no" isColorizerTrigger="no" isFilterTrigger="no" isSoundTrigger="no" isColorTrigger="no" isColorTriggerFg="no" isColorTriggerBg="no">
										<name>undo firelash</name>
										<script>snd.took_limb_dmg(snd.last_hit_limb, -snd.last_limb_dmg)
</script>
										<triggerType>0</triggerType>
										<conditonLineDelta>0</conditonLineDelta>
										<mStayOpen>0</mStayOpen>
										<mCommand></mCommand>
										<packageName></packageName>
										<mFgColor>#ff0000</mFgColor>
										<mBgColor>#ffff00</mBgColor>
										<mSoundFile></mSoundFile>
										<colorTriggerFgColor>#000000</colorTriggerFgColor>
										<colorTriggerBgColor>#000000</colorTriggerBgColor>
										<regexCodeList>
											<string>^The attack rebounds back onto (\w+)\!$</string>
											<string>^Stepping quickly out of the way, (\w+) dodges the attack\.$</string>
											<string>^(\w+) parries the attack on (.*) with a deft maneuver\.$</string>
											<string>^(\w+) guards the attack on (.*)\.$</string>
											<string>^A reflection of (\w+) blinks out of existence\.$</string>
											<string>^With a free hand, (\w+) fends off the attack on (the )?\w+ (.+)\.$</string>
										</regexCodeList>
										<regexCodePropertyList>
											<integer>1</integer>
											<integer>1</integer>
											<integer>1</integer>
											<integer>1</integer>
											<integer>1</integer>
											<integer>1</integer>
										</regexCodePropertyList>
									</Trigger>
									<Trigger isActive="yes" isFolder="no" isTempTrigger="no" isMultiline="no" isPerlSlashGOption="no" isColorizerTrigger="no" isFilterTrigger="no" isSoundTrigger="no" isColorTrigger="no" isColorTriggerFg="no" isColorTriggerBg="no">
										<name>firelash end</name>
										<script>setTriggerStayOpen("firelash", 0)
</script>
										<triggerType>0</triggerType>
										<conditonLineDelta>0</conditonLineDelta>
										<mStayOpen>0</mStayOpen>
										<mCommand></mCommand>
										<packageName></packageName>
										<mFgColor>#ff0000</mFgColor>
										<mBgColor>#ffff00</mBgColor>
										<mSoundFile></mSoundFile>
										<colorTriggerFgColor>#000000</colorTriggerFgColor>
										<colorTriggerBgColor>#000000</colorTriggerBgColor>
										<regexCodeList>
											<string>return isPrompt()</string>
										</regexCodeList>
										<regexCodePropertyList>
											<integer>4</integer>
										</regexCodePropertyList>
									</Trigger>
								</Trigger>
								<Trigger isActive="yes" isFolder="no" isTempTrigger="no" isMultiline="no" isPerlSlashGOption="no" isColorizerTrigger="no" isFilterTrigger="no" isSoundTrigger="no" isColorTrigger="no" isColorTriggerFg="no" isColorTriggerBg="no">
									<name>flamewreathed proc</name>
									<script>if matches[2] == snd.target then
	snd.last_hit_limb = matches[3]
	snd.last_limb_dmg = 7
	snd.took_limb_dmg(matches[3], snd.last_limb_dmg)
	snd.flamewreathed_limb = ""
end</script>
									<triggerType>0</triggerType>
									<conditonLineDelta>0</conditonLineDelta>
									<mStayOpen>0</mStayOpen>
									<mCommand></mCommand>
									<packageName></packageName>
									<mFgColor>#ff0000</mFgColor>
									<mBgColor>#ffff00</mBgColor>
									<mSoundFile></mSoundFile>
									<colorTriggerFgColor>#000000</colorTriggerFgColor>
									<colorTriggerBgColor>#000000</colorTriggerBgColor>
									<regexCodeList>
										<string>^The flames around (\w+)'s (.+) ignite in intensity and then expire, their energy spent.$</string>
									</regexCodeList>
									<regexCodePropertyList>
										<integer>1</integer>
									</regexCodePropertyList>
								</Trigger>
								<Trigger isActive="yes" isFolder="no" isTempTrigger="no" isMultiline="no" isPerlSlashGOption="no" isColorizerTrigger="no" isFilterTrigger="no" isSoundTrigger="no" isColorTrigger="no" isColorTriggerFg="no" isColorTriggerBg="no">
									<name>scorch</name>
									<script>if matches[4] == snd.target then
	if matches[2] == "Water" then
		snd.target_got("slickness")
	elseif matches[2] == "Air" then
		snd.target_got("asthma")
	end
  if matches[3] == "Arms" then
    if snd.checkAff("ablaze") then
      snd.target_got("a broken left arm")
      snd.target_got("a broken right arm")
    else
      snd.target_got("a broken arm")
    end
  else
    if snd.checkAff("ablaze") then
      snd.target_got("a broken left leg")
      snd.target_got("a broken right leg")
    else
      snd.target_got("a broken leg")
    end
  end
end</script>
									<triggerType>0</triggerType>
									<conditonLineDelta>0</conditonLineDelta>
									<mStayOpen>0</mStayOpen>
									<mCommand></mCommand>
									<packageName></packageName>
									<mFgColor>#ff0000</mFgColor>
									<mBgColor>#ffff00</mBgColor>
									<mSoundFile></mSoundFile>
									<colorTriggerFgColor>#000000</colorTriggerFgColor>
									<colorTriggerBgColor>#000000</colorTriggerBgColor>
									<regexCodeList>
										<string>^\w+ uses? Elemancy Scorch-(\w+) (\w+) on (\w+)\.$</string>
									</regexCodeList>
									<regexCodePropertyList>
										<integer>1</integer>
									</regexCodePropertyList>
								</Trigger>
								<Trigger isActive="yes" isFolder="no" isTempTrigger="no" isMultiline="no" isPerlSlashGOption="no" isColorizerTrigger="no" isFilterTrigger="no" isSoundTrigger="no" isColorTrigger="no" isColorTriggerFg="no" isColorTriggerBg="no">
									<name>Hailstorm</name>
									<script>if matches[3] == snd.target then
	if matches[2] == "Air" then
		snd.target_got("lethargy")
	 if snd.checkAff("frozen") then
   elseif snd.checkAff("shivering") then
    snd.target_got("frozen")
   elseif snd.checkAff("no_caloric") then
    snd.target_got("shivering")
   else
    snd.target_got("no_caloric")
   end
		if snd.target_prone == true then
			snd.target_got("confusion")
		end
	else
		snd.target_got("dizziness")
	end
end</script>
									<triggerType>0</triggerType>
									<conditonLineDelta>0</conditonLineDelta>
									<mStayOpen>0</mStayOpen>
									<mCommand></mCommand>
									<packageName></packageName>
									<mFgColor>#ff0000</mFgColor>
									<mBgColor>#ffff00</mBgColor>
									<mSoundFile></mSoundFile>
									<colorTriggerFgColor>#000000</colorTriggerFgColor>
									<colorTriggerBgColor>#000000</colorTriggerBgColor>
									<regexCodeList>
										<string>^\w+ uses? Elemancy Hailstorm-(\w+) on (\w+)\.$</string>
									</regexCodeList>
									<regexCodePropertyList>
										<integer>1</integer>
									</regexCodePropertyList>
								</Trigger>
								<Trigger isActive="yes" isFolder="no" isTempTrigger="no" isMultiline="no" isPerlSlashGOption="no" isColorizerTrigger="no" isFilterTrigger="no" isSoundTrigger="no" isColorTrigger="no" isColorTriggerFg="no" isColorTriggerBg="no">
									<name>Windlance</name>
									<script>if matches[3] == snd.target then
	snd.used.shield = false
	if matches[2] == "Air" then
		if snd.checkAff("clumsiness") then
			snd.target_got("dizziness")
		else
	 		snd.target_got("clumsiness")
		end
	end
end</script>
									<triggerType>0</triggerType>
									<conditonLineDelta>0</conditonLineDelta>
									<mStayOpen>0</mStayOpen>
									<mCommand></mCommand>
									<packageName></packageName>
									<mFgColor>#ff0000</mFgColor>
									<mBgColor>#ffff00</mBgColor>
									<mSoundFile></mSoundFile>
									<colorTriggerFgColor>#000000</colorTriggerFgColor>
									<colorTriggerBgColor>#000000</colorTriggerBgColor>
									<regexCodeList>
										<string>^\w+ uses? Elemancy Windlance-(\w+) on (\w+)\.$</string>
									</regexCodeList>
									<regexCodePropertyList>
										<integer>1</integer>
									</regexCodePropertyList>
								</Trigger>
								<Trigger isActive="yes" isFolder="no" isTempTrigger="no" isMultiline="no" isPerlSlashGOption="no" isColorizerTrigger="no" isFilterTrigger="no" isSoundTrigger="no" isColorTrigger="no" isColorTriggerFg="no" isColorTriggerBg="no">
									<name>pressurize</name>
									<script>if matches[3] == snd.target then
	if snd.checkAff("vertigo") then
		snd.target_got("confusion")
	else
 		snd.target_got("vertigo")
	end
	if matches[2] == "Water" then
		snd.target_got("weariness")
	elseif matches[2] == "Fire" then
		snd.target_got("clumsiness")
	end
end</script>
									<triggerType>0</triggerType>
									<conditonLineDelta>0</conditonLineDelta>
									<mStayOpen>0</mStayOpen>
									<mCommand></mCommand>
									<packageName></packageName>
									<mFgColor>#ff0000</mFgColor>
									<mBgColor>#ffff00</mBgColor>
									<mSoundFile></mSoundFile>
									<colorTriggerFgColor>#000000</colorTriggerFgColor>
									<colorTriggerBgColor>#000000</colorTriggerBgColor>
									<regexCodeList>
										<string>^\w+ uses? Elemancy Pressurize-(\w+) on (\w+)\.$</string>
									</regexCodeList>
									<regexCodePropertyList>
										<integer>1</integer>
									</regexCodePropertyList>
								</Trigger>
								<Trigger isActive="yes" isFolder="no" isTempTrigger="no" isMultiline="no" isPerlSlashGOption="no" isColorizerTrigger="no" isFilterTrigger="no" isSoundTrigger="no" isColorTrigger="no" isColorTriggerFg="no" isColorTriggerBg="no">
									<name>coldsnap</name>
									<script>if matches[3] == snd.target then
	snd.target_got("stupidity")
	if matches[2] == "Fire" then
		snd.target_got("recklessness")
	elseif matches[2] == "Air" then
		snd.target_got("masochism")
	end
end</script>
									<triggerType>0</triggerType>
									<conditonLineDelta>0</conditonLineDelta>
									<mStayOpen>0</mStayOpen>
									<mCommand></mCommand>
									<packageName></packageName>
									<mFgColor>#ff0000</mFgColor>
									<mBgColor>#ffff00</mBgColor>
									<mSoundFile></mSoundFile>
									<colorTriggerFgColor>#000000</colorTriggerFgColor>
									<colorTriggerBgColor>#000000</colorTriggerBgColor>
									<regexCodeList>
										<string>^\w+ uses? Elemancy Coldsnap-(\w+) on (\w+)\.$</string>
									</regexCodeList>
									<regexCodePropertyList>
										<integer>1</integer>
									</regexCodePropertyList>
								</Trigger>
								<Trigger isActive="yes" isFolder="no" isTempTrigger="no" isMultiline="no" isPerlSlashGOption="no" isColorizerTrigger="no" isFilterTrigger="no" isSoundTrigger="no" isColorTrigger="no" isColorTriggerFg="no" isColorTriggerBg="no">
									<name>mistral</name>
									<script>if matches[3] == snd.target then
  if snd.checkAff("frozen") then
  elseif snd.checkAff("shivering") then
 	 snd.target_got("frozen")
  elseif snd.checkAff("no_caloric") then
 	 snd.target_got("shivering")
  else
  	snd.target_got("no_caloric")
  end
	if matches[2] == "Water" then
  	if snd.checkAff("frozen") then
    elseif snd.checkAff("shivering") then
   	 snd.target_got("frozen")
    elseif snd.checkAff("no_caloric") then
   	 snd.target_got("shivering")
    else
    	snd.target_got("no_caloric")
    end
	elseif matches[2] == "Fire" then
		snd.target_got("sensitivity")
	end
end</script>
									<triggerType>0</triggerType>
									<conditonLineDelta>0</conditonLineDelta>
									<mStayOpen>0</mStayOpen>
									<mCommand></mCommand>
									<packageName></packageName>
									<mFgColor>#ff0000</mFgColor>
									<mBgColor>#ffff00</mBgColor>
									<mSoundFile></mSoundFile>
									<colorTriggerFgColor>#000000</colorTriggerFgColor>
									<colorTriggerBgColor>#000000</colorTriggerBgColor>
									<regexCodeList>
										<string>^\w+ uses? Elemancy Mistral-(\w+) on (\w+)\.$</string>
									</regexCodeList>
									<regexCodePropertyList>
										<integer>1</integer>
									</regexCodePropertyList>
								</Trigger>
								<Trigger isActive="yes" isFolder="no" isTempTrigger="no" isMultiline="no" isPerlSlashGOption="no" isColorizerTrigger="no" isFilterTrigger="no" isSoundTrigger="no" isColorTrigger="no" isColorTriggerFg="no" isColorTriggerBg="no">
									<name>lightning</name>
									<script>if matches[3] == snd.target then
	snd.target_got("paresis")
	if matches[2] == "Fire" then
		snd.target_got("vertigo")
	elseif matches[2] == "Water" then
		snd.target_got("epilepsy")
	end
end</script>
									<triggerType>0</triggerType>
									<conditonLineDelta>0</conditonLineDelta>
									<mStayOpen>0</mStayOpen>
									<mCommand></mCommand>
									<packageName></packageName>
									<mFgColor>#ff0000</mFgColor>
									<mBgColor>#ffff00</mBgColor>
									<mSoundFile></mSoundFile>
									<colorTriggerFgColor>#000000</colorTriggerFgColor>
									<colorTriggerBgColor>#000000</colorTriggerBgColor>
									<regexCodeList>
										<string>^\w+ uses? Elemancy Lightning-(\w+) on (\w+)\.$</string>
									</regexCodeList>
									<regexCodePropertyList>
										<integer>1</integer>
									</regexCodePropertyList>
								</Trigger>
								<Trigger isActive="yes" isFolder="no" isTempTrigger="no" isMultiline="no" isPerlSlashGOption="no" isColorizerTrigger="no" isFilterTrigger="no" isSoundTrigger="no" isColorTrigger="no" isColorTriggerFg="no" isColorTriggerBg="no">
									<name>thunder</name>
									<script>if matches[2] == snd.target then
	snd.target_got("dizziness")
	snd.target_got("stupidity")
end</script>
									<triggerType>0</triggerType>
									<conditonLineDelta>0</conditonLineDelta>
									<mStayOpen>0</mStayOpen>
									<mCommand></mCommand>
									<packageName></packageName>
									<mFgColor>#ff0000</mFgColor>
									<mBgColor>#ffff00</mBgColor>
									<mSoundFile></mSoundFile>
									<colorTriggerFgColor>#000000</colorTriggerFgColor>
									<colorTriggerBgColor>#000000</colorTriggerBgColor>
									<regexCodeList>
										<string>^\w+ uses? Elemancy Thunder on (\w+)\.$</string>
									</regexCodeList>
									<regexCodePropertyList>
										<integer>1</integer>
									</regexCodePropertyList>
								</Trigger>
								<Trigger isActive="yes" isFolder="no" isTempTrigger="no" isMultiline="no" isPerlSlashGOption="no" isColorizerTrigger="no" isFilterTrigger="no" isSoundTrigger="no" isColorTrigger="no" isColorTriggerFg="no" isColorTriggerBg="no">
									<name>gorge</name>
									<script>if matches[4] == snd.target then
	snd.target_got("gorged")
	if matches[2] == "Fire" then
		snd.target_got("anorexia")
	elseif matches[2] == "Air" then
		snd.target_got("indifference")
	end
	snd.gorged = matches[3]
end</script>
									<triggerType>0</triggerType>
									<conditonLineDelta>0</conditonLineDelta>
									<mStayOpen>0</mStayOpen>
									<mCommand></mCommand>
									<packageName></packageName>
									<mFgColor>#ff0000</mFgColor>
									<mBgColor>#ffff00</mBgColor>
									<mSoundFile></mSoundFile>
									<colorTriggerFgColor>#000000</colorTriggerFgColor>
									<colorTriggerBgColor>#000000</colorTriggerBgColor>
									<regexCodeList>
										<string>^\w+ uses? Elemancy Gorge-(\w+) \((\w+)\) on (\w+)\.$</string>
									</regexCodeList>
									<regexCodePropertyList>
										<integer>1</integer>
									</regexCodePropertyList>
								</Trigger>
								<Trigger isActive="yes" isFolder="no" isTempTrigger="no" isMultiline="no" isPerlSlashGOption="no" isColorizerTrigger="no" isFilterTrigger="no" isSoundTrigger="no" isColorTrigger="no" isColorTriggerFg="no" isColorTriggerBg="no">
									<name>frostblade</name>
									<script>if matches[4] == snd.target then
  snd.last_affs = {}
  local aff = snd.venomEffect(matches[3])
  snd.target_got(aff)
  table.insert(snd.last_affs, aff)
  if matches[2] == "Water" then
 	 snd.target_got("hypothermia")
  end
end</script>
									<triggerType>0</triggerType>
									<conditonLineDelta>0</conditonLineDelta>
									<mStayOpen>0</mStayOpen>
									<mCommand></mCommand>
									<packageName></packageName>
									<mFgColor>#ff0000</mFgColor>
									<mBgColor>#ffff00</mBgColor>
									<mSoundFile></mSoundFile>
									<colorTriggerFgColor>#000000</colorTriggerFgColor>
									<colorTriggerBgColor>#000000</colorTriggerBgColor>
									<regexCodeList>
										<string>^\w+ uses? Elemancy Frostblade-(\w+) \((\w+)\) on (\w+)\.$</string>
									</regexCodeList>
									<regexCodePropertyList>
										<integer>1</integer>
									</regexCodePropertyList>
								</Trigger>
								<Trigger isActive="yes" isFolder="no" isTempTrigger="no" isMultiline="no" isPerlSlashGOption="no" isColorizerTrigger="no" isFilterTrigger="no" isSoundTrigger="no" isColorTrigger="no" isColorTriggerFg="no" isColorTriggerBg="no">
									<name>windlance prone</name>
									<script>if matches[2] == snd.target then
	snd.target_prone = true
end</script>
									<triggerType>0</triggerType>
									<conditonLineDelta>0</conditonLineDelta>
									<mStayOpen>0</mStayOpen>
									<mCommand></mCommand>
									<packageName></packageName>
									<mFgColor>#ff0000</mFgColor>
									<mBgColor>#ffff00</mBgColor>
									<mSoundFile></mSoundFile>
									<colorTriggerFgColor>#000000</colorTriggerFgColor>
									<colorTriggerBgColor>#000000</colorTriggerBgColor>
									<regexCodeList>
										<string>^The force of the lance knocks (\w+) from (the )?\w+ feet, local debris tearing into (the )?\w+ as (the )?\w+ falls.</string>
									</regexCodeList>
									<regexCodePropertyList>
										<integer>1</integer>
									</regexCodePropertyList>
								</Trigger>
								<Trigger isActive="yes" isFolder="no" isTempTrigger="no" isMultiline="no" isPerlSlashGOption="no" isColorizerTrigger="no" isFilterTrigger="no" isSoundTrigger="no" isColorTrigger="no" isColorTriggerFg="no" isColorTriggerBg="no">
									<name>Frostband tick</name>
									<script>if matches[2] == snd.target then
	 if snd.checkAff("frozen") then
   elseif snd.checkAff("shivering") then
    snd.target_got("frozen")
   elseif snd.checkAff("no_caloric") then
    snd.target_got("shivering")
   else
    snd.target_got("no_caloric")
   end
end</script>
									<triggerType>0</triggerType>
									<conditonLineDelta>0</conditonLineDelta>
									<mStayOpen>0</mStayOpen>
									<mCommand></mCommand>
									<packageName></packageName>
									<mFgColor>#ff0000</mFgColor>
									<mBgColor>#ffff00</mBgColor>
									<mSoundFile></mSoundFile>
									<colorTriggerFgColor>#000000</colorTriggerFgColor>
									<colorTriggerBgColor>#000000</colorTriggerBgColor>
									<regexCodeList>
										<string>^The Brand of the Frost pulses with blue-black light, (\w+)'s face contorting against the excruciating, bone-deep ache of cold.$</string>
									</regexCodeList>
									<regexCodePropertyList>
										<integer>1</integer>
									</regexCodePropertyList>
								</Trigger>
								<Trigger isActive="yes" isFolder="no" isTempTrigger="no" isMultiline="no" isPerlSlashGOption="no" isColorizerTrigger="no" isFilterTrigger="no" isSoundTrigger="no" isColorTrigger="no" isColorTriggerFg="no" isColorTriggerBg="no">
									<name>Frostbrand got</name>
									<script>if matches[2] == snd.target  then
snd.target_cured("direfrost")
	snd.target_got("frostbrand")
end</script>
									<triggerType>0</triggerType>
									<conditonLineDelta>0</conditonLineDelta>
									<mStayOpen>0</mStayOpen>
									<mCommand></mCommand>
									<packageName></packageName>
									<mFgColor>#ff0000</mFgColor>
									<mBgColor>#ffff00</mBgColor>
									<mSoundFile></mSoundFile>
									<colorTriggerFgColor>#000000</colorTriggerFgColor>
									<colorTriggerBgColor>#000000</colorTriggerBgColor>
									<regexCodeList>
										<string>^The gleaming fractals of direfrost unite upon (\w+)'s body, solidifying into the biting Brand of the Frost.$</string>
									</regexCodeList>
									<regexCodePropertyList>
										<integer>1</integer>
									</regexCodePropertyList>
								</Trigger>
								<Trigger isActive="yes" isFolder="no" isTempTrigger="no" isMultiline="no" isPerlSlashGOption="no" isColorizerTrigger="no" isFilterTrigger="no" isSoundTrigger="no" isColorTrigger="no" isColorTriggerFg="no" isColorTriggerBg="no">
									<name>Frostbrand gone</name>
									<script>if matches[2] == snd.target  then
	snd.target_cured("frostbrand")
end</script>
									<triggerType>0</triggerType>
									<conditonLineDelta>0</conditonLineDelta>
									<mStayOpen>0</mStayOpen>
									<mCommand></mCommand>
									<packageName></packageName>
									<mFgColor>#ff0000</mFgColor>
									<mBgColor>#ffff00</mBgColor>
									<mSoundFile></mSoundFile>
									<colorTriggerFgColor>#000000</colorTriggerFgColor>
									<colorTriggerBgColor>#000000</colorTriggerBgColor>
									<regexCodeList>
										<string>^The Frostbrand fades away from (\w+)'s body.$</string>
									</regexCodeList>
									<regexCodePropertyList>
										<integer>1</integer>
									</regexCodePropertyList>
								</Trigger>
								<Trigger isActive="yes" isFolder="no" isTempTrigger="no" isMultiline="no" isPerlSlashGOption="no" isColorizerTrigger="no" isFilterTrigger="no" isSoundTrigger="no" isColorTrigger="no" isColorTriggerFg="no" isColorTriggerBg="no">
									<name>Direfrost</name>
									<script>if matches[2] == snd.target  then
	snd.target_got("direfrost")
end</script>
									<triggerType>0</triggerType>
									<conditonLineDelta>0</conditonLineDelta>
									<mStayOpen>0</mStayOpen>
									<mCommand></mCommand>
									<packageName></packageName>
									<mFgColor>#ff0000</mFgColor>
									<mBgColor>#ffff00</mBgColor>
									<mSoundFile></mSoundFile>
									<colorTriggerFgColor>#000000</colorTriggerFgColor>
									<colorTriggerBgColor>#000000</colorTriggerBgColor>
									<regexCodeList>
										<string>^\w+ uses? Elemancy Direfrost on (\w+)\.$</string>
									</regexCodeList>
									<regexCodePropertyList>
										<integer>1</integer>
									</regexCodePropertyList>
								</Trigger>
							</TriggerGroup>
							<Trigger isActive="yes" isFolder="no" isTempTrigger="no" isMultiline="no" isPerlSlashGOption="no" isColorizerTrigger="no" isFilterTrigger="no" isSoundTrigger="no" isColorTrigger="no" isColorTriggerFg="no" isColorTriggerBg="no">
								<name>Air Glimpse</name>
								<script>snd.glimpse = "air"</script>
								<triggerType>0</triggerType>
								<conditonLineDelta>0</conditonLineDelta>
								<mStayOpen>0</mStayOpen>
								<mCommand></mCommand>
								<packageName></packageName>
								<mFgColor>#ff0000</mFgColor>
								<mBgColor>#ffff00</mBgColor>
								<mSoundFile></mSoundFile>
								<colorTriggerFgColor>#000000</colorTriggerFgColor>
								<colorTriggerBgColor>#000000</colorTriggerBgColor>
								<regexCodeList>
									<string>^You use Thaumaturgy Typhoon \(end\).$</string>
								</regexCodeList>
								<regexCodePropertyList>
									<integer>1</integer>
								</regexCodePropertyList>
							</Trigger>
							<Trigger isActive="yes" isFolder="no" isTempTrigger="no" isMultiline="no" isPerlSlashGOption="no" isColorizerTrigger="no" isFilterTrigger="no" isSoundTrigger="no" isColorTrigger="no" isColorTriggerFg="no" isColorTriggerBg="no">
								<name>Fire Glimpse</name>
								<script>snd.glimpse = "fire"</script>
								<triggerType>0</triggerType>
								<conditonLineDelta>0</conditonLineDelta>
								<mStayOpen>0</mStayOpen>
								<mCommand></mCommand>
								<packageName></packageName>
								<mFgColor>#ff0000</mFgColor>
								<mBgColor>#ffff00</mBgColor>
								<mSoundFile></mSoundFile>
								<colorTriggerFgColor>#000000</colorTriggerFgColor>
								<colorTriggerBgColor>#000000</colorTriggerBgColor>
								<regexCodeList>
									<string>^You use Thaumaturgy Inferno \(end\).$</string>
								</regexCodeList>
								<regexCodePropertyList>
									<integer>1</integer>
								</regexCodePropertyList>
							</Trigger>
							<Trigger isActive="yes" isFolder="no" isTempTrigger="no" isMultiline="no" isPerlSlashGOption="no" isColorizerTrigger="no" isFilterTrigger="no" isSoundTrigger="no" isColorTrigger="no" isColorTriggerFg="no" isColorTriggerBg="no">
								<name>Water Glimpse</name>
								<script>snd.glimpse = "water"</script>
								<triggerType>0</triggerType>
								<conditonLineDelta>0</conditonLineDelta>
								<mStayOpen>0</mStayOpen>
								<mCommand></mCommand>
								<packageName></packageName>
								<mFgColor>#ff0000</mFgColor>
								<mBgColor>#ffff00</mBgColor>
								<mSoundFile></mSoundFile>
								<colorTriggerFgColor>#000000</colorTriggerFgColor>
								<colorTriggerBgColor>#000000</colorTriggerBgColor>
								<regexCodeList>
									<string>^You use Thaumaturgy Maelstrom \(end\).$</string>
								</regexCodeList>
								<regexCodePropertyList>
									<integer>1</integer>
								</regexCodePropertyList>
							</Trigger>
							<Trigger isActive="yes" isFolder="no" isTempTrigger="no" isMultiline="no" isPerlSlashGOption="no" isColorizerTrigger="no" isFilterTrigger="no" isSoundTrigger="no" isColorTrigger="no" isColorTriggerFg="no" isColorTriggerBg="no">
								<name>Glimpse End</name>
								<script>if matches[2] == "Water" or matches[2] == "Fire" or matches[2] == "Air" then
	snd.glimpse = "none"
end</script>
								<triggerType>0</triggerType>
								<conditonLineDelta>0</conditonLineDelta>
								<mStayOpen>0</mStayOpen>
								<mCommand></mCommand>
								<packageName></packageName>
								<mFgColor>#ff0000</mFgColor>
								<mBgColor>#ffff00</mBgColor>
								<mSoundFile></mSoundFile>
								<colorTriggerFgColor>#000000</colorTriggerFgColor>
								<colorTriggerBgColor>#000000</colorTriggerBgColor>
								<regexCodeList>
									<string>^Your glimpse of (\w+) has ended.$</string>
								</regexCodeList>
								<regexCodePropertyList>
									<integer>1</integer>
								</regexCodePropertyList>
							</Trigger>
							<Trigger isActive="yes" isFolder="no" isTempTrigger="no" isMultiline="no" isPerlSlashGOption="no" isColorizerTrigger="no" isFilterTrigger="no" isSoundTrigger="no" isColorTrigger="no" isColorTriggerFg="no" isColorTriggerBg="no">
								<name>Glimpse Affects</name>
								<script>if matches[2] == snd.target then
  if snd.glimpse == "air" then
    if snd.checkAff("vertigo") then
      snd.target_got("muddled")
    else
      snd.target_got("vertigo")
    end
  end
end
if matches[2] == snd.target then
  if snd.glimpse == "water" then
    if snd.checkAff("hypothermia") then
      if not snd.checkAff("no_caloric") then
        snd.target_got("no_caloric")
      elseif snd.checkAff("no_caloric") and not snd.checkAff("shivering") then
        snd.target_got("shivering")
      elseif snd.checkAff("shivering") and not snd.checkAff("frozen") then
        snd.target_got("frozen")
      end
    else
      snd.target_got("hypothermia")
    end
  end
end
if matches[2] == snd.target then
  if snd.glimpse == "fire" then
    snd.target_got("ablaze")
  end
end</script>
								<triggerType>0</triggerType>
								<conditonLineDelta>0</conditonLineDelta>
								<mStayOpen>0</mStayOpen>
								<mCommand></mCommand>
								<packageName></packageName>
								<mFgColor>#ff0000</mFgColor>
								<mBgColor>#ffff00</mBgColor>
								<mSoundFile></mSoundFile>
								<colorTriggerFgColor>#000000</colorTriggerFgColor>
								<colorTriggerBgColor>#000000</colorTriggerBgColor>
								<regexCodeList>
									<string>^Your glimpse affects (\w+)\.$</string>
								</regexCodeList>
								<regexCodePropertyList>
									<integer>1</integer>
								</regexCodePropertyList>
							</Trigger>
							<Trigger isActive="yes" isFolder="no" isTempTrigger="no" isMultiline="no" isPerlSlashGOption="no" isColorizerTrigger="no" isFilterTrigger="no" isSoundTrigger="no" isColorTrigger="no" isColorTriggerFg="no" isColorTriggerBg="no">
								<name>Fulcrum Dissonance Tracking</name>
								<script>if snd.toggles.atkecho then
	deleteLine()
	snd.message("Gave: "..matches[3])
end

if matches[2] == snd.target then
	snd.target_got(matches[3])
end</script>
								<triggerType>0</triggerType>
								<conditonLineDelta>0</conditonLineDelta>
								<mStayOpen>0</mStayOpen>
								<mCommand></mCommand>
								<packageName></packageName>
								<mFgColor>#ff0000</mFgColor>
								<mBgColor>#ffff00</mBgColor>
								<mSoundFile></mSoundFile>
								<colorTriggerFgColor>#000000</colorTriggerFgColor>
								<colorTriggerBgColor>#000000</colorTriggerBgColor>
								<regexCodeList>
									<string>^Your fulcrum's dissonance affects (\w+) with (\w+)\.$</string>
								</regexCodeList>
								<regexCodePropertyList>
									<integer>1</integer>
								</regexCodePropertyList>
							</Trigger>
							<Trigger isActive="yes" isFolder="no" isTempTrigger="no" isMultiline="no" isPerlSlashGOption="no" isColorizerTrigger="no" isFilterTrigger="no" isSoundTrigger="no" isColorTrigger="no" isColorTriggerFg="no" isColorTriggerBg="no">
								<name>Glimpsing on</name>
								<script>snd.glimpsing = true</script>
								<triggerType>0</triggerType>
								<conditonLineDelta>0</conditonLineDelta>
								<mStayOpen>0</mStayOpen>
								<mCommand></mCommand>
								<packageName></packageName>
								<mFgColor>#ff0000</mFgColor>
								<mBgColor>#ffff00</mBgColor>
								<mSoundFile></mSoundFile>
								<colorTriggerFgColor>#000000</colorTriggerFgColor>
								<colorTriggerBgColor>#000000</colorTriggerBgColor>
								<regexCodeList>
									<string>^You use Thaumaturgy (Maelstrom|Typhoon|Inferno) \(start\)\.$</string>
								</regexCodeList>
								<regexCodePropertyList>
									<integer>1</integer>
								</regexCodePropertyList>
							</Trigger>
							<Trigger isActive="yes" isFolder="no" isTempTrigger="no" isMultiline="no" isPerlSlashGOption="no" isColorizerTrigger="no" isFilterTrigger="no" isSoundTrigger="no" isColorTrigger="no" isColorTriggerFg="no" isColorTriggerBg="no">
								<name>Glimpsing off</name>
								<script>snd.glimpsing = false</script>
								<triggerType>0</triggerType>
								<conditonLineDelta>0</conditonLineDelta>
								<mStayOpen>0</mStayOpen>
								<mCommand></mCommand>
								<packageName></packageName>
								<mFgColor>#ff0000</mFgColor>
								<mBgColor>#ffff00</mBgColor>
								<mSoundFile></mSoundFile>
								<colorTriggerFgColor>#000000</colorTriggerFgColor>
								<colorTriggerBgColor>#000000</colorTriggerBgColor>
								<regexCodeList>
									<string>^You use Thaumaturgy (Maelstrom|Typhoon|Inferno) \(end\)\.$</string>
								</regexCodeList>
								<regexCodePropertyList>
									<integer>1</integer>
								</regexCodePropertyList>
							</Trigger>
							<Trigger isActive="yes" isFolder="no" isTempTrigger="no" isMultiline="no" isPerlSlashGOption="no" isColorizerTrigger="no" isFilterTrigger="no" isSoundTrigger="no" isColorTrigger="no" isColorTriggerFg="no" isColorTriggerBg="no">
								<name>Flare</name>
								<script>if matches[2] == snd.target then
  if snd.glimpse == "air" then
    if snd.checkAff("vertigo") then
   		snd.target_got("muddled")
    else
   		snd.target_got("vertigo")
    end
  end

  if snd.glimpse == "water" then
    if snd.checkAff("hypothermia") then
			if not snd.checkAff("no_caloric") then
    		snd.target_got("no_caloric")
			elseif snd.checkAff("no_caloric") and not snd.checkAff("shivering") then
				snd.target_got("shivering")
			elseif snd.checkAff("shivering") and not snd.checkAff("frozen") then
				snd.target_got("frozen")
			end
    else
   	 snd.target_got("hypothermia")
    end
  end
	
  if snd.glimpse == "fire" then
    snd.target_got("ablaze")
	end
end</script>
								<triggerType>0</triggerType>
								<conditonLineDelta>0</conditonLineDelta>
								<mStayOpen>0</mStayOpen>
								<mCommand></mCommand>
								<packageName></packageName>
								<mFgColor>#ff0000</mFgColor>
								<mBgColor>#ffff00</mBgColor>
								<mSoundFile></mSoundFile>
								<colorTriggerFgColor>#000000</colorTriggerFgColor>
								<colorTriggerBgColor>#000000</colorTriggerBgColor>
								<regexCodeList>
									<string>^You use Thaumaturgy Flare on (\w+).$</string>
								</regexCodeList>
								<regexCodePropertyList>
									<integer>1</integer>
								</regexCodePropertyList>
							</Trigger>
						</TriggerGroup>
						<TriggerGroup isActive="yes" isFolder="yes" isTempTrigger="no" isMultiline="no" isPerlSlashGOption="no" isColorizerTrigger="no" isFilterTrigger="no" isSoundTrigger="no" isColorTrigger="no" isColorTriggerFg="no" isColorTriggerBg="no">
							<name>Sciomancer Affs</name>
							<script></script>
							<triggerType>0</triggerType>
							<conditonLineDelta>0</conditonLineDelta>
							<mStayOpen>0</mStayOpen>
							<mCommand></mCommand>
							<packageName></packageName>
							<mFgColor>#ff0000</mFgColor>
							<mBgColor>#ffff00</mBgColor>
							<mSoundFile></mSoundFile>
							<colorTriggerFgColor>#000000</colorTriggerFgColor>
							<colorTriggerBgColor>#000000</colorTriggerBgColor>
							<regexCodeList />
							<regexCodePropertyList />
							<Trigger isActive="yes" isFolder="no" isTempTrigger="no" isMultiline="no" isPerlSlashGOption="no" isColorizerTrigger="no" isFilterTrigger="no" isSoundTrigger="no" isColorTrigger="no" isColorTriggerFg="no" isColorTriggerBg="no">
								<name>Gloom</name>
								<script>if matches[2] == snd.target then
	if table.contains(gmcp.Room.Info.details, "darkness") == true and not matches[1]:find("despairing") then
	 	snd.target_got("gloom")
		snd.target_got("nyctophobia")
	else
		snd.target_got("gloom")
	end
end</script>
								<triggerType>0</triggerType>
								<conditonLineDelta>0</conditonLineDelta>
								<mStayOpen>0</mStayOpen>
								<mCommand></mCommand>
								<packageName></packageName>
								<mFgColor>#ff0000</mFgColor>
								<mBgColor>#ffff00</mBgColor>
								<mSoundFile></mSoundFile>
								<colorTriggerFgColor>#000000</colorTriggerFgColor>
								<colorTriggerBgColor>#000000</colorTriggerBgColor>
								<regexCodeList>
									<string>^You use Sciomancy Gloom on (\w+).$</string>
									<string>^You use Sciomancy Shadowprice Gloom on (\w+).$</string>
									<string>^(\w+)'s shoulders tense and hunch, head hanging as a despairing gloom weighs on (the )?\w+.$</string>
								</regexCodeList>
								<regexCodePropertyList>
									<integer>1</integer>
									<integer>1</integer>
									<integer>1</integer>
								</regexCodePropertyList>
							</Trigger>
							<Trigger isActive="yes" isFolder="no" isTempTrigger="no" isMultiline="no" isPerlSlashGOption="no" isColorizerTrigger="no" isFilterTrigger="no" isSoundTrigger="no" isColorTrigger="no" isColorTriggerFg="no" isColorTriggerBg="no">
								<name>Shadowsphere Shadowprice</name>
								<script>if matches[3] == snd.target then
	snd.target_got("shadowsphere")
	if matches[2]:find("Shadowprice") then
		snd.target_got("nyctophobia")
	end
end</script>
								<triggerType>0</triggerType>
								<conditonLineDelta>0</conditonLineDelta>
								<mStayOpen>0</mStayOpen>
								<mCommand></mCommand>
								<packageName></packageName>
								<mFgColor>#ff0000</mFgColor>
								<mBgColor>#ffff00</mBgColor>
								<mSoundFile></mSoundFile>
								<colorTriggerFgColor>#000000</colorTriggerFgColor>
								<colorTriggerBgColor>#000000</colorTriggerBgColor>
								<regexCodeList>
									<string>^\w+ uses? Sciomancy (Shadowprice )?Shadowsphere on (\w+).$</string>
								</regexCodeList>
								<regexCodePropertyList>
									<integer>1</integer>
								</regexCodePropertyList>
							</Trigger>
							<Trigger isActive="yes" isFolder="no" isTempTrigger="no" isMultiline="no" isPerlSlashGOption="no" isColorizerTrigger="no" isFilterTrigger="no" isSoundTrigger="no" isColorTrigger="no" isColorTriggerFg="no" isColorTriggerBg="no">
								<name>Hew</name>
								<script>if matches[2] == snd.target then
 snd.used.shield = false
end</script>
								<triggerType>0</triggerType>
								<conditonLineDelta>0</conditonLineDelta>
								<mStayOpen>0</mStayOpen>
								<mCommand></mCommand>
								<packageName></packageName>
								<mFgColor>#ff0000</mFgColor>
								<mBgColor>#ffff00</mBgColor>
								<mSoundFile></mSoundFile>
								<colorTriggerFgColor>#000000</colorTriggerFgColor>
								<colorTriggerBgColor>#000000</colorTriggerBgColor>
								<regexCodeList>
									<string>^\w+ uses? Sciomancy Hew on (\w+).$</string>
									<string>^\w+ uses? Sciomancy Shadowprice Hew on (\w+).$</string>
									<string>^\w+ uses? Sciomancy Shadowprice Hew (fail) on (\w+).$</string>
									<string>^\w+ uses? Sciomancy Hew (fail) on (\w+).$</string>
								</regexCodeList>
								<regexCodePropertyList>
									<integer>1</integer>
									<integer>1</integer>
									<integer>1</integer>
									<integer>1</integer>
								</regexCodePropertyList>
							</Trigger>
							<Trigger isActive="yes" isFolder="no" isTempTrigger="no" isMultiline="no" isPerlSlashGOption="no" isColorizerTrigger="no" isFilterTrigger="no" isSoundTrigger="no" isColorTrigger="no" isColorTriggerFg="no" isColorTriggerBg="no">
								<name>Blast</name>
								<script>--saving in case I find a reason to keep stripping off firefly</script>
								<triggerType>0</triggerType>
								<conditonLineDelta>0</conditonLineDelta>
								<mStayOpen>0</mStayOpen>
								<mCommand></mCommand>
								<packageName></packageName>
								<mFgColor>#ff0000</mFgColor>
								<mBgColor>#ffff00</mBgColor>
								<mSoundFile></mSoundFile>
								<colorTriggerFgColor>#000000</colorTriggerFgColor>
								<colorTriggerBgColor>#000000</colorTriggerBgColor>
								<regexCodeList>
									<string>^\w+ uses? Sciomancy Blast on (\w+).$</string>
									<string>^\w+ uses? Sciomancy Shadowprice Blast on (\w+).$</string>
								</regexCodeList>
								<regexCodePropertyList>
									<integer>1</integer>
									<integer>1</integer>
								</regexCodePropertyList>
							</Trigger>
							<Trigger isActive="yes" isFolder="no" isTempTrigger="no" isMultiline="no" isPerlSlashGOption="no" isColorizerTrigger="no" isFilterTrigger="no" isSoundTrigger="no" isColorTrigger="no" isColorTriggerFg="no" isColorTriggerBg="no">
								<name>Gloom Cured</name>
								<script>if matches[2] == snd.target then
	snd.target_cured("gloom")
end</script>
								<triggerType>0</triggerType>
								<conditonLineDelta>0</conditonLineDelta>
								<mStayOpen>0</mStayOpen>
								<mCommand></mCommand>
								<packageName></packageName>
								<mFgColor>#ff0000</mFgColor>
								<mBgColor>#ffff00</mBgColor>
								<mSoundFile></mSoundFile>
								<colorTriggerFgColor>#000000</colorTriggerFgColor>
								<colorTriggerBgColor>#000000</colorTriggerBgColor>
								<regexCodeList>
									<string>^The despairing gloom has lifted from (\w+).$</string>
								</regexCodeList>
								<regexCodePropertyList>
									<integer>1</integer>
								</regexCodePropertyList>
							</Trigger>
							<Trigger isActive="yes" isFolder="no" isTempTrigger="no" isMultiline="no" isPerlSlashGOption="no" isColorizerTrigger="no" isFilterTrigger="no" isSoundTrigger="no" isColorTrigger="no" isColorTriggerFg="no" isColorTriggerBg="no">
								<name>Shadeling Stun/Nycto</name>
								<script>if matches[2] == snd.target then
	snd.target_got("nyctophobia")
end</script>
								<triggerType>0</triggerType>
								<conditonLineDelta>0</conditonLineDelta>
								<mStayOpen>0</mStayOpen>
								<mCommand></mCommand>
								<packageName></packageName>
								<mFgColor>#ff0000</mFgColor>
								<mBgColor>#ffff00</mBgColor>
								<mSoundFile></mSoundFile>
								<colorTriggerFgColor>#000000</colorTriggerFgColor>
								<colorTriggerBgColor>#000000</colorTriggerBgColor>
								<regexCodeList>
									<string>^An inky shadeling stuns (\w+) and afflcits nyctophobia.$</string>
									<string>^(\w+) airs a shuddering whimper as the pressing darkness afflicts (the )?\w+ with nyctophobia.$</string>
								</regexCodeList>
								<regexCodePropertyList>
									<integer>1</integer>
									<integer>1</integer>
								</regexCodePropertyList>
							</Trigger>
							<Trigger isActive="yes" isFolder="no" isTempTrigger="no" isMultiline="no" isPerlSlashGOption="no" isColorizerTrigger="no" isFilterTrigger="no" isSoundTrigger="no" isColorTrigger="no" isColorTriggerFg="no" isColorTriggerBg="no">
								<name>Lethargy Shaderot</name>
								<script>if matches[2] == snd.target then
	snd.target_got("lethargy")
	if  snd.checkAff("shaderot_benign") then
		snd.target_got("shaderot_spirit")
		snd.target_got("shaderot_heat")
		snd.target_got("shaderot_wither")
	end
end</script>
								<triggerType>0</triggerType>
								<conditonLineDelta>0</conditonLineDelta>
								<mStayOpen>0</mStayOpen>
								<mCommand></mCommand>
								<packageName></packageName>
								<mFgColor>#ff0000</mFgColor>
								<mBgColor>#ffff00</mBgColor>
								<mSoundFile></mSoundFile>
								<colorTriggerFgColor>#000000</colorTriggerFgColor>
								<colorTriggerBgColor>#000000</colorTriggerBgColor>
								<regexCodeList>
									<string>^(\w+)\'s movements stagger with a lingering lethargy, strength sapped from (the )?\w+ muscles.$</string>
								</regexCodeList>
								<regexCodePropertyList>
									<integer>1</integer>
								</regexCodePropertyList>
							</Trigger>
							<Trigger isActive="yes" isFolder="no" isTempTrigger="no" isMultiline="no" isPerlSlashGOption="no" isColorizerTrigger="no" isFilterTrigger="no" isSoundTrigger="no" isColorTrigger="no" isColorTriggerFg="no" isColorTriggerBg="no">
								<name>Voidgaze Shadowprice</name>
								<script>if matches[2] == snd.target then
 snd.target_got("sight")
end</script>
								<triggerType>0</triggerType>
								<conditonLineDelta>0</conditonLineDelta>
								<mStayOpen>0</mStayOpen>
								<mCommand></mCommand>
								<packageName></packageName>
								<mFgColor>#ff0000</mFgColor>
								<mBgColor>#ffff00</mBgColor>
								<mSoundFile></mSoundFile>
								<colorTriggerFgColor>#000000</colorTriggerFgColor>
								<colorTriggerBgColor>#000000</colorTriggerBgColor>
								<regexCodeList>
									<string>^\w+ uses? Sciomancy Shadowprice Voidgaze on (\w+).$</string>
								</regexCodeList>
								<regexCodePropertyList>
									<integer>1</integer>
								</regexCodePropertyList>
							</Trigger>
							<Trigger isActive="yes" isFolder="no" isTempTrigger="no" isMultiline="no" isPerlSlashGOption="no" isColorizerTrigger="no" isFilterTrigger="no" isSoundTrigger="no" isColorTrigger="no" isColorTriggerFg="no" isColorTriggerBg="no">
								<name>Fever</name>
								<script>if matches[2] == snd.target then
	snd.target_got("vomiting")
	snd.target_got("haemophilia")
end</script>
								<triggerType>0</triggerType>
								<conditonLineDelta>0</conditonLineDelta>
								<mStayOpen>0</mStayOpen>
								<mCommand></mCommand>
								<packageName></packageName>
								<mFgColor>#ff0000</mFgColor>
								<mBgColor>#ffff00</mBgColor>
								<mSoundFile></mSoundFile>
								<colorTriggerFgColor>#000000</colorTriggerFgColor>
								<colorTriggerBgColor>#000000</colorTriggerBgColor>
								<regexCodeList>
									<string>^\w+ uses? Sciomancy Fever on (\w+).$</string>
									<string>^\w+ uses? Sciomancy Shadowprice Fever on (\w+).$</string>
								</regexCodeList>
								<regexCodePropertyList>
									<integer>1</integer>
									<integer>1</integer>
								</regexCodePropertyList>
							</Trigger>
							<Trigger isActive="yes" isFolder="no" isTempTrigger="no" isMultiline="no" isPerlSlashGOption="no" isColorizerTrigger="no" isFilterTrigger="no" isSoundTrigger="no" isColorTrigger="no" isColorTriggerFg="no" isColorTriggerBg="no">
								<name>Scourge</name>
								<script>if matches[2] == snd.target then
	if snd.checkAff("dizziness") and snd.checkAff("nyctophobia") and snd.checkAff("confusion") and snd.checkAff("dementia") then
			snd.target_got("faintness")
	end

end</script>
								<triggerType>0</triggerType>
								<conditonLineDelta>0</conditonLineDelta>
								<mStayOpen>0</mStayOpen>
								<mCommand></mCommand>
								<packageName></packageName>
								<mFgColor>#ff0000</mFgColor>
								<mBgColor>#ffff00</mBgColor>
								<mSoundFile></mSoundFile>
								<colorTriggerFgColor>#000000</colorTriggerFgColor>
								<colorTriggerBgColor>#000000</colorTriggerBgColor>
								<regexCodeList>
									<string>^\w+ uses? Sciomancy Scourge on (\w+).$</string>
									<string>^\w+ uses? Sciomancy Shadowprice Scourge on (\w+).$</string>
								</regexCodeList>
								<regexCodePropertyList>
									<integer>1</integer>
									<integer>1</integer>
								</regexCodePropertyList>
							</Trigger>
							<Trigger isActive="yes" isFolder="no" isTempTrigger="no" isMultiline="no" isPerlSlashGOption="no" isColorizerTrigger="no" isFilterTrigger="no" isSoundTrigger="no" isColorTrigger="no" isColorTriggerFg="no" isColorTriggerBg="no">
								<name>Scourge Relapse</name>
								<script>if matches[2] == snd.target then
	snd.target_got(matches[3])
end</script>
								<triggerType>0</triggerType>
								<conditonLineDelta>0</conditonLineDelta>
								<mStayOpen>0</mStayOpen>
								<mCommand></mCommand>
								<packageName></packageName>
								<mFgColor>#ff0000</mFgColor>
								<mBgColor>#ffff00</mBgColor>
								<mSoundFile></mSoundFile>
								<colorTriggerFgColor>#000000</colorTriggerFgColor>
								<colorTriggerBgColor>#000000</colorTriggerBgColor>
								<regexCodeList>
									<string>^Your scourge afflicts (\w+) with (.*).$</string>
								</regexCodeList>
								<regexCodePropertyList>
									<integer>1</integer>
								</regexCodePropertyList>
							</Trigger>
							<Trigger isActive="yes" isFolder="no" isTempTrigger="no" isMultiline="no" isPerlSlashGOption="no" isColorizerTrigger="no" isFilterTrigger="no" isSoundTrigger="no" isColorTrigger="no" isColorTriggerFg="no" isColorTriggerBg="no">
								<name>Chill Normal</name>
								<script>if matches[2] == snd.target then
 if snd.checkAff("frozen") then
 elseif snd.checkAff("shivering") then
  snd.target_got("frozen")
 elseif snd.checkAff("no_caloric") then
  snd.target_got("shivering")
 else
  snd.target_got("no_caloric")
 end
end</script>
								<triggerType>0</triggerType>
								<conditonLineDelta>0</conditonLineDelta>
								<mStayOpen>0</mStayOpen>
								<mCommand></mCommand>
								<packageName></packageName>
								<mFgColor>#ff0000</mFgColor>
								<mBgColor>#ffff00</mBgColor>
								<mSoundFile></mSoundFile>
								<colorTriggerFgColor>#000000</colorTriggerFgColor>
								<colorTriggerBgColor>#000000</colorTriggerBgColor>
								<regexCodeList>
									<string>^\w+ uses? Sciomancy Chill on (\w+).$</string>
								</regexCodeList>
								<regexCodePropertyList>
									<integer>1</integer>
								</regexCodePropertyList>
							</Trigger>
							<Trigger isActive="yes" isFolder="no" isTempTrigger="no" isMultiline="no" isPerlSlashGOption="no" isColorizerTrigger="no" isFilterTrigger="no" isSoundTrigger="no" isColorTrigger="no" isColorTriggerFg="no" isColorTriggerBg="no">
								<name>Chill Shadowprice</name>
								<script>if matches[2] == snd.target then
 if snd.checkAff("frozen") then
 
 elseif snd.checkAff("shivering") then
  snd.target_got("frozen")
 else
 	snd.target_got("no_caloric")
 	snd.target_got("shivering")
 end
end</script>
								<triggerType>0</triggerType>
								<conditonLineDelta>0</conditonLineDelta>
								<mStayOpen>0</mStayOpen>
								<mCommand></mCommand>
								<packageName></packageName>
								<mFgColor>#ff0000</mFgColor>
								<mBgColor>#ffff00</mBgColor>
								<mSoundFile></mSoundFile>
								<colorTriggerFgColor>#000000</colorTriggerFgColor>
								<colorTriggerBgColor>#000000</colorTriggerBgColor>
								<regexCodeList>
									<string>^\w+ uses? Sciomancy Shadowprice Chill on (\w+).$</string>
								</regexCodeList>
								<regexCodePropertyList>
									<integer>1</integer>
								</regexCodePropertyList>
							</Trigger>
							<Trigger isActive="yes" isFolder="no" isTempTrigger="no" isMultiline="no" isPerlSlashGOption="no" isColorizerTrigger="no" isFilterTrigger="no" isSoundTrigger="no" isColorTrigger="no" isColorTriggerFg="no" isColorTriggerBg="no">
								<name>Ruin</name>
								<script>if matches[2] == snd.target then
	if not snd.checkAff("clumsiness") then 
			snd.target_got("clumsiness")
	elseif not snd.checkAff("weariness") then 
			snd.target_got("weariness")
	elseif not snd.checkAff("lethargy") then 
			snd.target_got("lethargy")
	else
			snd.target_got("paresis")
	end
end</script>
								<triggerType>0</triggerType>
								<conditonLineDelta>0</conditonLineDelta>
								<mStayOpen>0</mStayOpen>
								<mCommand></mCommand>
								<packageName></packageName>
								<mFgColor>#ff0000</mFgColor>
								<mBgColor>#ffff00</mBgColor>
								<mSoundFile></mSoundFile>
								<colorTriggerFgColor>#000000</colorTriggerFgColor>
								<colorTriggerBgColor>#000000</colorTriggerBgColor>
								<regexCodeList>
									<string>^\w+ uses? Sciomancy Ruin on (\w+).$</string>
								</regexCodeList>
								<regexCodePropertyList>
									<integer>1</integer>
								</regexCodePropertyList>
							</Trigger>
							<Trigger isActive="yes" isFolder="no" isTempTrigger="no" isMultiline="no" isPerlSlashGOption="no" isColorizerTrigger="no" isFilterTrigger="no" isSoundTrigger="no" isColorTrigger="no" isColorTriggerFg="no" isColorTriggerBg="no">
								<name>Ruin Shadowprice</name>
								<script>if matches[2] == snd.target then
    local aff_count = 0
    if not snd.checkAff("clumsiness") then
        snd.target_got("clumsiness")
        aff_count = 1
    end
    if not snd.checkAff("weariness") then
        snd.target_got("weariness")
        aff_count = aff_count + 1
    end
    if not snd.checkAff("lethargy") and aff_count &lt; 2 then
        snd.target_got("lethargy")
        aff_count = aff_count + 1
    end
    if not snd.checkAff("paresis") and aff_count &lt; 2 then
        snd.target_got("paresis")
    end
end</script>
								<triggerType>0</triggerType>
								<conditonLineDelta>0</conditonLineDelta>
								<mStayOpen>0</mStayOpen>
								<mCommand></mCommand>
								<packageName></packageName>
								<mFgColor>#ff0000</mFgColor>
								<mBgColor>#ffff00</mBgColor>
								<mSoundFile></mSoundFile>
								<colorTriggerFgColor>#000000</colorTriggerFgColor>
								<colorTriggerBgColor>#000000</colorTriggerBgColor>
								<regexCodeList>
									<string>^\w+ uses? Sciomancy Shadowprice Ruin on (\w+).$</string>
								</regexCodeList>
								<regexCodePropertyList>
									<integer>1</integer>
								</regexCodePropertyList>
							</Trigger>
							<Trigger isActive="yes" isFolder="no" isTempTrigger="no" isMultiline="no" isPerlSlashGOption="no" isColorizerTrigger="no" isFilterTrigger="no" isSoundTrigger="no" isColorTrigger="no" isColorTriggerFg="no" isColorTriggerBg="no">
								<name>Shadeling</name>
								<script>if matches[2] == snd.target then
 if snd.checkAff("frozen") then

 elseif snd.checkAff("shivering") then
  snd.target_got("frozen")
 elseif snd.checkAff("no_caloric") then
  snd.target_got("shivering")
 else
  snd.target_got("no_caloric")
 end
end</script>
								<triggerType>0</triggerType>
								<conditonLineDelta>0</conditonLineDelta>
								<mStayOpen>0</mStayOpen>
								<mCommand></mCommand>
								<packageName></packageName>
								<mFgColor>#ff0000</mFgColor>
								<mBgColor>#ffff00</mBgColor>
								<mSoundFile></mSoundFile>
								<colorTriggerFgColor>#000000</colorTriggerFgColor>
								<colorTriggerBgColor>#000000</colorTriggerBgColor>
								<regexCodeList>
									<string>^Frost appears on (\w+)'s flesh as an inky shadeling reaches out to touch (the )?\w+.$</string>
								</regexCodeList>
								<regexCodePropertyList>
									<integer>1</integer>
								</regexCodePropertyList>
							</Trigger>
							<Trigger isActive="yes" isFolder="no" isTempTrigger="no" isMultiline="no" isPerlSlashGOption="no" isColorizerTrigger="no" isFilterTrigger="no" isSoundTrigger="no" isColorTrigger="no" isColorTriggerFg="no" isColorTriggerBg="no">
								<name>Gravity - lose 1 stack</name>
								<script>if matches[2] == snd.target then
	if snd.gravity &gt; 0 then
		snd.gravity = snd.gravity-1
	else	
		snd.gravity = 0
	end
end
snd.message("&lt;red&gt;Gravity Total: &lt;white&gt;"..snd.gravity)</script>
								<triggerType>0</triggerType>
								<conditonLineDelta>0</conditonLineDelta>
								<mStayOpen>0</mStayOpen>
								<mCommand></mCommand>
								<packageName></packageName>
								<mFgColor>#ff0000</mFgColor>
								<mBgColor>#ffff00</mBgColor>
								<mSoundFile></mSoundFile>
								<colorTriggerFgColor>#000000</colorTriggerFgColor>
								<colorTriggerBgColor>#000000</colorTriggerBgColor>
								<regexCodeList>
									<string>^The air shifts around (\w+), a little delayed as if (the )?\w+ was lighter.$</string>
								</regexCodeList>
								<regexCodePropertyList>
									<integer>1</integer>
								</regexCodePropertyList>
							</Trigger>
							<Trigger isActive="yes" isFolder="no" isTempTrigger="no" isMultiline="no" isPerlSlashGOption="no" isColorizerTrigger="no" isFilterTrigger="no" isSoundTrigger="no" isColorTrigger="no" isColorTriggerFg="no" isColorTriggerBg="no">
								<name>Gravity - Gain 1 stack</name>
								<script>if matches[2] == snd.target and snd.checkAff("imbued") then
	if snd.gravity &lt;5 then
		snd.gravity = snd.gravity+1
	end
end
snd.message("&lt;red&gt;Gravity Total: &lt;white&gt;"..snd.gravity)</script>
								<triggerType>0</triggerType>
								<conditonLineDelta>0</conditonLineDelta>
								<mStayOpen>0</mStayOpen>
								<mCommand></mCommand>
								<packageName></packageName>
								<mFgColor>#ff0000</mFgColor>
								<mBgColor>#ffff00</mBgColor>
								<mSoundFile></mSoundFile>
								<colorTriggerFgColor>#000000</colorTriggerFgColor>
								<colorTriggerBgColor>#000000</colorTriggerBgColor>
								<regexCodeList>
									<string>^The imbued curse hums as (\w+) grows heavier, personal gravity increasing in response to the assaulting shadow.$</string>
								</regexCodeList>
								<regexCodePropertyList>
									<integer>1</integer>
								</regexCodePropertyList>
							</Trigger>
							<Trigger isActive="yes" isFolder="no" isTempTrigger="no" isMultiline="no" isPerlSlashGOption="no" isColorizerTrigger="no" isFilterTrigger="no" isSoundTrigger="no" isColorTrigger="no" isColorTriggerFg="no" isColorTriggerBg="no">
								<name>Grip</name>
								<script>if matches[2] == snd.target then
	if not snd.checkAff("paresis") then
			snd.target_got("paresis")
	end
	snd.target_prone = true
	
	if matches[1]:find("You") then
		if snd.gravity &gt;= 0 then
			snd.gravity = snd.gravity+1
		end
	end
end</script>
								<triggerType>0</triggerType>
								<conditonLineDelta>0</conditonLineDelta>
								<mStayOpen>0</mStayOpen>
								<mCommand></mCommand>
								<packageName></packageName>
								<mFgColor>#ff0000</mFgColor>
								<mBgColor>#ffff00</mBgColor>
								<mSoundFile></mSoundFile>
								<colorTriggerFgColor>#000000</colorTriggerFgColor>
								<colorTriggerBgColor>#000000</colorTriggerBgColor>
								<regexCodeList>
									<string>^\w+ uses? Gravitation Grip on (\w+).$</string>
								</regexCodeList>
								<regexCodePropertyList>
									<integer>1</integer>
								</regexCodePropertyList>
							</Trigger>
							<Trigger isActive="yes" isFolder="no" isTempTrigger="no" isMultiline="no" isPerlSlashGOption="no" isColorizerTrigger="no" isFilterTrigger="no" isSoundTrigger="no" isColorTrigger="no" isColorTriggerFg="no" isColorTriggerBg="no">
								<name>Falter</name>
								<script>if matches[2] == snd.target then
	if snd.checkAff("dizziness") then
			snd.target_got("dementia")
	elseif snd.checkAff("weariness") then
			snd.target_got("exhaustion")
	end
end</script>
								<triggerType>0</triggerType>
								<conditonLineDelta>0</conditonLineDelta>
								<mStayOpen>0</mStayOpen>
								<mCommand></mCommand>
								<packageName></packageName>
								<mFgColor>#ff0000</mFgColor>
								<mBgColor>#ffff00</mBgColor>
								<mSoundFile></mSoundFile>
								<colorTriggerFgColor>#000000</colorTriggerFgColor>
								<colorTriggerBgColor>#000000</colorTriggerBgColor>
								<regexCodeList>
									<string>^\w+ uses? Sciomancy Shadowprice Falter on (\w+).$</string>
									<string>^\w+ uses? Sciomancy Falter on (\w+).$</string>
								</regexCodeList>
								<regexCodePropertyList>
									<integer>1</integer>
									<integer>1</integer>
								</regexCodePropertyList>
							</Trigger>
							<Trigger isActive="yes" isFolder="no" isTempTrigger="no" isMultiline="no" isPerlSlashGOption="no" isColorizerTrigger="no" isFilterTrigger="no" isSoundTrigger="no" isColorTrigger="no" isColorTriggerFg="no" isColorTriggerBg="no">
								<name>Erupt</name>
								<script>if matches[3] == snd.target then
 	snd.last_hit_limb = matches[2]
 	if snd.gravity == 0 then
 		snd.last_limb_dmg = 4
	elseif snd.gravity == 1 then
 		snd.last_limb_dmg = 8
	elseif snd.gravity == 2 then
 		snd.last_limb_dmg = 13
	elseif snd.gravity == 3 then
 		snd.last_limb_dmg = 19
	elseif snd.gravity == 4 then
 		snd.last_limb_dmg = 25
	elseif snd.gravity == 5 then
 		snd.last_limb_dmg = 33
	end	
	
 snd.took_limb_dmg(snd.last_hit_limb, snd.last_limb_dmg)
 snd.gravity = 0
 
end</script>
								<triggerType>0</triggerType>
								<conditonLineDelta>0</conditonLineDelta>
								<mStayOpen>0</mStayOpen>
								<mCommand></mCommand>
								<packageName></packageName>
								<mFgColor>#ff0000</mFgColor>
								<mBgColor>#ffff00</mBgColor>
								<mSoundFile></mSoundFile>
								<colorTriggerFgColor>#000000</colorTriggerFgColor>
								<colorTriggerBgColor>#000000</colorTriggerBgColor>
								<regexCodeList>
									<string>^You use Gravitation Erupt \((.+)\) on (\w+).$</string>
								</regexCodeList>
								<regexCodePropertyList>
									<integer>1</integer>
								</regexCodePropertyList>
							</Trigger>
							<Trigger isActive="yes" isFolder="no" isTempTrigger="no" isMultiline="no" isPerlSlashGOption="no" isColorizerTrigger="no" isFilterTrigger="no" isSoundTrigger="no" isColorTrigger="no" isColorTriggerFg="no" isColorTriggerBg="no">
								<name>Voidgaze</name>
								<script>if matches[2] == snd.target then
	snd.target_got(matches[5])
end</script>
								<triggerType>0</triggerType>
								<conditonLineDelta>0</conditonLineDelta>
								<mStayOpen>0</mStayOpen>
								<mCommand></mCommand>
								<packageName></packageName>
								<mFgColor>#ff0000</mFgColor>
								<mBgColor>#ffff00</mBgColor>
								<mSoundFile></mSoundFile>
								<colorTriggerFgColor>#000000</colorTriggerFgColor>
								<colorTriggerBgColor>#000000</colorTriggerBgColor>
								<regexCodeList>
									<string>^Blackened blood beads and slicks down (\w+)'s face as (the )?\w+ stares into nothingness, the desolate distortion of the world reflected through the void afflicting (the )?\w+ with (.*).$</string>
								</regexCodeList>
								<regexCodePropertyList>
									<integer>1</integer>
								</regexCodePropertyList>
							</Trigger>
							<Trigger isActive="no" isFolder="no" isTempTrigger="no" isMultiline="no" isPerlSlashGOption="no" isColorizerTrigger="no" isFilterTrigger="no" isSoundTrigger="no" isColorTrigger="no" isColorTriggerFg="no" isColorTriggerBg="no">
								<name>Voidgaze Miss</name>
								<script>cecho("&lt;red&gt;\nVoidgaze Missed! Blindness still in place!")</script>
								<triggerType>0</triggerType>
								<conditonLineDelta>0</conditonLineDelta>
								<mStayOpen>0</mStayOpen>
								<mCommand></mCommand>
								<packageName></packageName>
								<mFgColor>#ff0000</mFgColor>
								<mBgColor>#ffff00</mBgColor>
								<mSoundFile></mSoundFile>
								<colorTriggerFgColor>#000000</colorTriggerFgColor>
								<colorTriggerBgColor>#000000</colorTriggerBgColor>
								<regexCodeList>
									<string>^Fingers of thick, viscous cold climb up (\w+)'s body, but the void passes (the )?\w+ by, blind as (the )?\w+ is.$</string>
									<string>^Fingers of thick, viscous cold climb up yourself's body, but the void passes you by, blind as you is.$</string>
								</regexCodeList>
								<regexCodePropertyList>
									<integer>1</integer>
									<integer>1</integer>
								</regexCodePropertyList>
							</Trigger>
							<Trigger isActive="yes" isFolder="no" isTempTrigger="no" isMultiline="no" isPerlSlashGOption="no" isColorizerTrigger="no" isFilterTrigger="no" isSoundTrigger="no" isColorTrigger="no" isColorTriggerFg="no" isColorTriggerBg="no">
								<name>Imbued Cure</name>
								<script>if matches[2] == snd.target then
	snd.target_cured("imbued")
end</script>
								<triggerType>0</triggerType>
								<conditonLineDelta>0</conditonLineDelta>
								<mStayOpen>0</mStayOpen>
								<mCommand></mCommand>
								<packageName></packageName>
								<mFgColor>#ff0000</mFgColor>
								<mBgColor>#ffff00</mBgColor>
								<mSoundFile></mSoundFile>
								<colorTriggerFgColor>#000000</colorTriggerFgColor>
								<colorTriggerBgColor>#000000</colorTriggerBgColor>
								<regexCodeList>
									<string>^(\w+) seems to relax as a humming pressure lifts, imbued curse fading.$</string>
								</regexCodeList>
								<regexCodePropertyList>
									<integer>1</integer>
								</regexCodePropertyList>
							</Trigger>
							<Trigger isActive="yes" isFolder="no" isTempTrigger="no" isMultiline="no" isPerlSlashGOption="no" isColorizerTrigger="no" isFilterTrigger="no" isSoundTrigger="no" isColorTrigger="no" isColorTriggerFg="no" isColorTriggerBg="no">
								<name>Imbue</name>
								<script>if matches[2] == snd.target then
	snd.target_got("imbued")
end</script>
								<triggerType>0</triggerType>
								<conditonLineDelta>0</conditonLineDelta>
								<mStayOpen>0</mStayOpen>
								<mCommand></mCommand>
								<packageName></packageName>
								<mFgColor>#ff0000</mFgColor>
								<mBgColor>#ffff00</mBgColor>
								<mSoundFile></mSoundFile>
								<colorTriggerFgColor>#000000</colorTriggerFgColor>
								<colorTriggerBgColor>#000000</colorTriggerBgColor>
								<regexCodeList>
									<string>^You use Gravitation Imbue on (\w+).$</string>
								</regexCodeList>
								<regexCodePropertyList>
									<integer>1</integer>
								</regexCodePropertyList>
							</Trigger>
							<Trigger isActive="yes" isFolder="no" isTempTrigger="no" isMultiline="no" isPerlSlashGOption="no" isColorizerTrigger="no" isFilterTrigger="no" isSoundTrigger="no" isColorTrigger="no" isColorTriggerFg="no" isColorTriggerBg="no">
								<name>Gloom</name>
								<script>if matches[2] == snd.target then
	snd.target_got("gloom")
end</script>
								<triggerType>0</triggerType>
								<conditonLineDelta>0</conditonLineDelta>
								<mStayOpen>0</mStayOpen>
								<mCommand></mCommand>
								<packageName></packageName>
								<mFgColor>#ff0000</mFgColor>
								<mBgColor>#ffff00</mBgColor>
								<mSoundFile></mSoundFile>
								<colorTriggerFgColor>#000000</colorTriggerFgColor>
								<colorTriggerBgColor>#000000</colorTriggerBgColor>
								<regexCodeList>
									<string>^\w+ uses? Sciomancy Gloom on (\w+).$</string>
									<string>^\w+ uses? Sciomancy Shadowprice Gloom on (\w+).$</string>
								</regexCodeList>
								<regexCodePropertyList>
									<integer>1</integer>
									<integer>1</integer>
								</regexCodePropertyList>
							</Trigger>
							<Trigger isActive="yes" isFolder="no" isTempTrigger="no" isMultiline="no" isPerlSlashGOption="no" isColorizerTrigger="no" isFilterTrigger="no" isSoundTrigger="no" isColorTrigger="no" isColorTriggerFg="no" isColorTriggerBg="no">
								<name>Shaderot Shadowprice</name>
								<script>if matches[2] == snd.target then
 	snd.target_got("shaderot_benign")
	snd.target_got("shaderot_spirit")
end</script>
								<triggerType>0</triggerType>
								<conditonLineDelta>0</conditonLineDelta>
								<mStayOpen>0</mStayOpen>
								<mCommand></mCommand>
								<packageName></packageName>
								<mFgColor>#ff0000</mFgColor>
								<mBgColor>#ffff00</mBgColor>
								<mSoundFile></mSoundFile>
								<colorTriggerFgColor>#000000</colorTriggerFgColor>
								<colorTriggerBgColor>#000000</colorTriggerBgColor>
								<regexCodeList>
									<string>^You use Sciomancy Shadowprice Shaderot on (\w+).$</string>
								</regexCodeList>
								<regexCodePropertyList>
									<integer>1</integer>
								</regexCodePropertyList>
							</Trigger>
							<Trigger isActive="yes" isFolder="no" isTempTrigger="no" isMultiline="no" isPerlSlashGOption="no" isColorizerTrigger="no" isFilterTrigger="no" isSoundTrigger="no" isColorTrigger="no" isColorTriggerFg="no" isColorTriggerBg="no">
								<name>Shaderot Worsening</name>
								<script>if matches[2] == snd.target and snd.checkAff("shaderot_benign") then
	if not snd.checkAff("shaderot_spirit") then
		snd.target_got("shaderot_spirit")
	elseif not snd.checkAff("shaderot_heat") then
		snd.target_got("shaderot_heat")
	elseif not snd.checkAff("shaderot_wither") then	
		snd.target_got("shaderot_wither")
	elseif not snd.checkAff("shaderot_body") then
		snd.target_got("shaderot_body")
	end
end</script>
								<triggerType>0</triggerType>
								<conditonLineDelta>0</conditonLineDelta>
								<mStayOpen>0</mStayOpen>
								<mCommand></mCommand>
								<packageName></packageName>
								<mFgColor>#ff0000</mFgColor>
								<mBgColor>#ffff00</mBgColor>
								<mSoundFile></mSoundFile>
								<colorTriggerFgColor>#000000</colorTriggerFgColor>
								<colorTriggerBgColor>#000000</colorTriggerBgColor>
								<regexCodeList>
									<string>^Patches of (\w+)'s body puckers and blackens, brittle as old paper yet slick with some kind of slimeas the shaderot worsens.$</string>
								</regexCodeList>
								<regexCodePropertyList>
									<integer>1</integer>
								</regexCodePropertyList>
							</Trigger>
							<Trigger isActive="yes" isFolder="no" isTempTrigger="no" isMultiline="no" isPerlSlashGOption="no" isColorizerTrigger="no" isFilterTrigger="no" isSoundTrigger="no" isColorTrigger="no" isColorTriggerFg="no" isColorTriggerBg="no">
								<name>Shaderot Normal</name>
								<script>if matches[2] == snd.target then
 	snd.target_got("shaderot_benign")
end</script>
								<triggerType>0</triggerType>
								<conditonLineDelta>0</conditonLineDelta>
								<mStayOpen>0</mStayOpen>
								<mCommand></mCommand>
								<packageName></packageName>
								<mFgColor>#ff0000</mFgColor>
								<mBgColor>#ffff00</mBgColor>
								<mSoundFile></mSoundFile>
								<colorTriggerFgColor>#000000</colorTriggerFgColor>
								<colorTriggerBgColor>#000000</colorTriggerBgColor>
								<regexCodeList>
									<string>^You use Sciomancy Shaderot on (\w+).$</string>
								</regexCodeList>
								<regexCodePropertyList>
									<integer>1</integer>
								</regexCodePropertyList>
							</Trigger>
						</TriggerGroup>
						<TriggerGroup isActive="yes" isFolder="yes" isTempTrigger="no" isMultiline="no" isPerlSlashGOption="no" isColorizerTrigger="no" isFilterTrigger="no" isSoundTrigger="no" isColorTrigger="no" isColorTriggerFg="no" isColorTriggerBg="no">
							<name>Zealot</name>
							<script></script>
							<triggerType>0</triggerType>
							<conditonLineDelta>0</conditonLineDelta>
							<mStayOpen>0</mStayOpen>
							<mCommand></mCommand>
							<packageName></packageName>
							<mFgColor>#ff0000</mFgColor>
							<mBgColor>#ffff00</mBgColor>
							<mSoundFile></mSoundFile>
							<colorTriggerFgColor>#000000</colorTriggerFgColor>
							<colorTriggerBgColor>#000000</colorTriggerBgColor>
							<regexCodeList />
							<regexCodePropertyList />
							<Trigger isActive="yes" isFolder="no" isTempTrigger="no" isMultiline="no" isPerlSlashGOption="no" isColorizerTrigger="no" isFilterTrigger="no" isSoundTrigger="no" isColorTrigger="no" isColorTriggerFg="no" isColorTriggerBg="no">
								<name>Purification Scorch</name>
								<script>if matches[2] == snd.target then
	snd.target_got("ablaze")
end</script>
								<triggerType>0</triggerType>
								<conditonLineDelta>0</conditonLineDelta>
								<mStayOpen>0</mStayOpen>
								<mCommand></mCommand>
								<packageName></packageName>
								<mFgColor>#ff0000</mFgColor>
								<mBgColor>#ffff00</mBgColor>
								<mSoundFile></mSoundFile>
								<colorTriggerFgColor>#000000</colorTriggerFgColor>
								<colorTriggerBgColor>#000000</colorTriggerBgColor>
								<regexCodeList>
									<string>^\w+ uses? Purification Scorch on (\w+)\.$</string>
								</regexCodeList>
								<regexCodePropertyList>
									<integer>1</integer>
								</regexCodePropertyList>
							</Trigger>
							<Trigger isActive="yes" isFolder="no" isTempTrigger="no" isMultiline="no" isPerlSlashGOption="no" isColorizerTrigger="no" isFilterTrigger="no" isSoundTrigger="no" isColorTrigger="no" isColorTriggerFg="no" isColorTriggerBg="no">
								<name>Purification Heatspear</name>
								<script>if matches[2] == snd.target then
	snd.target_got("heatspear")
end</script>
								<triggerType>0</triggerType>
								<conditonLineDelta>0</conditonLineDelta>
								<mStayOpen>0</mStayOpen>
								<mCommand></mCommand>
								<packageName></packageName>
								<mFgColor>#ff0000</mFgColor>
								<mBgColor>#ffff00</mBgColor>
								<mSoundFile></mSoundFile>
								<colorTriggerFgColor>#000000</colorTriggerFgColor>
								<colorTriggerBgColor>#000000</colorTriggerBgColor>
								<regexCodeList>
									<string>^\w+ uses? Purification Heatspear on (\w+)\.$</string>
								</regexCodeList>
								<regexCodePropertyList>
									<integer>1</integer>
								</regexCodePropertyList>
							</Trigger>
						</TriggerGroup>
						<TriggerGroup isActive="yes" isFolder="yes" isTempTrigger="no" isMultiline="no" isPerlSlashGOption="no" isColorizerTrigger="no" isFilterTrigger="no" isSoundTrigger="no" isColorTrigger="no" isColorTriggerFg="no" isColorTriggerBg="no">
							<name>Disperse</name>
							<script></script>
							<triggerType>0</triggerType>
							<conditonLineDelta>0</conditonLineDelta>
							<mStayOpen>0</mStayOpen>
							<mCommand></mCommand>
							<packageName></packageName>
							<mFgColor>#ff0000</mFgColor>
							<mBgColor>#ffff00</mBgColor>
							<mSoundFile></mSoundFile>
							<colorTriggerFgColor>#000000</colorTriggerFgColor>
							<colorTriggerBgColor>#000000</colorTriggerBgColor>
							<regexCodeList />
							<regexCodePropertyList />
							<Trigger isActive="yes" isFolder="no" isTempTrigger="no" isMultiline="no" isPerlSlashGOption="no" isColorizerTrigger="no" isFilterTrigger="no" isSoundTrigger="no" isColorTrigger="no" isColorTriggerFg="no" isColorTriggerBg="no">
								<name>Teammate writhes</name>
								<script>snd.set_faction()
if (snd.disperse == "callers" and table.contains(snd.callers, matches[2])) or (snd.disperse == "all" and table.contains(snd.allies, matches[2])) then
  snd.send("qeb disperse " .. matches[2])
end</script>
								<triggerType>0</triggerType>
								<conditonLineDelta>0</conditonLineDelta>
								<mStayOpen>0</mStayOpen>
								<mCommand></mCommand>
								<packageName></packageName>
								<mFgColor>#ff0000</mFgColor>
								<mBgColor>#ffff00</mBgColor>
								<mSoundFile></mSoundFile>
								<colorTriggerFgColor>#000000</colorTriggerFgColor>
								<colorTriggerBgColor>#000000</colorTriggerBgColor>
								<regexCodeList>
									<string>^\w+ uses Relic (Webspray|Entangle) on (\w+)\.$</string>
									<string>^\w+ uses Tarot Hangedman \(entangle\) on (\w+)\.$</string>
									<string>^\w+ uses \w+ Transfix on (\w+)\.$</string>
									<string>^\w+ uses \w+ Impale on (\w+)\.$</string>
									<string>^\w+ uses Ferality \w+lock on (\w+)\.$</string>
									<string>^\w+ uses Assassination Bind on (\w+)\.$</string>
									<string>^\w+ uses Savagery Skewer on (\w+)\.$</string>
									<string>^\w+ uses Mentis Mesmerize on (\w+)\.$</string>
									<string>^\w+ uses? Primality Strangle on (\w+)\.$</string>
								</regexCodeList>
								<regexCodePropertyList>
									<integer>1</integer>
									<integer>1</integer>
									<integer>1</integer>
									<integer>1</integer>
									<integer>1</integer>
									<integer>1</integer>
									<integer>1</integer>
									<integer>1</integer>
									<integer>1</integer>
								</regexCodePropertyList>
							</Trigger>
						</TriggerGroup>
						<TriggerGroup isActive="yes" isFolder="yes" isTempTrigger="no" isMultiline="no" isPerlSlashGOption="no" isColorizerTrigger="no" isFilterTrigger="no" isSoundTrigger="no" isColorTrigger="no" isColorTriggerFg="no" isColorTriggerBg="no">
							<name>Monk</name>
							<script></script>
							<triggerType>0</triggerType>
							<conditonLineDelta>0</conditonLineDelta>
							<mStayOpen>0</mStayOpen>
							<mCommand></mCommand>
							<packageName></packageName>
							<mFgColor>#ff0000</mFgColor>
							<mBgColor>#ffff00</mBgColor>
							<mSoundFile></mSoundFile>
							<colorTriggerFgColor>#000000</colorTriggerFgColor>
							<colorTriggerBgColor>#000000</colorTriggerBgColor>
							<regexCodeList />
							<regexCodePropertyList />
							<Trigger isActive="yes" isFolder="no" isTempTrigger="no" isMultiline="no" isPerlSlashGOption="no" isColorizerTrigger="no" isFilterTrigger="no" isSoundTrigger="no" isColorTrigger="no" isColorTriggerFg="no" isColorTriggerBg="no">
								<name>Monk hit confirm for telepathy call</name>
								<script>if #snd.maybe_affs &gt;= 1 and (matches[2] == snd.target) then
	 local aff = snd.maybe_affs[1]
   if aff ~= "" then
    snd.target_got(aff)
    table.remove(snd.maybe_affs, 1)
		table.insert(snd.last_affs, aff)
   end
end
</script>
								<triggerType>0</triggerType>
								<conditonLineDelta>0</conditonLineDelta>
								<mStayOpen>0</mStayOpen>
								<mCommand></mCommand>
								<packageName></packageName>
								<mFgColor>#ff0000</mFgColor>
								<mBgColor>#ffff00</mBgColor>
								<mSoundFile></mSoundFile>
								<colorTriggerFgColor>#000000</colorTriggerFgColor>
								<colorTriggerBgColor>#000000</colorTriggerBgColor>
								<regexCodeList>
									<string>^\w+ uses Tekura \w+ on (\w+).$</string>
								</regexCodeList>
								<regexCodePropertyList>
									<integer>1</integer>
								</regexCodePropertyList>
							</Trigger>
						</TriggerGroup>
					</TriggerGroup>
					<TriggerGroup isActive="yes" isFolder="yes" isTempTrigger="no" isMultiline="no" isPerlSlashGOption="no" isColorizerTrigger="no" isFilterTrigger="no" isSoundTrigger="no" isColorTrigger="no" isColorTriggerFg="no" isColorTriggerBg="no">
						<name>Colors and Echoes</name>
						<script></script>
						<triggerType>0</triggerType>
						<conditonLineDelta>0</conditonLineDelta>
						<mStayOpen>0</mStayOpen>
						<mCommand></mCommand>
						<packageName></packageName>
						<mFgColor>#ff0000</mFgColor>
						<mBgColor>#ffff00</mBgColor>
						<mSoundFile></mSoundFile>
						<colorTriggerFgColor>#000000</colorTriggerFgColor>
						<colorTriggerBgColor>#000000</colorTriggerBgColor>
						<regexCodeList />
						<regexCodePropertyList />
						<TriggerGroup isActive="yes" isFolder="yes" isTempTrigger="no" isMultiline="no" isPerlSlashGOption="no" isColorizerTrigger="no" isFilterTrigger="no" isSoundTrigger="no" isColorTrigger="no" isColorTriggerFg="no" isColorTriggerBg="no">
							<name>Ylem</name>
							<script></script>
							<triggerType>0</triggerType>
							<conditonLineDelta>0</conditonLineDelta>
							<mStayOpen>0</mStayOpen>
							<mCommand></mCommand>
							<packageName></packageName>
							<mFgColor>#ff0000</mFgColor>
							<mBgColor>#ffff00</mBgColor>
							<mSoundFile></mSoundFile>
							<colorTriggerFgColor>#000000</colorTriggerFgColor>
							<colorTriggerBgColor>#000000</colorTriggerBgColor>
							<regexCodeList />
							<regexCodePropertyList />
							<Trigger isActive="yes" isFolder="no" isTempTrigger="no" isMultiline="no" isPerlSlashGOption="no" isColorizerTrigger="yes" isFilterTrigger="no" isSoundTrigger="no" isColorTrigger="no" isColorTriggerFg="no" isColorTriggerBg="no">
								<name>extraction</name>
								<script></script>
								<triggerType>0</triggerType>
								<conditonLineDelta>0</conditonLineDelta>
								<mStayOpen>0</mStayOpen>
								<mCommand></mCommand>
								<packageName></packageName>
								<mFgColor>#ff5500</mFgColor>
								<mBgColor>#000000</mBgColor>
								<mSoundFile></mSoundFile>
								<colorTriggerFgColor>#000000</colorTriggerFgColor>
								<colorTriggerBgColor>#000000</colorTriggerBgColor>
								<regexCodeList>
									<string>Ethereal motes of energy flood into your outstretched grasp as the extraction continues.</string>
									<string>The air hums with energy as you prepare for the extraction.</string>
									<string>You feel the strain upon your body lessen as the preparation for extraction comes to a close, motes of energy swirling around you.</string>
								</regexCodeList>
								<regexCodePropertyList>
									<integer>3</integer>
									<integer>3</integer>
									<integer>3</integer>
								</regexCodePropertyList>
							</Trigger>
							<Trigger isActive="yes" isFolder="no" isTempTrigger="no" isMultiline="no" isPerlSlashGOption="no" isColorizerTrigger="yes" isFilterTrigger="no" isSoundTrigger="no" isColorTrigger="no" isColorTriggerFg="no" isColorTriggerBg="no">
								<name>collapse</name>
								<script>deleteLine()
snd.message("\n&lt;brown&gt;Foci collapsed!\nFoci collapsed!\nFoci collapsed!")
</script>
								<triggerType>0</triggerType>
								<conditonLineDelta>0</conditonLineDelta>
								<mStayOpen>0</mStayOpen>
								<mCommand></mCommand>
								<packageName></packageName>
								<mFgColor>#ff5500</mFgColor>
								<mBgColor>#000000</mBgColor>
								<mSoundFile></mSoundFile>
								<colorTriggerFgColor>#000000</colorTriggerFgColor>
								<colorTriggerBgColor>#000000</colorTriggerBgColor>
								<regexCodeList>
									<string>Latent energies flare around the focus, crackling ominously with power before winking out with a hushed whisper. Motes of pale light drift upwards from the dying leyline's focus, smoldering like a dying ember into the firmament as the focal point collapses into the ether.</string>
								</regexCodeList>
								<regexCodePropertyList>
									<integer>3</integer>
								</regexCodePropertyList>
							</Trigger>
							<Trigger isActive="yes" isFolder="no" isTempTrigger="no" isMultiline="no" isPerlSlashGOption="no" isColorizerTrigger="no" isFilterTrigger="no" isSoundTrigger="no" isColorTrigger="no" isColorTriggerFg="no" isColorTriggerBg="no">
								<name>eld formed</name>
								<script>snd.send("qeb refining shackle eld")
snd.eld = snd.eld+1</script>
								<triggerType>0</triggerType>
								<conditonLineDelta>0</conditonLineDelta>
								<mStayOpen>0</mStayOpen>
								<mCommand></mCommand>
								<packageName></packageName>
								<mFgColor>#ff0000</mFgColor>
								<mBgColor>#ffff00</mBgColor>
								<mSoundFile></mSoundFile>
								<colorTriggerFgColor>#000000</colorTriggerFgColor>
								<colorTriggerBgColor>#000000</colorTriggerBgColor>
								<regexCodeList>
									<string>A swelling of energy originates from deep within the focal point, congealing into</string>
									<string>A swelling of energy originates from deep within the sinkhole, congealing into</string>
									<string>^A tremor runs through the leylines, and in a crackle of searing white lightning, .+ rips free\.$</string>
								</regexCodeList>
								<regexCodePropertyList>
									<integer>2</integer>
									<integer>2</integer>
									<integer>1</integer>
								</regexCodePropertyList>
							</Trigger>
							<Trigger isActive="yes" isFolder="no" isTempTrigger="no" isMultiline="no" isPerlSlashGOption="no" isColorizerTrigger="no" isFilterTrigger="no" isSoundTrigger="no" isColorTrigger="no" isColorTriggerFg="no" isColorTriggerBg="no">
								<name>shackled</name>
								<script>snd.eld = snd.eld-1
if snd.eld &gt; 0 then
 snd.send("qeb refining shackle eld")
end
deleteLine()
snd.attack_hit("shackled", "eld")</script>
								<triggerType>0</triggerType>
								<conditonLineDelta>0</conditonLineDelta>
								<mStayOpen>0</mStayOpen>
								<mCommand></mCommand>
								<packageName></packageName>
								<mFgColor>#ff0000</mFgColor>
								<mBgColor>#ffff00</mBgColor>
								<mSoundFile></mSoundFile>
								<colorTriggerFgColor>#000000</colorTriggerFgColor>
								<colorTriggerBgColor>#000000</colorTriggerBgColor>
								<regexCodeList>
									<string>You draw upon the power of the leylines and divert their energy to shackle</string>
								</regexCodeList>
								<regexCodePropertyList>
									<integer>2</integer>
								</regexCodePropertyList>
							</Trigger>
							<Trigger isActive="yes" isFolder="no" isTempTrigger="no" isMultiline="no" isPerlSlashGOption="no" isColorizerTrigger="no" isFilterTrigger="no" isSoundTrigger="no" isColorTrigger="no" isColorTriggerFg="no" isColorTriggerBg="no">
								<name>no eld</name>
								<script>snd.eld = 0</script>
								<triggerType>0</triggerType>
								<conditonLineDelta>0</conditonLineDelta>
								<mStayOpen>0</mStayOpen>
								<mCommand></mCommand>
								<packageName></packageName>
								<mFgColor>#ff0000</mFgColor>
								<mBgColor>#ffff00</mBgColor>
								<mSoundFile></mSoundFile>
								<colorTriggerFgColor>#000000</colorTriggerFgColor>
								<colorTriggerBgColor>#000000</colorTriggerBgColor>
								<regexCodeList>
									<string>You see no such eld here.</string>
								</regexCodeList>
								<regexCodePropertyList>
									<integer>3</integer>
								</regexCodePropertyList>
							</Trigger>
							<Trigger isActive="yes" isFolder="no" isTempTrigger="no" isMultiline="no" isPerlSlashGOption="no" isColorizerTrigger="no" isFilterTrigger="no" isSoundTrigger="no" isColorTrigger="no" isColorTriggerFg="no" isColorTriggerBg="no">
								<name>tap minor</name>
								<script>deleteLine()
snd.attack_hit("tapped", "minor")</script>
								<triggerType>0</triggerType>
								<conditonLineDelta>0</conditonLineDelta>
								<mStayOpen>0</mStayOpen>
								<mCommand></mCommand>
								<packageName></packageName>
								<mFgColor>#ff0000</mFgColor>
								<mBgColor>#ffff00</mBgColor>
								<mSoundFile></mSoundFile>
								<colorTriggerFgColor>#000000</colorTriggerFgColor>
								<colorTriggerBgColor>#000000</colorTriggerBgColor>
								<regexCodeList>
									<string>You tap into the leylines, reaching outward to the minor focus for extraction. Motes of energy flicker upwards to you.</string>
								</regexCodeList>
								<regexCodePropertyList>
									<integer>3</integer>
								</regexCodePropertyList>
							</Trigger>
							<Trigger isActive="yes" isFolder="no" isTempTrigger="no" isMultiline="no" isPerlSlashGOption="no" isColorizerTrigger="no" isFilterTrigger="no" isSoundTrigger="no" isColorTrigger="no" isColorTriggerFg="no" isColorTriggerBg="no">
								<name>minor tapped</name>
								<script>deleteLine()
snd.message("Minor tapped!")</script>
								<triggerType>0</triggerType>
								<conditonLineDelta>0</conditonLineDelta>
								<mStayOpen>0</mStayOpen>
								<mCommand></mCommand>
								<packageName></packageName>
								<mFgColor>#ff0000</mFgColor>
								<mBgColor>#ffff00</mBgColor>
								<mSoundFile></mSoundFile>
								<colorTriggerFgColor>#000000</colorTriggerFgColor>
								<colorTriggerBgColor>#000000</colorTriggerBgColor>
								<regexCodeList>
									<string>^The very air wavers around you with a sudden fluctuation of power from the leylines and a low hum begins to resonate from the depths of (.*)\. A minor focal point is being tapped for its energies\.$</string>
								</regexCodeList>
								<regexCodePropertyList>
									<integer>1</integer>
								</regexCodePropertyList>
							</Trigger>
							<Trigger isActive="yes" isFolder="no" isTempTrigger="no" isMultiline="no" isPerlSlashGOption="no" isColorizerTrigger="yes" isFilterTrigger="no" isSoundTrigger="no" isColorTrigger="no" isColorTriggerFg="no" isColorTriggerBg="no">
								<name>lesser</name>
								<script></script>
								<triggerType>0</triggerType>
								<conditonLineDelta>0</conditonLineDelta>
								<mStayOpen>0</mStayOpen>
								<mCommand></mCommand>
								<packageName></packageName>
								<mFgColor>#ff007f</mFgColor>
								<mBgColor>#000000</mBgColor>
								<mSoundFile></mSoundFile>
								<colorTriggerFgColor>#000000</colorTriggerFgColor>
								<colorTriggerBgColor>#000000</colorTriggerBgColor>
								<regexCodeList>
									<string>Streams of wavering light emit erratically from an unstable convergence of energy here.</string>
								</regexCodeList>
								<regexCodePropertyList>
									<integer>0</integer>
								</regexCodePropertyList>
							</Trigger>
						</TriggerGroup>
						<TriggerGroup isActive="yes" isFolder="yes" isTempTrigger="no" isMultiline="no" isPerlSlashGOption="no" isColorizerTrigger="no" isFilterTrigger="no" isSoundTrigger="no" isColorTrigger="no" isColorTriggerFg="no" isColorTriggerBg="no">
							<name>Classes</name>
							<script></script>
							<triggerType>0</triggerType>
							<conditonLineDelta>0</conditonLineDelta>
							<mStayOpen>0</mStayOpen>
							<mCommand></mCommand>
							<packageName></packageName>
							<mFgColor>#ff0000</mFgColor>
							<mBgColor>#ffff00</mBgColor>
							<mSoundFile></mSoundFile>
							<colorTriggerFgColor>#000000</colorTriggerFgColor>
							<colorTriggerBgColor>#000000</colorTriggerBgColor>
							<regexCodeList />
							<regexCodePropertyList />
							<TriggerGroup isActive="yes" isFolder="yes" isTempTrigger="no" isMultiline="no" isPerlSlashGOption="no" isColorizerTrigger="no" isFilterTrigger="no" isSoundTrigger="no" isColorTrigger="no" isColorTriggerFg="no" isColorTriggerBg="no">
								<name>Carnifex</name>
								<script></script>
								<triggerType>0</triggerType>
								<conditonLineDelta>0</conditonLineDelta>
								<mStayOpen>0</mStayOpen>
								<mCommand></mCommand>
								<packageName></packageName>
								<mFgColor>#ff0000</mFgColor>
								<mBgColor>#ffff00</mBgColor>
								<mSoundFile></mSoundFile>
								<colorTriggerFgColor>#000000</colorTriggerFgColor>
								<colorTriggerBgColor>#000000</colorTriggerBgColor>
								<regexCodeList />
								<regexCodePropertyList />
								<TriggerGroup isActive="yes" isFolder="yes" isTempTrigger="no" isMultiline="no" isPerlSlashGOption="no" isColorizerTrigger="no" isFilterTrigger="no" isSoundTrigger="no" isColorTrigger="no" isColorTriggerFg="no" isColorTriggerBg="no">
									<name>Savagery</name>
									<script></script>
									<triggerType>0</triggerType>
									<conditonLineDelta>0</conditonLineDelta>
									<mStayOpen>0</mStayOpen>
									<mCommand></mCommand>
									<packageName></packageName>
									<mFgColor>#ff0000</mFgColor>
									<mBgColor>#ffff00</mBgColor>
									<mSoundFile></mSoundFile>
									<colorTriggerFgColor>#000000</colorTriggerFgColor>
									<colorTriggerBgColor>#000000</colorTriggerBgColor>
									<regexCodeList />
									<regexCodePropertyList />
									<TriggerGroup isActive="yes" isFolder="yes" isTempTrigger="no" isMultiline="no" isPerlSlashGOption="no" isColorizerTrigger="no" isFilterTrigger="no" isSoundTrigger="no" isColorTrigger="no" isColorTriggerFg="no" isColorTriggerBg="no">
										<name>Hammer</name>
										<script></script>
										<triggerType>0</triggerType>
										<conditonLineDelta>0</conditonLineDelta>
										<mStayOpen>0</mStayOpen>
										<mCommand></mCommand>
										<packageName></packageName>
										<mFgColor>#ff0000</mFgColor>
										<mBgColor>#ffff00</mBgColor>
										<mSoundFile></mSoundFile>
										<colorTriggerFgColor>#000000</colorTriggerFgColor>
										<colorTriggerBgColor>#000000</colorTriggerBgColor>
										<regexCodeList />
										<regexCodePropertyList />
										<Trigger isActive="yes" isFolder="no" isTempTrigger="no" isMultiline="no" isPerlSlashGOption="no" isColorizerTrigger="no" isFilterTrigger="no" isSoundTrigger="no" isColorTrigger="no" isColorTriggerFg="no" isColorTriggerBg="no">
											<name>hammer doublebash</name>
											<script>deleteLine()
snd.attack_hit("doublebash", matches[2])</script>
											<triggerType>0</triggerType>
											<conditonLineDelta>0</conditonLineDelta>
											<mStayOpen>0</mStayOpen>
											<mCommand></mCommand>
											<packageName></packageName>
											<mFgColor>#ff0000</mFgColor>
											<mBgColor>#ffff00</mBgColor>
											<mSoundFile></mSoundFile>
											<colorTriggerFgColor>#000000</colorTriggerFgColor>
											<colorTriggerBgColor>#000000</colorTriggerBgColor>
											<regexCodeList>
												<string>^You powerfully swing .+ down upon (.+) and pull back with ease, readying a second blow\.$</string>
												<string>^Lifting up .+, you slam it into (.+) with numbing force\.$</string>
												<string>^You mutilate (.*) with a vengeful blow from .*\.$</string>
												<string>^You step in, gruesomely smashing up (.*) with .*\.$</string>
												<string>^You send (.*) reeling with a mighty strike from .*\.$</string>
												<string>^You crush (.*) beneath a mighty overhead blow from .*\.$</string>
												<string>^Winding up, you brutally smash .* into (.*)\.$</string>
											</regexCodeList>
											<regexCodePropertyList>
												<integer>1</integer>
												<integer>1</integer>
												<integer>1</integer>
												<integer>1</integer>
												<integer>1</integer>
												<integer>1</integer>
												<integer>1</integer>
											</regexCodePropertyList>
										</Trigger>
									</TriggerGroup>
									<Trigger isActive="yes" isFolder="no" isTempTrigger="no" isMultiline="no" isPerlSlashGOption="no" isColorizerTrigger="no" isFilterTrigger="no" isSoundTrigger="no" isColorTrigger="no" isColorTriggerFg="no" isColorTriggerBg="no">
										<name>reveling</name>
										<script>deleteLine()
snd.message("Reveling!")</script>
										<triggerType>0</triggerType>
										<conditonLineDelta>0</conditonLineDelta>
										<mStayOpen>0</mStayOpen>
										<mCommand></mCommand>
										<packageName></packageName>
										<mFgColor>#ff0000</mFgColor>
										<mBgColor>#ffff00</mBgColor>
										<mSoundFile></mSoundFile>
										<colorTriggerFgColor>#000000</colorTriggerFgColor>
										<colorTriggerBgColor>#000000</colorTriggerBgColor>
										<regexCodeList>
											<string>^Your fingers tighten upon your weapon, vision blurring with bloodlust as you strike a staggering blow to .+ and revel in (the )?\w+ agony with a brutal roar as blood spatters in a visceral arc from (the )?\w+\.$</string>
										</regexCodeList>
										<regexCodePropertyList>
											<integer>1</integer>
										</regexCodePropertyList>
									</Trigger>
								</TriggerGroup>
								<TriggerGroup isActive="yes" isFolder="yes" isTempTrigger="no" isMultiline="no" isPerlSlashGOption="no" isColorizerTrigger="no" isFilterTrigger="no" isSoundTrigger="no" isColorTrigger="no" isColorTriggerFg="no" isColorTriggerBg="no">
									<name>Deathlore</name>
									<script></script>
									<triggerType>0</triggerType>
									<conditonLineDelta>0</conditonLineDelta>
									<mStayOpen>0</mStayOpen>
									<mCommand></mCommand>
									<packageName></packageName>
									<mFgColor>#ff0000</mFgColor>
									<mBgColor>#ffff00</mBgColor>
									<mSoundFile></mSoundFile>
									<colorTriggerFgColor>#000000</colorTriggerFgColor>
									<colorTriggerBgColor>#000000</colorTriggerBgColor>
									<regexCodeList />
									<regexCodePropertyList />
									<TriggerGroup isActive="yes" isFolder="yes" isTempTrigger="no" isMultiline="no" isPerlSlashGOption="no" isColorizerTrigger="no" isFilterTrigger="no" isSoundTrigger="no" isColorTrigger="no" isColorTriggerFg="no" isColorTriggerBg="no">
										<name>Soul Harvesting</name>
										<script></script>
										<triggerType>0</triggerType>
										<conditonLineDelta>0</conditonLineDelta>
										<mStayOpen>0</mStayOpen>
										<mCommand></mCommand>
										<packageName></packageName>
										<mFgColor>#ff0000</mFgColor>
										<mBgColor>#ffff00</mBgColor>
										<mSoundFile></mSoundFile>
										<colorTriggerFgColor>#000000</colorTriggerFgColor>
										<colorTriggerBgColor>#000000</colorTriggerBgColor>
										<regexCodeList />
										<regexCodePropertyList />
										<Trigger isActive="yes" isFolder="no" isTempTrigger="no" isMultiline="no" isPerlSlashGOption="no" isColorizerTrigger="no" isFilterTrigger="no" isSoundTrigger="no" isColorTrigger="no" isColorTriggerFg="no" isColorTriggerBg="no">
											<name>consumption start</name>
											<script>deleteLine()
snd.message("You: start consumption.", "atk")
swarms = 0</script>
											<triggerType>0</triggerType>
											<conditonLineDelta>0</conditonLineDelta>
											<mStayOpen>0</mStayOpen>
											<mCommand></mCommand>
											<packageName></packageName>
											<mFgColor>#ff0000</mFgColor>
											<mBgColor>#ffff00</mBgColor>
											<mSoundFile></mSoundFile>
											<colorTriggerFgColor>#000000</colorTriggerFgColor>
											<colorTriggerBgColor>#000000</colorTriggerBgColor>
											<regexCodeList>
												<string>Frowning at the soulstone in your palm, you concentrate on its basic soul-trapping properties, feeding it with your own soul energy and expanding it to include your immediate area. As the stone activates, it glows an eerie red, floating from your palm to above your head, covering everything in the vicinity with its repulsive light.</string>
											</regexCodeList>
											<regexCodePropertyList>
												<integer>3</integer>
											</regexCodePropertyList>
										</Trigger>
										<Trigger isActive="yes" isFolder="no" isTempTrigger="no" isMultiline="no" isPerlSlashGOption="no" isColorizerTrigger="no" isFilterTrigger="no" isSoundTrigger="no" isColorTrigger="no" isColorTriggerFg="no" isColorTriggerBg="no">
											<name>consumption tick</name>
											<script>deleteLine()
snd.message("You: summon souls.", "atk")</script>
											<triggerType>0</triggerType>
											<conditonLineDelta>0</conditonLineDelta>
											<mStayOpen>0</mStayOpen>
											<mCommand></mCommand>
											<packageName></packageName>
											<mFgColor>#ff0000</mFgColor>
											<mBgColor>#ffff00</mBgColor>
											<mSoundFile></mSoundFile>
											<colorTriggerFgColor>#000000</colorTriggerFgColor>
											<colorTriggerBgColor>#000000</colorTriggerBgColor>
											<regexCodeList>
												<string>With cold ruthlessness, you slice off a sliver of your own soul, feeding it to the voracious soulstone spinning above you. It instantly pulses with energy, and the sickening stench of death permeates the area as it lures nearby spirits into its soul-trapping influence.</string>
											</regexCodeList>
											<regexCodePropertyList>
												<integer>3</integer>
											</regexCodePropertyList>
										</Trigger>
										<Trigger isActive="yes" isFolder="no" isTempTrigger="no" isMultiline="no" isPerlSlashGOption="no" isColorizerTrigger="no" isFilterTrigger="no" isSoundTrigger="no" isColorTrigger="no" isColorTriggerFg="no" isColorTriggerBg="no">
											<name>consumption swarm</name>
											<script>deleteLine()
snd.message("Summoned a &lt;green&gt;swarm&lt;white&gt;!")
swarms = swarms + 1
if swarms &gt;= 3 then
 snd.send("qeb soul cull")
end
</script>
											<triggerType>0</triggerType>
											<conditonLineDelta>0</conditonLineDelta>
											<mStayOpen>0</mStayOpen>
											<mCommand></mCommand>
											<packageName></packageName>
											<mFgColor>#ff0000</mFgColor>
											<mBgColor>#ffff00</mBgColor>
											<mSoundFile></mSoundFile>
											<colorTriggerFgColor>#000000</colorTriggerFgColor>
											<colorTriggerBgColor>#000000</colorTriggerBgColor>
											<regexCodeList>
												<string>^A dispersed multitude of souls drift in from the (\w+) and coalesce to a single churning mass\.$</string>
											</regexCodeList>
											<regexCodePropertyList>
												<integer>1</integer>
											</regexCodePropertyList>
										</Trigger>
										<Trigger isActive="yes" isFolder="no" isTempTrigger="no" isMultiline="no" isPerlSlashGOption="no" isColorizerTrigger="no" isFilterTrigger="no" isSoundTrigger="no" isColorTrigger="no" isColorTriggerFg="no" isColorTriggerBg="no">
											<name>consumption wraith</name>
											<script>deleteLine()
snd.message("Summoned a &lt;red&gt;wraith&lt;white&gt;!")
snd.send("qeb soul strike wraith")</script>
											<triggerType>0</triggerType>
											<conditonLineDelta>0</conditonLineDelta>
											<mStayOpen>0</mStayOpen>
											<mCommand></mCommand>
											<packageName></packageName>
											<mFgColor>#ff0000</mFgColor>
											<mBgColor>#ffff00</mBgColor>
											<mSoundFile></mSoundFile>
											<colorTriggerFgColor>#000000</colorTriggerFgColor>
											<colorTriggerBgColor>#000000</colorTriggerBgColor>
											<regexCodeList>
												<string>^A tormented wraith drifts in from the (\w+), bringing with it an aura of death and stagnant chill\.$</string>
											</regexCodeList>
											<regexCodePropertyList>
												<integer>1</integer>
											</regexCodePropertyList>
										</Trigger>
										<Trigger isActive="yes" isFolder="no" isTempTrigger="no" isMultiline="no" isPerlSlashGOption="no" isColorizerTrigger="no" isFilterTrigger="no" isSoundTrigger="no" isColorTrigger="no" isColorTriggerFg="no" isColorTriggerBg="no">
											<name>consumption stop</name>
											<script>deleteLine()
snd.message("You: soul summon", "atk")
snd.def_take("soul_body")</script>
											<triggerType>0</triggerType>
											<conditonLineDelta>0</conditonLineDelta>
											<mStayOpen>0</mStayOpen>
											<mCommand></mCommand>
											<packageName></packageName>
											<mFgColor>#ff0000</mFgColor>
											<mBgColor>#ffff00</mBgColor>
											<mSoundFile></mSoundFile>
											<colorTriggerFgColor>#000000</colorTriggerFgColor>
											<colorTriggerBgColor>#000000</colorTriggerBgColor>
											<regexCodeList>
												<string>A swirling mass of void-black darkness gathers in the space before you. Reaching forth, you casually withdraw your soulstone, returning it to your possession.</string>
											</regexCodeList>
											<regexCodePropertyList>
												<integer>3</integer>
											</regexCodePropertyList>
										</Trigger>
										<Trigger isActive="yes" isFolder="no" isTempTrigger="no" isMultiline="no" isPerlSlashGOption="no" isColorizerTrigger="no" isFilterTrigger="no" isSoundTrigger="no" isColorTrigger="no" isColorTriggerFg="no" isColorTriggerBg="no">
											<name>consumption end</name>
											<script>deleteLine()
snd.message("You: end consumption.", "atk")</script>
											<triggerType>0</triggerType>
											<conditonLineDelta>0</conditonLineDelta>
											<mStayOpen>0</mStayOpen>
											<mCommand></mCommand>
											<packageName></packageName>
											<mFgColor>#ff0000</mFgColor>
											<mBgColor>#ffff00</mBgColor>
											<mSoundFile></mSoundFile>
											<colorTriggerFgColor>#000000</colorTriggerFgColor>
											<colorTriggerBgColor>#000000</colorTriggerBgColor>
											<regexCodeList>
												<string>The suffocating atmosphere lightens noticeably as the soulstone's glow dims and finally dies out.</string>
											</regexCodeList>
											<regexCodePropertyList>
												<integer>3</integer>
											</regexCodePropertyList>
										</Trigger>
										<Trigger isActive="yes" isFolder="no" isTempTrigger="no" isMultiline="no" isPerlSlashGOption="no" isColorizerTrigger="no" isFilterTrigger="no" isSoundTrigger="no" isColorTrigger="no" isColorTriggerFg="no" isColorTriggerBg="no">
											<name>culled</name>
											<script>swarms = 0</script>
											<triggerType>0</triggerType>
											<conditonLineDelta>0</conditonLineDelta>
											<mStayOpen>0</mStayOpen>
											<mCommand></mCommand>
											<packageName></packageName>
											<mFgColor>#ff0000</mFgColor>
											<mBgColor>#ffff00</mBgColor>
											<mSoundFile></mSoundFile>
											<colorTriggerFgColor>#000000</colorTriggerFgColor>
											<colorTriggerBgColor>#000000</colorTriggerBgColor>
											<regexCodeList>
												<string>You channel pure soul energy into an ethereal soul cleaver until it is crackling with ominous, red sparks. Barely able to contain your desire for more souls to harvest, you swing an ethereal soul cleaver in an arc, releasing its culling energy in a wave around you.</string>
											</regexCodeList>
											<regexCodePropertyList>
												<integer>3</integer>
											</regexCodePropertyList>
										</Trigger>
										<Trigger isActive="yes" isFolder="no" isTempTrigger="no" isMultiline="no" isPerlSlashGOption="no" isColorizerTrigger="no" isFilterTrigger="no" isSoundTrigger="no" isColorTrigger="no" isColorTriggerFg="no" isColorTriggerBg="no">
											<name>harvested</name>
											<script>deleteLine()
snd.message("You: harvest soul")</script>
											<triggerType>0</triggerType>
											<conditonLineDelta>0</conditonLineDelta>
											<mStayOpen>0</mStayOpen>
											<mCommand></mCommand>
											<packageName></packageName>
											<mFgColor>#ff0000</mFgColor>
											<mBgColor>#ffff00</mBgColor>
											<mSoundFile></mSoundFile>
											<colorTriggerFgColor>#000000</colorTriggerFgColor>
											<colorTriggerBgColor>#000000</colorTriggerBgColor>
											<regexCodeList>
												<string>^Raising your soulstone above .+, you snarl a guttural chant that causes a smoke-grey glyph to appear within the stone. Moments later, an ethereal stream of silver-white motes flows up from .+ and into the soulstone\.$</string>
											</regexCodeList>
											<regexCodePropertyList>
												<integer>1</integer>
											</regexCodePropertyList>
										</Trigger>
										<Trigger isActive="yes" isFolder="no" isTempTrigger="no" isMultiline="yes" isPerlSlashGOption="no" isColorizerTrigger="no" isFilterTrigger="no" isSoundTrigger="no" isColorTrigger="no" isColorTriggerFg="no" isColorTriggerBg="no">
											<name>3p harvest</name>
											<script>deleteLine()
snd.message(multimatches[1][2].." harvested!")</script>
											<triggerType>0</triggerType>
											<conditonLineDelta>2</conditonLineDelta>
											<mStayOpen>0</mStayOpen>
											<mCommand></mCommand>
											<packageName></packageName>
											<mFgColor>#ff0000</mFgColor>
											<mBgColor>#ffff00</mBgColor>
											<mSoundFile></mSoundFile>
											<colorTriggerFgColor>#000000</colorTriggerFgColor>
											<colorTriggerBgColor>#000000</colorTriggerBgColor>
											<regexCodeList>
												<string>^(\w+) uses Deathlore Harvest\.$</string>
												<string>1</string>
												<string>.+</string>
											</regexCodeList>
											<regexCodePropertyList>
												<integer>1</integer>
												<integer>5</integer>
												<integer>1</integer>
											</regexCodePropertyList>
										</Trigger>
									</TriggerGroup>
									<Trigger isActive="yes" isFolder="no" isTempTrigger="no" isMultiline="no" isPerlSlashGOption="no" isColorizerTrigger="no" isFilterTrigger="no" isSoundTrigger="no" isColorTrigger="no" isColorTriggerFg="no" isColorTriggerBg="no">
										<name>soul thirst</name>
										<script>if matches[2] == snd.target then
 snd.soul = tonumber(matches[4])
end
deleteLine()
snd.message(matches[2].." has &lt;red&gt;"..matches[4].."%&lt;white&gt; soul!")</script>
										<triggerType>0</triggerType>
										<conditonLineDelta>0</conditonLineDelta>
										<mStayOpen>0</mStayOpen>
										<mCommand></mCommand>
										<packageName></packageName>
										<mFgColor>#ff0000</mFgColor>
										<mBgColor>#ffff00</mBgColor>
										<mSoundFile></mSoundFile>
										<colorTriggerFgColor>#000000</colorTriggerFgColor>
										<colorTriggerBgColor>#000000</colorTriggerBgColor>
										<regexCodeList>
											<string>^(\w+)('s|') soul stands at (\d+)\%\.$</string>
										</regexCodeList>
										<regexCodePropertyList>
											<integer>1</integer>
										</regexCodePropertyList>
									</Trigger>
									<Trigger isActive="yes" isFolder="no" isTempTrigger="no" isMultiline="no" isPerlSlashGOption="no" isColorizerTrigger="no" isFilterTrigger="no" isSoundTrigger="no" isColorTrigger="no" isColorTriggerFg="no" isColorTriggerBg="no">
										<name>distortion proc</name>
										<script>if snd.toggles.atkecho then
 snd.message("Distortion proc!")
end</script>
										<triggerType>0</triggerType>
										<conditonLineDelta>0</conditonLineDelta>
										<mStayOpen>0</mStayOpen>
										<mCommand></mCommand>
										<packageName></packageName>
										<mFgColor>#ff0000</mFgColor>
										<mBgColor>#ffff00</mBgColor>
										<mSoundFile></mSoundFile>
										<colorTriggerFgColor>#000000</colorTriggerFgColor>
										<colorTriggerBgColor>#000000</colorTriggerBgColor>
										<regexCodeList>
											<string>^(\w+) flinches and hesitates as you strike at (the )?\w+, causing enough of a hesitation to allow your attack to slip past (the )?\w+ defenses\.$</string>
										</regexCodeList>
										<regexCodePropertyList>
											<integer>1</integer>
										</regexCodePropertyList>
									</Trigger>
								</TriggerGroup>
								<TriggerGroup isActive="yes" isFolder="yes" isTempTrigger="no" isMultiline="no" isPerlSlashGOption="no" isColorizerTrigger="no" isFilterTrigger="no" isSoundTrigger="no" isColorTrigger="no" isColorTriggerFg="no" isColorTriggerBg="no">
									<name>Warhounds</name>
									<script></script>
									<triggerType>0</triggerType>
									<conditonLineDelta>0</conditonLineDelta>
									<mStayOpen>0</mStayOpen>
									<mCommand></mCommand>
									<packageName></packageName>
									<mFgColor>#ff0000</mFgColor>
									<mBgColor>#ffff00</mBgColor>
									<mSoundFile></mSoundFile>
									<colorTriggerFgColor>#000000</colorTriggerFgColor>
									<colorTriggerBgColor>#000000</colorTriggerBgColor>
									<regexCodeList />
									<regexCodePropertyList />
									<Trigger isActive="yes" isFolder="no" isTempTrigger="no" isMultiline="no" isPerlSlashGOption="no" isColorizerTrigger="no" isFilterTrigger="no" isSoundTrigger="no" isColorTrigger="no" isColorTriggerFg="no" isColorTriggerBg="no">
										<name>openings</name>
										<script>deleteLine()
snd.message("Hound openings!")</script>
										<triggerType>0</triggerType>
										<conditonLineDelta>0</conditonLineDelta>
										<mStayOpen>0</mStayOpen>
										<mCommand></mCommand>
										<packageName></packageName>
										<mFgColor>#ff0000</mFgColor>
										<mBgColor>#ffff00</mBgColor>
										<mSoundFile></mSoundFile>
										<colorTriggerFgColor>#000000</colorTriggerFgColor>
										<colorTriggerBgColor>#000000</colorTriggerBgColor>
										<regexCodeList>
											<string>^Spying an opening, .+ lunges at .+ and rips viciously at (the )?\w+ flank\. You take advantage of the distraction to prepare a strike at (the )?\w+ wide-open defences\.$</string>
										</regexCodeList>
										<regexCodePropertyList>
											<integer>1</integer>
										</regexCodePropertyList>
									</Trigger>
									<Trigger isActive="yes" isFolder="no" isTempTrigger="no" isMultiline="no" isPerlSlashGOption="no" isColorizerTrigger="no" isFilterTrigger="no" isSoundTrigger="no" isColorTrigger="no" isColorTriggerFg="no" isColorTriggerBg="no">
										<name>used</name>
										<script>snd.balance.hound = false</script>
										<triggerType>0</triggerType>
										<conditonLineDelta>0</conditonLineDelta>
										<mStayOpen>0</mStayOpen>
										<mCommand></mCommand>
										<packageName></packageName>
										<mFgColor>#ff0000</mFgColor>
										<mBgColor>#ffff00</mBgColor>
										<mSoundFile></mSoundFile>
										<colorTriggerFgColor>#000000</colorTriggerFgColor>
										<colorTriggerBgColor>#000000</colorTriggerBgColor>
										<regexCodeList>
											<string>^Hound Balance Used: \d+\.\w+ seconds$</string>
										</regexCodeList>
										<regexCodePropertyList>
											<integer>1</integer>
										</regexCodePropertyList>
									</Trigger>
									<Trigger isActive="yes" isFolder="no" isTempTrigger="no" isMultiline="no" isPerlSlashGOption="no" isColorizerTrigger="no" isFilterTrigger="no" isSoundTrigger="no" isColorTrigger="no" isColorTriggerFg="no" isColorTriggerBg="no">
										<name>regain</name>
										<script>snd.balance.hound = true</script>
										<triggerType>0</triggerType>
										<conditonLineDelta>0</conditonLineDelta>
										<mStayOpen>0</mStayOpen>
										<mCommand></mCommand>
										<packageName></packageName>
										<mFgColor>#ff0000</mFgColor>
										<mBgColor>#ffff00</mBgColor>
										<mSoundFile></mSoundFile>
										<colorTriggerFgColor>#000000</colorTriggerFgColor>
										<colorTriggerBgColor>#000000</colorTriggerBgColor>
										<regexCodeList>
											<string>You can order your hounds to act again.</string>
										</regexCodeList>
										<regexCodePropertyList>
											<integer>3</integer>
										</regexCodePropertyList>
									</Trigger>
									<Trigger isActive="yes" isFolder="no" isTempTrigger="no" isMultiline="no" isPerlSlashGOption="no" isColorizerTrigger="no" isFilterTrigger="no" isSoundTrigger="no" isColorTrigger="no" isColorTriggerFg="no" isColorTriggerBg="no">
										<name>switch</name>
										<script>snd.active_hound = matches[2]
deleteLine()
snd.message("Active hound: &lt;green&gt;"..string.upper(matches[2]).."&lt;white&gt;!")</script>
										<triggerType>0</triggerType>
										<conditonLineDelta>0</conditonLineDelta>
										<mStayOpen>0</mStayOpen>
										<mCommand></mCommand>
										<packageName></packageName>
										<mFgColor>#ff0000</mFgColor>
										<mBgColor>#ffff00</mBgColor>
										<mSoundFile></mSoundFile>
										<colorTriggerFgColor>#000000</colorTriggerFgColor>
										<colorTriggerBgColor>#000000</colorTriggerBgColor>
										<regexCodeList>
											<string>^You let out a harsh shout and (\w+), .+ shoulders (the )?\w+ way forward to the front of the pack\.$</string>
										</regexCodeList>
										<regexCodePropertyList>
											<integer>1</integer>
										</regexCodePropertyList>
									</Trigger>
									<Trigger isActive="yes" isFolder="no" isTempTrigger="no" isMultiline="no" isPerlSlashGOption="no" isColorizerTrigger="no" isFilterTrigger="no" isSoundTrigger="no" isColorTrigger="no" isColorTriggerFg="no" isColorTriggerBg="no">
										<name>Hound balance not ready</name>
										<script>snd.balance.hound = false</script>
										<triggerType>0</triggerType>
										<conditonLineDelta>0</conditonLineDelta>
										<mStayOpen>0</mStayOpen>
										<mCommand></mCommand>
										<packageName></packageName>
										<mFgColor>#ff0000</mFgColor>
										<mBgColor>#ffff00</mBgColor>
										<mSoundFile></mSoundFile>
										<colorTriggerFgColor>#000000</colorTriggerFgColor>
										<colorTriggerBgColor>#000000</colorTriggerBgColor>
										<regexCodeList>
											<string>You cannot order your hounds again so soon.</string>
										</regexCodeList>
										<regexCodePropertyList>
											<integer>3</integer>
										</regexCodePropertyList>
									</Trigger>
									<Trigger isActive="yes" isFolder="no" isTempTrigger="no" isMultiline="no" isPerlSlashGOption="no" isColorizerTrigger="no" isFilterTrigger="no" isSoundTrigger="no" isColorTrigger="no" isColorTriggerFg="no" isColorTriggerBg="no">
										<name>Hound Ululate</name>
										<script>if matches[2] == snd.target then
	snd.target_got("blurry_vision")
end</script>
										<triggerType>0</triggerType>
										<conditonLineDelta>0</conditonLineDelta>
										<mStayOpen>0</mStayOpen>
										<mCommand></mCommand>
										<packageName></packageName>
										<mFgColor>#ff0000</mFgColor>
										<mBgColor>#ffff00</mBgColor>
										<mSoundFile></mSoundFile>
										<colorTriggerFgColor>#000000</colorTriggerFgColor>
										<colorTriggerBgColor>#000000</colorTriggerBgColor>
										<regexCodeList>
											<string>A vicious warhound falls forward on all fours, ululating in a mournful manner and causing your eyes to water involuntarily.</string>
										</regexCodeList>
										<regexCodePropertyList>
											<integer>3</integer>
										</regexCodePropertyList>
									</Trigger>
								</TriggerGroup>
							</TriggerGroup>
							<TriggerGroup isActive="yes" isFolder="yes" isTempTrigger="no" isMultiline="no" isPerlSlashGOption="no" isColorizerTrigger="no" isFilterTrigger="no" isSoundTrigger="no" isColorTrigger="no" isColorTriggerFg="no" isColorTriggerBg="no">
								<name>Templar</name>
								<script></script>
								<triggerType>0</triggerType>
								<conditonLineDelta>0</conditonLineDelta>
								<mStayOpen>0</mStayOpen>
								<mCommand></mCommand>
								<packageName></packageName>
								<mFgColor>#ff0000</mFgColor>
								<mBgColor>#ffff00</mBgColor>
								<mSoundFile></mSoundFile>
								<colorTriggerFgColor>#000000</colorTriggerFgColor>
								<colorTriggerBgColor>#000000</colorTriggerBgColor>
								<regexCodeList />
								<regexCodePropertyList />
								<TriggerGroup isActive="yes" isFolder="yes" isTempTrigger="no" isMultiline="no" isPerlSlashGOption="no" isColorizerTrigger="no" isFilterTrigger="no" isSoundTrigger="no" isColorTrigger="no" isColorTriggerFg="no" isColorTriggerBg="no">
									<name>Battlefury</name>
									<script></script>
									<triggerType>0</triggerType>
									<conditonLineDelta>0</conditonLineDelta>
									<mStayOpen>0</mStayOpen>
									<mCommand></mCommand>
									<packageName></packageName>
									<mFgColor>#ff0000</mFgColor>
									<mBgColor>#ffff00</mBgColor>
									<mSoundFile></mSoundFile>
									<colorTriggerFgColor>#000000</colorTriggerFgColor>
									<colorTriggerBgColor>#000000</colorTriggerBgColor>
									<regexCodeList />
									<regexCodePropertyList />
									<Trigger isActive="yes" isFolder="no" isTempTrigger="no" isMultiline="no" isPerlSlashGOption="no" isColorizerTrigger="no" isFilterTrigger="no" isSoundTrigger="no" isColorTrigger="no" isColorTriggerFg="no" isColorTriggerBg="no">
										<name>strike shield</name>
										<script>if snd.toggles.atkecho then
 deleteLine()
 snd.attack_hit("strike shield", matches[3])
end</script>
										<triggerType>0</triggerType>
										<conditonLineDelta>0</conditonLineDelta>
										<mStayOpen>0</mStayOpen>
										<mCommand></mCommand>
										<packageName></packageName>
										<mFgColor>#ff0000</mFgColor>
										<mBgColor>#ffff00</mBgColor>
										<mSoundFile></mSoundFile>
										<colorTriggerFgColor>#000000</colorTriggerFgColor>
										<colorTriggerBgColor>#000000</colorTriggerBgColor>
										<regexCodeList>
											<string>^You thrust (.*) into (.*), striking (the )?\w+ fiercely\.$</string>
										</regexCodeList>
										<regexCodePropertyList>
											<integer>1</integer>
										</regexCodePropertyList>
									</Trigger>
									<Trigger isActive="yes" isFolder="no" isTempTrigger="no" isMultiline="no" isPerlSlashGOption="no" isColorizerTrigger="no" isFilterTrigger="no" isSoundTrigger="no" isColorTrigger="no" isColorTriggerFg="no" isColorTriggerBg="no">
										<name>duality</name>
										<script>if snd.toggles.atkecho then
 deleteLine()
 snd.attack_hit("strike", matches[2])
end
if snd.blazing and matches[2] == snd.target then
 snd.used.rebounding = false
 snd.blazing = false
end</script>
										<triggerType>0</triggerType>
										<conditonLineDelta>0</conditonLineDelta>
										<mStayOpen>0</mStayOpen>
										<mCommand></mCommand>
										<packageName></packageName>
										<mFgColor>#ff0000</mFgColor>
										<mBgColor>#ffff00</mBgColor>
										<mSoundFile></mSoundFile>
										<colorTriggerFgColor>#000000</colorTriggerFgColor>
										<colorTriggerBgColor>#000000</colorTriggerBgColor>
										<regexCodeList>
											<string>^Stepping in quickly, you wound (\w+) with.*\.$</string>
											<string>^Thrusting .* forward, you skewer (\w+)\.$</string>
											<string>^Lunging in, you stab (\w+) with .*\.$</string>
											<string>^You carve into (\w+) with .*\.$</string>
											<string>^Cutting with precision, you strike (\w+) with .*\.$</string>
											<string>^Slicing sideways with.*, you cut into (\w+)\.$</string>
											<string>^Bringing about .*, you slash into (\w+)\.$</string>
											<string>^You puncture (\w+) with a quick jab of .*\.$</string>
											<string>^With a sharp pass of .*, you score (\w+)\.$</string>
											<string>^You swipe .* across (\w+), gashing (the )?\w+\.$</string>
											<string>^You lacerate (\w+) with .*\.$</string>
											<string>^You hack open (\w+) with .+\.$</string>
										</regexCodeList>
										<regexCodePropertyList>
											<integer>1</integer>
											<integer>1</integer>
											<integer>1</integer>
											<integer>1</integer>
											<integer>1</integer>
											<integer>1</integer>
											<integer>1</integer>
											<integer>1</integer>
											<integer>1</integer>
											<integer>1</integer>
											<integer>1</integer>
											<integer>1</integer>
										</regexCodePropertyList>
									</Trigger>
									<Trigger isActive="yes" isFolder="no" isTempTrigger="no" isMultiline="no" isPerlSlashGOption="no" isColorizerTrigger="no" isFilterTrigger="no" isSoundTrigger="no" isColorTrigger="no" isColorTriggerFg="no" isColorTriggerBg="no">
										<name>empower sacrifice</name>
										<script>if snd.toggles.atkecho then
 deleteLine()
 snd.message("Empower: sacrifice.")
end</script>
										<triggerType>0</triggerType>
										<conditonLineDelta>0</conditonLineDelta>
										<mStayOpen>0</mStayOpen>
										<mCommand></mCommand>
										<packageName></packageName>
										<mFgColor>#ff0000</mFgColor>
										<mBgColor>#ffff00</mBgColor>
										<mSoundFile></mSoundFile>
										<colorTriggerFgColor>#000000</colorTriggerFgColor>
										<colorTriggerBgColor>#000000</colorTriggerBgColor>
										<regexCodeList>
											<string>^As your attack strikes (.*), the power within (.*) flares, draining your life as the weapon releases a burst of violent energy into (.*)\.$</string>
											<string>^(.*) flares as it feeds on your sacrifice, discharging into (.*)\.$</string>
										</regexCodeList>
										<regexCodePropertyList>
											<integer>1</integer>
											<integer>1</integer>
										</regexCodePropertyList>
									</Trigger>
									<Trigger isActive="yes" isFolder="no" isTempTrigger="no" isMultiline="no" isPerlSlashGOption="no" isColorizerTrigger="no" isFilterTrigger="no" isSoundTrigger="no" isColorTrigger="no" isColorTriggerFg="no" isColorTriggerBg="no">
										<name>sacrifice</name>
										<script>deleteLine()</script>
										<triggerType>0</triggerType>
										<conditonLineDelta>0</conditonLineDelta>
										<mStayOpen>0</mStayOpen>
										<mCommand></mCommand>
										<packageName></packageName>
										<mFgColor>#ff0000</mFgColor>
										<mBgColor>#ffff00</mBgColor>
										<mSoundFile></mSoundFile>
										<colorTriggerFgColor>#000000</colorTriggerFgColor>
										<colorTriggerBgColor>#000000</colorTriggerBgColor>
										<regexCodeList>
											<string>^Focusing your mind, you imbue(.*) with sacrifice in your hands\.$</string>
										</regexCodeList>
										<regexCodePropertyList>
											<integer>1</integer>
										</regexCodePropertyList>
									</Trigger>
									<Trigger isActive="yes" isFolder="no" isTempTrigger="no" isMultiline="no" isPerlSlashGOption="no" isColorizerTrigger="no" isFilterTrigger="no" isSoundTrigger="no" isColorTrigger="no" isColorTriggerFg="no" isColorTriggerBg="no">
										<name>empower/envenom</name>
										<script>deleteLine()</script>
										<triggerType>0</triggerType>
										<conditonLineDelta>0</conditonLineDelta>
										<mStayOpen>0</mStayOpen>
										<mCommand></mCommand>
										<packageName></packageName>
										<mFgColor>#ff0000</mFgColor>
										<mBgColor>#ffff00</mBgColor>
										<mSoundFile></mSoundFile>
										<colorTriggerFgColor>#000000</colorTriggerFgColor>
										<colorTriggerBgColor>#000000</colorTriggerBgColor>
										<regexCodeList>
											<string>^You (empower|envenom) your (left|right)-hand weapon with (\w+)\.$</string>
										</regexCodeList>
										<regexCodePropertyList>
											<integer>1</integer>
										</regexCodePropertyList>
									</Trigger>
									<Trigger isActive="yes" isFolder="no" isTempTrigger="no" isMultiline="no" isPerlSlashGOption="no" isColorizerTrigger="no" isFilterTrigger="no" isSoundTrigger="no" isColorTrigger="no" isColorTriggerFg="no" isColorTriggerBg="no">
										<name>styles</name>
										<script>if snd.toggles.atkecho then
 deleteLine()
 snd.attack_hit("strike", matches[2])
end
</script>
										<triggerType>0</triggerType>
										<conditonLineDelta>0</conditonLineDelta>
										<mStayOpen>0</mStayOpen>
										<mCommand></mCommand>
										<packageName></packageName>
										<mFgColor>#ff0000</mFgColor>
										<mBgColor>#ffff00</mBgColor>
										<mSoundFile></mSoundFile>
										<colorTriggerFgColor>#000000</colorTriggerFgColor>
										<colorTriggerBgColor>#000000</colorTriggerBgColor>
										<regexCodeList>
											<string>^You execute a masterful defense, keeping (.+) out of reach with surgical stabs from .+, careful not to tire yourself\.$</string>
										</regexCodeList>
										<regexCodePropertyList>
											<integer>1</integer>
										</regexCodePropertyList>
									</Trigger>
								</TriggerGroup>
								<TriggerGroup isActive="yes" isFolder="yes" isTempTrigger="no" isMultiline="no" isPerlSlashGOption="no" isColorizerTrigger="no" isFilterTrigger="no" isSoundTrigger="no" isColorTrigger="no" isColorTriggerFg="no" isColorTriggerBg="no">
									<name>Bladefire</name>
									<script></script>
									<triggerType>0</triggerType>
									<conditonLineDelta>0</conditonLineDelta>
									<mStayOpen>0</mStayOpen>
									<mCommand></mCommand>
									<packageName></packageName>
									<mFgColor>#ff0000</mFgColor>
									<mBgColor>#ffff00</mBgColor>
									<mSoundFile></mSoundFile>
									<colorTriggerFgColor>#000000</colorTriggerFgColor>
									<colorTriggerBgColor>#000000</colorTriggerBgColor>
									<regexCodeList />
									<regexCodePropertyList />
									<Trigger isActive="yes" isFolder="no" isTempTrigger="no" isMultiline="no" isPerlSlashGOption="no" isColorizerTrigger="no" isFilterTrigger="no" isSoundTrigger="no" isColorTrigger="no" isColorTriggerFg="no" isColorTriggerBg="no">
										<name>hits</name>
										<script>deleteLine()</script>
										<triggerType>0</triggerType>
										<conditonLineDelta>0</conditonLineDelta>
										<mStayOpen>0</mStayOpen>
										<mCommand></mCommand>
										<packageName></packageName>
										<mFgColor>#ff0000</mFgColor>
										<mBgColor>#ffff00</mBgColor>
										<mSoundFile></mSoundFile>
										<colorTriggerFgColor>#000000</colorTriggerFgColor>
										<colorTriggerBgColor>#000000</colorTriggerBgColor>
										<regexCodeList>
											<string>^A flash of energy cascades down .+\.$</string>
										</regexCodeList>
										<regexCodePropertyList>
											<integer>1</integer>
										</regexCodePropertyList>
									</Trigger>
								</TriggerGroup>
								<Trigger isActive="yes" isFolder="no" isTempTrigger="no" isMultiline="no" isPerlSlashGOption="no" isColorizerTrigger="no" isFilterTrigger="no" isSoundTrigger="no" isColorTrigger="no" isColorTriggerFg="no" isColorTriggerBg="no">
									<name>penance</name>
									<script>if snd.toggles.atkecho then
 deleteLine()
 snd.message("You: Penance!")
end</script>
									<triggerType>0</triggerType>
									<conditonLineDelta>0</conditonLineDelta>
									<mStayOpen>0</mStayOpen>
									<mCommand></mCommand>
									<packageName></packageName>
									<mFgColor>#ff0000</mFgColor>
									<mBgColor>#ffff00</mBgColor>
									<mSoundFile></mSoundFile>
									<colorTriggerFgColor>#000000</colorTriggerFgColor>
									<colorTriggerBgColor>#000000</colorTriggerBgColor>
									<regexCodeList>
										<string>^With practiced ease, you position your weapon and gather your resolve, before engaging your art with a yell\. .+ warms in your grasp and flashes just once as you impose a Penance upon (the )?\w+\.$</string>
									</regexCodeList>
									<regexCodePropertyList>
										<integer>1</integer>
									</regexCodePropertyList>
								</Trigger>
							</TriggerGroup>
							<TriggerGroup isActive="yes" isFolder="yes" isTempTrigger="no" isMultiline="no" isPerlSlashGOption="no" isColorizerTrigger="no" isFilterTrigger="no" isSoundTrigger="no" isColorTrigger="no" isColorTriggerFg="no" isColorTriggerBg="no">
								<name>Terramancer</name>
								<script></script>
								<triggerType>0</triggerType>
								<conditonLineDelta>0</conditonLineDelta>
								<mStayOpen>0</mStayOpen>
								<mCommand></mCommand>
								<packageName></packageName>
								<mFgColor>#ff0000</mFgColor>
								<mBgColor>#ffff00</mBgColor>
								<mSoundFile></mSoundFile>
								<colorTriggerFgColor>#000000</colorTriggerFgColor>
								<colorTriggerBgColor>#000000</colorTriggerBgColor>
								<regexCodeList />
								<regexCodePropertyList />
								<TriggerGroup isActive="yes" isFolder="yes" isTempTrigger="no" isMultiline="no" isPerlSlashGOption="no" isColorizerTrigger="no" isFilterTrigger="no" isSoundTrigger="no" isColorTrigger="no" isColorTriggerFg="no" isColorTriggerBg="no">
									<name>Terramancy</name>
									<script></script>
									<triggerType>0</triggerType>
									<conditonLineDelta>0</conditonLineDelta>
									<mStayOpen>0</mStayOpen>
									<mCommand></mCommand>
									<packageName></packageName>
									<mFgColor>#ff0000</mFgColor>
									<mBgColor>#ffff00</mBgColor>
									<mSoundFile></mSoundFile>
									<colorTriggerFgColor>#000000</colorTriggerFgColor>
									<colorTriggerBgColor>#000000</colorTriggerBgColor>
									<regexCodeList />
									<regexCodePropertyList />
									<Trigger isActive="yes" isFolder="no" isTempTrigger="no" isMultiline="yes" isPerlSlashGOption="no" isColorizerTrigger="no" isFilterTrigger="no" isSoundTrigger="no" isColorTrigger="no" isColorTriggerFg="no" isColorTriggerBg="no">
										<name>slam</name>
										<script>if snd.toggles.atkecho then
 deleteLine()
 if multimatches[1][4] == "you" then
  snd.got_hit("slam "..multimatches[1][3], multimatches[1][2])
 else
  snd.third_hit("slam "..multimatches[1][3], multimatches[1][2], multimatches[1][4])
 end
end</script>
										<triggerType>0</triggerType>
										<conditonLineDelta>2</conditonLineDelta>
										<mStayOpen>0</mStayOpen>
										<mCommand></mCommand>
										<packageName></packageName>
										<mFgColor>#ff0000</mFgColor>
										<mBgColor>#ffff00</mBgColor>
										<mSoundFile></mSoundFile>
										<colorTriggerFgColor>#000000</colorTriggerFgColor>
										<colorTriggerBgColor>#000000</colorTriggerBgColor>
										<regexCodeList>
											<string>^(\w+) uses Terramancy Slam (.*) on (\w+)\.$</string>
											<string>1</string>
											<string>^(\w+) advances upon (\w+), flail spinning rapidly in (the )?\w+ hand\. (the )?\w+ quickly flicks (the )?\w+ wrist, sendingthe spiked balls to slam into your (.*)\.$</string>
										</regexCodeList>
										<regexCodePropertyList>
											<integer>1</integer>
											<integer>5</integer>
											<integer>1</integer>
										</regexCodePropertyList>
									</Trigger>
									<Trigger isActive="yes" isFolder="no" isTempTrigger="no" isMultiline="no" isPerlSlashGOption="no" isColorizerTrigger="no" isFilterTrigger="no" isSoundTrigger="no" isColorTrigger="no" isColorTriggerFg="no" isColorTriggerBg="no">
										<name>slam extra</name>
										<script>if snd.toggles.atkecho then
 deleteLine()
 snd.got_hit("slam "..matches[4], matches[2])
end</script>
										<triggerType>0</triggerType>
										<conditonLineDelta>0</conditonLineDelta>
										<mStayOpen>0</mStayOpen>
										<mCommand></mCommand>
										<packageName></packageName>
										<mFgColor>#ff0000</mFgColor>
										<mBgColor>#ffff00</mBgColor>
										<mSoundFile></mSoundFile>
										<colorTriggerFgColor>#000000</colorTriggerFgColor>
										<colorTriggerBgColor>#000000</colorTriggerBgColor>
										<regexCodeList>
											<string>^(\w+) quickly adjusts the momentum of (the )?\w+ flail, smashing it into your (.*)\.$</string>
										</regexCodeList>
										<regexCodePropertyList>
											<integer>1</integer>
										</regexCodePropertyList>
									</Trigger>
								</TriggerGroup>
								<TriggerGroup isActive="yes" isFolder="yes" isTempTrigger="no" isMultiline="no" isPerlSlashGOption="no" isColorizerTrigger="no" isFilterTrigger="no" isSoundTrigger="no" isColorTrigger="no" isColorTriggerFg="no" isColorTriggerBg="no">
									<name>Dessication</name>
									<script></script>
									<triggerType>0</triggerType>
									<conditonLineDelta>0</conditonLineDelta>
									<mStayOpen>0</mStayOpen>
									<mCommand></mCommand>
									<packageName></packageName>
									<mFgColor>#ff0000</mFgColor>
									<mBgColor>#ffff00</mBgColor>
									<mSoundFile></mSoundFile>
									<colorTriggerFgColor>#000000</colorTriggerFgColor>
									<colorTriggerBgColor>#000000</colorTriggerBgColor>
									<regexCodeList />
									<regexCodePropertyList />
									<Trigger isActive="yes" isFolder="no" isTempTrigger="no" isMultiline="no" isPerlSlashGOption="no" isColorizerTrigger="no" isFilterTrigger="no" isSoundTrigger="no" isColorTrigger="no" isColorTriggerFg="no" isColorTriggerBg="no">
										<name>sandstorm start</name>
										<script>if snd.toggles.atkecho then
 deleteLine()
 snd.message(matches[2].." used: sandstorm!")
end</script>
										<triggerType>0</triggerType>
										<conditonLineDelta>0</conditonLineDelta>
										<mStayOpen>0</mStayOpen>
										<mCommand></mCommand>
										<packageName></packageName>
										<mFgColor>#ff0000</mFgColor>
										<mBgColor>#ffff00</mBgColor>
										<mSoundFile></mSoundFile>
										<colorTriggerFgColor>#000000</colorTriggerFgColor>
										<colorTriggerBgColor>#000000</colorTriggerBgColor>
										<regexCodeList>
											<string>^With a flick of (the )?\w+ wrist, (\w+) conjures a fine layer of magic sand that settles over everything insight\.$</string>
										</regexCodeList>
										<regexCodePropertyList>
											<integer>1</integer>
										</regexCodePropertyList>
									</Trigger>
									<Trigger isActive="yes" isFolder="no" isTempTrigger="no" isMultiline="no" isPerlSlashGOption="no" isColorizerTrigger="no" isFilterTrigger="no" isSoundTrigger="no" isColorTrigger="no" isColorTriggerFg="no" isColorTriggerBg="no">
										<name>sandstorm</name>
										<script>deleteLine()</script>
										<triggerType>0</triggerType>
										<conditonLineDelta>0</conditonLineDelta>
										<mStayOpen>0</mStayOpen>
										<mCommand></mCommand>
										<packageName></packageName>
										<mFgColor>#ff0000</mFgColor>
										<mBgColor>#ffff00</mBgColor>
										<mSoundFile></mSoundFile>
										<colorTriggerFgColor>#000000</colorTriggerFgColor>
										<colorTriggerBgColor>#000000</colorTriggerBgColor>
										<regexCodeList>
											<string>^The fury of the sandstorm lessens as it fuels .+ attack\.$</string>
											<string>^The force of .+ attack kicks up a cloud of dust and sand into the raging storm, increasing its size to massive\.$</string>
										</regexCodeList>
										<regexCodePropertyList>
											<integer>1</integer>
											<integer>1</integer>
										</regexCodePropertyList>
									</Trigger>
									<Trigger isActive="yes" isFolder="no" isTempTrigger="no" isMultiline="no" isPerlSlashGOption="no" isColorizerTrigger="no" isFilterTrigger="no" isSoundTrigger="no" isColorTrigger="no" isColorTriggerFg="no" isColorTriggerBg="no">
										<name>slice</name>
										<script>if snd.toggles.atkecho then
 deleteLine()
 snd.got_hit("slice "..matches[3], matches[2])
end</script>
										<triggerType>0</triggerType>
										<conditonLineDelta>0</conditonLineDelta>
										<mStayOpen>0</mStayOpen>
										<mCommand></mCommand>
										<packageName></packageName>
										<mFgColor>#ff0000</mFgColor>
										<mBgColor>#ffff00</mBgColor>
										<mSoundFile></mSoundFile>
										<colorTriggerFgColor>#000000</colorTriggerFgColor>
										<colorTriggerBgColor>#000000</colorTriggerBgColor>
										<regexCodeList>
											<string>^With a forceful sweep of the hand, (\w+) sends a wave of sand to shred your (.+)\.$</string>
										</regexCodeList>
										<regexCodePropertyList>
											<integer>1</integer>
										</regexCodePropertyList>
									</Trigger>
								</TriggerGroup>
								<TriggerGroup isActive="yes" isFolder="yes" isTempTrigger="no" isMultiline="no" isPerlSlashGOption="no" isColorizerTrigger="no" isFilterTrigger="no" isSoundTrigger="no" isColorTrigger="no" isColorTriggerFg="no" isColorTriggerBg="no">
									<name>Animation</name>
									<script></script>
									<triggerType>0</triggerType>
									<conditonLineDelta>0</conditonLineDelta>
									<mStayOpen>0</mStayOpen>
									<mCommand></mCommand>
									<packageName></packageName>
									<mFgColor>#ff0000</mFgColor>
									<mBgColor>#ffff00</mBgColor>
									<mSoundFile></mSoundFile>
									<colorTriggerFgColor>#000000</colorTriggerFgColor>
									<colorTriggerBgColor>#000000</colorTriggerBgColor>
									<regexCodeList />
									<regexCodePropertyList />
									<Trigger isActive="yes" isFolder="no" isTempTrigger="no" isMultiline="yes" isPerlSlashGOption="no" isColorizerTrigger="no" isFilterTrigger="no" isSoundTrigger="no" isColorTrigger="no" isColorTriggerFg="no" isColorTriggerBg="no">
										<name>barrel</name>
										<script>if snd.toggles.atkecho then
 deleteLine()
 if multimatches[1][3] == "you" then
  snd.got_hit("barrel", multimatches[1][2])
 else
  snd.third_hit("barrel", multimatches[1][2], multimatches[1][3])
 end
end</script>
										<triggerType>0</triggerType>
										<conditonLineDelta>3</conditonLineDelta>
										<mStayOpen>0</mStayOpen>
										<mCommand></mCommand>
										<packageName></packageName>
										<mFgColor>#ff0000</mFgColor>
										<mBgColor>#ffff00</mBgColor>
										<mSoundFile></mSoundFile>
										<colorTriggerFgColor>#000000</colorTriggerFgColor>
										<colorTriggerBgColor>#000000</colorTriggerBgColor>
										<regexCodeList>
											<string>^(.*) uses Animation Barrel on (\w+)\.$</string>
											<string>1</string>
											<string>^.+ barrels headlong into (\w+), knocking (the )?\w+ over before the force of its great bulk\.$</string>
										</regexCodeList>
										<regexCodePropertyList>
											<integer>1</integer>
											<integer>5</integer>
											<integer>1</integer>
										</regexCodePropertyList>
									</Trigger>
								</TriggerGroup>
							</TriggerGroup>
							<TriggerGroup isActive="yes" isFolder="yes" isTempTrigger="no" isMultiline="no" isPerlSlashGOption="no" isColorizerTrigger="no" isFilterTrigger="no" isSoundTrigger="no" isColorTrigger="no" isColorTriggerFg="no" isColorTriggerBg="no">
								<name>Luminary</name>
								<script></script>
								<triggerType>0</triggerType>
								<conditonLineDelta>0</conditonLineDelta>
								<mStayOpen>0</mStayOpen>
								<mCommand></mCommand>
								<packageName></packageName>
								<mFgColor>#ff0000</mFgColor>
								<mBgColor>#ffff00</mBgColor>
								<mSoundFile></mSoundFile>
								<colorTriggerFgColor>#000000</colorTriggerFgColor>
								<colorTriggerBgColor>#000000</colorTriggerBgColor>
								<regexCodeList />
								<regexCodePropertyList />
								<Trigger isActive="yes" isFolder="no" isTempTrigger="no" isMultiline="yes" isPerlSlashGOption="no" isColorizerTrigger="no" isFilterTrigger="no" isSoundTrigger="no" isColorTrigger="no" isColorTriggerFg="no" isColorTriggerBg="no">
									<name>battle</name>
									<script>if snd.toggles.atkecho then
 deleteLine()
 snd.got_hit("battle "..multimatches[1][3], multimatches[1][2])
end</script>
									<triggerType>0</triggerType>
									<conditonLineDelta>2</conditonLineDelta>
									<mStayOpen>0</mStayOpen>
									<mCommand></mCommand>
									<packageName></packageName>
									<mFgColor>#ff0000</mFgColor>
									<mBgColor>#ffff00</mBgColor>
									<mSoundFile></mSoundFile>
									<colorTriggerFgColor>#000000</colorTriggerFgColor>
									<colorTriggerBgColor>#000000</colorTriggerBgColor>
									<regexCodeList>
										<string>^(\w+) uses Spirituality Battle \((.+)\) on you\.$</string>
										<string>1</string>
										<string>^Your mind writhes under the torment of a guardian angel, afflicting you with (\w+)\.$</string>
									</regexCodeList>
									<regexCodePropertyList>
										<integer>1</integer>
										<integer>5</integer>
										<integer>1</integer>
									</regexCodePropertyList>
								</Trigger>
								<Trigger isActive="yes" isFolder="no" isTempTrigger="no" isMultiline="yes" isPerlSlashGOption="no" isColorizerTrigger="no" isFilterTrigger="no" isSoundTrigger="no" isColorTrigger="no" isColorTriggerFg="no" isColorTriggerBg="no">
									<name>chasten</name>
									<script>if multimatches[3][3] == snd.target then
 snd.target_got(multimatches[3][2])
end</script>
									<triggerType>0</triggerType>
									<conditonLineDelta>2</conditonLineDelta>
									<mStayOpen>0</mStayOpen>
									<mCommand></mCommand>
									<packageName></packageName>
									<mFgColor>#ff0000</mFgColor>
									<mBgColor>#ffff00</mBgColor>
									<mSoundFile></mSoundFile>
									<colorTriggerFgColor>#000000</colorTriggerFgColor>
									<colorTriggerBgColor>#000000</colorTriggerBgColor>
									<regexCodeList>
										<string>^You direct a dark bolt of energy through .+ towards (\w+)\.$</string>
										<string>1</string>
										<string>^The curse of (\w+) is brought down onto (\w+)\.$</string>
									</regexCodeList>
									<regexCodePropertyList>
										<integer>1</integer>
										<integer>5</integer>
										<integer>1</integer>
									</regexCodePropertyList>
								</Trigger>
								<Trigger isActive="yes" isFolder="no" isTempTrigger="no" isMultiline="yes" isPerlSlashGOption="no" isColorizerTrigger="no" isFilterTrigger="no" isSoundTrigger="no" isColorTrigger="no" isColorTriggerFg="no" isColorTriggerBg="no">
									<name>spirituality attack</name>
									<script>if multimatches[1][3] == snd.target then
 if multimatches[1][2] == "Strike" then
  snd.target_got("paresis")
  snd.last_aff = "paresis"
 elseif multimatches[1][2] == "Punch" then
  snd.target_got("weariness")
  snd.last_aff = "weariness"
 elseif multimatches[1][2] == "Slam" then
  snd.target_got("asthma")
	snd.target_got("haemophilia")
  snd.last_aff = "asthma"
 elseif multimatches[1][2] == "Facesmash" then
  snd.target_got("sight")
	snd.target_got("berserking")
  snd.last_aff = "sight"
 elseif multimatches[1][2] == "Brilliance" then
  snd.target_got("sight")
	snd.last_aff = "sight"
 elseif multimatches[1][3] == "Crash" then
  snd.target_got("disrupted")
	table.insert(snd.last_affs, "disrupted")
 end
end</script>
									<triggerType>0</triggerType>
									<conditonLineDelta>2</conditonLineDelta>
									<mStayOpen>10</mStayOpen>
									<mCommand></mCommand>
									<packageName></packageName>
									<mFgColor>#ff0000</mFgColor>
									<mBgColor>#ffff00</mBgColor>
									<mSoundFile></mSoundFile>
									<colorTriggerFgColor>#000000</colorTriggerFgColor>
									<colorTriggerBgColor>#000000</colorTriggerBgColor>
									<regexCodeList>
										<string>^You use Spirituality (\w+) on (\w+)\.$</string>
										<string>1</string>
										<string>^(.*)$</string>
									</regexCodeList>
									<regexCodePropertyList>
										<integer>1</integer>
										<integer>5</integer>
										<integer>1</integer>
									</regexCodePropertyList>
									<Trigger isActive="yes" isFolder="no" isTempTrigger="no" isMultiline="no" isPerlSlashGOption="no" isColorizerTrigger="no" isFilterTrigger="no" isSoundTrigger="no" isColorTrigger="no" isColorTriggerFg="no" isColorTriggerBg="no">
										<name>undo spirituality stuff</name>
										<script>if snd.last_aff ~= "" and snd.target == matches[2] then
 snd.target_cured(snd.last_aff)
end</script>
										<triggerType>0</triggerType>
										<conditonLineDelta>0</conditonLineDelta>
										<mStayOpen>0</mStayOpen>
										<mCommand></mCommand>
										<packageName></packageName>
										<mFgColor>#ff0000</mFgColor>
										<mBgColor>#ffff00</mBgColor>
										<mSoundFile></mSoundFile>
										<colorTriggerFgColor>#000000</colorTriggerFgColor>
										<colorTriggerBgColor>#000000</colorTriggerBgColor>
										<regexCodeList>
											<string>^The attack rebounds back onto (\w+)\!$</string>
											<string>^Stepping quickly out of the way, (\w+) dodges the attack\.$</string>
											<string>^(\w+) parries the attack on (.*) with a deft maneuver\.$</string>
											<string>^(\w+) guards the attack on (.*)\.$</string>
											<string>^You discern that (\w+) has resisted the asthma affliction\.$</string>
											<string>^A reflection of (\w+) blinks out of existence\.$</string>
											<string>^With a free hand, (\w+) fends off the attack on (the )?\w+ (.+)\.$</string>
										</regexCodeList>
										<regexCodePropertyList>
											<integer>1</integer>
											<integer>1</integer>
											<integer>1</integer>
											<integer>1</integer>
											<integer>1</integer>
											<integer>1</integer>
											<integer>1</integer>
										</regexCodePropertyList>
									</Trigger>
									<Trigger isActive="yes" isFolder="no" isTempTrigger="no" isMultiline="no" isPerlSlashGOption="no" isColorizerTrigger="no" isFilterTrigger="no" isSoundTrigger="no" isColorTrigger="no" isColorTriggerFg="no" isColorTriggerBg="no">
										<name>spirituality attack end</name>
										<script>setTriggerStayOpen("spirituality attack", 0)</script>
										<triggerType>0</triggerType>
										<conditonLineDelta>0</conditonLineDelta>
										<mStayOpen>0</mStayOpen>
										<mCommand></mCommand>
										<packageName></packageName>
										<mFgColor>#ff0000</mFgColor>
										<mBgColor>#ffff00</mBgColor>
										<mSoundFile></mSoundFile>
										<colorTriggerFgColor>#000000</colorTriggerFgColor>
										<colorTriggerBgColor>#000000</colorTriggerBgColor>
										<regexCodeList>
											<string>return isPrompt()</string>
											<string>^(\w+) uses</string>
										</regexCodeList>
										<regexCodePropertyList>
											<integer>4</integer>
											<integer>1</integer>
										</regexCodePropertyList>
									</Trigger>
								</Trigger>
								<Trigger isActive="yes" isFolder="no" isTempTrigger="no" isMultiline="no" isPerlSlashGOption="no" isColorizerTrigger="no" isFilterTrigger="no" isSoundTrigger="no" isColorTrigger="no" isColorTriggerFg="no" isColorTriggerBg="no">
									<name>transfix</name>
									<script>if matches[2] == snd.target then
 snd.target_got("transfixed")
end</script>
									<triggerType>0</triggerType>
									<conditonLineDelta>0</conditonLineDelta>
									<mStayOpen>0</mStayOpen>
									<mCommand></mCommand>
									<packageName></packageName>
									<mFgColor>#ff0000</mFgColor>
									<mBgColor>#ffff00</mBgColor>
									<mSoundFile></mSoundFile>
									<colorTriggerFgColor>#000000</colorTriggerFgColor>
									<colorTriggerBgColor>#000000</colorTriggerBgColor>
									<regexCodeList>
										<string>^You stare fixedly at (\w+), and a ball of flame appears between you\. (the )?\w+ becomes absorbed upon the flame, (the )?\w+ attention on nothing else\.$</string>
									</regexCodeList>
									<regexCodePropertyList>
										<integer>1</integer>
									</regexCodePropertyList>
								</Trigger>
								<Trigger isActive="yes" isFolder="no" isTempTrigger="no" isMultiline="no" isPerlSlashGOption="no" isColorizerTrigger="no" isFilterTrigger="no" isSoundTrigger="no" isColorTrigger="no" isColorTriggerFg="no" isColorTriggerBg="no">
									<name>transfix fail</name>
									<script>if matches[2] == snd.target then
 snd.target_got("sight")
end</script>
									<triggerType>0</triggerType>
									<conditonLineDelta>0</conditonLineDelta>
									<mStayOpen>0</mStayOpen>
									<mCommand></mCommand>
									<packageName></packageName>
									<mFgColor>#ff0000</mFgColor>
									<mBgColor>#ffff00</mBgColor>
									<mSoundFile></mSoundFile>
									<colorTriggerFgColor>#000000</colorTriggerFgColor>
									<colorTriggerBgColor>#000000</colorTriggerBgColor>
									<regexCodeList>
										<string>^You use Illumination Tranfixion \(blindness\) on (\w+)\.$</string>
									</regexCodeList>
									<regexCodePropertyList>
										<integer>1</integer>
									</regexCodePropertyList>
								</Trigger>
								<Trigger isActive="yes" isFolder="no" isTempTrigger="no" isMultiline="no" isPerlSlashGOption="no" isColorizerTrigger="no" isFilterTrigger="no" isSoundTrigger="no" isColorTrigger="no" isColorTriggerFg="no" isColorTriggerBg="no">
									<name>lumi lightning</name>
									<script>if snd.target == matches[2] then
	snd.target_got("epilepsy")
end</script>
									<triggerType>0</triggerType>
									<conditonLineDelta>0</conditonLineDelta>
									<mStayOpen>0</mStayOpen>
									<mCommand></mCommand>
									<packageName></packageName>
									<mFgColor>#ff0000</mFgColor>
									<mBgColor>#ffff00</mBgColor>
									<mSoundFile></mSoundFile>
									<colorTriggerFgColor>#000000</colorTriggerFgColor>
									<colorTriggerBgColor>#000000</colorTriggerBgColor>
									<regexCodeList>
										<string>^\w+ uses? Illumination Lightning on (\w+)\.$</string>
									</regexCodeList>
									<regexCodePropertyList>
										<integer>1</integer>
									</regexCodePropertyList>
								</Trigger>
								<Trigger isActive="yes" isFolder="no" isTempTrigger="no" isMultiline="no" isPerlSlashGOption="no" isColorizerTrigger="no" isFilterTrigger="no" isSoundTrigger="no" isColorTrigger="no" isColorTriggerFg="no" isColorTriggerBg="no">
									<name>Angel sear</name>
									<script>if matches[2] == snd.target then
	snd.target_got("salve_seared")
	tempTimer(15, [[snd.target_cured("salve_seared")]])
end</script>
									<triggerType>0</triggerType>
									<conditonLineDelta>0</conditonLineDelta>
									<mStayOpen>0</mStayOpen>
									<mCommand></mCommand>
									<packageName></packageName>
									<mFgColor>#ff0000</mFgColor>
									<mBgColor>#ffff00</mBgColor>
									<mSoundFile></mSoundFile>
									<colorTriggerFgColor>#000000</colorTriggerFgColor>
									<colorTriggerBgColor>#000000</colorTriggerBgColor>
									<regexCodeList>
										<string>^You use Spirituality Sear on (\w+)\.$</string>
									</regexCodeList>
									<regexCodePropertyList>
										<integer>1</integer>
									</regexCodePropertyList>
								</Trigger>
							</TriggerGroup>
							<TriggerGroup isActive="yes" isFolder="yes" isTempTrigger="no" isMultiline="no" isPerlSlashGOption="no" isColorizerTrigger="no" isFilterTrigger="no" isSoundTrigger="no" isColorTrigger="no" isColorTriggerFg="no" isColorTriggerBg="no">
								<name>Ascendril</name>
								<script></script>
								<triggerType>0</triggerType>
								<conditonLineDelta>0</conditonLineDelta>
								<mStayOpen>0</mStayOpen>
								<mCommand></mCommand>
								<packageName></packageName>
								<mFgColor>#ff0000</mFgColor>
								<mBgColor>#ffff00</mBgColor>
								<mSoundFile></mSoundFile>
								<colorTriggerFgColor>#000000</colorTriggerFgColor>
								<colorTriggerBgColor>#000000</colorTriggerBgColor>
								<regexCodeList />
								<regexCodePropertyList />
								<Trigger isActive="yes" isFolder="no" isTempTrigger="no" isMultiline="no" isPerlSlashGOption="no" isColorizerTrigger="no" isFilterTrigger="no" isSoundTrigger="no" isColorTrigger="no" isColorTriggerFg="no" isColorTriggerBg="no">
									<name>transfix fail</name>
									<script>if matches[2] == snd.target then
 snd.target_got("sight")
end</script>
									<triggerType>0</triggerType>
									<conditonLineDelta>0</conditonLineDelta>
									<mStayOpen>0</mStayOpen>
									<mCommand></mCommand>
									<packageName></packageName>
									<mFgColor>#ff0000</mFgColor>
									<mBgColor>#ffff00</mBgColor>
									<mSoundFile></mSoundFile>
									<colorTriggerFgColor>#000000</colorTriggerFgColor>
									<colorTriggerBgColor>#000000</colorTriggerBgColor>
									<regexCodeList>
										<string>^You weave fire and water together in an attempt to transfix (\w+), but succeed only in curing (the )?\w+ blindness\.$</string>
									</regexCodeList>
									<regexCodePropertyList>
										<integer>1</integer>
									</regexCodePropertyList>
								</Trigger>
								<Trigger isActive="yes" isFolder="no" isTempTrigger="no" isMultiline="no" isPerlSlashGOption="no" isColorizerTrigger="no" isFilterTrigger="no" isSoundTrigger="no" isColorTrigger="no" isColorTriggerFg="no" isColorTriggerBg="no">
									<name>transfix</name>
									<script>if matches[2] == snd.target then
 snd.target_got("transfixed")
end</script>
									<triggerType>0</triggerType>
									<conditonLineDelta>0</conditonLineDelta>
									<mStayOpen>0</mStayOpen>
									<mCommand></mCommand>
									<packageName></packageName>
									<mFgColor>#ff0000</mFgColor>
									<mBgColor>#ffff00</mBgColor>
									<mSoundFile></mSoundFile>
									<colorTriggerFgColor>#000000</colorTriggerFgColor>
									<colorTriggerBgColor>#000000</colorTriggerBgColor>
									<regexCodeList>
										<string>^With blinding speed, you weave fire and water together in an intricate pattern that transfixes (\w+)\.$</string>
									</regexCodeList>
									<regexCodePropertyList>
										<integer>1</integer>
									</regexCodePropertyList>
								</Trigger>
							</TriggerGroup>
							<TriggerGroup isActive="yes" isFolder="yes" isTempTrigger="no" isMultiline="no" isPerlSlashGOption="no" isColorizerTrigger="no" isFilterTrigger="no" isSoundTrigger="no" isColorTrigger="no" isColorTriggerFg="no" isColorTriggerBg="no">
								<name>Telepathy</name>
								<script></script>
								<triggerType>0</triggerType>
								<conditonLineDelta>0</conditonLineDelta>
								<mStayOpen>0</mStayOpen>
								<mCommand></mCommand>
								<packageName></packageName>
								<mFgColor>#ff0000</mFgColor>
								<mBgColor>#ffff00</mBgColor>
								<mSoundFile></mSoundFile>
								<colorTriggerFgColor>#000000</colorTriggerFgColor>
								<colorTriggerBgColor>#000000</colorTriggerBgColor>
								<regexCodeList />
								<regexCodePropertyList />
								<Trigger isActive="yes" isFolder="no" isTempTrigger="no" isMultiline="no" isPerlSlashGOption="no" isColorizerTrigger="no" isFilterTrigger="no" isSoundTrigger="no" isColorTrigger="no" isColorTriggerFg="no" isColorTriggerBg="no">
									<name>mindnet in/out</name>
									<script>snd.alertnessHit(matches[3], matches[2], "mindnet")</script>
									<triggerType>0</triggerType>
									<conditonLineDelta>0</conditonLineDelta>
									<mStayOpen>0</mStayOpen>
									<mCommand></mCommand>
									<packageName></packageName>
									<mFgColor>#ff0000</mFgColor>
									<mBgColor>#ffff00</mBgColor>
									<mSoundFile></mSoundFile>
									<colorTriggerFgColor>#000000</colorTriggerFgColor>
									<colorTriggerBgColor>#000000</colorTriggerBgColor>
									<regexCodeList>
										<string>^(\w+) has (entered|left) the area\.$</string>
									</regexCodeList>
									<regexCodePropertyList>
										<integer>1</integer>
									</regexCodePropertyList>
								</Trigger>
								<Trigger isActive="yes" isFolder="no" isTempTrigger="no" isMultiline="no" isPerlSlashGOption="no" isColorizerTrigger="no" isFilterTrigger="no" isSoundTrigger="no" isColorTrigger="no" isColorTriggerFg="no" isColorTriggerBg="no">
									<name>mindnet on</name>
									<script>if snd.toggles.affcalling then
 snd.send("wt [MINDNET] is now ON!")
end</script>
									<triggerType>0</triggerType>
									<conditonLineDelta>0</conditonLineDelta>
									<mStayOpen>0</mStayOpen>
									<mCommand></mCommand>
									<packageName></packageName>
									<mFgColor>#ff0000</mFgColor>
									<mBgColor>#ffff00</mBgColor>
									<mSoundFile></mSoundFile>
									<colorTriggerFgColor>#000000</colorTriggerFgColor>
									<colorTriggerBgColor>#000000</colorTriggerBgColor>
									<regexCodeList>
										<string>You cast an invisible mind net out into the distance, allowing it to settle about the surrounding land.</string>
									</regexCodeList>
									<regexCodePropertyList>
										<integer>3</integer>
									</regexCodePropertyList>
								</Trigger>
								<Trigger isActive="yes" isFolder="no" isTempTrigger="no" isMultiline="no" isPerlSlashGOption="no" isColorizerTrigger="no" isFilterTrigger="no" isSoundTrigger="no" isColorTrigger="no" isColorTriggerFg="no" isColorTriggerBg="no">
									<name>mindnet off</name>
									<script>if snd.toggles.affcalling then
 snd.send("wt [MINDNET] is now OFF!")
end</script>
									<triggerType>0</triggerType>
									<conditonLineDelta>0</conditonLineDelta>
									<mStayOpen>0</mStayOpen>
									<mCommand></mCommand>
									<packageName></packageName>
									<mFgColor>#ff0000</mFgColor>
									<mBgColor>#ffff00</mBgColor>
									<mSoundFile></mSoundFile>
									<colorTriggerFgColor>#000000</colorTriggerFgColor>
									<colorTriggerBgColor>#000000</colorTriggerBgColor>
									<regexCodeList>
										<string>You cease concentration and your mind net vanishes.</string>
									</regexCodeList>
									<regexCodePropertyList>
										<integer>3</integer>
									</regexCodePropertyList>
								</Trigger>
								<Trigger isActive="yes" isFolder="no" isTempTrigger="no" isMultiline="yes" isPerlSlashGOption="no" isColorizerTrigger="no" isFilterTrigger="no" isSoundTrigger="no" isColorTrigger="no" isColorTriggerFg="no" isColorTriggerBg="no">
									<name>fullsense</name>
									<script>snd.scented = {}</script>
									<triggerType>0</triggerType>
									<conditonLineDelta>2</conditonLineDelta>
									<mStayOpen>200</mStayOpen>
									<mCommand></mCommand>
									<packageName></packageName>
									<mFgColor>#ff0000</mFgColor>
									<mBgColor>#ffff00</mBgColor>
									<mSoundFile></mSoundFile>
									<colorTriggerFgColor>#000000</colorTriggerFgColor>
									<colorTriggerBgColor>#000000</colorTriggerBgColor>
									<regexCodeList>
										<string>You use Telepathy Fullsense.</string>
										<string>1</string>
										<string>You seek out all mental presences within your reach:</string>
									</regexCodeList>
									<regexCodePropertyList>
										<integer>3</integer>
										<integer>5</integer>
										<integer>3</integer>
									</regexCodePropertyList>
									<Trigger isActive="yes" isFolder="no" isTempTrigger="no" isMultiline="no" isPerlSlashGOption="no" isColorizerTrigger="no" isFilterTrigger="no" isSoundTrigger="no" isColorTrigger="no" isColorTriggerFg="no" isColorTriggerBg="no">
										<name>fullsense end</name>
										<script>setTriggerStayOpen("fullsense", 0)
if snd.toggles.calling then
 local string = "wt Fullsense!"..snd.sep
 for i in pairs(snd.scented) do
  x = mmp.searchRoomExact(i)
  for y in pairs(x) do
   z = y
  end
  list = ""
  for j in pairs(snd.scented[i]) do
   list = list.." "..snd.scented[i][j]
  end
	if i ~= snd.my.room_name then
   string = string.."wt "..i.." ("..z.."): "..list..snd.sep
	end
 end
 snd.send(string)
 snd.scented = {}
end</script>
										<triggerType>0</triggerType>
										<conditonLineDelta>0</conditonLineDelta>
										<mStayOpen>0</mStayOpen>
										<mCommand></mCommand>
										<packageName></packageName>
										<mFgColor>#ff0000</mFgColor>
										<mBgColor>#ffff00</mBgColor>
										<mSoundFile></mSoundFile>
										<colorTriggerFgColor>#000000</colorTriggerFgColor>
										<colorTriggerBgColor>#000000</colorTriggerBgColor>
										<regexCodeList>
											<string>return isPrompt()</string>
										</regexCodeList>
										<regexCodePropertyList>
											<integer>4</integer>
										</regexCodePropertyList>
									</Trigger>
									<Trigger isActive="yes" isFolder="no" isTempTrigger="no" isMultiline="no" isPerlSlashGOption="no" isColorizerTrigger="no" isFilterTrigger="no" isSoundTrigger="no" isColorTrigger="no" isColorTriggerFg="no" isColorTriggerBg="no">
										<name>scent line</name>
										<script>if snd.scented[matches[3]] == nil then
 snd.scented[matches[3]] = {}
end
table.insert(snd.scented[matches[3]], matches[2])</script>
										<triggerType>0</triggerType>
										<conditonLineDelta>0</conditonLineDelta>
										<mStayOpen>0</mStayOpen>
										<mCommand></mCommand>
										<packageName></packageName>
										<mFgColor>#ff0000</mFgColor>
										<mBgColor>#ffff00</mBgColor>
										<mSoundFile></mSoundFile>
										<colorTriggerFgColor>#000000</colorTriggerFgColor>
										<colorTriggerBgColor>#000000</colorTriggerBgColor>
										<regexCodeList>
											<string>^You sense (\w+) at (.+)\.$</string>
										</regexCodeList>
										<regexCodePropertyList>
											<integer>1</integer>
										</regexCodePropertyList>
									</Trigger>
								</Trigger>
								<Trigger isActive="yes" isFolder="no" isTempTrigger="no" isMultiline="no" isPerlSlashGOption="no" isColorizerTrigger="no" isFilterTrigger="no" isSoundTrigger="no" isColorTrigger="no" isColorTriggerFg="no" isColorTriggerBg="no">
									<name>mind glance</name>
									<script></script>
									<triggerType>0</triggerType>
									<conditonLineDelta>0</conditonLineDelta>
									<mStayOpen>0</mStayOpen>
									<mCommand></mCommand>
									<packageName></packageName>
									<mFgColor>#ff0000</mFgColor>
									<mBgColor>#ffff00</mBgColor>
									<mSoundFile></mSoundFile>
									<colorTriggerFgColor>#000000</colorTriggerFgColor>
									<colorTriggerBgColor>#000000</colorTriggerBgColor>
									<regexCodeList>
										<string>^You glance through your telepathic bond and out of (\w+)'s? eyes\.$</string>
									</regexCodeList>
									<regexCodePropertyList>
										<integer>1</integer>
									</regexCodePropertyList>
								</Trigger>
							</TriggerGroup>
							<TriggerGroup isActive="yes" isFolder="yes" isTempTrigger="no" isMultiline="no" isPerlSlashGOption="no" isColorizerTrigger="no" isFilterTrigger="no" isSoundTrigger="no" isColorTrigger="no" isColorTriggerFg="no" isColorTriggerBg="no">
								<name>Syssin</name>
								<script></script>
								<triggerType>0</triggerType>
								<conditonLineDelta>0</conditonLineDelta>
								<mStayOpen>0</mStayOpen>
								<mCommand></mCommand>
								<packageName></packageName>
								<mFgColor>#ff0000</mFgColor>
								<mBgColor>#ffff00</mBgColor>
								<mSoundFile></mSoundFile>
								<colorTriggerFgColor>#000000</colorTriggerFgColor>
								<colorTriggerBgColor>#000000</colorTriggerBgColor>
								<regexCodeList />
								<regexCodePropertyList />
								<TriggerGroup isActive="yes" isFolder="yes" isTempTrigger="no" isMultiline="no" isPerlSlashGOption="no" isColorizerTrigger="no" isFilterTrigger="no" isSoundTrigger="no" isColorTrigger="no" isColorTriggerFg="no" isColorTriggerBg="no">
									<name>Assassination</name>
									<script></script>
									<triggerType>0</triggerType>
									<conditonLineDelta>0</conditonLineDelta>
									<mStayOpen>0</mStayOpen>
									<mCommand></mCommand>
									<packageName></packageName>
									<mFgColor>#ff0000</mFgColor>
									<mBgColor>#ffff00</mBgColor>
									<mSoundFile></mSoundFile>
									<colorTriggerFgColor>#000000</colorTriggerFgColor>
									<colorTriggerBgColor>#000000</colorTriggerBgColor>
									<regexCodeList />
									<regexCodePropertyList />
									<Trigger isActive="yes" isFolder="no" isTempTrigger="no" isMultiline="no" isPerlSlashGOption="no" isColorizerTrigger="no" isFilterTrigger="no" isSoundTrigger="no" isColorTrigger="no" isColorTriggerFg="no" isColorTriggerBg="no">
										<name>dstab second line</name>
										<script></script>
										<triggerType>0</triggerType>
										<conditonLineDelta>0</conditonLineDelta>
										<mStayOpen>0</mStayOpen>
										<mCommand></mCommand>
										<packageName></packageName>
										<mFgColor>#ff0000</mFgColor>
										<mBgColor>#ffff00</mBgColor>
										<mSoundFile></mSoundFile>
										<colorTriggerFgColor>#000000</colorTriggerFgColor>
										<colorTriggerBgColor>#000000</colorTriggerBgColor>
										<regexCodeList>
											<string>^Deftly twirling the weapon in your hand, you jab (the )?\w+ with it once more\.$</string>
										</regexCodeList>
										<regexCodePropertyList>
											<integer>1</integer>
										</regexCodePropertyList>
									</Trigger>
								</TriggerGroup>
								<TriggerGroup isActive="yes" isFolder="yes" isTempTrigger="no" isMultiline="no" isPerlSlashGOption="no" isColorizerTrigger="no" isFilterTrigger="no" isSoundTrigger="no" isColorTrigger="no" isColorTriggerFg="no" isColorTriggerBg="no">
									<name>Subterfuge</name>
									<script></script>
									<triggerType>0</triggerType>
									<conditonLineDelta>0</conditonLineDelta>
									<mStayOpen>0</mStayOpen>
									<mCommand></mCommand>
									<packageName></packageName>
									<mFgColor>#ff0000</mFgColor>
									<mBgColor>#ffff00</mBgColor>
									<mSoundFile></mSoundFile>
									<colorTriggerFgColor>#000000</colorTriggerFgColor>
									<colorTriggerBgColor>#000000</colorTriggerBgColor>
									<regexCodeList />
									<regexCodePropertyList />
									<Trigger isActive="yes" isFolder="no" isTempTrigger="no" isMultiline="no" isPerlSlashGOption="no" isColorizerTrigger="no" isFilterTrigger="no" isSoundTrigger="no" isColorTrigger="no" isColorTriggerFg="no" isColorTriggerBg="no">
										<name>darkflood</name>
										<script></script>
										<triggerType>0</triggerType>
										<conditonLineDelta>0</conditonLineDelta>
										<mStayOpen>0</mStayOpen>
										<mCommand></mCommand>
										<packageName></packageName>
										<mFgColor>#ff0000</mFgColor>
										<mBgColor>#ffff00</mBgColor>
										<mSoundFile></mSoundFile>
										<colorTriggerFgColor>#000000</colorTriggerFgColor>
										<colorTriggerBgColor>#000000</colorTriggerBgColor>
										<regexCodeList>
											<string>You unfurl your palm and pure essence of darkness pours forth to drown out the light.</string>
										</regexCodeList>
										<regexCodePropertyList>
											<integer>3</integer>
										</regexCodePropertyList>
									</Trigger>
									<Trigger isActive="yes" isFolder="no" isTempTrigger="no" isMultiline="no" isPerlSlashGOption="no" isColorizerTrigger="no" isFilterTrigger="no" isSoundTrigger="no" isColorTrigger="no" isColorTriggerFg="no" isColorTriggerBg="no">
										<name>already dark</name>
										<script></script>
										<triggerType>0</triggerType>
										<conditonLineDelta>0</conditonLineDelta>
										<mStayOpen>0</mStayOpen>
										<mCommand></mCommand>
										<packageName></packageName>
										<mFgColor>#ff0000</mFgColor>
										<mBgColor>#ffff00</mBgColor>
										<mSoundFile></mSoundFile>
										<colorTriggerFgColor>#000000</colorTriggerFgColor>
										<colorTriggerBgColor>#000000</colorTriggerBgColor>
										<regexCodeList>
											<string>The room is already surrounded in darkness.</string>
										</regexCodeList>
										<regexCodePropertyList>
											<integer>3</integer>
										</regexCodePropertyList>
									</Trigger>
									<Trigger isActive="yes" isFolder="no" isTempTrigger="no" isMultiline="no" isPerlSlashGOption="no" isColorizerTrigger="no" isFilterTrigger="no" isSoundTrigger="no" isColorTrigger="no" isColorTriggerFg="no" isColorTriggerBg="no">
										<name>darkness faded</name>
										<script></script>
										<triggerType>0</triggerType>
										<conditonLineDelta>0</conditonLineDelta>
										<mStayOpen>0</mStayOpen>
										<mCommand></mCommand>
										<packageName></packageName>
										<mFgColor>#ff0000</mFgColor>
										<mBgColor>#ffff00</mBgColor>
										<mSoundFile></mSoundFile>
										<colorTriggerFgColor>#000000</colorTriggerFgColor>
										<colorTriggerBgColor>#000000</colorTriggerBgColor>
										<regexCodeList>
											<string>The shadows that swath the area in darkness creep back into themselves.</string>
										</regexCodeList>
										<regexCodePropertyList>
											<integer>3</integer>
										</regexCodePropertyList>
									</Trigger>
								</TriggerGroup>
								<TriggerGroup isActive="yes" isFolder="yes" isTempTrigger="no" isMultiline="no" isPerlSlashGOption="no" isColorizerTrigger="no" isFilterTrigger="no" isSoundTrigger="no" isColorTrigger="no" isColorTriggerFg="no" isColorTriggerBg="no">
									<name>Hypnosis</name>
									<script></script>
									<triggerType>0</triggerType>
									<conditonLineDelta>0</conditonLineDelta>
									<mStayOpen>0</mStayOpen>
									<mCommand></mCommand>
									<packageName></packageName>
									<mFgColor>#ff0000</mFgColor>
									<mBgColor>#ffff00</mBgColor>
									<mSoundFile></mSoundFile>
									<colorTriggerFgColor>#000000</colorTriggerFgColor>
									<colorTriggerBgColor>#000000</colorTriggerBgColor>
									<regexCodeList />
									<regexCodePropertyList />
									<Trigger isActive="yes" isFolder="no" isTempTrigger="no" isMultiline="no" isPerlSlashGOption="no" isColorizerTrigger="no" isFilterTrigger="no" isSoundTrigger="no" isColorTrigger="no" isColorTriggerFg="no" isColorTriggerBg="no">
										<name>hypnotized</name>
										<script>snd.hypno = "open"</script>
										<triggerType>0</triggerType>
										<conditonLineDelta>0</conditonLineDelta>
										<mStayOpen>0</mStayOpen>
										<mCommand></mCommand>
										<packageName></packageName>
										<mFgColor>#ff0000</mFgColor>
										<mBgColor>#ffff00</mBgColor>
										<mSoundFile></mSoundFile>
										<colorTriggerFgColor>#000000</colorTriggerFgColor>
										<colorTriggerBgColor>#000000</colorTriggerBgColor>
										<regexCodeList>
											<string>^You fix (\w+) with an entrancing stare, and smile in satisfaction as you realise that (the )?\w+ mind is yours\.$</string>
										</regexCodeList>
										<regexCodePropertyList>
											<integer>1</integer>
										</regexCodePropertyList>
									</Trigger>
									<Trigger isActive="yes" isFolder="no" isTempTrigger="no" isMultiline="no" isPerlSlashGOption="no" isColorizerTrigger="no" isFilterTrigger="no" isSoundTrigger="no" isColorTrigger="no" isColorTriggerFg="no" isColorTriggerBg="no">
										<name>sealed</name>
										<script>snd.hypno = "ready"</script>
										<triggerType>0</triggerType>
										<conditonLineDelta>0</conditonLineDelta>
										<mStayOpen>0</mStayOpen>
										<mCommand></mCommand>
										<packageName></packageName>
										<mFgColor>#ff0000</mFgColor>
										<mBgColor>#ffff00</mBgColor>
										<mSoundFile></mSoundFile>
										<colorTriggerFgColor>#000000</colorTriggerFgColor>
										<colorTriggerBgColor>#000000</colorTriggerBgColor>
										<regexCodeList>
											<string>^You draw (\w+) out of (the )?\w+ hypnotic daze, your suggestions indelibly printed on (the )?\w+ mind\.$</string>
										</regexCodeList>
										<regexCodePropertyList>
											<integer>1</integer>
										</regexCodePropertyList>
									</Trigger>
									<Trigger isActive="yes" isFolder="no" isTempTrigger="no" isMultiline="no" isPerlSlashGOption="no" isColorizerTrigger="no" isFilterTrigger="no" isSoundTrigger="no" isColorTrigger="no" isColorTriggerFg="no" isColorTriggerBg="no">
										<name>snapped</name>
										<script>snd.hypno = "running"
snd.hyp = 0
snd.last_hypno = 0</script>
										<triggerType>0</triggerType>
										<conditonLineDelta>0</conditonLineDelta>
										<mStayOpen>0</mStayOpen>
										<mCommand></mCommand>
										<packageName></packageName>
										<mFgColor>#ff0000</mFgColor>
										<mBgColor>#ffff00</mBgColor>
										<mSoundFile></mSoundFile>
										<colorTriggerFgColor>#000000</colorTriggerFgColor>
										<colorTriggerBgColor>#000000</colorTriggerBgColor>
										<regexCodeList>
											<string>^You snap your fingers in front of (.+)\.$</string>
										</regexCodeList>
										<regexCodePropertyList>
											<integer>1</integer>
										</regexCodePropertyList>
									</Trigger>
									<Trigger isActive="yes" isFolder="no" isTempTrigger="no" isMultiline="no" isPerlSlashGOption="no" isColorizerTrigger="no" isFilterTrigger="no" isSoundTrigger="no" isColorTrigger="no" isColorTriggerFg="no" isColorTriggerBg="no">
										<name>suggested</name>
										<script>snd.hypno = "open"
snd.last_hypno = snd.hyp</script>
										<triggerType>0</triggerType>
										<conditonLineDelta>0</conditonLineDelta>
										<mStayOpen>0</mStayOpen>
										<mCommand></mCommand>
										<packageName></packageName>
										<mFgColor>#ff0000</mFgColor>
										<mBgColor>#ffff00</mBgColor>
										<mSoundFile></mSoundFile>
										<colorTriggerFgColor>#000000</colorTriggerFgColor>
										<colorTriggerBgColor>#000000</colorTriggerBgColor>
										<regexCodeList>
											<string>^You issue the suggestion, concealing it deep within (\w+)'s? mind\.$</string>
										</regexCodeList>
										<regexCodePropertyList>
											<integer>1</integer>
										</regexCodePropertyList>
									</Trigger>
									<Trigger isActive="yes" isFolder="no" isTempTrigger="no" isMultiline="no" isPerlSlashGOption="no" isColorizerTrigger="no" isFilterTrigger="no" isSoundTrigger="no" isColorTrigger="no" isColorTriggerFg="no" isColorTriggerBg="no">
										<name>not hypnotized</name>
										<script>if matches[2] == snd.target then
 snd.hypno = "none"
end</script>
										<triggerType>0</triggerType>
										<conditonLineDelta>0</conditonLineDelta>
										<mStayOpen>0</mStayOpen>
										<mCommand></mCommand>
										<packageName></packageName>
										<mFgColor>#ff0000</mFgColor>
										<mBgColor>#ffff00</mBgColor>
										<mSoundFile></mSoundFile>
										<colorTriggerFgColor>#000000</colorTriggerFgColor>
										<colorTriggerBgColor>#000000</colorTriggerBgColor>
										<regexCodeList>
											<string>^(\w+) is not under a hypnotic spell\.$</string>
										</regexCodeList>
										<regexCodePropertyList>
											<integer>1</integer>
										</regexCodePropertyList>
									</Trigger>
									<Trigger isActive="yes" isFolder="no" isTempTrigger="no" isMultiline="no" isPerlSlashGOption="no" isColorizerTrigger="no" isFilterTrigger="no" isSoundTrigger="no" isColorTrigger="no" isColorTriggerFg="no" isColorTriggerBg="no">
										<name>already hypnotized</name>
										<script>snd.hypno = "running"</script>
										<triggerType>0</triggerType>
										<conditonLineDelta>0</conditonLineDelta>
										<mStayOpen>0</mStayOpen>
										<mCommand></mCommand>
										<packageName></packageName>
										<mFgColor>#ff0000</mFgColor>
										<mBgColor>#ffff00</mBgColor>
										<mSoundFile></mSoundFile>
										<colorTriggerFgColor>#000000</colorTriggerFgColor>
										<colorTriggerBgColor>#000000</colorTriggerBgColor>
										<regexCodeList>
											<string>^(\w+) is already under the effects of hypnosis\.$</string>
										</regexCodeList>
										<regexCodePropertyList>
											<integer>1</integer>
										</regexCodePropertyList>
									</Trigger>
									<Trigger isActive="yes" isFolder="no" isTempTrigger="no" isMultiline="no" isPerlSlashGOption="no" isColorizerTrigger="no" isFilterTrigger="no" isSoundTrigger="no" isColorTrigger="no" isColorTriggerFg="no" isColorTriggerBg="no">
										<name>not sealed</name>
										<script>snd.hypno = "open"</script>
										<triggerType>0</triggerType>
										<conditonLineDelta>0</conditonLineDelta>
										<mStayOpen>0</mStayOpen>
										<mCommand></mCommand>
										<packageName></packageName>
										<mFgColor>#ff0000</mFgColor>
										<mBgColor>#ffff00</mBgColor>
										<mSoundFile></mSoundFile>
										<colorTriggerFgColor>#000000</colorTriggerFgColor>
										<colorTriggerBgColor>#000000</colorTriggerBgColor>
										<regexCodeList>
											<string>^(\w+) is already open to suggestions, Syssin\.$</string>
										</regexCodeList>
										<regexCodePropertyList>
											<integer>1</integer>
										</regexCodePropertyList>
									</Trigger>
									<Trigger isActive="yes" isFolder="no" isTempTrigger="no" isMultiline="no" isPerlSlashGOption="no" isColorizerTrigger="no" isFilterTrigger="no" isSoundTrigger="no" isColorTrigger="no" isColorTriggerFg="no" isColorTriggerBg="no">
										<name>effect</name>
										<script>if matches[2] == snd.target then
 snd.hypno = "running"
 snd.hyp = 0
 snd.last_hypno = 0
end</script>
										<triggerType>0</triggerType>
										<conditonLineDelta>0</conditonLineDelta>
										<mStayOpen>0</mStayOpen>
										<mCommand></mCommand>
										<packageName></packageName>
										<mFgColor>#ff0000</mFgColor>
										<mBgColor>#ffff00</mBgColor>
										<mSoundFile></mSoundFile>
										<colorTriggerFgColor>#000000</colorTriggerFgColor>
										<colorTriggerBgColor>#000000</colorTriggerBgColor>
										<regexCodeList>
											<string>^(\w+) appears confused for a moment\.$</string>
										</regexCodeList>
										<regexCodePropertyList>
											<integer>1</integer>
										</regexCodePropertyList>
									</Trigger>
								</TriggerGroup>
							</TriggerGroup>
						</TriggerGroup>
						<TriggerGroup isActive="yes" isFolder="yes" isTempTrigger="no" isMultiline="no" isPerlSlashGOption="no" isColorizerTrigger="no" isFilterTrigger="no" isSoundTrigger="no" isColorTrigger="no" isColorTriggerFg="no" isColorTriggerBg="no">
							<name>Instakills</name>
							<script></script>
							<triggerType>0</triggerType>
							<conditonLineDelta>0</conditonLineDelta>
							<mStayOpen>0</mStayOpen>
							<mCommand></mCommand>
							<packageName></packageName>
							<mFgColor>#ff0000</mFgColor>
							<mBgColor>#ffff00</mBgColor>
							<mSoundFile></mSoundFile>
							<colorTriggerFgColor>#000000</colorTriggerFgColor>
							<colorTriggerBgColor>#000000</colorTriggerBgColor>
							<regexCodeList />
							<regexCodePropertyList />
							<Trigger isActive="yes" isFolder="no" isTempTrigger="no" isMultiline="no" isPerlSlashGOption="no" isColorizerTrigger="no" isFilterTrigger="no" isSoundTrigger="no" isColorTrigger="no" isColorTriggerFg="no" isColorTriggerBg="no">
								<name>cleave 1</name>
								<script></script>
								<triggerType>0</triggerType>
								<conditonLineDelta>0</conditonLineDelta>
								<mStayOpen>0</mStayOpen>
								<mCommand></mCommand>
								<packageName></packageName>
								<mFgColor>#ff0000</mFgColor>
								<mBgColor>#ffff00</mBgColor>
								<mSoundFile></mSoundFile>
								<colorTriggerFgColor>#000000</colorTriggerFgColor>
								<colorTriggerBgColor>#000000</colorTriggerBgColor>
								<regexCodeList>
									<string>^(\w+) begins building up momentum with .+\.$</string>
								</regexCodeList>
								<regexCodePropertyList>
									<integer>1</integer>
								</regexCodePropertyList>
							</Trigger>
							<Trigger isActive="yes" isFolder="no" isTempTrigger="no" isMultiline="no" isPerlSlashGOption="no" isColorizerTrigger="no" isFilterTrigger="no" isSoundTrigger="no" isColorTrigger="no" isColorTriggerFg="no" isColorTriggerBg="no">
								<name>cleave 2</name>
								<script></script>
								<triggerType>0</triggerType>
								<conditonLineDelta>0</conditonLineDelta>
								<mStayOpen>0</mStayOpen>
								<mCommand></mCommand>
								<packageName></packageName>
								<mFgColor>#ff0000</mFgColor>
								<mBgColor>#ffff00</mBgColor>
								<mSoundFile></mSoundFile>
								<colorTriggerFgColor>#000000</colorTriggerFgColor>
								<colorTriggerBgColor>#000000</colorTriggerBgColor>
								<regexCodeList>
									<string>^(\w+) swings the .+ about (the )?\w+ head, gathering momentum as (the )?\w+ bears down on you\.$</string>
								</regexCodeList>
								<regexCodePropertyList>
									<integer>1</integer>
								</regexCodePropertyList>
							</Trigger>
							<Trigger isActive="yes" isFolder="no" isTempTrigger="no" isMultiline="no" isPerlSlashGOption="no" isColorizerTrigger="no" isFilterTrigger="no" isSoundTrigger="no" isColorTrigger="no" isColorTriggerFg="no" isColorTriggerBg="no">
								<name>reave 1</name>
								<script></script>
								<triggerType>0</triggerType>
								<conditonLineDelta>0</conditonLineDelta>
								<mStayOpen>0</mStayOpen>
								<mCommand></mCommand>
								<packageName></packageName>
								<mFgColor>#ff0000</mFgColor>
								<mBgColor>#ffff00</mBgColor>
								<mSoundFile></mSoundFile>
								<colorTriggerFgColor>#000000</colorTriggerFgColor>
								<colorTriggerBgColor>#000000</colorTriggerBgColor>
								<regexCodeList>
									<string>^A viscous blue sheen envelops .+ as (\w+) draws it back, the motion accompanied by an odd tugging sensation from deep within that threatens to steal your breath with it\.$</string>
								</regexCodeList>
								<regexCodePropertyList>
									<integer>1</integer>
								</regexCodePropertyList>
							</Trigger>
							<Trigger isActive="yes" isFolder="no" isTempTrigger="no" isMultiline="no" isPerlSlashGOption="no" isColorizerTrigger="no" isFilterTrigger="no" isSoundTrigger="no" isColorTrigger="no" isColorTriggerFg="no" isColorTriggerBg="no">
								<name>reave 2</name>
								<script></script>
								<triggerType>0</triggerType>
								<conditonLineDelta>0</conditonLineDelta>
								<mStayOpen>0</mStayOpen>
								<mCommand></mCommand>
								<packageName></packageName>
								<mFgColor>#ff0000</mFgColor>
								<mBgColor>#ffff00</mBgColor>
								<mSoundFile></mSoundFile>
								<colorTriggerFgColor>#000000</colorTriggerFgColor>
								<colorTriggerBgColor>#000000</colorTriggerBgColor>
								<regexCodeList>
									<string>^(\w+) swings .+ around in a wide arc toward you, the deadly weapon whistling through the air as it carves a path straight for your core\.$</string>
								</regexCodeList>
								<regexCodePropertyList>
									<integer>1</integer>
								</regexCodePropertyList>
							</Trigger>
							<Trigger isActive="yes" isFolder="no" isTempTrigger="no" isMultiline="no" isPerlSlashGOption="no" isColorizerTrigger="no" isFilterTrigger="no" isSoundTrigger="no" isColorTrigger="no" isColorTriggerFg="no" isColorTriggerBg="no">
								<name>chasm</name>
								<script></script>
								<triggerType>0</triggerType>
								<conditonLineDelta>0</conditonLineDelta>
								<mStayOpen>0</mStayOpen>
								<mCommand></mCommand>
								<packageName></packageName>
								<mFgColor>#ff0000</mFgColor>
								<mBgColor>#ffff00</mBgColor>
								<mSoundFile></mSoundFile>
								<colorTriggerFgColor>#000000</colorTriggerFgColor>
								<colorTriggerBgColor>#000000</colorTriggerBgColor>
								<regexCodeList>
									<string>^(\w+) stomps a foot mightily into the ground and a quickly-moving spiderweb of cracks spreads outwards from the impact towards you\.$</string>
								</regexCodeList>
								<regexCodePropertyList>
									<integer>1</integer>
								</regexCodePropertyList>
							</Trigger>
							<Trigger isActive="yes" isFolder="no" isTempTrigger="no" isMultiline="no" isPerlSlashGOption="no" isColorizerTrigger="no" isFilterTrigger="no" isSoundTrigger="no" isColorTrigger="no" isColorTriggerFg="no" isColorTriggerBg="no">
								<name>judge 1</name>
								<script></script>
								<triggerType>0</triggerType>
								<conditonLineDelta>0</conditonLineDelta>
								<mStayOpen>0</mStayOpen>
								<mCommand></mCommand>
								<packageName></packageName>
								<mFgColor>#ff0000</mFgColor>
								<mBgColor>#ffff00</mBgColor>
								<mSoundFile></mSoundFile>
								<colorTriggerFgColor>#000000</colorTriggerFgColor>
								<colorTriggerBgColor>#000000</colorTriggerBgColor>
								<regexCodeList>
									<string>^(\w+) raises .+ over you to pass judgement on your sins, and it begins to crackle with righteous fire\.$</string>
								</regexCodeList>
								<regexCodePropertyList>
									<integer>1</integer>
								</regexCodePropertyList>
							</Trigger>
							<Trigger isActive="yes" isFolder="no" isTempTrigger="no" isMultiline="no" isPerlSlashGOption="no" isColorizerTrigger="no" isFilterTrigger="no" isSoundTrigger="no" isColorTrigger="no" isColorTriggerFg="no" isColorTriggerBg="no">
								<name>judge 2</name>
								<script></script>
								<triggerType>0</triggerType>
								<conditonLineDelta>0</conditonLineDelta>
								<mStayOpen>0</mStayOpen>
								<mCommand></mCommand>
								<packageName></packageName>
								<mFgColor>#ff0000</mFgColor>
								<mBgColor>#ffff00</mBgColor>
								<mSoundFile></mSoundFile>
								<colorTriggerFgColor>#000000</colorTriggerFgColor>
								<colorTriggerBgColor>#000000</colorTriggerBgColor>
								<regexCodeList>
									<string>^(\w+)('s|') mace begins to make a high-pitched keening sound as it rapidly spins over (the )?\w+ head\. You have only moments left to escape before you are judged!$</string>
								</regexCodeList>
								<regexCodePropertyList>
									<integer>1</integer>
								</regexCodePropertyList>
							</Trigger>
							<Trigger isActive="yes" isFolder="no" isTempTrigger="no" isMultiline="no" isPerlSlashGOption="no" isColorizerTrigger="no" isFilterTrigger="no" isSoundTrigger="no" isColorTrigger="no" isColorTriggerFg="no" isColorTriggerBg="no">
								<name>behead 1</name>
								<script></script>
								<triggerType>0</triggerType>
								<conditonLineDelta>0</conditonLineDelta>
								<mStayOpen>0</mStayOpen>
								<mCommand></mCommand>
								<packageName></packageName>
								<mFgColor>#ff0000</mFgColor>
								<mBgColor>#ffff00</mBgColor>
								<mSoundFile></mSoundFile>
								<colorTriggerFgColor>#000000</colorTriggerFgColor>
								<colorTriggerBgColor>#000000</colorTriggerBgColor>
								<regexCodeList>
									<string>^(\w+) raises an? .+ over (the )?\w+ head and begins to swing it in a wide circle, gaining speed as (the )?\w+ goes\.$</string>
								</regexCodeList>
								<regexCodePropertyList>
									<integer>1</integer>
								</regexCodePropertyList>
							</Trigger>
							<Trigger isActive="yes" isFolder="no" isTempTrigger="no" isMultiline="no" isPerlSlashGOption="no" isColorizerTrigger="no" isFilterTrigger="no" isSoundTrigger="no" isColorTrigger="no" isColorTriggerFg="no" isColorTriggerBg="no">
								<name>behead 2</name>
								<script></script>
								<triggerType>0</triggerType>
								<conditonLineDelta>0</conditonLineDelta>
								<mStayOpen>0</mStayOpen>
								<mCommand></mCommand>
								<packageName></packageName>
								<mFgColor>#ff0000</mFgColor>
								<mBgColor>#ffff00</mBgColor>
								<mSoundFile></mSoundFile>
								<colorTriggerFgColor>#000000</colorTriggerFgColor>
								<colorTriggerBgColor>#000000</colorTriggerBgColor>
								<regexCodeList>
									<string>^(\w+) begins to bear down on you with (the )?\w+ .+\.$</string>
								</regexCodeList>
								<regexCodePropertyList>
									<integer>1</integer>
								</regexCodePropertyList>
							</Trigger>
							<Trigger isActive="yes" isFolder="no" isTempTrigger="no" isMultiline="no" isPerlSlashGOption="no" isColorizerTrigger="no" isFilterTrigger="no" isSoundTrigger="no" isColorTrigger="no" isColorTriggerFg="no" isColorTriggerBg="no">
								<name>death tarot</name>
								<script></script>
								<triggerType>0</triggerType>
								<conditonLineDelta>0</conditonLineDelta>
								<mStayOpen>0</mStayOpen>
								<mCommand></mCommand>
								<packageName></packageName>
								<mFgColor>#ff0000</mFgColor>
								<mBgColor>#ffff00</mBgColor>
								<mSoundFile></mSoundFile>
								<colorTriggerFgColor>#000000</colorTriggerFgColor>
								<colorTriggerBgColor>#000000</colorTriggerBgColor>
								<regexCodeList>
									<string>^(\w+) flings a tarot card at you and upon impact, it disappears\. And ominous silence overtakes your surroundings\.$</string>
								</regexCodeList>
								<regexCodePropertyList>
									<integer>1</integer>
								</regexCodePropertyList>
							</Trigger>
							<Trigger isActive="yes" isFolder="no" isTempTrigger="no" isMultiline="no" isPerlSlashGOption="no" isColorizerTrigger="no" isFilterTrigger="no" isSoundTrigger="no" isColorTrigger="no" isColorTriggerFg="no" isColorTriggerBg="no">
								<name>reclamation 1</name>
								<script></script>
								<triggerType>0</triggerType>
								<conditonLineDelta>0</conditonLineDelta>
								<mStayOpen>0</mStayOpen>
								<mCommand></mCommand>
								<packageName></packageName>
								<mFgColor>#ff0000</mFgColor>
								<mBgColor>#ffff00</mBgColor>
								<mSoundFile></mSoundFile>
								<colorTriggerFgColor>#000000</colorTriggerFgColor>
								<colorTriggerBgColor>#000000</colorTriggerBgColor>
								<regexCodeList>
									<string>^Perspiration breaks out on (\w+)'s brow and (the )?\w+ slowly raises (the )?\w+ hands upward\. Responding to the call, the tips of fresh plant life break through the ground and begin to rise upward at (the )?\w+ behest, thickening and growing into sinuous lashes that firmly ensnare you\.$</string>
								</regexCodeList>
								<regexCodePropertyList>
									<integer>1</integer>
								</regexCodePropertyList>
							</Trigger>
							<Trigger isActive="yes" isFolder="no" isTempTrigger="no" isMultiline="no" isPerlSlashGOption="no" isColorizerTrigger="no" isFilterTrigger="no" isSoundTrigger="no" isColorTrigger="no" isColorTriggerFg="no" isColorTriggerBg="no">
								<name>reclamation 2</name>
								<script></script>
								<triggerType>0</triggerType>
								<conditonLineDelta>0</conditonLineDelta>
								<mStayOpen>0</mStayOpen>
								<mCommand></mCommand>
								<packageName></packageName>
								<mFgColor>#ff0000</mFgColor>
								<mBgColor>#ffff00</mBgColor>
								<mSoundFile></mSoundFile>
								<colorTriggerFgColor>#000000</colorTriggerFgColor>
								<colorTriggerBgColor>#000000</colorTriggerBgColor>
								<regexCodeList>
									<string>^\w+ continues to lend (the )?\w+ reserves to their hungry growth, the vines corkscrew around your limbs, digging in painfully as you begin to feel your extremities go numb\. The slender tips of the creeping plants pierce through your skin like needles at points along the major veins in the wrists, neck and legs as they continue their parasitic spread throughout your body\.$</string>
								</regexCodeList>
								<regexCodePropertyList>
									<integer>1</integer>
								</regexCodePropertyList>
							</Trigger>
							<Trigger isActive="yes" isFolder="no" isTempTrigger="no" isMultiline="no" isPerlSlashGOption="no" isColorizerTrigger="no" isFilterTrigger="no" isSoundTrigger="no" isColorTrigger="no" isColorTriggerFg="no" isColorTriggerBg="no">
								<name>noose</name>
								<script></script>
								<triggerType>0</triggerType>
								<conditonLineDelta>0</conditonLineDelta>
								<mStayOpen>0</mStayOpen>
								<mCommand></mCommand>
								<packageName></packageName>
								<mFgColor>#ff0000</mFgColor>
								<mBgColor>#ffff00</mBgColor>
								<mSoundFile></mSoundFile>
								<colorTriggerFgColor>#000000</colorTriggerFgColor>
								<colorTriggerBgColor>#000000</colorTriggerBgColor>
								<regexCodeList>
									<string>You feel uneasy as you hear the sound of something above you.</string>
								</regexCodeList>
								<regexCodePropertyList>
									<integer>3</integer>
								</regexCodePropertyList>
							</Trigger>
						</TriggerGroup>
						<TriggerGroup isActive="yes" isFolder="yes" isTempTrigger="no" isMultiline="no" isPerlSlashGOption="no" isColorizerTrigger="no" isFilterTrigger="no" isSoundTrigger="no" isColorTrigger="no" isColorTriggerFg="no" isColorTriggerBg="no">
							<name>Mobility</name>
							<script></script>
							<triggerType>0</triggerType>
							<conditonLineDelta>0</conditonLineDelta>
							<mStayOpen>0</mStayOpen>
							<mCommand></mCommand>
							<packageName></packageName>
							<mFgColor>#ff0000</mFgColor>
							<mBgColor>#ffff00</mBgColor>
							<mSoundFile></mSoundFile>
							<colorTriggerFgColor>#000000</colorTriggerFgColor>
							<colorTriggerBgColor>#000000</colorTriggerBgColor>
							<regexCodeList />
							<regexCodePropertyList />
							<Trigger isActive="yes" isFolder="no" isTempTrigger="no" isMultiline="no" isPerlSlashGOption="no" isColorizerTrigger="no" isFilterTrigger="no" isSoundTrigger="no" isColorTrigger="no" isColorTriggerFg="no" isColorTriggerBg="no">
								<name>fled</name>
								<script></script>
								<triggerType>0</triggerType>
								<conditonLineDelta>0</conditonLineDelta>
								<mStayOpen>0</mStayOpen>
								<mCommand></mCommand>
								<packageName></packageName>
								<mFgColor>#ff0000</mFgColor>
								<mBgColor>#ffff00</mBgColor>
								<mSoundFile></mSoundFile>
								<colorTriggerFgColor>#000000</colorTriggerFgColor>
								<colorTriggerBgColor>#000000</colorTriggerBgColor>
								<regexCodeList>
									<string>^(\w+) tumbles out to the (.+)\.$</string>
									<string>^(\w+) suddenly leaps away to the (.+) atop (the )?\w+ mount\.$</string>
								</regexCodeList>
								<regexCodePropertyList>
									<integer>1</integer>
									<integer>1</integer>
								</regexCodePropertyList>
							</Trigger>
							<Trigger isActive="yes" isFolder="no" isTempTrigger="no" isMultiline="no" isPerlSlashGOption="no" isColorizerTrigger="no" isFilterTrigger="no" isSoundTrigger="no" isColorTrigger="no" isColorTriggerFg="no" isColorTriggerBg="no">
								<name>tumble start</name>
								<script>if matches[2] == snd.target then
  cecho("\n\n&lt;red&gt;TARGET TUMBLING &lt;white&gt;"..snd.parseDir(matches[3]).."&lt;red&gt;!")
  cecho("\n&lt;red&gt;TARGET TUMBLING &lt;white&gt;"..snd.parseDir(matches[3]).."&lt;red&gt;!")
  cecho("\n&lt;red&gt;TARGET TUMBLING &lt;white&gt;"..snd.parseDir(matches[3]).."&lt;red&gt;!")
	if snd.class == "Archivist" then
    if snd.empowerready == true then
      if snd.empowertype == "jhako" then
        snd.send("qeb elicit return "..snd.target.." 3")
      else
        snd.send("qeb empower jhako##elicit return "..snd.target.." 3")
      end
		end
  elseif snd.class == "Teradrim" then
    snd.send("qeb earth impale "..snd.target)
  end
end</script>
								<triggerType>0</triggerType>
								<conditonLineDelta>0</conditonLineDelta>
								<mStayOpen>0</mStayOpen>
								<mCommand></mCommand>
								<packageName></packageName>
								<mFgColor>#ff0000</mFgColor>
								<mBgColor>#ffff00</mBgColor>
								<mSoundFile></mSoundFile>
								<colorTriggerFgColor>#000000</colorTriggerFgColor>
								<colorTriggerBgColor>#000000</colorTriggerBgColor>
								<regexCodeList>
									<string>^(\w+) begins to tumble towards the (.+)\.$</string>
								</regexCodeList>
								<regexCodePropertyList>
									<integer>1</integer>
								</regexCodePropertyList>
							</Trigger>
							<Trigger isActive="yes" isFolder="no" isTempTrigger="no" isMultiline="no" isPerlSlashGOption="no" isColorizerTrigger="no" isFilterTrigger="no" isSoundTrigger="no" isColorTrigger="no" isColorTriggerFg="no" isColorTriggerBg="no">
								<name>alertness</name>
								<script>snd.alertnessHit(matches[3], matches[2], "alertness")</script>
								<triggerType>0</triggerType>
								<conditonLineDelta>0</conditonLineDelta>
								<mStayOpen>0</mStayOpen>
								<mCommand></mCommand>
								<packageName></packageName>
								<mFgColor>#ff0000</mFgColor>
								<mBgColor>#ffff00</mBgColor>
								<mSoundFile></mSoundFile>
								<colorTriggerFgColor>#000000</colorTriggerFgColor>
								<colorTriggerBgColor>#000000</colorTriggerBgColor>
								<regexCodeList>
									<string>^Your enhanced senses inform you that (\w+) has appeared to the (\w+)\.$</string>
								</regexCodeList>
								<regexCodePropertyList>
									<integer>1</integer>
								</regexCodePropertyList>
							</Trigger>
							<Trigger isActive="yes" isFolder="no" isTempTrigger="no" isMultiline="no" isPerlSlashGOption="no" isColorizerTrigger="no" isFilterTrigger="no" isSoundTrigger="no" isColorTrigger="no" isColorTriggerFg="no" isColorTriggerBg="no">
								<name>alertness here</name>
								<script>snd.alertnessHit("here", matches[2], "alertness")
if snd.target == matches[2] then
	snd.target_gone = false
end</script>
								<triggerType>0</triggerType>
								<conditonLineDelta>0</conditonLineDelta>
								<mStayOpen>0</mStayOpen>
								<mCommand></mCommand>
								<packageName></packageName>
								<mFgColor>#ff0000</mFgColor>
								<mBgColor>#ffff00</mBgColor>
								<mSoundFile></mSoundFile>
								<colorTriggerFgColor>#000000</colorTriggerFgColor>
								<colorTriggerBgColor>#000000</colorTriggerBgColor>
								<regexCodeList>
									<string>^Your enhanced senses inform you that (\w+) has entered your current location\.$</string>
									<string>^Your angel informs you that (\w+) is in this room\.$</string>
								</regexCodeList>
								<regexCodePropertyList>
									<integer>1</integer>
									<integer>1</integer>
								</regexCodePropertyList>
							</Trigger>
							<Trigger isActive="yes" isFolder="no" isTempTrigger="no" isMultiline="no" isPerlSlashGOption="no" isColorizerTrigger="no" isFilterTrigger="no" isSoundTrigger="no" isColorTrigger="no" isColorTriggerFg="no" isColorTriggerBg="no">
								<name>universe tarot</name>
								<script>if snd.faction == "spirit" then
 snd.send("qeb close map")
end</script>
								<triggerType>0</triggerType>
								<conditonLineDelta>0</conditonLineDelta>
								<mStayOpen>0</mStayOpen>
								<mCommand></mCommand>
								<packageName></packageName>
								<mFgColor>#ff0000</mFgColor>
								<mBgColor>#ffff00</mBgColor>
								<mSoundFile></mSoundFile>
								<colorTriggerFgColor>#000000</colorTriggerFgColor>
								<colorTriggerBgColor>#000000</colorTriggerBgColor>
								<regexCodeList>
									<string>A shimmering, translucent image rises up before you, its glittering surface displaying the verdant grasslands, soaring mountains, sprawling settlements and deep blue seas of the Aetolia mainland.</string>
								</regexCodeList>
								<regexCodePropertyList>
									<integer>3</integer>
								</regexCodePropertyList>
							</Trigger>
							<Trigger isActive="yes" isFolder="no" isTempTrigger="no" isMultiline="no" isPerlSlashGOption="no" isColorizerTrigger="no" isFilterTrigger="no" isSoundTrigger="no" isColorTrigger="no" isColorTriggerFg="no" isColorTriggerBg="no">
								<name>angel near</name>
								<script>snd.alertnessHit("adjacent", matches[2], "alertness")</script>
								<triggerType>0</triggerType>
								<conditonLineDelta>0</conditonLineDelta>
								<mStayOpen>0</mStayOpen>
								<mCommand></mCommand>
								<packageName></packageName>
								<mFgColor>#ff0000</mFgColor>
								<mBgColor>#ffff00</mBgColor>
								<mSoundFile></mSoundFile>
								<colorTriggerFgColor>#000000</colorTriggerFgColor>
								<colorTriggerBgColor>#000000</colorTriggerBgColor>
								<regexCodeList>
									<string>^Your angel informs you that (\w+) is close by\.$</string>
								</regexCodeList>
								<regexCodePropertyList>
									<integer>1</integer>
								</regexCodePropertyList>
							</Trigger>
							<Trigger isActive="yes" isFolder="no" isTempTrigger="no" isMultiline="no" isPerlSlashGOption="no" isColorizerTrigger="no" isFilterTrigger="no" isSoundTrigger="no" isColorTrigger="no" isColorTriggerFg="no" isColorTriggerBg="no">
								<name>forced movement</name>
								<script>snd.send("qeb stand"..snd.sep..snd.swapDir(matches[2]))</script>
								<triggerType>0</triggerType>
								<conditonLineDelta>0</conditonLineDelta>
								<mStayOpen>0</mStayOpen>
								<mCommand></mCommand>
								<packageName></packageName>
								<mFgColor>#ff0000</mFgColor>
								<mBgColor>#ffff00</mBgColor>
								<mSoundFile></mSoundFile>
								<colorTriggerFgColor>#000000</colorTriggerFgColor>
								<colorTriggerBgColor>#000000</colorTriggerBgColor>
								<regexCodeList>
									<string>^Your body jerks violently, leading you to the (\w+)\.$</string>
									<string>^You are dragged by the jaws around your neck to the (\w+)\.$</string>
								</regexCodeList>
								<regexCodePropertyList>
									<integer>1</integer>
									<integer>1</integer>
								</regexCodePropertyList>
							</Trigger>
							<Trigger isActive="yes" isFolder="no" isTempTrigger="no" isMultiline="no" isPerlSlashGOption="no" isColorizerTrigger="no" isFilterTrigger="no" isSoundTrigger="no" isColorTrigger="no" isColorTriggerFg="no" isColorTriggerBg="no">
								<name>tumble finish</name>
								<script>if matches[2] == snd.target then
 cecho("\n\n&lt;red&gt;TARGET TUMBLED &lt;white&gt;"..snd.parseDir(matches[3]).." &lt;red&gt;!")
 cecho("\n&lt;red&gt;TARGET TUMBLED &lt;white&gt;"..snd.parseDir(matches[3]).." &lt;red&gt;!")
 cecho("\n&lt;red&gt;TARGET TUMBLED &lt;white&gt;"..snd.parseDir(matches[3]).." &lt;red&gt;!")
end</script>
								<triggerType>0</triggerType>
								<conditonLineDelta>0</conditonLineDelta>
								<mStayOpen>0</mStayOpen>
								<mCommand></mCommand>
								<packageName></packageName>
								<mFgColor>#ff0000</mFgColor>
								<mBgColor>#ffff00</mBgColor>
								<mSoundFile></mSoundFile>
								<colorTriggerFgColor>#000000</colorTriggerFgColor>
								<colorTriggerBgColor>#000000</colorTriggerBgColor>
								<regexCodeList>
									<string>^(\w+) tumbles out to the (\w+)\.$</string>
								</regexCodeList>
								<regexCodePropertyList>
									<integer>1</integer>
								</regexCodePropertyList>
							</Trigger>
							<TriggerGroup isActive="no" isFolder="yes" isTempTrigger="no" isMultiline="no" isPerlSlashGOption="no" isColorizerTrigger="no" isFilterTrigger="no" isSoundTrigger="no" isColorTrigger="no" isColorTriggerFg="no" isColorTriggerBg="no">
								<name>Movement</name>
								<script>--- contains lots of lines that may be useful to you</script>
								<triggerType>0</triggerType>
								<conditonLineDelta>0</conditonLineDelta>
								<mStayOpen>0</mStayOpen>
								<mCommand></mCommand>
								<packageName></packageName>
								<mFgColor>#ff0000</mFgColor>
								<mBgColor>#ffff00</mBgColor>
								<mSoundFile></mSoundFile>
								<colorTriggerFgColor>#000000</colorTriggerFgColor>
								<colorTriggerBgColor>#000000</colorTriggerBgColor>
								<regexCodeList />
								<regexCodePropertyList />
								<Trigger isActive="no" isFolder="no" isTempTrigger="no" isMultiline="no" isPerlSlashGOption="no" isColorizerTrigger="no" isFilterTrigger="no" isSoundTrigger="no" isColorTrigger="no" isColorTriggerFg="no" isColorTriggerBg="no">
									<name>Naturalism Displacement - Shaman</name>
									<script>if matches[2] == snd.target then

end

</script>
									<triggerType>0</triggerType>
									<conditonLineDelta>0</conditonLineDelta>
									<mStayOpen>0</mStayOpen>
									<mCommand></mCommand>
									<packageName></packageName>
									<mFgColor>#ff0000</mFgColor>
									<mBgColor>#ffff00</mBgColor>
									<mSoundFile></mSoundFile>
									<colorTriggerFgColor>#000000</colorTriggerFgColor>
									<colorTriggerBgColor>#000000</colorTriggerBgColor>
									<regexCodeList>
										<string>^The earth parts and forcibly ejects (\w+), the roots that bore (the )?\w+ there relinquishing their grip and returning from whence they came, leaving (the )?\w+ where your companion once stood.$</string>
									</regexCodeList>
									<regexCodePropertyList>
										<integer>1</integer>
									</regexCodePropertyList>
								</Trigger>
								<Trigger isActive="no" isFolder="no" isTempTrigger="no" isMultiline="no" isPerlSlashGOption="no" isColorizerTrigger="no" isFilterTrigger="no" isSoundTrigger="no" isColorTrigger="no" isColorTriggerFg="no" isColorTriggerBg="no">
									<name>Leaving enemy</name>
									<script>if matches[2] == snd.target then
end</script>
									<triggerType>0</triggerType>
									<conditonLineDelta>0</conditonLineDelta>
									<mStayOpen>0</mStayOpen>
									<mCommand></mCommand>
									<packageName></packageName>
									<mFgColor>#ff0000</mFgColor>
									<mBgColor>#ffff00</mBgColor>
									<mSoundFile></mSoundFile>
									<colorTriggerFgColor>#000000</colorTriggerFgColor>
									<colorTriggerBgColor>#000000</colorTriggerBgColor>
									<regexCodeList>
										<string>^(\w+) leaves to the (\w+).$</string>
										<string>^(\w+) leaves to the (\w+)\, riding .*.$</string>
										<string>^(\w+) stalks out to the (\w+), .*.$</string>
										<string>^Leaving a thin trail of fire in .* wake, (\w+) heads towards the (\w+).$</string>
										<string>^(\w+) disappears over the top of a pile of rubble to the (\w+).$</string>
									</regexCodeList>
									<regexCodePropertyList>
										<integer>1</integer>
										<integer>1</integer>
										<integer>1</integer>
										<integer>1</integer>
										<integer>1</integer>
									</regexCodePropertyList>
								</Trigger>
								<Trigger isActive="no" isFolder="no" isTempTrigger="no" isMultiline="no" isPerlSlashGOption="no" isColorizerTrigger="no" isFilterTrigger="no" isSoundTrigger="no" isColorTrigger="no" isColorTriggerFg="no" isColorTriggerBg="no">
									<name>Enemy lightform</name>
									<script></script>
									<triggerType>0</triggerType>
									<conditonLineDelta>0</conditonLineDelta>
									<mStayOpen>0</mStayOpen>
									<mCommand></mCommand>
									<packageName></packageName>
									<mFgColor>#ff0000</mFgColor>
									<mBgColor>#ffff00</mBgColor>
									<mSoundFile></mSoundFile>
									<colorTriggerFgColor>#000000</colorTriggerFgColor>
									<colorTriggerBgColor>#000000</colorTriggerBgColor>
									<regexCodeList>
										<string>^Closing (the )?\w+ eyes briefly in concentration, (\w+) begins to break apart into tiny motes of light until no trace of (the )?\w+ can be seen where (the )?\w+ once stood.$</string>
									</regexCodeList>
									<regexCodePropertyList>
										<integer>1</integer>
									</regexCodePropertyList>
								</Trigger>
								<Trigger isActive="no" isFolder="no" isTempTrigger="no" isMultiline="no" isPerlSlashGOption="no" isColorizerTrigger="no" isFilterTrigger="no" isSoundTrigger="no" isColorTrigger="no" isColorTriggerFg="no" isColorTriggerBg="no">
									<name>Reform lightform enemy</name>
									<script></script>
									<triggerType>0</triggerType>
									<conditonLineDelta>0</conditonLineDelta>
									<mStayOpen>0</mStayOpen>
									<mCommand></mCommand>
									<packageName></packageName>
									<mFgColor>#ff0000</mFgColor>
									<mBgColor>#ffff00</mBgColor>
									<mSoundFile></mSoundFile>
									<colorTriggerFgColor>#000000</colorTriggerFgColor>
									<colorTriggerBgColor>#000000</colorTriggerBgColor>
									<regexCodeList>
										<string>^Your surroundings become blindingly bright as (\w+) becomes corporeal once more.$ </string>
									</regexCodeList>
									<regexCodePropertyList>
										<integer>1</integer>
									</regexCodePropertyList>
								</Trigger>
								<Trigger isActive="no" isFolder="no" isTempTrigger="no" isMultiline="no" isPerlSlashGOption="no" isColorizerTrigger="no" isFilterTrigger="no" isSoundTrigger="no" isColorTrigger="no" isColorTriggerFg="no" isColorTriggerBg="no">
									<name>Trees</name>
									<script>if matches[2] == snd.target then
	snd.send("qeb touch tentacle "..matches[2])
end</script>
									<triggerType>0</triggerType>
									<conditonLineDelta>0</conditonLineDelta>
									<mStayOpen>0</mStayOpen>
									<mCommand></mCommand>
									<packageName></packageName>
									<mFgColor>#ff0000</mFgColor>
									<mBgColor>#ffff00</mBgColor>
									<mSoundFile></mSoundFile>
									<colorTriggerFgColor>#000000</colorTriggerFgColor>
									<colorTriggerBgColor>#000000</colorTriggerBgColor>
									<regexCodeList>
										<string>^Grabbing onto nearby branches, (\w+) quickly climbs up into the treetops.$</string>
										<string>^You notice (\w+) swing nimbly into view in the trees overhead.$</string>
									</regexCodeList>
									<regexCodePropertyList>
										<integer>1</integer>
										<integer>1</integer>
									</regexCodePropertyList>
								</Trigger>
								<Trigger isActive="no" isFolder="no" isTempTrigger="no" isMultiline="no" isPerlSlashGOption="no" isColorizerTrigger="no" isFilterTrigger="no" isSoundTrigger="no" isColorTrigger="no" isColorTriggerFg="no" isColorTriggerBg="no">
									<name>Flying away</name>
									<script>if matches[2] == snd.target then
	snd.send("qeb touch tentacle "..matches[2])
end</script>
									<triggerType>0</triggerType>
									<conditonLineDelta>0</conditonLineDelta>
									<mStayOpen>0</mStayOpen>
									<mCommand></mCommand>
									<packageName></packageName>
									<mFgColor>#ff0000</mFgColor>
									<mBgColor>#ffff00</mBgColor>
									<mSoundFile></mSoundFile>
									<colorTriggerFgColor>#000000</colorTriggerFgColor>
									<colorTriggerBgColor>#000000</colorTriggerBgColor>
									<regexCodeList>
										<string>^(\w+) begins to flap (the )?\w+ wings powerfully, and rises quickly up into the firmament.$</string>
										<string>^(\w+) flies up into the skies, carried by (the )?\w+ mount's beating wings.$</string>
										<string>^(\w+) is quickly carried up into the skies.$</string>
										<string>^(\w+) flits into view directly overhead.$</string>
									</regexCodeList>
									<regexCodePropertyList>
										<integer>1</integer>
										<integer>1</integer>
										<integer>1</integer>
										<integer>1</integer>
									</regexCodePropertyList>
								</Trigger>
								<Trigger isActive="no" isFolder="no" isTempTrigger="no" isMultiline="no" isPerlSlashGOption="no" isColorizerTrigger="no" isFilterTrigger="no" isSoundTrigger="no" isColorTrigger="no" isColorTriggerFg="no" isColorTriggerBg="no">
									<name>Burrow</name>
									<script></script>
									<triggerType>0</triggerType>
									<conditonLineDelta>0</conditonLineDelta>
									<mStayOpen>0</mStayOpen>
									<mCommand></mCommand>
									<packageName></packageName>
									<mFgColor>#ff0000</mFgColor>
									<mBgColor>#ffff00</mBgColor>
									<mSoundFile></mSoundFile>
									<colorTriggerFgColor>#000000</colorTriggerFgColor>
									<colorTriggerBgColor>#000000</colorTriggerBgColor>
									<regexCodeList>
										<string>^(\w+) burrows into the ground and disappears from sight.$</string>
									</regexCodeList>
									<regexCodePropertyList>
										<integer>1</integer>
									</regexCodePropertyList>
								</Trigger>
								<Trigger isActive="no" isFolder="no" isTempTrigger="no" isMultiline="no" isPerlSlashGOption="no" isColorizerTrigger="no" isFilterTrigger="no" isSoundTrigger="no" isColorTrigger="no" isColorTriggerFg="no" isColorTriggerBg="no">
									<name>Syssin Scale</name>
									<script></script>
									<triggerType>0</triggerType>
									<conditonLineDelta>0</conditonLineDelta>
									<mStayOpen>0</mStayOpen>
									<mCommand></mCommand>
									<packageName></packageName>
									<mFgColor>#ff0000</mFgColor>
									<mBgColor>#ffff00</mBgColor>
									<mSoundFile></mSoundFile>
									<colorTriggerFgColor>#000000</colorTriggerFgColor>
									<colorTriggerBgColor>#000000</colorTriggerBgColor>
									<regexCodeList>
										<string>^(\w+) begins to scale over the icewall to the (the )?\w+.$</string>
									</regexCodeList>
									<regexCodePropertyList>
										<integer>1</integer>
									</regexCodePropertyList>
								</Trigger>
								<Trigger isActive="no" isFolder="no" isTempTrigger="no" isMultiline="no" isPerlSlashGOption="no" isColorizerTrigger="no" isFilterTrigger="no" isSoundTrigger="no" isColorTrigger="no" isColorTriggerFg="no" isColorTriggerBg="no">
									<name>Target tentacled</name>
									<script></script>
									<triggerType>0</triggerType>
									<conditonLineDelta>0</conditonLineDelta>
									<mStayOpen>0</mStayOpen>
									<mCommand></mCommand>
									<packageName></packageName>
									<mFgColor>#ff0000</mFgColor>
									<mBgColor>#ffff00</mBgColor>
									<mSoundFile></mSoundFile>
									<colorTriggerFgColor>#000000</colorTriggerFgColor>
									<colorTriggerBgColor>#000000</colorTriggerBgColor>
									<regexCodeList>
										<string>^\w+ touches a tattoo and suddenly the ground splits open as a nightmarish tentacle shoots skywards, dragging (\w+) back to earth.$</string>
										<string>^You touch the tentacle tattoo and suddenly the ground splits open as a nightmarish tentacle shoots skywards, dragging (\w+) back to earth.$</string>
										<string>^(\w+) tumbles to the ground helplessly.$</string>
									</regexCodeList>
									<regexCodePropertyList>
										<integer>1</integer>
										<integer>1</integer>
										<integer>1</integer>
									</regexCodePropertyList>
								</Trigger>
								<Trigger isActive="no" isFolder="no" isTempTrigger="no" isMultiline="no" isPerlSlashGOption="no" isColorizerTrigger="no" isFilterTrigger="no" isSoundTrigger="no" isColorTrigger="no" isColorTriggerFg="no" isColorTriggerBg="no">
									<name>Leap run</name>
									<script>if matches[2] == snd.target then
end</script>
									<triggerType>0</triggerType>
									<conditonLineDelta>0</conditonLineDelta>
									<mStayOpen>0</mStayOpen>
									<mCommand></mCommand>
									<packageName></packageName>
									<mFgColor>#ff0000</mFgColor>
									<mBgColor>#ffff00</mBgColor>
									<mSoundFile></mSoundFile>
									<colorTriggerFgColor>#000000</colorTriggerFgColor>
									<colorTriggerBgColor>#000000</colorTriggerBgColor>
									<regexCodeList>
										<string>^(\w+) leaps majestically to the (\w+).$</string>
									</regexCodeList>
									<regexCodePropertyList>
										<integer>1</integer>
									</regexCodePropertyList>
								</Trigger>
								<Trigger isActive="no" isFolder="no" isTempTrigger="no" isMultiline="no" isPerlSlashGOption="no" isColorizerTrigger="no" isFilterTrigger="no" isSoundTrigger="no" isColorTrigger="no" isColorTriggerFg="no" isColorTriggerBg="no">
									<name>Mind wrench  to location</name>
									<script>if matches[2] == snd.target then
end</script>
									<triggerType>0</triggerType>
									<conditonLineDelta>0</conditonLineDelta>
									<mStayOpen>0</mStayOpen>
									<mCommand></mCommand>
									<packageName></packageName>
									<mFgColor>#ff0000</mFgColor>
									<mBgColor>#ffff00</mBgColor>
									<mSoundFile></mSoundFile>
									<colorTriggerFgColor>#000000</colorTriggerFgColor>
									<colorTriggerBgColor>#000000</colorTriggerBgColor>
									<regexCodeList>
										<string>^(\w+) drifts into view, carried by some unseen force.$</string>
										<string>^You pick up (\w+) and wrench (the )?\w+ across the land, sacrificing your telepathic bond with (the )?\w+ in the process.$</string>
									</regexCodeList>
									<regexCodePropertyList>
										<integer>1</integer>
										<integer>1</integer>
									</regexCodePropertyList>
								</Trigger>
								<Trigger isActive="no" isFolder="no" isTempTrigger="no" isMultiline="no" isPerlSlashGOption="no" isColorizerTrigger="no" isFilterTrigger="no" isSoundTrigger="no" isColorTrigger="no" isColorTriggerFg="no" isColorTriggerBg="no">
									<name>Person Lured</name>
									<script>if matches[2] == snd.target then
end</script>
									<triggerType>0</triggerType>
									<conditonLineDelta>0</conditonLineDelta>
									<mStayOpen>0</mStayOpen>
									<mCommand></mCommand>
									<packageName></packageName>
									<mFgColor>#ff0000</mFgColor>
									<mBgColor>#ffff00</mBgColor>
									<mSoundFile></mSoundFile>
									<colorTriggerFgColor>#000000</colorTriggerFgColor>
									<colorTriggerBgColor>#000000</colorTriggerBgColor>
									<regexCodeList>
										<string>^\w+ eyes cloudy and limbs stiff, (the )?\w+ strides in from the (the )?\w+.</string>
									</regexCodeList>
									<regexCodePropertyList>
										<integer>1</integer>
									</regexCodePropertyList>
								</Trigger>
								<Trigger isActive="no" isFolder="no" isTempTrigger="no" isMultiline="no" isPerlSlashGOption="no" isColorizerTrigger="no" isFilterTrigger="no" isSoundTrigger="no" isColorTrigger="no" isColorTriggerFg="no" isColorTriggerBg="no">
									<name>You got banished</name>
									<script></script>
									<triggerType>0</triggerType>
									<conditonLineDelta>0</conditonLineDelta>
									<mStayOpen>0</mStayOpen>
									<mCommand></mCommand>
									<packageName></packageName>
									<mFgColor>#ff0000</mFgColor>
									<mBgColor>#ffff00</mBgColor>
									<mSoundFile></mSoundFile>
									<colorTriggerFgColor>#000000</colorTriggerFgColor>
									<colorTriggerBgColor>#000000</colorTriggerBgColor>
									<regexCodeList>
										<string>^(\w+) uses Kaido Banish on you.$</string>
									</regexCodeList>
									<regexCodePropertyList>
										<integer>1</integer>
									</regexCodePropertyList>
								</Trigger>
								<Trigger isActive="no" isFolder="no" isTempTrigger="no" isMultiline="no" isPerlSlashGOption="no" isColorizerTrigger="no" isFilterTrigger="no" isSoundTrigger="no" isColorTrigger="no" isColorTriggerFg="no" isColorTriggerBg="no">
									<name>Pilg out</name>
									<script>if matches[2] == snd.target then
end</script>
									<triggerType>0</triggerType>
									<conditonLineDelta>0</conditonLineDelta>
									<mStayOpen>0</mStayOpen>
									<mCommand></mCommand>
									<packageName></packageName>
									<mFgColor>#ff0000</mFgColor>
									<mBgColor>#ffff00</mBgColor>
									<mSoundFile></mSoundFile>
									<colorTriggerFgColor>#000000</colorTriggerFgColor>
									<colorTriggerBgColor>#000000</colorTriggerBgColor>
									<regexCodeList>
										<string>^You turn to see (\w+) shimmer away.$</string>
									</regexCodeList>
									<regexCodePropertyList>
										<integer>1</integer>
									</regexCodePropertyList>
								</Trigger>
								<Trigger isActive="no" isFolder="no" isTempTrigger="no" isMultiline="no" isPerlSlashGOption="no" isColorizerTrigger="no" isFilterTrigger="no" isSoundTrigger="no" isColorTrigger="no" isColorTriggerFg="no" isColorTriggerBg="no">
									<name>Purgatory</name>
									<script></script>
									<triggerType>0</triggerType>
									<conditonLineDelta>0</conditonLineDelta>
									<mStayOpen>0</mStayOpen>
									<mCommand></mCommand>
									<packageName></packageName>
									<mFgColor>#ff0000</mFgColor>
									<mBgColor>#ffff00</mBgColor>
									<mSoundFile></mSoundFile>
									<colorTriggerFgColor>#000000</colorTriggerFgColor>
									<colorTriggerBgColor>#000000</colorTriggerBgColor>
									<regexCodeList>
										<string>^\w+ uses Purification Purgatory.$</string>
									</regexCodeList>
									<regexCodePropertyList>
										<integer>1</integer>
									</regexCodePropertyList>
								</Trigger>
								<Trigger isActive="no" isFolder="no" isTempTrigger="no" isMultiline="no" isPerlSlashGOption="no" isColorizerTrigger="no" isFilterTrigger="no" isSoundTrigger="no" isColorTrigger="no" isColorTriggerFg="no" isColorTriggerBg="no">
									<name>Name finder</name>
									<script>snd.send("wt I'm at ("..gmcp.Room.Info.num..") '"..gmcp.Room.Info.name.."' in "..gmcp.Room.Info.area)</script>
									<triggerType>0</triggerType>
									<conditonLineDelta>0</conditonLineDelta>
									<mStayOpen>0</mStayOpen>
									<mCommand></mCommand>
									<packageName></packageName>
									<mFgColor>#ff0000</mFgColor>
									<mBgColor>#ffff00</mBgColor>
									<mSoundFile></mSoundFile>
									<colorTriggerFgColor>#000000</colorTriggerFgColor>
									<colorTriggerBgColor>#000000</colorTriggerBgColor>
									<regexCodeList>
										<string>^\(Web\): (the )?\w+ says, "Where you at (\w+) (.|\?)"</string>
										<string>^\(Web\): (the )?\w+ says, "(\w+) where are you(.|\?)"$</string>
									</regexCodeList>
									<regexCodePropertyList>
										<integer>1</integer>
										<integer>1</integer>
									</regexCodePropertyList>
								</Trigger>
								<Trigger isActive="no" isFolder="no" isTempTrigger="no" isMultiline="no" isPerlSlashGOption="no" isColorizerTrigger="no" isFilterTrigger="no" isSoundTrigger="no" isColorTrigger="no" isColorTriggerFg="no" isColorTriggerBg="no">
									<name>Sand shifted to us</name>
									<script>if matches[2] == snd.target then
end</script>
									<triggerType>0</triggerType>
									<conditonLineDelta>0</conditonLineDelta>
									<mStayOpen>0</mStayOpen>
									<mCommand></mCommand>
									<packageName></packageName>
									<mFgColor>#ff0000</mFgColor>
									<mBgColor>#ffff00</mBgColor>
									<mSoundFile></mSoundFile>
									<colorTriggerFgColor>#000000</colorTriggerFgColor>
									<colorTriggerBgColor>#000000</colorTriggerBgColor>
									<regexCodeList>
										<string>^(\w+) is suddenly spat out of the ground.$</string>
									</regexCodeList>
									<regexCodePropertyList>
										<integer>1</integer>
									</regexCodePropertyList>
								</Trigger>
								<Trigger isActive="no" isFolder="no" isTempTrigger="no" isMultiline="no" isPerlSlashGOption="no" isColorizerTrigger="no" isFilterTrigger="no" isSoundTrigger="no" isColorTrigger="no" isColorTriggerFg="no" isColorTriggerBg="no">
									<name>Fracture</name>
									<script></script>
									<triggerType>0</triggerType>
									<conditonLineDelta>0</conditonLineDelta>
									<mStayOpen>0</mStayOpen>
									<mCommand></mCommand>
									<packageName></packageName>
									<mFgColor>#ff0000</mFgColor>
									<mBgColor>#ffff00</mBgColor>
									<mSoundFile></mSoundFile>
									<colorTriggerFgColor>#000000</colorTriggerFgColor>
									<colorTriggerBgColor>#000000</colorTriggerBgColor>
									<regexCodeList>
										<string>^You sense that (the )?\w+ has entered the Iernian Fracture.$</string>
									</regexCodeList>
									<regexCodePropertyList>
										<integer>1</integer>
									</regexCodePropertyList>
								</Trigger>
								<Trigger isActive="no" isFolder="no" isTempTrigger="no" isMultiline="no" isPerlSlashGOption="no" isColorizerTrigger="no" isFilterTrigger="no" isSoundTrigger="no" isColorTrigger="no" isColorTriggerFg="no" isColorTriggerBg="no">
									<name>Pulled Away (Me)</name>
									<script></script>
									<triggerType>0</triggerType>
									<conditonLineDelta>0</conditonLineDelta>
									<mStayOpen>0</mStayOpen>
									<mCommand></mCommand>
									<packageName></packageName>
									<mFgColor>#ff0000</mFgColor>
									<mBgColor>#ffff00</mBgColor>
									<mSoundFile></mSoundFile>
									<colorTriggerFgColor>#000000</colorTriggerFgColor>
									<colorTriggerBgColor>#000000</colorTriggerBgColor>
									<regexCodeList>
										<string>^You feel a moment of disorientation as you are magically summoned.$</string>
										<string>^Your surroundings spin and vanish into the distance as you are wrenched from your location and flung far across the land.$</string>
										<string>^You are enveloped by a blazing sphere of light and are carried helplessly away.$</string>
										<string>You feel yourself compelled to leave the room, beckoned by the allure of a guardian angel.</string>
										<string>^Roots snake upward and abruptly tangle about your ankles, yanking you unceremoniously down into the waiting earth. For a few moments you struggle for breath, soil invading your nostrils, before you are deposited to the surface once more in whereabouts unknown.</string>
									</regexCodeList>
									<regexCodePropertyList>
										<integer>1</integer>
										<integer>1</integer>
										<integer>1</integer>
										<integer>3</integer>
										<integer>3</integer>
									</regexCodePropertyList>
								</Trigger>
							</TriggerGroup>
						</TriggerGroup>
						<TriggerGroup isActive="yes" isFolder="yes" isTempTrigger="no" isMultiline="no" isPerlSlashGOption="no" isColorizerTrigger="no" isFilterTrigger="no" isSoundTrigger="no" isColorTrigger="no" isColorTriggerFg="no" isColorTriggerBg="no">
							<name>Alerts</name>
							<script></script>
							<triggerType>0</triggerType>
							<conditonLineDelta>0</conditonLineDelta>
							<mStayOpen>0</mStayOpen>
							<mCommand></mCommand>
							<packageName></packageName>
							<mFgColor>#ff0000</mFgColor>
							<mBgColor>#ffff00</mBgColor>
							<mSoundFile></mSoundFile>
							<colorTriggerFgColor>#000000</colorTriggerFgColor>
							<colorTriggerBgColor>#000000</colorTriggerBgColor>
							<regexCodeList />
							<regexCodePropertyList />
							<Trigger isActive="yes" isFolder="no" isTempTrigger="no" isMultiline="no" isPerlSlashGOption="no" isColorizerTrigger="no" isFilterTrigger="no" isSoundTrigger="no" isColorTrigger="no" isColorTriggerFg="no" isColorTriggerBg="no">
								<name>web invite</name>
								<script>snd.set_faction()
if snd.toggles.affcalling then
 for name in pairs(snd.allies) do
  if snd.allies[name] == matches[2] then
   snd.send("web accept")
	end
 end
end</script>
								<triggerType>0</triggerType>
								<conditonLineDelta>0</conditonLineDelta>
								<mStayOpen>0</mStayOpen>
								<mCommand></mCommand>
								<packageName></packageName>
								<mFgColor>#ff0000</mFgColor>
								<mBgColor>#ffff00</mBgColor>
								<mSoundFile></mSoundFile>
								<colorTriggerFgColor>#000000</colorTriggerFgColor>
								<colorTriggerBgColor>#000000</colorTriggerBgColor>
								<regexCodeList>
									<string>^(\w+) has invited you to join a web\. WEB ACCEPT to accept the invitation\.$</string>
								</regexCodeList>
								<regexCodePropertyList>
									<integer>1</integer>
								</regexCodePropertyList>
							</Trigger>
							<Trigger isActive="yes" isFolder="no" isTempTrigger="no" isMultiline="no" isPerlSlashGOption="no" isColorizerTrigger="no" isFilterTrigger="no" isSoundTrigger="no" isColorTrigger="no" isColorTriggerFg="no" isColorTriggerBg="no">
								<name>web call</name>
								<script>if matches[2] == gmcp.Char.Name.name and snd.toggles.calling then
 snd.send("wt Target: "..snd.target)
end
</script>
								<triggerType>0</triggerType>
								<conditonLineDelta>0</conditonLineDelta>
								<mStayOpen>0</mStayOpen>
								<mCommand></mCommand>
								<packageName></packageName>
								<mFgColor>#ff0000</mFgColor>
								<mBgColor>#ffff00</mBgColor>
								<mSoundFile></mSoundFile>
								<colorTriggerFgColor>#000000</colorTriggerFgColor>
								<colorTriggerBgColor>#000000</colorTriggerBgColor>
								<regexCodeList>
									<string>^\(Web\): (\w+) says?, \"Target: (\w+)\.\"$</string>
								</regexCodeList>
								<regexCodePropertyList>
									<integer>1</integer>
								</regexCodePropertyList>
							</Trigger>
							<Trigger isActive="yes" isFolder="no" isTempTrigger="no" isMultiline="yes" isPerlSlashGOption="no" isColorizerTrigger="no" isFilterTrigger="no" isSoundTrigger="no" isColorTrigger="no" isColorTriggerFg="no" isColorTriggerBg="no">
								<name>scent</name>
								<script>snd.scented = {}</script>
								<triggerType>0</triggerType>
								<conditonLineDelta>2</conditonLineDelta>
								<mStayOpen>99</mStayOpen>
								<mCommand></mCommand>
								<packageName></packageName>
								<mFgColor>#ff0000</mFgColor>
								<mBgColor>#ffff00</mBgColor>
								<mSoundFile></mSoundFile>
								<colorTriggerFgColor>#000000</colorTriggerFgColor>
								<colorTriggerBgColor>#000000</colorTriggerBgColor>
								<regexCodeList>
									<string>You use (the )?\w+ Scent\.$</string>
									<string>1</string>
									<string>You tilt your head back and deeply inhale any scents from the air.</string>
								</regexCodeList>
								<regexCodePropertyList>
									<integer>1</integer>
									<integer>5</integer>
									<integer>3</integer>
								</regexCodePropertyList>
								<Trigger isActive="yes" isFolder="no" isTempTrigger="no" isMultiline="no" isPerlSlashGOption="no" isColorizerTrigger="no" isFilterTrigger="no" isSoundTrigger="no" isColorTrigger="no" isColorTriggerFg="no" isColorTriggerBg="no">
									<name>scent end</name>
									<script>setTriggerStayOpen("scent", 0)

if snd.toggles.calling then
  local string = "wt Scenting!" .. snd.sep
	
  for i in pairs(snd.scented) do
    x = mmp.searchRoomExact(i)
    for y in pairs(x) do
      z = y
    end
    list = ""
    for j in pairs(snd.scented[i]) do
      list = list .. " " .. snd.scented[i][j]
    end
    if i ~= snd.my.room_name then
      string = string .. "wt " .. i .. " (" .. z .. "): " .. list .. snd.sep
    end
  end
	
  snd.send(string)
  snd.scented = {}
end</script>
									<triggerType>0</triggerType>
									<conditonLineDelta>0</conditonLineDelta>
									<mStayOpen>0</mStayOpen>
									<mCommand></mCommand>
									<packageName></packageName>
									<mFgColor>#ff0000</mFgColor>
									<mBgColor>#ffff00</mBgColor>
									<mSoundFile></mSoundFile>
									<colorTriggerFgColor>#000000</colorTriggerFgColor>
									<colorTriggerBgColor>#000000</colorTriggerBgColor>
									<regexCodeList>
										<string>return isPrompt()</string>
									</regexCodeList>
									<regexCodePropertyList>
										<integer>4</integer>
									</regexCodePropertyList>
								</Trigger>
								<Trigger isActive="yes" isFolder="no" isTempTrigger="no" isMultiline="no" isPerlSlashGOption="no" isColorizerTrigger="no" isFilterTrigger="no" isSoundTrigger="no" isColorTrigger="no" isColorTriggerFg="no" isColorTriggerBg="no">
									<name>scent line</name>
									<script>if snd.scented[matches[3]] == nil then
 snd.scented[matches[3]] = {}
end
table.insert(snd.scented[matches[3]], matches[2])</script>
									<triggerType>0</triggerType>
									<conditonLineDelta>0</conditonLineDelta>
									<mStayOpen>0</mStayOpen>
									<mCommand></mCommand>
									<packageName></packageName>
									<mFgColor>#ff0000</mFgColor>
									<mBgColor>#ffff00</mBgColor>
									<mSoundFile></mSoundFile>
									<colorTriggerFgColor>#000000</colorTriggerFgColor>
									<colorTriggerBgColor>#000000</colorTriggerBgColor>
									<regexCodeList>
										<string>^You pick up the faint scent of (\w+) at (.+)\.$</string>
									</regexCodeList>
									<regexCodePropertyList>
										<integer>1</integer>
									</regexCodePropertyList>
								</Trigger>
							</Trigger>
							<Trigger isActive="yes" isFolder="no" isTempTrigger="no" isMultiline="no" isPerlSlashGOption="no" isColorizerTrigger="no" isFilterTrigger="no" isSoundTrigger="no" isColorTrigger="no" isColorTriggerFg="no" isColorTriggerBg="no">
								<name>beckon</name>
								<script>snd.set_faction()
for name in pairs(snd.allies) do
 if snd.allies[name] == matches[2] then
  snd.send("follow "..matches[2])
 end
end</script>
								<triggerType>0</triggerType>
								<conditonLineDelta>0</conditonLineDelta>
								<mStayOpen>0</mStayOpen>
								<mCommand></mCommand>
								<packageName></packageName>
								<mFgColor>#ff0000</mFgColor>
								<mBgColor>#ffff00</mBgColor>
								<mSoundFile></mSoundFile>
								<colorTriggerFgColor>#000000</colorTriggerFgColor>
								<colorTriggerBgColor>#000000</colorTriggerBgColor>
								<regexCodeList>
									<string>^(\w+) beckons you to (the )?\w+\.$</string>
								</regexCodeList>
								<regexCodePropertyList>
									<integer>1</integer>
								</regexCodePropertyList>
							</Trigger>
							<Trigger isActive="no" isFolder="no" isTempTrigger="no" isMultiline="no" isPerlSlashGOption="no" isColorizerTrigger="no" isFilterTrigger="no" isSoundTrigger="no" isColorTrigger="no" isColorTriggerFg="no" isColorTriggerBg="no">
								<name>follow enemy</name>
								<script>snd.set_faction()
if snd.defenses.def_phase.state ~= "deffed" then
 for name in pairs(snd.enemies) do
  if snd.enemies[name] == matches[2] then
   snd.send("qeb lose "..matches[2])
  end
 end
end</script>
								<triggerType>0</triggerType>
								<conditonLineDelta>0</conditonLineDelta>
								<mStayOpen>0</mStayOpen>
								<mCommand></mCommand>
								<packageName></packageName>
								<mFgColor>#ff0000</mFgColor>
								<mBgColor>#ffff00</mBgColor>
								<mSoundFile></mSoundFile>
								<colorTriggerFgColor>#000000</colorTriggerFgColor>
								<colorTriggerBgColor>#000000</colorTriggerBgColor>
								<regexCodeList>
									<string>^You begin to follow (\w+)\.$</string>
								</regexCodeList>
								<regexCodePropertyList>
									<integer>1</integer>
								</regexCodePropertyList>
							</Trigger>
							<Trigger isActive="yes" isFolder="no" isTempTrigger="no" isMultiline="no" isPerlSlashGOption="no" isColorizerTrigger="no" isFilterTrigger="no" isSoundTrigger="no" isColorTrigger="no" isColorTriggerFg="no" isColorTriggerBg="no">
								<name>melting</name>
								<script>if matches[2] ~= snd.target and (snd.toggles.attacking or snd.toggles.bashing) and snd.toggles.affcalling then
 if snd.class == "Templar" then
  snd.send("qeb defend "..matches[2])
 elseif snd.class == "Ascendril" then
  snd.send("qeb cast reflection "..matches[2])
 elseif snd.class == "Shaman" then
  snd.send("qeb nature barrier "..matches[2])
 elseif snd.class == "Luminary" then
  snd.send("qeb angel aura "..matches[2])
 end
end</script>
								<triggerType>0</triggerType>
								<conditonLineDelta>0</conditonLineDelta>
								<mStayOpen>0</mStayOpen>
								<mCommand></mCommand>
								<packageName></packageName>
								<mFgColor>#ff0000</mFgColor>
								<mBgColor>#ffff00</mBgColor>
								<mSoundFile></mSoundFile>
								<colorTriggerFgColor>#000000</colorTriggerFgColor>
								<colorTriggerBgColor>#000000</colorTriggerBgColor>
								<regexCodeList>
									<string>^\(Web\): (\w+) says, \"I'm melting! I'm melting!\"$</string>
								</regexCodeList>
								<regexCodePropertyList>
									<integer>1</integer>
								</regexCodePropertyList>
							</Trigger>
							<Trigger isActive="yes" isFolder="no" isTempTrigger="no" isMultiline="yes" isPerlSlashGOption="no" isColorizerTrigger="no" isFilterTrigger="no" isSoundTrigger="no" isColorTrigger="yes" isColorTriggerFg="no" isColorTriggerBg="no">
								<name>deliverance use</name>
								<script>local string = ""
if snd.toggles.affcalling then
 string = "wt "..string.upper(multimatches[2][2]).." used deliverance!"..snd.sep
end
if multimatches[2][2] == snd.target then
 string = string.."wt STOP HITTING STOP HITTING STOP!"
 expandAlias("stap", false)
end
snd.send(string)</script>
								<triggerType>0</triggerType>
								<conditonLineDelta>1</conditonLineDelta>
								<mStayOpen>0</mStayOpen>
								<mCommand></mCommand>
								<packageName></packageName>
								<mFgColor>#ff0000</mFgColor>
								<mBgColor>#ffff00</mBgColor>
								<mSoundFile></mSoundFile>
								<colorTriggerFgColor>#ff0000</colorTriggerFgColor>
								<colorTriggerBgColor>#000000</colorTriggerBgColor>
								<regexCodeList>
									<string>ANSI_COLORS_F{009}_B{000}</string>
									<string>^(\w+) uses Kaido Deliverance \(active\)\.$</string>
								</regexCodeList>
								<regexCodePropertyList>
									<integer>6</integer>
									<integer>1</integer>
								</regexCodePropertyList>
							</Trigger>
							<Trigger isActive="yes" isFolder="no" isTempTrigger="no" isMultiline="yes" isPerlSlashGOption="no" isColorizerTrigger="no" isFilterTrigger="no" isSoundTrigger="no" isColorTrigger="yes" isColorTriggerFg="no" isColorTriggerBg="no">
								<name>deliverance proc</name>
								<script>local string = ""
if snd.toggles.affcalling then
 string = "wt "..string.upper(multimatches[1][2]).." used deliverance!"..snd.sep
end
if multimatches[2][2] == snd.target then
 string = string.."wt STOP HITTING STOP HITTING STOP!"
 expandAlias("stap", false)
end
snd.send(string)</script>
								<triggerType>0</triggerType>
								<conditonLineDelta>1</conditonLineDelta>
								<mStayOpen>0</mStayOpen>
								<mCommand></mCommand>
								<packageName></packageName>
								<mFgColor>#ff0000</mFgColor>
								<mBgColor>#ffff00</mBgColor>
								<mSoundFile></mSoundFile>
								<colorTriggerFgColor>#ff0000</colorTriggerFgColor>
								<colorTriggerBgColor>#000000</colorTriggerBgColor>
								<regexCodeList>
									<string>ANSI_COLORS_F{009}_B{000}</string>
									<string>^(\w+) uses Kaido Deliverance \(proc\) on (the )?\w+\.$</string>
								</regexCodeList>
								<regexCodePropertyList>
									<integer>6</integer>
									<integer>1</integer>
								</regexCodePropertyList>
							</Trigger>
							<Trigger isActive="yes" isFolder="no" isTempTrigger="no" isMultiline="no" isPerlSlashGOption="no" isColorizerTrigger="no" isFilterTrigger="no" isSoundTrigger="no" isColorTrigger="no" isColorTriggerFg="no" isColorTriggerBg="no">
								<name>can't envenom</name>
								<script>snd.send("wipe left"..snd.sep.."wipe right")</script>
								<triggerType>0</triggerType>
								<conditonLineDelta>0</conditonLineDelta>
								<mStayOpen>0</mStayOpen>
								<mCommand></mCommand>
								<packageName></packageName>
								<mFgColor>#ff0000</mFgColor>
								<mBgColor>#ffff00</mBgColor>
								<mSoundFile></mSoundFile>
								<colorTriggerFgColor>#000000</colorTriggerFgColor>
								<colorTriggerBgColor>#000000</colorTriggerBgColor>
								<regexCodeList>
									<string>You have too many effects stacked onto your weapon.</string>
									<string>^No more venoms will fit upon .+\.$</string>
								</regexCodeList>
								<regexCodePropertyList>
									<integer>3</integer>
									<integer>1</integer>
								</regexCodePropertyList>
							</Trigger>
							<Trigger isActive="yes" isFolder="no" isTempTrigger="no" isMultiline="no" isPerlSlashGOption="no" isColorizerTrigger="no" isFilterTrigger="no" isSoundTrigger="no" isColorTrigger="no" isColorTriggerFg="no" isColorTriggerBg="no">
								<name>arti pipes</name>
								<script>snd.toggles.lighting = false</script>
								<triggerType>0</triggerType>
								<conditonLineDelta>0</conditonLineDelta>
								<mStayOpen>0</mStayOpen>
								<mCommand></mCommand>
								<packageName></packageName>
								<mFgColor>#ff0000</mFgColor>
								<mBgColor>#ffff00</mBgColor>
								<mSoundFile></mSoundFile>
								<colorTriggerFgColor>#000000</colorTriggerFgColor>
								<colorTriggerBgColor>#000000</colorTriggerBgColor>
								<regexCodeList>
									<string>You have no pipes that need to be lit.</string>
									<string>You possess no means of creating a flame.</string>
								</regexCodeList>
								<regexCodePropertyList>
									<integer>3</integer>
									<integer>3</integer>
								</regexCodePropertyList>
							</Trigger>
							<Trigger isActive="yes" isFolder="no" isTempTrigger="no" isMultiline="no" isPerlSlashGOption="no" isColorizerTrigger="no" isFilterTrigger="no" isSoundTrigger="no" isColorTrigger="no" isColorTriggerFg="no" isColorTriggerBg="no">
								<name>need dismount</name>
								<script>expandAlias("dm", false)</script>
								<triggerType>0</triggerType>
								<conditonLineDelta>0</conditonLineDelta>
								<mStayOpen>0</mStayOpen>
								<mCommand></mCommand>
								<packageName></packageName>
								<mFgColor>#ff0000</mFgColor>
								<mBgColor>#ffff00</mBgColor>
								<mSoundFile></mSoundFile>
								<colorTriggerFgColor>#000000</colorTriggerFgColor>
								<colorTriggerBgColor>#000000</colorTriggerBgColor>
								<regexCodeList>
									<string>You cannot do that while mounted.</string>
								</regexCodeList>
								<regexCodePropertyList>
									<integer>3</integer>
								</regexCodePropertyList>
							</Trigger>
							<Trigger isActive="yes" isFolder="no" isTempTrigger="no" isMultiline="no" isPerlSlashGOption="no" isColorizerTrigger="no" isFilterTrigger="no" isSoundTrigger="no" isColorTrigger="no" isColorTriggerFg="no" isColorTriggerBg="no">
								<name>class change</name>
								<script>snd.changeClass()
if matches[1]:find("assume") then
	snd.class = matches[2]
	snd.set_vitals()
end</script>
								<triggerType>0</triggerType>
								<conditonLineDelta>0</conditonLineDelta>
								<mStayOpen>0</mStayOpen>
								<mCommand></mCommand>
								<packageName></packageName>
								<mFgColor>#ff0000</mFgColor>
								<mBgColor>#ffff00</mBgColor>
								<mSoundFile></mSoundFile>
								<colorTriggerFgColor>#000000</colorTriggerFgColor>
								<colorTriggerBgColor>#000000</colorTriggerBgColor>
								<regexCodeList>
									<string>^Your active class has been switched to (\w+)\.$</string>
									<string>^You assume the (\w+) class\.$</string>
								</regexCodeList>
								<regexCodePropertyList>
									<integer>1</integer>
									<integer>1</integer>
								</regexCodePropertyList>
							</Trigger>
							<Trigger isActive="yes" isFolder="no" isTempTrigger="no" isMultiline="no" isPerlSlashGOption="no" isColorizerTrigger="no" isFilterTrigger="no" isSoundTrigger="no" isColorTrigger="no" isColorTriggerFg="no" isColorTriggerBg="no">
								<name>radiance</name>
								<script>local string = "wt I'm being RADIANCED! PANIC!"..snd.sep.."say I'm being RADIANCED! AAAAAAAAHHHHH!"..snd.sep.."panic"..snd.sep.."panic"..snd.sep.."panic"..snd.sep.."panic"..snd.sep.."panic"
if snd.toggles.listening and #snd.callers &gt;= 1 then
 string = string.."tell "..snd.callers[1].." I'm being radianced! HELP ME PLEASE!"
end
snd.send(string)</script>
								<triggerType>0</triggerType>
								<conditonLineDelta>0</conditonLineDelta>
								<mStayOpen>0</mStayOpen>
								<mCommand></mCommand>
								<packageName></packageName>
								<mFgColor>#ff0000</mFgColor>
								<mBgColor>#ffff00</mBgColor>
								<mSoundFile></mSoundFile>
								<colorTriggerFgColor>#000000</colorTriggerFgColor>
								<colorTriggerBgColor>#000000</colorTriggerBgColor>
								<regexCodeList>
									<string>A shiver runs down your spine, and you feel an instinctive urge to run as far and as fast as you can.</string>
									<string>^A shimmering image of the face of (the )?\w+ appears fleetingly before you, frowning in concentration\.$</string>
									<string>Sparks of multicoloured light begin to dance in your mind.</string>
									<string>An odd sensation of warmth begins to fill your body.</string>
									<string>Arcs of white light begin to flash across your vision, radiant and bright.</string>
									<string>Your heart thumps as you realize that you have but seconds left to escape whatever fate awaits you.</string>
								</regexCodeList>
								<regexCodePropertyList>
									<integer>3</integer>
									<integer>1</integer>
									<integer>3</integer>
									<integer>3</integer>
									<integer>3</integer>
									<integer>3</integer>
								</regexCodePropertyList>
							</Trigger>
							<Trigger isActive="yes" isFolder="no" isTempTrigger="no" isMultiline="no" isPerlSlashGOption="no" isColorizerTrigger="no" isFilterTrigger="no" isSoundTrigger="no" isColorTrigger="no" isColorTriggerFg="no" isColorTriggerBg="no">
								<name>forced tumble</name>
								<script>snd.send("stop")</script>
								<triggerType>0</triggerType>
								<conditonLineDelta>0</conditonLineDelta>
								<mStayOpen>0</mStayOpen>
								<mCommand></mCommand>
								<packageName></packageName>
								<mFgColor>#ff0000</mFgColor>
								<mBgColor>#ffff00</mBgColor>
								<mSoundFile></mSoundFile>
								<colorTriggerFgColor>#000000</colorTriggerFgColor>
								<colorTriggerBgColor>#000000</colorTriggerBgColor>
								<regexCodeList>
									<string>^You hear (the )?\w+'s? voice and you feel irresistibly compelled to: tumble \w+$</string>
								</regexCodeList>
								<regexCodePropertyList>
									<integer>1</integer>
								</regexCodePropertyList>
							</Trigger>
							<Trigger isActive="yes" isFolder="no" isTempTrigger="no" isMultiline="no" isPerlSlashGOption="no" isColorizerTrigger="no" isFilterTrigger="no" isSoundTrigger="no" isColorTrigger="no" isColorTriggerFg="no" isColorTriggerBg="no">
								<name>unblock</name>
								<script>snd.send("unblock")</script>
								<triggerType>0</triggerType>
								<conditonLineDelta>0</conditonLineDelta>
								<mStayOpen>0</mStayOpen>
								<mCommand></mCommand>
								<packageName></packageName>
								<mFgColor>#ff0000</mFgColor>
								<mBgColor>#ffff00</mBgColor>
								<mSoundFile></mSoundFile>
								<colorTriggerFgColor>#000000</colorTriggerFgColor>
								<colorTriggerBgColor>#000000</colorTriggerBgColor>
								<regexCodeList>
									<string>^\(Web\): \w+ says, \"Unblock\.\"$</string>
								</regexCodeList>
								<regexCodePropertyList>
									<integer>1</integer>
								</regexCodePropertyList>
							</Trigger>
							<Trigger isActive="yes" isFolder="no" isTempTrigger="no" isMultiline="no" isPerlSlashGOption="no" isColorizerTrigger="no" isFilterTrigger="no" isSoundTrigger="no" isColorTrigger="no" isColorTriggerFg="no" isColorTriggerBg="no">
								<name>defending</name>
								<script>if table.isMember(snd.allies, matches[2]) then
	send("wt We may have a fake call")
	tempTimer(3, [[enableTrigger("defending")]])
	disableTrigger("defending")
end</script>
								<triggerType>0</triggerType>
								<conditonLineDelta>0</conditonLineDelta>
								<mStayOpen>0</mStayOpen>
								<mCommand></mCommand>
								<packageName></packageName>
								<mFgColor>#ff0000</mFgColor>
								<mBgColor>#ffff00</mBgColor>
								<mSoundFile></mSoundFile>
								<colorTriggerFgColor>#000000</colorTriggerFgColor>
								<colorTriggerBgColor>#000000</colorTriggerBgColor>
								<regexCodeList>
									<string>^(\w+) leaps swiftly in front of (\w+) to defend (the )?\w+!$</string>
								</regexCodeList>
								<regexCodePropertyList>
									<integer>1</integer>
								</regexCodePropertyList>
							</Trigger>
							<Trigger isActive="yes" isFolder="no" isTempTrigger="no" isMultiline="no" isPerlSlashGOption="no" isColorizerTrigger="no" isFilterTrigger="no" isSoundTrigger="no" isColorTrigger="no" isColorTriggerFg="no" isColorTriggerBg="no">
								<name>abducted</name>
								<script>if snd.toggles.affcalling then
 snd.send("wt Abducted: "..matches[2])
 snd.set_faction()
 if table.contains(snd.allies, matches[2]) then
  snd.send("tell "..matches[2].." I abducted you. You are now PHASED!")
 end
end</script>
								<triggerType>0</triggerType>
								<conditonLineDelta>0</conditonLineDelta>
								<mStayOpen>0</mStayOpen>
								<mCommand></mCommand>
								<packageName></packageName>
								<mFgColor>#ff0000</mFgColor>
								<mBgColor>#ffff00</mBgColor>
								<mSoundFile></mSoundFile>
								<colorTriggerFgColor>#000000</colorTriggerFgColor>
								<colorTriggerBgColor>#000000</colorTriggerBgColor>
								<regexCodeList>
									<string>^Walking up to (\w+), you momentarily bring your hand back into reality and grab (the )?\w+ shoulder\. As your hand makes contact, you quickly focus on vibrating (the )?\w+ body and your hand out of sync with reality\. A short burst of azure light surrounds (the )?\w+ and (the )?\w+ is pulled into phase next to you\.$</string>
								</regexCodeList>
								<regexCodePropertyList>
									<integer>1</integer>
								</regexCodePropertyList>
							</Trigger>
							<Trigger isActive="yes" isFolder="no" isTempTrigger="no" isMultiline="no" isPerlSlashGOption="no" isColorizerTrigger="no" isFilterTrigger="no" isSoundTrigger="no" isColorTrigger="no" isColorTriggerFg="no" isColorTriggerBg="no">
								<name>prismatic barrier</name>
								<script>deleteLine()
snd.message(matches[2]..": prismatic barrier!")

if matches[2] == snd.target then
 if snd.class == "Carnifex" then
  snd.send("qeb soul erode "..matches[2])
 elseif snd.class == "Shaman" then
  snd.send("qeb commune leafstorm "..matches[2])
 elseif snd.class == "Luminary" then
  snd.send("qeb perform force "..matches[2].." kick "..gmcp.Char.Name.name)
 elseif snd.use_hourglass_on_prismatic then
 	snd.send("qeb touch hourglass "..matches[2]) 
 elseif snd.class == "Templar" then
 	snd.send("qeb aura withering "..matches[2])
 else
  snd.send("wt "..matches[2].." has a barrier!")
  snd.get_new_target()
 end
end
tempTimer(snd.delay(), [[enableTrigger("prismatic barrier")]])
disableTrigger("prismatic barrier")</script>
								<triggerType>0</triggerType>
								<conditonLineDelta>0</conditonLineDelta>
								<mStayOpen>0</mStayOpen>
								<mCommand></mCommand>
								<packageName></packageName>
								<mFgColor>#ff0000</mFgColor>
								<mBgColor>#ffff00</mBgColor>
								<mSoundFile></mSoundFile>
								<colorTriggerFgColor>#000000</colorTriggerFgColor>
								<colorTriggerBgColor>#000000</colorTriggerBgColor>
								<regexCodeList>
									<string>^Your attack is repelled by the prismatic barrier surrounding (\w+)\.$</string>
									<string>^(\w+) strums a few notes on an Iosai lyre, and a prismatic barrier forms around (the )?\w+\.$</string>
									<string>^Your attack is repelled by the magical aegis protecting (\w+).$</string>
								</regexCodeList>
								<regexCodePropertyList>
									<integer>1</integer>
									<integer>1</integer>
									<integer>1</integer>
								</regexCodePropertyList>
							</Trigger>
						</TriggerGroup>
						<TriggerGroup isActive="yes" isFolder="yes" isTempTrigger="no" isMultiline="no" isPerlSlashGOption="no" isColorizerTrigger="no" isFilterTrigger="no" isSoundTrigger="no" isColorTrigger="no" isColorTriggerFg="no" isColorTriggerBg="no">
							<name>Misc</name>
							<script></script>
							<triggerType>0</triggerType>
							<conditonLineDelta>0</conditonLineDelta>
							<mStayOpen>0</mStayOpen>
							<mCommand></mCommand>
							<packageName></packageName>
							<mFgColor>#ff0000</mFgColor>
							<mBgColor>#ffff00</mBgColor>
							<mSoundFile></mSoundFile>
							<colorTriggerFgColor>#000000</colorTriggerFgColor>
							<colorTriggerBgColor>#000000</colorTriggerBgColor>
							<regexCodeList />
							<regexCodePropertyList />
							<Trigger isActive="yes" isFolder="no" isTempTrigger="no" isMultiline="no" isPerlSlashGOption="no" isColorizerTrigger="yes" isFilterTrigger="no" isSoundTrigger="no" isColorTrigger="no" isColorTriggerFg="no" isColorTriggerBg="no">
								<name>crit</name>
								<script></script>
								<triggerType>0</triggerType>
								<conditonLineDelta>0</conditonLineDelta>
								<mStayOpen>0</mStayOpen>
								<mCommand></mCommand>
								<packageName></packageName>
								<mFgColor>#ff5500</mFgColor>
								<mBgColor>#000000</mBgColor>
								<mSoundFile></mSoundFile>
								<colorTriggerFgColor>#000000</colorTriggerFgColor>
								<colorTriggerBgColor>#000000</colorTriggerBgColor>
								<regexCodeList>
									<string>^You have scored a (CRITICAL) hit!$</string>
									<string>^You have scored a (STAGGERING CRITICAL) hit!$</string>
									<string>^You have scored a (CRUSHING CRITICAL) hit!$</string>
									<string>^You have scored a (MUTILATING CRITICAL) hit!$</string>
									<string>^You have scored an (ANNIHILATING CRITICAL) hit!!!$</string>
								</regexCodeList>
								<regexCodePropertyList>
									<integer>1</integer>
									<integer>1</integer>
									<integer>1</integer>
									<integer>1</integer>
									<integer>1</integer>
								</regexCodePropertyList>
							</Trigger>
							<Trigger isActive="yes" isFolder="no" isTempTrigger="no" isMultiline="no" isPerlSlashGOption="no" isColorizerTrigger="yes" isFilterTrigger="no" isSoundTrigger="no" isColorTrigger="no" isColorTriggerFg="no" isColorTriggerBg="no">
								<name>newbie</name>
								<script></script>
								<triggerType>0</triggerType>
								<conditonLineDelta>0</conditonLineDelta>
								<mStayOpen>0</mStayOpen>
								<mCommand></mCommand>
								<packageName></packageName>
								<mFgColor>#ff007f</mFgColor>
								<mBgColor>#000000</mBgColor>
								<mSoundFile></mSoundFile>
								<colorTriggerFgColor>#000000</colorTriggerFgColor>
								<colorTriggerBgColor>#000000</colorTriggerBgColor>
								<regexCodeList>
									<string>^.+ has escaped Slaver\'s Isle and entered the realm of Aetolia\.$</string>
								</regexCodeList>
								<regexCodePropertyList>
									<integer>1</integer>
								</regexCodePropertyList>
							</Trigger>
							<Trigger isActive="yes" isFolder="no" isTempTrigger="no" isMultiline="no" isPerlSlashGOption="no" isColorizerTrigger="no" isFilterTrigger="no" isSoundTrigger="no" isColorTrigger="no" isColorTriggerFg="no" isColorTriggerBg="no">
								<name>parried</name>
								<script>if snd.toggles.atkecho then
 deleteLine()
 snd.message("Parried: "..matches[2].."!")
end</script>
								<triggerType>0</triggerType>
								<conditonLineDelta>0</conditonLineDelta>
								<mStayOpen>0</mStayOpen>
								<mCommand></mCommand>
								<packageName></packageName>
								<mFgColor>#ff0000</mFgColor>
								<mBgColor>#ffff00</mBgColor>
								<mSoundFile></mSoundFile>
								<colorTriggerFgColor>#000000</colorTriggerFgColor>
								<colorTriggerBgColor>#000000</colorTriggerBgColor>
								<regexCodeList>
									<string>^You parry the attack to your (.*) with a deft maneuver\.$</string>
								</regexCodeList>
								<regexCodePropertyList>
									<integer>1</integer>
								</regexCodePropertyList>
							</Trigger>
							<Trigger isActive="yes" isFolder="no" isTempTrigger="no" isMultiline="no" isPerlSlashGOption="no" isColorizerTrigger="no" isFilterTrigger="no" isSoundTrigger="no" isColorTrigger="no" isColorTriggerFg="no" isColorTriggerBg="no">
								<name>diverted</name>
								<script>deleteLine()</script>
								<triggerType>0</triggerType>
								<conditonLineDelta>0</conditonLineDelta>
								<mStayOpen>0</mStayOpen>
								<mCommand></mCommand>
								<packageName></packageName>
								<mFgColor>#ff0000</mFgColor>
								<mBgColor>#ffff00</mBgColor>
								<mSoundFile></mSoundFile>
								<colorTriggerFgColor>#000000</colorTriggerFgColor>
								<colorTriggerBgColor>#000000</colorTriggerBgColor>
								<regexCodeList>
									<string>^.+ jerks to the side, the attack barely grazing (the )?\w+\.$</string>
								</regexCodeList>
								<regexCodePropertyList>
									<integer>1</integer>
								</regexCodePropertyList>
							</Trigger>
							<Trigger isActive="yes" isFolder="no" isTempTrigger="no" isMultiline="yes" isPerlSlashGOption="no" isColorizerTrigger="no" isFilterTrigger="no" isSoundTrigger="no" isColorTrigger="yes" isColorTriggerFg="no" isColorTriggerBg="no">
								<name>first aid</name>
								<script>deleteLine()</script>
								<triggerType>0</triggerType>
								<conditonLineDelta>0</conditonLineDelta>
								<mStayOpen>0</mStayOpen>
								<mCommand></mCommand>
								<packageName></packageName>
								<mFgColor>#ff0000</mFgColor>
								<mBgColor>#ffff00</mBgColor>
								<mSoundFile></mSoundFile>
								<colorTriggerFgColor>#008080</colorTriggerFgColor>
								<colorTriggerBgColor>#000000</colorTriggerBgColor>
								<regexCodeList>
									<string>ANSI_COLORS_F{006}_B{000}</string>
									<string>[FirstAid]:</string>
								</regexCodeList>
								<regexCodePropertyList>
									<integer>6</integer>
									<integer>2</integer>
								</regexCodePropertyList>
							</Trigger>
							<Trigger isActive="yes" isFolder="no" isTempTrigger="no" isMultiline="yes" isPerlSlashGOption="no" isColorizerTrigger="no" isFilterTrigger="no" isSoundTrigger="no" isColorTrigger="no" isColorTriggerFg="no" isColorTriggerBg="no">
								<name>outc</name>
								<script>deleteLine()
if tonumber(multimatches[3][3]) &lt; 200 then
 snd.message("&lt;red&gt;LOW ON: &lt;white&gt;"..string.title(multimatches[3][2]))
 snd.message("&lt;red&gt;LOW ON: &lt;white&gt;"..string.title(multimatches[3][2]))
 snd.message("&lt;red&gt;LOW ON: &lt;white&gt;"..string.title(multimatches[3][2]))
end</script>
								<triggerType>0</triggerType>
								<conditonLineDelta>2</conditonLineDelta>
								<mStayOpen>0</mStayOpen>
								<mCommand></mCommand>
								<packageName></packageName>
								<mFgColor>#ff0000</mFgColor>
								<mBgColor>#ffff00</mBgColor>
								<mSoundFile></mSoundFile>
								<colorTriggerFgColor>#000000</colorTriggerFgColor>
								<colorTriggerBgColor>#000000</colorTriggerBgColor>
								<regexCodeList>
									<string>[FirstAid]: outc</string>
									<string>1</string>
									<string>^You remove 1 (\w+), bringing the total in the cache to (\d+)\.$</string>
								</regexCodeList>
								<regexCodePropertyList>
									<integer>2</integer>
									<integer>5</integer>
									<integer>1</integer>
								</regexCodePropertyList>
							</Trigger>
							<Trigger isActive="yes" isFolder="no" isTempTrigger="no" isMultiline="no" isPerlSlashGOption="no" isColorizerTrigger="no" isFilterTrigger="no" isSoundTrigger="no" isColorTrigger="no" isColorTriggerFg="no" isColorTriggerBg="no">
								<name>gold</name>
								<script>deleteLine()</script>
								<triggerType>0</triggerType>
								<conditonLineDelta>0</conditonLineDelta>
								<mStayOpen>0</mStayOpen>
								<mCommand></mCommand>
								<packageName></packageName>
								<mFgColor>#ff0000</mFgColor>
								<mBgColor>#ffff00</mBgColor>
								<mSoundFile></mSoundFile>
								<colorTriggerFgColor>#000000</colorTriggerFgColor>
								<colorTriggerBgColor>#000000</colorTriggerBgColor>
								<regexCodeList>
									<string>^You collect \d+ gold from the corpse\.$</string>
								</regexCodeList>
								<regexCodePropertyList>
									<integer>1</integer>
								</regexCodePropertyList>
							</Trigger>
							<Trigger isActive="yes" isFolder="no" isTempTrigger="no" isMultiline="no" isPerlSlashGOption="no" isColorizerTrigger="no" isFilterTrigger="no" isSoundTrigger="no" isColorTrigger="no" isColorTriggerFg="no" isColorTriggerBg="no">
								<name>stand</name>
								<script>if snd.toggles.bashing or snd.toggles.attacking then
 deleteLine()
end</script>
								<triggerType>0</triggerType>
								<conditonLineDelta>1</conditonLineDelta>
								<mStayOpen>0</mStayOpen>
								<mCommand></mCommand>
								<packageName></packageName>
								<mFgColor>#ff0000</mFgColor>
								<mBgColor>#ffff00</mBgColor>
								<mSoundFile></mSoundFile>
								<colorTriggerFgColor>#000000</colorTriggerFgColor>
								<colorTriggerBgColor>#000000</colorTriggerBgColor>
								<regexCodeList>
									<string>You are not fallen or kneeling.</string>
								</regexCodeList>
								<regexCodePropertyList>
									<integer>3</integer>
								</regexCodePropertyList>
							</Trigger>
							<Trigger isActive="yes" isFolder="no" isTempTrigger="no" isMultiline="no" isPerlSlashGOption="no" isColorizerTrigger="no" isFilterTrigger="no" isSoundTrigger="no" isColorTrigger="no" isColorTriggerFg="no" isColorTriggerBg="no">
								<name>bashing removing spam</name>
								<script>deleteLine()</script>
								<triggerType>0</triggerType>
								<conditonLineDelta>1</conditonLineDelta>
								<mStayOpen>0</mStayOpen>
								<mCommand></mCommand>
								<packageName></packageName>
								<mFgColor>#ff0000</mFgColor>
								<mBgColor>#ffff00</mBgColor>
								<mSoundFile></mSoundFile>
								<colorTriggerFgColor>#000000</colorTriggerFgColor>
								<colorTriggerBgColor>#000000</colorTriggerBgColor>
								<regexCodeList>
									<string>You empower your weapon with sacrifice.</string>
									<string>^As the corpse of .+ falls, your aura bestows redemption upon (the )?\w+\.$</string>
									<string>A rush of energy fills you as you feel ready to deliver a devastating blow upon your next target.</string>
								</regexCodeList>
								<regexCodePropertyList>
									<integer>3</integer>
									<integer>1</integer>
									<integer>3</integer>
								</regexCodePropertyList>
							</Trigger>
							<Trigger isActive="yes" isFolder="no" isTempTrigger="no" isMultiline="no" isPerlSlashGOption="no" isColorizerTrigger="yes" isFilterTrigger="no" isSoundTrigger="no" isColorTrigger="no" isColorTriggerFg="no" isColorTriggerBg="no">
								<name>spirit globe</name>
								<script>if snd.faction == "spirit" then
 snd.send("get globe")
end</script>
								<triggerType>0</triggerType>
								<conditonLineDelta>0</conditonLineDelta>
								<mStayOpen>0</mStayOpen>
								<mCommand></mCommand>
								<packageName></packageName>
								<mFgColor>#ff007f</mFgColor>
								<mBgColor>#000000</mBgColor>
								<mSoundFile></mSoundFile>
								<colorTriggerFgColor>#000000</colorTriggerFgColor>
								<colorTriggerBgColor>#000000</colorTriggerBgColor>
								<regexCodeList>
									<string>Pulsing faintly, a globe of glowing spirit lies here.</string>
								</regexCodeList>
								<regexCodePropertyList>
									<integer>0</integer>
								</regexCodePropertyList>
							</Trigger>
							<Trigger isActive="yes" isFolder="no" isTempTrigger="no" isMultiline="no" isPerlSlashGOption="no" isColorizerTrigger="yes" isFilterTrigger="no" isSoundTrigger="no" isColorTrigger="no" isColorTriggerFg="no" isColorTriggerBg="no">
								<name>shadow globe</name>
								<script>if snd.faction == "shadow" then
 snd.send("get globe")
end</script>
								<triggerType>0</triggerType>
								<conditonLineDelta>0</conditonLineDelta>
								<mStayOpen>0</mStayOpen>
								<mCommand></mCommand>
								<packageName></packageName>
								<mFgColor>#00007f</mFgColor>
								<mBgColor>#000000</mBgColor>
								<mSoundFile></mSoundFile>
								<colorTriggerFgColor>#000000</colorTriggerFgColor>
								<colorTriggerBgColor>#000000</colorTriggerBgColor>
								<regexCodeList>
									<string>A globe of gloaming shadow rests upon the ground here, glistening darkly.</string>
								</regexCodeList>
								<regexCodePropertyList>
									<integer>0</integer>
								</regexCodePropertyList>
							</Trigger>
							<Trigger isActive="yes" isFolder="no" isTempTrigger="no" isMultiline="no" isPerlSlashGOption="no" isColorizerTrigger="yes" isFilterTrigger="no" isSoundTrigger="no" isColorTrigger="no" isColorTriggerFg="no" isColorTriggerBg="no">
								<name>monolith sigil</name>
								<script></script>
								<triggerType>0</triggerType>
								<conditonLineDelta>0</conditonLineDelta>
								<mStayOpen>0</mStayOpen>
								<mCommand></mCommand>
								<packageName></packageName>
								<mFgColor>#ffaaff</mFgColor>
								<mBgColor>#000000</mBgColor>
								<mSoundFile></mSoundFile>
								<colorTriggerFgColor>#000000</colorTriggerFgColor>
								<colorTriggerBgColor>#000000</colorTriggerBgColor>
								<regexCodeList>
									<string>A sigil in the shape of a small, rectangular monolith is on the ground.</string>
									<string>There are \d+ monolith sigils here.</string>
								</regexCodeList>
								<regexCodePropertyList>
									<integer>0</integer>
									<integer>1</integer>
								</regexCodePropertyList>
							</Trigger>
							<Trigger isActive="yes" isFolder="no" isTempTrigger="no" isMultiline="no" isPerlSlashGOption="no" isColorizerTrigger="yes" isFilterTrigger="no" isSoundTrigger="no" isColorTrigger="no" isColorTriggerFg="no" isColorTriggerBg="no">
								<name>cube sigil</name>
								<script></script>
								<triggerType>0</triggerType>
								<conditonLineDelta>0</conditonLineDelta>
								<mStayOpen>0</mStayOpen>
								<mCommand></mCommand>
								<packageName></packageName>
								<mFgColor>#aa55ff</mFgColor>
								<mBgColor>#000000</mBgColor>
								<mSoundFile></mSoundFile>
								<colorTriggerFgColor>#000000</colorTriggerFgColor>
								<colorTriggerBgColor>#000000</colorTriggerBgColor>
								<regexCodeList>
									<string>Resting on the ground is a cube-shaped silver sigil.</string>
									<string>There are \d+ cube sigils here.</string>
								</regexCodeList>
								<regexCodePropertyList>
									<integer>0</integer>
									<integer>1</integer>
								</regexCodePropertyList>
							</Trigger>
							<Trigger isActive="yes" isFolder="no" isTempTrigger="no" isMultiline="no" isPerlSlashGOption="no" isColorizerTrigger="no" isFilterTrigger="no" isSoundTrigger="no" isColorTrigger="no" isColorTriggerFg="no" isColorTriggerBg="no">
								<name>sect accept</name>
								<script>snd.send("firstaid defence on")</script>
								<triggerType>0</triggerType>
								<conditonLineDelta>0</conditonLineDelta>
								<mStayOpen>0</mStayOpen>
								<mCommand></mCommand>
								<packageName></packageName>
								<mFgColor>#ff0000</mFgColor>
								<mBgColor>#ffff00</mBgColor>
								<mSoundFile></mSoundFile>
								<colorTriggerFgColor>#000000</colorTriggerFgColor>
								<colorTriggerBgColor>#000000</colorTriggerBgColor>
								<regexCodeList>
									<string>^(\w+) has accepted your challenge!$</string>
									<string>^You accept the challenge issued by (\w+)!$</string>
								</regexCodeList>
								<regexCodePropertyList>
									<integer>1</integer>
									<integer>1</integer>
								</regexCodePropertyList>
							</Trigger>
							<Trigger isActive="yes" isFolder="no" isTempTrigger="no" isMultiline="no" isPerlSlashGOption="no" isColorizerTrigger="no" isFilterTrigger="no" isSoundTrigger="no" isColorTrigger="no" isColorTriggerFg="no" isColorTriggerBg="no">
								<name>sleep</name>
								<script>snd.send("wake")</script>
								<triggerType>0</triggerType>
								<conditonLineDelta>0</conditonLineDelta>
								<mStayOpen>0</mStayOpen>
								<mCommand></mCommand>
								<packageName></packageName>
								<mFgColor>#ff0000</mFgColor>
								<mBgColor>#ffff00</mBgColor>
								<mSoundFile></mSoundFile>
								<colorTriggerFgColor>#000000</colorTriggerFgColor>
								<colorTriggerBgColor>#000000</colorTriggerBgColor>
								<regexCodeList>
									<string>Your exhausted mind can stay awake no longer, and you fall into a deep sleep.</string>
								</regexCodeList>
								<regexCodePropertyList>
									<integer>3</integer>
								</regexCodePropertyList>
							</Trigger>
						</TriggerGroup>
						<Trigger isActive="yes" isFolder="no" isTempTrigger="no" isMultiline="yes" isPerlSlashGOption="no" isColorizerTrigger="no" isFilterTrigger="no" isSoundTrigger="no" isColorTrigger="no" isColorTriggerFg="no" isColorTriggerBg="no">
							<name>1p combat messages</name>
							<script>exclude = {
"Doublestrike",
"Doublebash",
"Spinning",
"Pulverize",
}
snd.last_attack = "none"
snd.target_gone = false
if snd.toggles.atkecho and not table.contains(exclude, multimatches[1][3]) then
 deleteLine()
 snd.attack_hit(string.lower(multimatches[1][3]), multimatches[1][4])
end</script>
							<triggerType>0</triggerType>
							<conditonLineDelta>2</conditonLineDelta>
							<mStayOpen>99</mStayOpen>
							<mCommand></mCommand>
							<packageName></packageName>
							<mFgColor>#ff0000</mFgColor>
							<mBgColor>#ffff00</mBgColor>
							<mSoundFile></mSoundFile>
							<colorTriggerFgColor>#000000</colorTriggerFgColor>
							<colorTriggerBgColor>#000000</colorTriggerBgColor>
							<regexCodeList>
								<string>^You use (\w+) (.+) on (.+)\.$</string>
								<string>1</string>
								<string>^(.+)$</string>
							</regexCodeList>
							<regexCodePropertyList>
								<integer>1</integer>
								<integer>5</integer>
								<integer>1</integer>
							</regexCodePropertyList>
							<Trigger isActive="yes" isFolder="no" isTempTrigger="no" isMultiline="no" isPerlSlashGOption="no" isColorizerTrigger="no" isFilterTrigger="no" isSoundTrigger="no" isColorTrigger="no" isColorTriggerFg="no" isColorTriggerBg="no">
								<name>rebounded</name>
								<script>snd.used.rebounding = true
snd.rebounded = true</script>
								<triggerType>0</triggerType>
								<conditonLineDelta>0</conditonLineDelta>
								<mStayOpen>0</mStayOpen>
								<mCommand></mCommand>
								<packageName></packageName>
								<mFgColor>#ff0000</mFgColor>
								<mBgColor>#ffff00</mBgColor>
								<mSoundFile></mSoundFile>
								<colorTriggerFgColor>#000000</colorTriggerFgColor>
								<colorTriggerBgColor>#000000</colorTriggerBgColor>
								<regexCodeList>
									<string>^The attack rebounds away from (the )?\w+ aura!$</string>
									<string>The attack rebounds back onto you!</string>
								</regexCodeList>
								<regexCodePropertyList>
									<integer>1</integer>
									<integer>3</integer>
								</regexCodePropertyList>
							</Trigger>
							<Trigger isActive="yes" isFolder="no" isTempTrigger="no" isMultiline="no" isPerlSlashGOption="no" isColorizerTrigger="no" isFilterTrigger="no" isSoundTrigger="no" isColorTrigger="no" isColorTriggerFg="no" isColorTriggerBg="no">
								<name>end used</name>
								<script>setTriggerStayOpen("1p combat messages", 0)</script>
								<triggerType>0</triggerType>
								<conditonLineDelta>0</conditonLineDelta>
								<mStayOpen>0</mStayOpen>
								<mCommand></mCommand>
								<packageName></packageName>
								<mFgColor>#ff0000</mFgColor>
								<mBgColor>#ffff00</mBgColor>
								<mSoundFile></mSoundFile>
								<colorTriggerFgColor>#000000</colorTriggerFgColor>
								<colorTriggerBgColor>#000000</colorTriggerBgColor>
								<regexCodeList>
									<string>return isPrompt()</string>
								</regexCodeList>
								<regexCodePropertyList>
									<integer>4</integer>
								</regexCodePropertyList>
							</Trigger>
						</Trigger>
						<Trigger isActive="yes" isFolder="no" isTempTrigger="no" isMultiline="no" isPerlSlashGOption="no" isColorizerTrigger="no" isFilterTrigger="no" isSoundTrigger="no" isColorTrigger="no" isColorTriggerFg="no" isColorTriggerBg="no">
							<name>1p untargeted combat message</name>
							<script></script>
							<triggerType>0</triggerType>
							<conditonLineDelta>0</conditonLineDelta>
							<mStayOpen>0</mStayOpen>
							<mCommand></mCommand>
							<packageName></packageName>
							<mFgColor>#ff0000</mFgColor>
							<mBgColor>#ffff00</mBgColor>
							<mSoundFile></mSoundFile>
							<colorTriggerFgColor>#000000</colorTriggerFgColor>
							<colorTriggerBgColor>#000000</colorTriggerBgColor>
							<regexCodeList>
								<string>^You use (\w+) ([^' on ']+)\.$</string>
							</regexCodeList>
							<regexCodePropertyList>
								<integer>1</integer>
							</regexCodePropertyList>
						</Trigger>
					</TriggerGroup>
					<TriggerGroup isActive="yes" isFolder="yes" isTempTrigger="no" isMultiline="no" isPerlSlashGOption="no" isColorizerTrigger="no" isFilterTrigger="no" isSoundTrigger="no" isColorTrigger="no" isColorTriggerFg="no" isColorTriggerBg="no">
						<name>Misc</name>
						<script></script>
						<triggerType>0</triggerType>
						<conditonLineDelta>0</conditonLineDelta>
						<mStayOpen>0</mStayOpen>
						<mCommand></mCommand>
						<packageName></packageName>
						<mFgColor>#ff0000</mFgColor>
						<mBgColor>#ffff00</mBgColor>
						<mSoundFile></mSoundFile>
						<colorTriggerFgColor>#000000</colorTriggerFgColor>
						<colorTriggerBgColor>#000000</colorTriggerBgColor>
						<regexCodeList />
						<regexCodePropertyList />
						<Trigger isActive="yes" isFolder="no" isTempTrigger="no" isMultiline="no" isPerlSlashGOption="no" isColorizerTrigger="no" isFilterTrigger="no" isSoundTrigger="no" isColorTrigger="no" isColorTriggerFg="no" isColorTriggerBg="no">
							<name>lust tarot</name>
							<script>if snd.faction == "spirit" then
 snd.send("qeb reject "..matches[2])
end</script>
							<triggerType>0</triggerType>
							<conditonLineDelta>0</conditonLineDelta>
							<mStayOpen>0</mStayOpen>
							<mCommand></mCommand>
							<packageName></packageName>
							<mFgColor>#ff0000</mFgColor>
							<mBgColor>#ffff00</mBgColor>
							<mSoundFile></mSoundFile>
							<colorTriggerFgColor>#000000</colorTriggerFgColor>
							<colorTriggerBgColor>#000000</colorTriggerBgColor>
							<regexCodeList>
								<string>^(.*) quickly flings a tarot card at you, and you feel unreasonable lust for (the )?\w+\.$</string>
							</regexCodeList>
							<regexCodePropertyList>
								<integer>1</integer>
							</regexCodePropertyList>
						</Trigger>
						<Trigger isActive="yes" isFolder="no" isTempTrigger="no" isMultiline="no" isPerlSlashGOption="no" isColorizerTrigger="no" isFilterTrigger="no" isSoundTrigger="no" isColorTrigger="no" isColorTriggerFg="no" isColorTriggerBg="no">
							<name>wrong weapons</name>
							<script>expandAlias("wpvp")</script>
							<triggerType>0</triggerType>
							<conditonLineDelta>0</conditonLineDelta>
							<mStayOpen>0</mStayOpen>
							<mCommand></mCommand>
							<packageName></packageName>
							<mFgColor>#ff0000</mFgColor>
							<mBgColor>#ffff00</mBgColor>
							<mSoundFile></mSoundFile>
							<colorTriggerFgColor>#000000</colorTriggerFgColor>
							<colorTriggerBgColor>#000000</colorTriggerBgColor>
							<regexCodeList>
								<string>You can only wield weapons for doublestrike.</string>
								<string>You must be wielding two weapons to use doublestrike.</string>
								<string>You must be wielding two weapons to use razestrike.</string>
							</regexCodeList>
							<regexCodePropertyList>
								<integer>3</integer>
								<integer>3</integer>
								<integer>3</integer>
							</regexCodePropertyList>
						</Trigger>
						<Trigger isActive="yes" isFolder="no" isTempTrigger="no" isMultiline="no" isPerlSlashGOption="no" isColorizerTrigger="no" isFilterTrigger="no" isSoundTrigger="no" isColorTrigger="no" isColorTriggerFg="no" isColorTriggerBg="no">
							<name>death</name>
							<script>if matches[2] == snd.target then
 snd.toggles.attacking = false
end
</script>
							<triggerType>0</triggerType>
							<conditonLineDelta>0</conditonLineDelta>
							<mStayOpen>0</mStayOpen>
							<mCommand></mCommand>
							<packageName></packageName>
							<mFgColor>#ff0000</mFgColor>
							<mBgColor>#ffff00</mBgColor>
							<mSoundFile></mSoundFile>
							<colorTriggerFgColor>#000000</colorTriggerFgColor>
							<colorTriggerBgColor>#000000</colorTriggerBgColor>
							<regexCodeList>
								<string>^(\w+) has been slain by (\w+)\.$</string>
								<string>^(\w+) walks in divine grace\. You may not harm (the )?\w+\.$</string>
							</regexCodeList>
							<regexCodePropertyList>
								<integer>1</integer>
								<integer>1</integer>
							</regexCodePropertyList>
						</Trigger>
						<Trigger isActive="yes" isFolder="no" isTempTrigger="no" isMultiline="no" isPerlSlashGOption="no" isColorizerTrigger="no" isFilterTrigger="no" isSoundTrigger="no" isColorTrigger="no" isColorTriggerFg="no" isColorTriggerBg="no">
							<name>stop attacking</name>
							<script>snd.toggles.attacking = false</script>
							<triggerType>0</triggerType>
							<conditonLineDelta>0</conditonLineDelta>
							<mStayOpen>0</mStayOpen>
							<mCommand></mCommand>
							<packageName></packageName>
							<mFgColor>#ff0000</mFgColor>
							<mBgColor>#ffff00</mBgColor>
							<mSoundFile></mSoundFile>
							<colorTriggerFgColor>#000000</colorTriggerFgColor>
							<colorTriggerBgColor>#000000</colorTriggerBgColor>
							<regexCodeList>
								<string>Vibrant essence streams forth from the floor, signaling the end of combat.</string>
								<string>You currently walk in divine grace and may neither be harmed nor harm another. To leave this state of protection, you may REJECT GRACE.</string>
							</regexCodeList>
							<regexCodePropertyList>
								<integer>3</integer>
								<integer>3</integer>
							</regexCodePropertyList>
						</Trigger>
						<Trigger isActive="yes" isFolder="no" isTempTrigger="no" isMultiline="no" isPerlSlashGOption="no" isColorizerTrigger="no" isFilterTrigger="no" isSoundTrigger="no" isColorTrigger="no" isColorTriggerFg="no" isColorTriggerBg="no">
							<name>starburst</name>
							<script>if matches[2] == snd.target then
 expandAlias("t "..snd.target)
end</script>
							<triggerType>0</triggerType>
							<conditonLineDelta>0</conditonLineDelta>
							<mStayOpen>0</mStayOpen>
							<mCommand></mCommand>
							<packageName></packageName>
							<mFgColor>#ff0000</mFgColor>
							<mBgColor>#ffff00</mBgColor>
							<mSoundFile></mSoundFile>
							<colorTriggerFgColor>#000000</colorTriggerFgColor>
							<colorTriggerBgColor>#000000</colorTriggerBgColor>
							<regexCodeList>
								<string>^(\w+) has burst back to life after falling to (the )?\w+\.$</string>
								<string>^(\w+) uses Deathlore Substitute\.$</string>
								<string>^(\w+) uses Necromancy Soulcage\.$</string>
								<string>^\w+ uses? Spirituality Absolve \(soulcage\) on (\w+)\.$</string>
							</regexCodeList>
							<regexCodePropertyList>
								<integer>1</integer>
								<integer>1</integer>
								<integer>1</integer>
								<integer>1</integer>
							</regexCodePropertyList>
						</Trigger>
						<Trigger isActive="yes" isFolder="no" isTempTrigger="no" isMultiline="yes" isPerlSlashGOption="no" isColorizerTrigger="no" isFilterTrigger="no" isSoundTrigger="no" isColorTrigger="yes" isColorTriggerFg="no" isColorTriggerBg="no">
							<name>got hit</name>
							<script>if snd.toggles.attacking then
  skill = multimatches[2][3]
  found_set = "none"
  for set in pairs(snd.cureset_skills) do
    if table.contains(snd.cureset_skills[set], skill) then
      found_set = set
    end
  end
  if snd.class_hitting == "none" then
    --haven't seen anyone hit yet
    if found_set == "none" then
      --skill isn't in class list
      snd.send("cureset switch general")
      --non-specific cureset
    elseif snd.cureset ~= found_set then
      snd.send("cureset switch " .. found_set)
      --swap to class cureset
      snd.class_hitting = found_set
      --note what class is hitting
    end
  elseif snd.class_hitting ~= found_set then
    --this is a second class hitting
    snd.class_hitting = found_set
    snd.send("cureset switch group")
  end
  snd.person_hitting = multimatches[2][2]
end

if not table.contains(snd.people_hitting_me, multimatches[2][2]) then
  table.insert(snd.people_hitting_me, multimatches[2][2])
  tempTimer(4, [[table.remove(snd.people_hitting_me, 1)]])
end</script>
							<triggerType>0</triggerType>
							<conditonLineDelta>0</conditonLineDelta>
							<mStayOpen>0</mStayOpen>
							<mCommand></mCommand>
							<packageName></packageName>
							<mFgColor>#ff0000</mFgColor>
							<mBgColor>#ffff00</mBgColor>
							<mSoundFile></mSoundFile>
							<colorTriggerFgColor>#ff0000</colorTriggerFgColor>
							<colorTriggerBgColor>#000000</colorTriggerBgColor>
							<regexCodeList>
								<string>ANSI_COLORS_F{009}_B{000}</string>
								<string>^(.+) uses (\w+) .+ on you\.$</string>
							</regexCodeList>
							<regexCodePropertyList>
								<integer>6</integer>
								<integer>1</integer>
							</regexCodePropertyList>
						</Trigger>
						<Trigger isActive="yes" isFolder="no" isTempTrigger="no" isMultiline="no" isPerlSlashGOption="no" isColorizerTrigger="no" isFilterTrigger="no" isSoundTrigger="no" isColorTrigger="no" isColorTriggerFg="no" isColorTriggerBg="no">
							<name>cureset switch</name>
							<script>snd.cureset = matches[2]</script>
							<triggerType>0</triggerType>
							<conditonLineDelta>0</conditonLineDelta>
							<mStayOpen>0</mStayOpen>
							<mCommand></mCommand>
							<packageName></packageName>
							<mFgColor>#ff0000</mFgColor>
							<mBgColor>#ffff00</mBgColor>
							<mSoundFile></mSoundFile>
							<colorTriggerFgColor>#000000</colorTriggerFgColor>
							<colorTriggerBgColor>#000000</colorTriggerBgColor>
							<regexCodeList>
								<string>^You will now use the (\w+) firstaid priority set\.$</string>
							</regexCodeList>
							<regexCodePropertyList>
								<integer>1</integer>
							</regexCodePropertyList>
						</Trigger>
						<Trigger isActive="yes" isFolder="no" isTempTrigger="no" isMultiline="no" isPerlSlashGOption="no" isColorizerTrigger="no" isFilterTrigger="no" isSoundTrigger="no" isColorTrigger="no" isColorTriggerFg="no" isColorTriggerBg="no">
							<name>sometimes un-spam</name>
							<script>if snd.toggles.attacking then
 deleteLine()
end</script>
							<triggerType>0</triggerType>
							<conditonLineDelta>0</conditonLineDelta>
							<mStayOpen>0</mStayOpen>
							<mCommand></mCommand>
							<packageName></packageName>
							<mFgColor>#ff0000</mFgColor>
							<mBgColor>#ffff00</mBgColor>
							<mSoundFile></mSoundFile>
							<colorTriggerFgColor>#000000</colorTriggerFgColor>
							<colorTriggerBgColor>#000000</colorTriggerBgColor>
							<regexCodeList>
								<string>^You will now target the .+ of your opponent with your (the )?\w+ arm\.$</string>
								<string>^You will now target attacks with your (the )?\w+ arm wherever you see an opening\.$</string>
								<string>You see no 'body' to take.</string>
								<string>You see no 'husk' to take.</string>
								<string>You have cleared your axes queue.</string>
								<string>You are not wielding a handaxe in either of your hands.</string>
								<string>You have cleared your eqbal queue.</string>
							</regexCodeList>
							<regexCodePropertyList>
								<integer>1</integer>
								<integer>1</integer>
								<integer>3</integer>
								<integer>3</integer>
								<integer>3</integer>
								<integer>3</integer>
								<integer>3</integer>
							</regexCodePropertyList>
						</Trigger>
						<Trigger isActive="yes" isFolder="no" isTempTrigger="no" isMultiline="no" isPerlSlashGOption="no" isColorizerTrigger="no" isFilterTrigger="no" isSoundTrigger="no" isColorTrigger="no" isColorTriggerFg="no" isColorTriggerBg="no">
							<name>3p lust</name>
							<script>snd.set_faction()
if snd.faction == "spirit" and table.contains(snd.allies, matches[2]) then
 snd.send("qeb drop monolith")
end</script>
							<triggerType>0</triggerType>
							<conditonLineDelta>0</conditonLineDelta>
							<mStayOpen>0</mStayOpen>
							<mCommand></mCommand>
							<packageName></packageName>
							<mFgColor>#ff0000</mFgColor>
							<mBgColor>#ffff00</mBgColor>
							<mSoundFile></mSoundFile>
							<colorTriggerFgColor>#000000</colorTriggerFgColor>
							<colorTriggerBgColor>#000000</colorTriggerBgColor>
							<regexCodeList>
								<string>^\w+ quickly flings a tarot card at (\w+), whose eyes light up\.$</string>
							</regexCodeList>
							<regexCodePropertyList>
								<integer>1</integer>
							</regexCodePropertyList>
						</Trigger>
						<Trigger isActive="yes" isFolder="no" isTempTrigger="no" isMultiline="no" isPerlSlashGOption="no" isColorizerTrigger="no" isFilterTrigger="no" isSoundTrigger="no" isColorTrigger="no" isColorTriggerFg="no" isColorTriggerBg="no">
							<name>brazier</name>
							<script>snd.set_faction()
if table.contains(snd.allies, matches[2]) then
 snd.send("qeb touch brazier "..matches[2])
end</script>
							<triggerType>0</triggerType>
							<conditonLineDelta>0</conditonLineDelta>
							<mStayOpen>0</mStayOpen>
							<mCommand></mCommand>
							<packageName></packageName>
							<mFgColor>#ff0000</mFgColor>
							<mBgColor>#ffff00</mBgColor>
							<mSoundFile></mSoundFile>
							<colorTriggerFgColor>#000000</colorTriggerFgColor>
							<colorTriggerBgColor>#000000</colorTriggerBgColor>
							<regexCodeList>
								<string>^(\w+) is violently ripped from your location by a magical summoning\.$</string>
							</regexCodeList>
							<regexCodePropertyList>
								<integer>1</integer>
							</regexCodePropertyList>
						</Trigger>
						<Trigger isActive="yes" isFolder="no" isTempTrigger="no" isMultiline="no" isPerlSlashGOption="no" isColorizerTrigger="no" isFilterTrigger="no" isSoundTrigger="no" isColorTrigger="no" isColorTriggerFg="no" isColorTriggerBg="no">
							<name>bloodburst</name>
							<script>snd.send("clot 20")</script>
							<triggerType>0</triggerType>
							<conditonLineDelta>0</conditonLineDelta>
							<mStayOpen>0</mStayOpen>
							<mCommand></mCommand>
							<packageName></packageName>
							<mFgColor>#ff0000</mFgColor>
							<mBgColor>#ffff00</mBgColor>
							<mSoundFile></mSoundFile>
							<colorTriggerFgColor>#000000</colorTriggerFgColor>
							<colorTriggerBgColor>#000000</colorTriggerBgColor>
							<regexCodeList>
								<string>^As (the )?\w+ buries .+ in your guts, blood bursts from the open wound in a gory fountain\.$</string>
							</regexCodeList>
							<regexCodePropertyList>
								<integer>1</integer>
							</regexCodePropertyList>
						</Trigger>
						<TriggerGroup isActive="yes" isFolder="yes" isTempTrigger="no" isMultiline="no" isPerlSlashGOption="no" isColorizerTrigger="no" isFilterTrigger="no" isSoundTrigger="no" isColorTrigger="no" isColorTriggerFg="no" isColorTriggerBg="no">
							<name>Wayfarer Random Items</name>
							<script></script>
							<triggerType>0</triggerType>
							<conditonLineDelta>0</conditonLineDelta>
							<mStayOpen>0</mStayOpen>
							<mCommand></mCommand>
							<packageName></packageName>
							<mFgColor>#ff0000</mFgColor>
							<mBgColor>#ffff00</mBgColor>
							<mSoundFile></mSoundFile>
							<colorTriggerFgColor>#000000</colorTriggerFgColor>
							<colorTriggerBgColor>#000000</colorTriggerBgColor>
							<regexCodeList />
							<regexCodePropertyList />
							<Trigger isActive="yes" isFolder="no" isTempTrigger="no" isMultiline="no" isPerlSlashGOption="no" isColorizerTrigger="no" isFilterTrigger="no" isSoundTrigger="no" isColorTrigger="no" isColorTriggerFg="no" isColorTriggerBg="no">
								<name>Highjumped</name>
								<script>snd.highjumped = true
</script>
								<triggerType>0</triggerType>
								<conditonLineDelta>0</conditonLineDelta>
								<mStayOpen>0</mStayOpen>
								<mCommand></mCommand>
								<packageName></packageName>
								<mFgColor>#ff0000</mFgColor>
								<mBgColor>#ffff00</mBgColor>
								<mSoundFile></mSoundFile>
								<colorTriggerFgColor>#000000</colorTriggerFgColor>
								<colorTriggerBgColor>#000000</colorTriggerBgColor>
								<regexCodeList>
									<string>^With a few bounding leaps, you use the terrain to your advantage as you launch yourself towards the sky.$</string>
								</regexCodeList>
								<regexCodePropertyList>
									<integer>1</integer>
								</regexCodePropertyList>
							</Trigger>
							<Trigger isActive="yes" isFolder="no" isTempTrigger="no" isMultiline="no" isPerlSlashGOption="no" isColorizerTrigger="no" isFilterTrigger="no" isSoundTrigger="no" isColorTrigger="no" isColorTriggerFg="no" isColorTriggerBg="no">
								<name>Highjump - landed</name>
								<script>snd.highjumped = false

</script>
								<triggerType>0</triggerType>
								<conditonLineDelta>0</conditonLineDelta>
								<mStayOpen>0</mStayOpen>
								<mCommand></mCommand>
								<packageName></packageName>
								<mFgColor>#ff0000</mFgColor>
								<mBgColor>#ffff00</mBgColor>
								<mSoundFile></mSoundFile>
								<colorTriggerFgColor>#000000</colorTriggerFgColor>
								<colorTriggerBgColor>#000000</colorTriggerBgColor>
								<regexCodeList>
									<string>^You fall back down to earth, landing upon the ground with a rumbling thud.$</string>
									<string>^Spying (\w+) below, you drop down from your perch, sweeping your axes to deal (the )?\w+ a rending blow.$</string>
									<string>^You begin to descend, the wind whistling past you as the earth draws ever closer. You land easily, back on the ground again.$</string>
								</regexCodeList>
								<regexCodePropertyList>
									<integer>1</integer>
									<integer>1</integer>
									<integer>1</integer>
								</regexCodePropertyList>
							</Trigger>
							<Trigger isActive="yes" isFolder="no" isTempTrigger="no" isMultiline="no" isPerlSlashGOption="no" isColorizerTrigger="no" isFilterTrigger="no" isSoundTrigger="no" isColorTrigger="no" isColorTriggerFg="no" isColorTriggerBg="no">
								<name>Enrage on</name>
								<script>snd.enraged = true
</script>
								<triggerType>0</triggerType>
								<conditonLineDelta>0</conditonLineDelta>
								<mStayOpen>0</mStayOpen>
								<mCommand></mCommand>
								<packageName></packageName>
								<mFgColor>#ff0000</mFgColor>
								<mBgColor>#ffff00</mBgColor>
								<mSoundFile></mSoundFile>
								<colorTriggerFgColor>#000000</colorTriggerFgColor>
								<colorTriggerBgColor>#000000</colorTriggerBgColor>
								<regexCodeList>
									<string>^You have gained the enraged defence.$</string>
								</regexCodeList>
								<regexCodePropertyList>
									<integer>1</integer>
								</regexCodePropertyList>
							</Trigger>
							<Trigger isActive="yes" isFolder="no" isTempTrigger="no" isMultiline="no" isPerlSlashGOption="no" isColorizerTrigger="no" isFilterTrigger="no" isSoundTrigger="no" isColorTrigger="no" isColorTriggerFg="no" isColorTriggerBg="no">
								<name>Enrage off</name>
								<script>snd.enraged = false
</script>
								<triggerType>0</triggerType>
								<conditonLineDelta>0</conditonLineDelta>
								<mStayOpen>0</mStayOpen>
								<mCommand></mCommand>
								<packageName></packageName>
								<mFgColor>#ff0000</mFgColor>
								<mBgColor>#ffff00</mBgColor>
								<mSoundFile></mSoundFile>
								<colorTriggerFgColor>#000000</colorTriggerFgColor>
								<colorTriggerBgColor>#000000</colorTriggerBgColor>
								<regexCodeList>
									<string>^Your enraged defence has been stripped.$</string>
								</regexCodeList>
								<regexCodePropertyList>
									<integer>1</integer>
								</regexCodePropertyList>
							</Trigger>
						</TriggerGroup>
						<TriggerGroup isActive="yes" isFolder="yes" isTempTrigger="no" isMultiline="no" isPerlSlashGOption="no" isColorizerTrigger="no" isFilterTrigger="no" isSoundTrigger="no" isColorTrigger="no" isColorTriggerFg="no" isColorTriggerBg="no">
							<name>Monk</name>
							<script></script>
							<triggerType>0</triggerType>
							<conditonLineDelta>0</conditonLineDelta>
							<mStayOpen>0</mStayOpen>
							<mCommand></mCommand>
							<packageName></packageName>
							<mFgColor>#ff0000</mFgColor>
							<mBgColor>#ffff00</mBgColor>
							<mSoundFile></mSoundFile>
							<colorTriggerFgColor>#000000</colorTriggerFgColor>
							<colorTriggerBgColor>#000000</colorTriggerBgColor>
							<regexCodeList />
							<regexCodePropertyList />
							<Trigger isActive="yes" isFolder="no" isTempTrigger="no" isMultiline="no" isPerlSlashGOption="no" isColorizerTrigger="no" isFilterTrigger="no" isSoundTrigger="no" isColorTrigger="no" isColorTriggerFg="no" isColorTriggerBg="no">
								<name>Target Used Numbness</name>
								<script>if matches[2] == snd.target then
	snd.target_numbed = true
	snd.send("wt "..snd.target.." used Numbness!")
end</script>
								<triggerType>0</triggerType>
								<conditonLineDelta>0</conditonLineDelta>
								<mStayOpen>0</mStayOpen>
								<mCommand></mCommand>
								<packageName></packageName>
								<mFgColor>#ff0000</mFgColor>
								<mBgColor>#ffff00</mBgColor>
								<mSoundFile></mSoundFile>
								<colorTriggerFgColor>#000000</colorTriggerFgColor>
								<colorTriggerBgColor>#000000</colorTriggerBgColor>
								<regexCodeList>
									<string>^(\w+) grits (the )?\w+ teeth as new-willed determination flashes through (the )?\w+ eyes.$</string>
								</regexCodeList>
								<regexCodePropertyList>
									<integer>1</integer>
								</regexCodePropertyList>
							</Trigger>
							<Trigger isActive="yes" isFolder="no" isTempTrigger="no" isMultiline="no" isPerlSlashGOption="no" isColorizerTrigger="no" isFilterTrigger="no" isSoundTrigger="no" isColorTrigger="no" isColorTriggerFg="no" isColorTriggerBg="no">
								<name>Target numbness gone</name>
								<script>if matches[2] == snd.target then
	snd.target_numbed = false
	snd.send("wt "..snd.target.."'s numbness ended!")
end</script>
								<triggerType>0</triggerType>
								<conditonLineDelta>0</conditonLineDelta>
								<mStayOpen>0</mStayOpen>
								<mCommand></mCommand>
								<packageName></packageName>
								<mFgColor>#ff0000</mFgColor>
								<mBgColor>#ffff00</mBgColor>
								<mSoundFile></mSoundFile>
								<colorTriggerFgColor>#000000</colorTriggerFgColor>
								<colorTriggerBgColor>#000000</colorTriggerBgColor>
								<regexCodeList>
									<string>^(\w+) cries out in agony as (the )?\w+ body feels (the )?\w+ wounds once more.</string>
								</regexCodeList>
								<regexCodePropertyList>
									<integer>1</integer>
								</regexCodePropertyList>
							</Trigger>
						</TriggerGroup>
						<TriggerGroup isActive="yes" isFolder="yes" isTempTrigger="no" isMultiline="no" isPerlSlashGOption="no" isColorizerTrigger="no" isFilterTrigger="no" isSoundTrigger="no" isColorTrigger="no" isColorTriggerFg="no" isColorTriggerBg="no">
							<name>Shaman</name>
							<script></script>
							<triggerType>0</triggerType>
							<conditonLineDelta>0</conditonLineDelta>
							<mStayOpen>0</mStayOpen>
							<mCommand></mCommand>
							<packageName></packageName>
							<mFgColor>#ff0000</mFgColor>
							<mBgColor>#ffff00</mBgColor>
							<mSoundFile></mSoundFile>
							<colorTriggerFgColor>#000000</colorTriggerFgColor>
							<colorTriggerBgColor>#000000</colorTriggerBgColor>
							<regexCodeList />
							<regexCodePropertyList />
							<Trigger isActive="no" isFolder="no" isTempTrigger="no" isMultiline="no" isPerlSlashGOption="no" isColorizerTrigger="no" isFilterTrigger="no" isSoundTrigger="no" isColorTrigger="no" isColorTriggerFg="no" isColorTriggerBg="no">
								<name>Natrualtide defense</name>
								<script>--needs a variable to track what you have stored</script>
								<triggerType>0</triggerType>
								<conditonLineDelta>0</conditonLineDelta>
								<mStayOpen>0</mStayOpen>
								<mCommand></mCommand>
								<packageName></packageName>
								<mFgColor>#ff0000</mFgColor>
								<mBgColor>#ffff00</mBgColor>
								<mSoundFile></mSoundFile>
								<colorTriggerFgColor>#000000</colorTriggerFgColor>
								<colorTriggerBgColor>#000000</colorTriggerBgColor>
								<regexCodeList>
									<string>You still your thoughts and begin to gather and weave natural energy, preparing for the feat of ----&gt;stuff goes here</string>
								</regexCodeList>
								<regexCodePropertyList>
									<integer>3</integer>
								</regexCodePropertyList>
							</Trigger>
						</TriggerGroup>
						<TriggerGroup isActive="yes" isFolder="yes" isTempTrigger="no" isMultiline="no" isPerlSlashGOption="no" isColorizerTrigger="no" isFilterTrigger="no" isSoundTrigger="no" isColorTrigger="no" isColorTriggerFg="no" isColorTriggerBg="no">
							<name>Carnifex</name>
							<script></script>
							<triggerType>0</triggerType>
							<conditonLineDelta>0</conditonLineDelta>
							<mStayOpen>0</mStayOpen>
							<mCommand></mCommand>
							<packageName></packageName>
							<mFgColor>#ff0000</mFgColor>
							<mBgColor>#ffff00</mBgColor>
							<mSoundFile></mSoundFile>
							<colorTriggerFgColor>#000000</colorTriggerFgColor>
							<colorTriggerBgColor>#000000</colorTriggerBgColor>
							<regexCodeList />
							<regexCodePropertyList />
							<Trigger isActive="no" isFolder="no" isTempTrigger="no" isMultiline="no" isPerlSlashGOption="no" isColorizerTrigger="no" isFilterTrigger="no" isSoundTrigger="no" isColorTrigger="no" isColorTriggerFg="no" isColorTriggerBg="no">
								<name>Hounds missing</name>
								<script>--If you want to track hounds/they get lost, you can use something with this.</script>
								<triggerType>0</triggerType>
								<conditonLineDelta>0</conditonLineDelta>
								<mStayOpen>0</mStayOpen>
								<mCommand></mCommand>
								<packageName></packageName>
								<mFgColor>#ff0000</mFgColor>
								<mBgColor>#ffff00</mBgColor>
								<mSoundFile></mSoundFile>
								<colorTriggerFgColor>#000000</colorTriggerFgColor>
								<colorTriggerBgColor>#000000</colorTriggerBgColor>
								<regexCodeList>
									<string>Your hound is not in the room with you.</string>
								</regexCodeList>
								<regexCodePropertyList>
									<integer>3</integer>
								</regexCodePropertyList>
							</Trigger>
						</TriggerGroup>
						<TriggerGroup isActive="yes" isFolder="yes" isTempTrigger="no" isMultiline="no" isPerlSlashGOption="no" isColorizerTrigger="no" isFilterTrigger="no" isSoundTrigger="no" isColorTrigger="no" isColorTriggerFg="no" isColorTriggerBg="no">
							<name>Reflections</name>
							<script></script>
							<triggerType>0</triggerType>
							<conditonLineDelta>0</conditonLineDelta>
							<mStayOpen>0</mStayOpen>
							<mCommand></mCommand>
							<packageName></packageName>
							<mFgColor>#ff0000</mFgColor>
							<mBgColor>#ffff00</mBgColor>
							<mSoundFile></mSoundFile>
							<colorTriggerFgColor>#000000</colorTriggerFgColor>
							<colorTriggerBgColor>#000000</colorTriggerBgColor>
							<regexCodeList />
							<regexCodePropertyList />
							<Trigger isActive="yes" isFolder="no" isTempTrigger="no" isMultiline="no" isPerlSlashGOption="no" isColorizerTrigger="no" isFilterTrigger="no" isSoundTrigger="no" isColorTrigger="no" isColorTriggerFg="no" isColorTriggerBg="no">
								<name>Reflection Used</name>
								<script>snd.reflection_charge = snd.reflection_charge-1</script>
								<triggerType>0</triggerType>
								<conditonLineDelta>0</conditonLineDelta>
								<mStayOpen>0</mStayOpen>
								<mCommand></mCommand>
								<packageName></packageName>
								<mFgColor>#ff0000</mFgColor>
								<mBgColor>#ffff00</mBgColor>
								<mSoundFile></mSoundFile>
								<colorTriggerFgColor>#000000</colorTriggerFgColor>
								<colorTriggerBgColor>#000000</colorTriggerBgColor>
								<regexCodeList>
									<string>^You use (Arcanism|Sorcery) Reflection.$</string>
								</regexCodeList>
								<regexCodePropertyList>
									<integer>1</integer>
								</regexCodePropertyList>
							</Trigger>
							<Trigger isActive="yes" isFolder="no" isTempTrigger="no" isMultiline="no" isPerlSlashGOption="no" isColorizerTrigger="no" isFilterTrigger="no" isSoundTrigger="no" isColorTrigger="no" isColorTriggerFg="no" isColorTriggerBg="no">
								<name>Reflection Regained</name>
								<script>snd.reflection_charge = snd.reflection_charge+1</script>
								<triggerType>0</triggerType>
								<conditonLineDelta>0</conditonLineDelta>
								<mStayOpen>0</mStayOpen>
								<mCommand></mCommand>
								<packageName></packageName>
								<mFgColor>#ff0000</mFgColor>
								<mBgColor>#ffff00</mBgColor>
								<mSoundFile></mSoundFile>
								<colorTriggerFgColor>#000000</colorTriggerFgColor>
								<colorTriggerBgColor>#000000</colorTriggerBgColor>
								<regexCodeList>
									<string>^You feel a tingle as you are able to cast another reflection.$</string>
								</regexCodeList>
								<regexCodePropertyList>
									<integer>1</integer>
								</regexCodePropertyList>
							</Trigger>
							<Trigger isActive="yes" isFolder="no" isTempTrigger="no" isMultiline="no" isPerlSlashGOption="no" isColorizerTrigger="no" isFilterTrigger="no" isSoundTrigger="no" isColorTrigger="no" isColorTriggerFg="no" isColorTriggerBg="no">
								<name>No reflections left</name>
								<script>snd.reflection_charge = 0</script>
								<triggerType>0</triggerType>
								<conditonLineDelta>0</conditonLineDelta>
								<mStayOpen>0</mStayOpen>
								<mCommand></mCommand>
								<packageName></packageName>
								<mFgColor>#ff0000</mFgColor>
								<mBgColor>#ffff00</mBgColor>
								<mSoundFile></mSoundFile>
								<colorTriggerFgColor>#000000</colorTriggerFgColor>
								<colorTriggerBgColor>#000000</colorTriggerBgColor>
								<regexCodeList>
									<string>^You cannot summon forth another reflection so soon.$</string>
								</regexCodeList>
								<regexCodePropertyList>
									<integer>1</integer>
								</regexCodePropertyList>
							</Trigger>
							<Trigger isActive="yes" isFolder="no" isTempTrigger="no" isMultiline="no" isPerlSlashGOption="no" isColorizerTrigger="no" isFilterTrigger="no" isSoundTrigger="no" isColorTrigger="no" isColorTriggerFg="no" isColorTriggerBg="no">
								<name>All reflections regained</name>
								<script>snd.reflection_charge = 3</script>
								<triggerType>0</triggerType>
								<conditonLineDelta>0</conditonLineDelta>
								<mStayOpen>0</mStayOpen>
								<mCommand></mCommand>
								<packageName></packageName>
								<mFgColor>#ff0000</mFgColor>
								<mBgColor>#ffff00</mBgColor>
								<mSoundFile></mSoundFile>
								<colorTriggerFgColor>#000000</colorTriggerFgColor>
								<colorTriggerBgColor>#000000</colorTriggerBgColor>
								<regexCodeList>
									<string>^You feel recharged as you recover your ability to cast reflections.$</string>
								</regexCodeList>
								<regexCodePropertyList>
									<integer>1</integer>
								</regexCodePropertyList>
							</Trigger>
						</TriggerGroup>
					</TriggerGroup>
				</TriggerGroup>
				<TriggerGroup isActive="yes" isFolder="yes" isTempTrigger="no" isMultiline="no" isPerlSlashGOption="no" isColorizerTrigger="no" isFilterTrigger="no" isSoundTrigger="no" isColorTrigger="no" isColorTriggerFg="no" isColorTriggerBg="no">
					<name>Ylem</name>
					<script></script>
					<triggerType>0</triggerType>
					<conditonLineDelta>0</conditonLineDelta>
					<mStayOpen>0</mStayOpen>
					<mCommand></mCommand>
					<packageName></packageName>
					<mFgColor>#ff0000</mFgColor>
					<mBgColor>#ffff00</mBgColor>
					<mSoundFile></mSoundFile>
					<colorTriggerFgColor>#000000</colorTriggerFgColor>
					<colorTriggerBgColor>#000000</colorTriggerBgColor>
					<regexCodeList />
					<regexCodePropertyList />
					<Trigger isActive="yes" isFolder="no" isTempTrigger="no" isMultiline="yes" isPerlSlashGOption="no" isColorizerTrigger="no" isFilterTrigger="no" isSoundTrigger="no" isColorTrigger="no" isColorTriggerFg="no" isColorTriggerBg="no">
						<name>leylines</name>
						<script>if ylm.path["v"..snd.my.room] ~= nil then
 if ylm.active then
  ylm.next_zone = ylm.path["v"..ylm.next_zone]
  ylm.foci = tonumber(multimatches[7][2])
  if ylm.foci == 0 then
		if ylm.next_zone == "city" then
			ylm.active = false
			send("qeb path track city")
		else
			expandAlias("goylem", false)
  	end
	end
 end
endscript>
						<triggerType>0</triggerType>
						<conditonLineDelta>10</conditonLineDelta>
						<mStayOpen>0</mStayOpen>
						<mCommand></mCommand>
						<packageName></packageName>
						<mFgColor>#ff0000</mFgColor>
						<mBgColor>#ffff00</mBgColor>
						<mSoundFile></mSoundFile>
						<colorTriggerFgColor>#000000</colorTriggerFgColor>
						<colorTriggerBgColor>#000000</colorTriggerBgColor>
						<regexCodeList>
							<string>You reach a hand outwards and close your eyes, seeking for the ethereal energies of the leylines around you.</string>
							<string>1</string>
							<string>^.+$</string>
							<string>1</string>
							<string>^You detect (\d+) lesser foci:$</string>
							<string>1</string>
							<string>^You detect (\d+) minor foci\.$</string>
						</regexCodeList>
						<regexCodePropertyList>
							<integer>3</integer>
							<integer>5</integer>
							<integer>1</integer>
							<integer>5</integer>
							<integer>1</integer>
							<integer>5</integer>
							<integer>1</integer>
						</regexCodePropertyList>
					</Trigger>
				</TriggerGroup>
				<TriggerGroup isActive="yes" isFolder="yes" isTempTrigger="no" isMultiline="no" isPerlSlashGOption="no" isColorizerTrigger="no" isFilterTrigger="no" isSoundTrigger="no" isColorTrigger="no" isColorTriggerFg="no" isColorTriggerBg="no">
					<name>Questing</name>
					<script></script>
					<triggerType>0</triggerType>
					<conditonLineDelta>0</conditonLineDelta>
					<mStayOpen>0</mStayOpen>
					<mCommand></mCommand>
					<packageName></packageName>
					<mFgColor>#ff0000</mFgColor>
					<mBgColor>#ffff00</mBgColor>
					<mSoundFile></mSoundFile>
					<colorTriggerFgColor>#000000</colorTriggerFgColor>
					<colorTriggerBgColor>#000000</colorTriggerBgColor>
					<regexCodeList />
					<regexCodePropertyList />
					<TriggerGroup isActive="yes" isFolder="yes" isTempTrigger="no" isMultiline="no" isPerlSlashGOption="no" isColorizerTrigger="no" isFilterTrigger="no" isSoundTrigger="no" isColorTrigger="no" isColorTriggerFg="no" isColorTriggerBg="no">
						<name>Torturer's Caverns</name>
						<script></script>
						<triggerType>0</triggerType>
						<conditonLineDelta>0</conditonLineDelta>
						<mStayOpen>0</mStayOpen>
						<mCommand></mCommand>
						<packageName></packageName>
						<mFgColor>#ff0000</mFgColor>
						<mBgColor>#ffff00</mBgColor>
						<mSoundFile></mSoundFile>
						<colorTriggerFgColor>#000000</colorTriggerFgColor>
						<colorTriggerBgColor>#000000</colorTriggerBgColor>
						<regexCodeList />
						<regexCodePropertyList />
						<Trigger isActive="yes" isFolder="no" isTempTrigger="no" isMultiline="no" isPerlSlashGOption="no" isColorizerTrigger="no" isFilterTrigger="no" isSoundTrigger="no" isColorTrigger="no" isColorTriggerFg="no" isColorTriggerBg="no">
							<name>Annaria</name>
							<script>snd.send("say follow me!")</script>
							<triggerType>0</triggerType>
							<conditonLineDelta>0</conditonLineDelta>
							<mStayOpen>0</mStayOpen>
							<mCommand></mCommand>
							<packageName></packageName>
							<mFgColor>#ff0000</mFgColor>
							<mBgColor>#ffff00</mBgColor>
							<mSoundFile></mSoundFile>
							<colorTriggerFgColor>#000000</colorTriggerFgColor>
							<colorTriggerBgColor>#000000</colorTriggerBgColor>
							<regexCodeList>
								<string>A malnourished paladin squire is imprisoned here.</string>
							</regexCodeList>
							<regexCodePropertyList>
								<integer>0</integer>
							</regexCodePropertyList>
						</Trigger>
						<Trigger isActive="yes" isFolder="no" isTempTrigger="no" isMultiline="no" isPerlSlashGOption="no" isColorizerTrigger="no" isFilterTrigger="no" isSoundTrigger="no" isColorTrigger="no" isColorTriggerFg="no" isColorTriggerBg="no">
							<name>Rozhirr</name>
							<script>snd.send("qeb g key")</script>
							<triggerType>0</triggerType>
							<conditonLineDelta>0</conditonLineDelta>
							<mStayOpen>0</mStayOpen>
							<mCommand></mCommand>
							<packageName></packageName>
							<mFgColor>#ff0000</mFgColor>
							<mBgColor>#ffff00</mBgColor>
							<mSoundFile></mSoundFile>
							<colorTriggerFgColor>#000000</colorTriggerFgColor>
							<colorTriggerBgColor>#000000</colorTriggerBgColor>
							<regexCodeList>
								<string>An iron prison key tumbles out of the corpse of Sentinel Rozhirr.</string>
							</regexCodeList>
							<regexCodePropertyList>
								<integer>3</integer>
							</regexCodePropertyList>
						</Trigger>
						<Trigger isActive="yes" isFolder="no" isTempTrigger="no" isMultiline="no" isPerlSlashGOption="no" isColorizerTrigger="no" isFilterTrigger="no" isSoundTrigger="no" isColorTrigger="no" isColorTriggerFg="no" isColorTriggerBg="no">
							<name>Tellimerius</name>
							<script>if snd.faction == "spirit" then
 snd.send("give Rozhirr to Tellimerius"..snd.sep.."give Tuera to Tellimerius"..snd.sep.."give Mellias to Tellimerius")
end</script>
							<triggerType>0</triggerType>
							<conditonLineDelta>0</conditonLineDelta>
							<mStayOpen>0</mStayOpen>
							<mCommand></mCommand>
							<packageName></packageName>
							<mFgColor>#ff0000</mFgColor>
							<mBgColor>#ffff00</mBgColor>
							<mSoundFile></mSoundFile>
							<colorTriggerFgColor>#000000</colorTriggerFgColor>
							<colorTriggerBgColor>#000000</colorTriggerBgColor>
							<regexCodeList>
								<string>Bristling blades ever-ready to strike, Tellimerius, the Deep Dweller stands here.</string>
							</regexCodeList>
							<regexCodePropertyList>
								<integer>0</integer>
							</regexCodePropertyList>
						</Trigger>
						<Trigger isActive="yes" isFolder="no" isTempTrigger="no" isMultiline="no" isPerlSlashGOption="no" isColorizerTrigger="no" isFilterTrigger="no" isSoundTrigger="no" isColorTrigger="no" isColorTriggerFg="no" isColorTriggerBg="no">
							<name>Kerr'ach</name>
							<script>snd.send("give Tellimerius to Kerr'ach")</script>
							<triggerType>0</triggerType>
							<conditonLineDelta>0</conditonLineDelta>
							<mStayOpen>0</mStayOpen>
							<mCommand></mCommand>
							<packageName></packageName>
							<mFgColor>#ff0000</mFgColor>
							<mBgColor>#ffff00</mBgColor>
							<mSoundFile></mSoundFile>
							<colorTriggerFgColor>#000000</colorTriggerFgColor>
							<colorTriggerBgColor>#000000</colorTriggerBgColor>
							<regexCodeList>
								<string>Draped in dark robes, Kerr'ach, the Lich stands here.</string>
							</regexCodeList>
							<regexCodePropertyList>
								<integer>0</integer>
							</regexCodePropertyList>
						</Trigger>
						<Trigger isActive="yes" isFolder="no" isTempTrigger="no" isMultiline="no" isPerlSlashGOption="no" isColorizerTrigger="no" isFilterTrigger="no" isSoundTrigger="no" isColorTrigger="no" isColorTriggerFg="no" isColorTriggerBg="no">
							<name>Roz</name>
							<script>if snd.faction == "shadow" then
 snd.send("say Tuera wants her")
end</script>
							<triggerType>0</triggerType>
							<conditonLineDelta>0</conditonLineDelta>
							<mStayOpen>0</mStayOpen>
							<mCommand></mCommand>
							<packageName></packageName>
							<mFgColor>#ff0000</mFgColor>
							<mBgColor>#ffff00</mBgColor>
							<mSoundFile></mSoundFile>
							<colorTriggerFgColor>#000000</colorTriggerFgColor>
							<colorTriggerBgColor>#000000</colorTriggerBgColor>
							<regexCodeList>
								<string>Sentinel Rozhirr says, "What business do you have with my prisoner, speak your intent."</string>
							</regexCodeList>
							<regexCodePropertyList>
								<integer>3</integer>
							</regexCodePropertyList>
						</Trigger>
						<Trigger isActive="yes" isFolder="no" isTempTrigger="no" isMultiline="no" isPerlSlashGOption="no" isColorizerTrigger="no" isFilterTrigger="no" isSoundTrigger="no" isColorTrigger="no" isColorTriggerFg="no" isColorTriggerBg="no">
							<name>Roz bow</name>
							<script>if snd.faction == "shadow" then
 expandAlias("pt tue")
end</script>
							<triggerType>0</triggerType>
							<conditonLineDelta>0</conditonLineDelta>
							<mStayOpen>0</mStayOpen>
							<mCommand></mCommand>
							<packageName></packageName>
							<mFgColor>#ff0000</mFgColor>
							<mBgColor>#ffff00</mBgColor>
							<mSoundFile></mSoundFile>
							<colorTriggerFgColor>#000000</colorTriggerFgColor>
							<colorTriggerBgColor>#000000</colorTriggerBgColor>
							<regexCodeList>
								<string>Sentinel Rozhirr quickly unlocks the prison door, bowing.</string>
							</regexCodeList>
							<regexCodePropertyList>
								<integer>3</integer>
							</regexCodePropertyList>
						</Trigger>
					</TriggerGroup>
					<Trigger isActive="yes" isFolder="no" isTempTrigger="no" isMultiline="no" isPerlSlashGOption="no" isColorizerTrigger="no" isFilterTrigger="no" isSoundTrigger="no" isColorTrigger="no" isColorTriggerFg="no" isColorTriggerBg="no">
						<name>Lich Gardens</name>
						<script>snd.send("give Venicus to Zarxotl")</script>
						<triggerType>0</triggerType>
						<conditonLineDelta>0</conditonLineDelta>
						<mStayOpen>0</mStayOpen>
						<mCommand></mCommand>
						<packageName></packageName>
						<mFgColor>#ff0000</mFgColor>
						<mBgColor>#ffff00</mBgColor>
						<mSoundFile></mSoundFile>
						<colorTriggerFgColor>#000000</colorTriggerFgColor>
						<colorTriggerBgColor>#000000</colorTriggerBgColor>
						<regexCodeList>
							<string>His immense Rajamalan frame looming over his surroundings, General Zarxotl stands in the shadows.</string>
						</regexCodeList>
						<regexCodePropertyList>
							<integer>0</integer>
						</regexCodePropertyList>
					</Trigger>
					<TriggerGroup isActive="no" isFolder="yes" isTempTrigger="no" isMultiline="no" isPerlSlashGOption="no" isColorizerTrigger="no" isFilterTrigger="no" isSoundTrigger="no" isColorTrigger="no" isColorTriggerFg="no" isColorTriggerBg="no">
						<name>Three Widows</name>
						<script></script>
						<triggerType>0</triggerType>
						<conditonLineDelta>0</conditonLineDelta>
						<mStayOpen>0</mStayOpen>
						<mCommand></mCommand>
						<packageName></packageName>
						<mFgColor>#ff0000</mFgColor>
						<mBgColor>#ffff00</mBgColor>
						<mSoundFile></mSoundFile>
						<colorTriggerFgColor>#000000</colorTriggerFgColor>
						<colorTriggerBgColor>#000000</colorTriggerBgColor>
						<regexCodeList />
						<regexCodePropertyList />
						<Trigger isActive="no" isFolder="no" isTempTrigger="no" isMultiline="no" isPerlSlashGOption="no" isColorizerTrigger="no" isFilterTrigger="no" isSoundTrigger="no" isColorTrigger="no" isColorTriggerFg="no" isColorTriggerBg="no">
							<name>kestrel</name>
							<script>snd.send("whistle kestrel")</script>
							<triggerType>0</triggerType>
							<conditonLineDelta>0</conditonLineDelta>
							<mStayOpen>0</mStayOpen>
							<mCommand></mCommand>
							<packageName></packageName>
							<mFgColor>#ff0000</mFgColor>
							<mBgColor>#ffff00</mBgColor>
							<mSoundFile></mSoundFile>
							<colorTriggerFgColor>#000000</colorTriggerFgColor>
							<colorTriggerBgColor>#000000</colorTriggerBgColor>
							<regexCodeList>
								<string>Flitting through the air, a kestrel wanders around in search of prey.</string>
							</regexCodeList>
							<regexCodePropertyList>
								<integer>0</integer>
							</regexCodePropertyList>
						</Trigger>
						<Trigger isActive="yes" isFolder="no" isTempTrigger="no" isMultiline="no" isPerlSlashGOption="no" isColorizerTrigger="no" isFilterTrigger="no" isSoundTrigger="no" isColorTrigger="no" isColorTriggerFg="no" isColorTriggerBg="no">
							<name>alpaca</name>
							<script>snd.send("give hay to alpaca")</script>
							<triggerType>0</triggerType>
							<conditonLineDelta>0</conditonLineDelta>
							<mStayOpen>0</mStayOpen>
							<mCommand></mCommand>
							<packageName></packageName>
							<mFgColor>#ff0000</mFgColor>
							<mBgColor>#ffff00</mBgColor>
							<mSoundFile></mSoundFile>
							<colorTriggerFgColor>#000000</colorTriggerFgColor>
							<colorTriggerBgColor>#000000</colorTriggerBgColor>
							<regexCodeList>
								<string>Sniffing at the ground for food, an alpaca wanders about here.</string>
							</regexCodeList>
							<regexCodePropertyList>
								<integer>0</integer>
							</regexCodePropertyList>
						</Trigger>
						<Trigger isActive="yes" isFolder="no" isTempTrigger="no" isMultiline="no" isPerlSlashGOption="no" isColorizerTrigger="no" isFilterTrigger="no" isSoundTrigger="no" isColorTrigger="no" isColorTriggerFg="no" isColorTriggerBg="no">
							<name>give ore</name>
							<script>snd.send("give ore to bernar")</script>
							<triggerType>0</triggerType>
							<conditonLineDelta>0</conditonLineDelta>
							<mStayOpen>0</mStayOpen>
							<mCommand></mCommand>
							<packageName></packageName>
							<mFgColor>#ff0000</mFgColor>
							<mBgColor>#ffff00</mBgColor>
							<mSoundFile></mSoundFile>
							<colorTriggerFgColor>#000000</colorTriggerFgColor>
							<colorTriggerBgColor>#000000</colorTriggerBgColor>
							<regexCodeList>
								<string>You give a hematite ore of iron to Bernar.</string>
								<string>You give a rock of silver ore to Bernar.</string>
							</regexCodeList>
							<regexCodePropertyList>
								<integer>3</integer>
								<integer>3</integer>
							</regexCodePropertyList>
						</Trigger>
						<Trigger isActive="yes" isFolder="no" isTempTrigger="no" isMultiline="no" isPerlSlashGOption="no" isColorizerTrigger="no" isFilterTrigger="no" isSoundTrigger="no" isColorTrigger="no" isColorTriggerFg="no" isColorTriggerBg="no">
							<name>give coal</name>
							<script>snd.send("give coal to bernar")</script>
							<triggerType>0</triggerType>
							<conditonLineDelta>0</conditonLineDelta>
							<mStayOpen>0</mStayOpen>
							<mCommand></mCommand>
							<packageName></packageName>
							<mFgColor>#ff0000</mFgColor>
							<mBgColor>#ffff00</mBgColor>
							<mSoundFile></mSoundFile>
							<colorTriggerFgColor>#000000</colorTriggerFgColor>
							<colorTriggerBgColor>#000000</colorTriggerBgColor>
							<regexCodeList>
								<string>You give a lump of flaking coal to Bernar.</string>
							</regexCodeList>
							<regexCodePropertyList>
								<integer>3</integer>
							</regexCodePropertyList>
						</Trigger>
						<Trigger isActive="yes" isFolder="no" isTempTrigger="no" isMultiline="no" isPerlSlashGOption="no" isColorizerTrigger="no" isFilterTrigger="no" isSoundTrigger="no" isColorTrigger="no" isColorTriggerFg="no" isColorTriggerBg="no">
							<name>bernar</name>
							<script>snd.send("give nugget to bernar"..snd.sep.."give ore to bernar"..snd.sep.."give coal to bernar")</script>
							<triggerType>0</triggerType>
							<conditonLineDelta>0</conditonLineDelta>
							<mStayOpen>0</mStayOpen>
							<mCommand></mCommand>
							<packageName></packageName>
							<mFgColor>#ff0000</mFgColor>
							<mBgColor>#ffff00</mBgColor>
							<mSoundFile></mSoundFile>
							<colorTriggerFgColor>#000000</colorTriggerFgColor>
							<colorTriggerBgColor>#000000</colorTriggerBgColor>
							<regexCodeList>
								<string>Weighing from heel to toe, Bernar stands here.</string>
							</regexCodeList>
							<regexCodePropertyList>
								<integer>0</integer>
							</regexCodePropertyList>
						</Trigger>
						<Trigger isActive="yes" isFolder="no" isTempTrigger="no" isMultiline="no" isPerlSlashGOption="no" isColorizerTrigger="no" isFilterTrigger="no" isSoundTrigger="no" isColorTrigger="no" isColorTriggerFg="no" isColorTriggerBg="no">
							<name>kiki</name>
							<script>snd.send("give rock to kiki")</script>
							<triggerType>0</triggerType>
							<conditonLineDelta>0</conditonLineDelta>
							<mStayOpen>0</mStayOpen>
							<mCommand></mCommand>
							<packageName></packageName>
							<mFgColor>#ff0000</mFgColor>
							<mBgColor>#ffff00</mBgColor>
							<mSoundFile></mSoundFile>
							<colorTriggerFgColor>#000000</colorTriggerFgColor>
							<colorTriggerBgColor>#000000</colorTriggerBgColor>
							<regexCodeList>
								<string>Babbling to a rock in her hand, Kiki is wandering around in circles here.</string>
							</regexCodeList>
							<regexCodePropertyList>
								<integer>0</integer>
							</regexCodePropertyList>
						</Trigger>
						<Trigger isActive="yes" isFolder="no" isTempTrigger="no" isMultiline="no" isPerlSlashGOption="no" isColorizerTrigger="no" isFilterTrigger="no" isSoundTrigger="no" isColorTrigger="no" isColorTriggerFg="no" isColorTriggerBg="no">
							<name>give rock</name>
							<script>snd.send("give rock to kiki")</script>
							<triggerType>0</triggerType>
							<conditonLineDelta>0</conditonLineDelta>
							<mStayOpen>0</mStayOpen>
							<mCommand></mCommand>
							<packageName></packageName>
							<mFgColor>#ff0000</mFgColor>
							<mBgColor>#ffff00</mBgColor>
							<mSoundFile></mSoundFile>
							<colorTriggerFgColor>#000000</colorTriggerFgColor>
							<colorTriggerBgColor>#000000</colorTriggerBgColor>
							<regexCodeList>
								<string>You give a small grey rock to Kiki, the lost Grecht.</string>
							</regexCodeList>
							<regexCodePropertyList>
								<integer>3</integer>
							</regexCodePropertyList>
						</Trigger>
						<Trigger isActive="yes" isFolder="no" isTempTrigger="no" isMultiline="no" isPerlSlashGOption="no" isColorizerTrigger="no" isFilterTrigger="no" isSoundTrigger="no" isColorTrigger="no" isColorTriggerFg="no" isColorTriggerBg="no">
							<name>jinjin</name>
							<script>snd.send("give net to jinjin"..snd.sep.."give packet to jinjin"..snd.sep.."give pickaxe to jinjin"..snd.sep.."give ore to jinjin")</script>
							<triggerType>0</triggerType>
							<conditonLineDelta>0</conditonLineDelta>
							<mStayOpen>0</mStayOpen>
							<mCommand></mCommand>
							<packageName></packageName>
							<mFgColor>#ff0000</mFgColor>
							<mBgColor>#ffff00</mBgColor>
							<mSoundFile></mSoundFile>
							<colorTriggerFgColor>#000000</colorTriggerFgColor>
							<colorTriggerBgColor>#000000</colorTriggerBgColor>
							<regexCodeList>
								<string>Jinjin stands here, squinting at everything that moves.</string>
							</regexCodeList>
							<regexCodePropertyList>
								<integer>0</integer>
							</regexCodePropertyList>
						</Trigger>
						<Trigger isActive="yes" isFolder="no" isTempTrigger="no" isMultiline="no" isPerlSlashGOption="no" isColorizerTrigger="no" isFilterTrigger="no" isSoundTrigger="no" isColorTrigger="no" isColorTriggerFg="no" isColorTriggerBg="no">
							<name>net</name>
							<script>snd.send("give net to jinjin")</script>
							<triggerType>0</triggerType>
							<conditonLineDelta>0</conditonLineDelta>
							<mStayOpen>0</mStayOpen>
							<mCommand></mCommand>
							<packageName></packageName>
							<mFgColor>#ff0000</mFgColor>
							<mBgColor>#ffff00</mBgColor>
							<mSoundFile></mSoundFile>
							<colorTriggerFgColor>#000000</colorTriggerFgColor>
							<colorTriggerBgColor>#000000</colorTriggerBgColor>
							<regexCodeList>
								<string>You give a simple net to Jinjin.</string>
							</regexCodeList>
							<regexCodePropertyList>
								<integer>3</integer>
							</regexCodePropertyList>
						</Trigger>
						<Trigger isActive="yes" isFolder="no" isTempTrigger="no" isMultiline="no" isPerlSlashGOption="no" isColorizerTrigger="no" isFilterTrigger="no" isSoundTrigger="no" isColorTrigger="no" isColorTriggerFg="no" isColorTriggerBg="no">
							<name>packet</name>
							<script>snd.send("give packet to jinjin")</script>
							<triggerType>0</triggerType>
							<conditonLineDelta>0</conditonLineDelta>
							<mStayOpen>0</mStayOpen>
							<mCommand></mCommand>
							<packageName></packageName>
							<mFgColor>#ff0000</mFgColor>
							<mBgColor>#ffff00</mBgColor>
							<mSoundFile></mSoundFile>
							<colorTriggerFgColor>#000000</colorTriggerFgColor>
							<colorTriggerBgColor>#000000</colorTriggerBgColor>
							<regexCodeList>
								<string>You give a packet of seeds to Jinjin.</string>
							</regexCodeList>
							<regexCodePropertyList>
								<integer>3</integer>
							</regexCodePropertyList>
						</Trigger>
						<Trigger isActive="yes" isFolder="no" isTempTrigger="no" isMultiline="no" isPerlSlashGOption="no" isColorizerTrigger="no" isFilterTrigger="no" isSoundTrigger="no" isColorTrigger="no" isColorTriggerFg="no" isColorTriggerBg="no">
							<name>pickaxe</name>
							<script>snd.send("give pickaxe to jinjin")</script>
							<triggerType>0</triggerType>
							<conditonLineDelta>0</conditonLineDelta>
							<mStayOpen>0</mStayOpen>
							<mCommand></mCommand>
							<packageName></packageName>
							<mFgColor>#ff0000</mFgColor>
							<mBgColor>#ffff00</mBgColor>
							<mSoundFile></mSoundFile>
							<colorTriggerFgColor>#000000</colorTriggerFgColor>
							<colorTriggerBgColor>#000000</colorTriggerBgColor>
							<regexCodeList>
								<string>You give a simple pickaxe to Jinjin.</string>
							</regexCodeList>
							<regexCodePropertyList>
								<integer>3</integer>
							</regexCodePropertyList>
						</Trigger>
						<Trigger isActive="yes" isFolder="no" isTempTrigger="no" isMultiline="no" isPerlSlashGOption="no" isColorizerTrigger="no" isFilterTrigger="no" isSoundTrigger="no" isColorTrigger="no" isColorTriggerFg="no" isColorTriggerBg="no">
							<name>ore</name>
							<script>snd.send("give ore to jinjin")</script>
							<triggerType>0</triggerType>
							<conditonLineDelta>0</conditonLineDelta>
							<mStayOpen>0</mStayOpen>
							<mCommand></mCommand>
							<packageName></packageName>
							<mFgColor>#ff0000</mFgColor>
							<mBgColor>#ffff00</mBgColor>
							<mSoundFile></mSoundFile>
							<colorTriggerFgColor>#000000</colorTriggerFgColor>
							<colorTriggerBgColor>#000000</colorTriggerBgColor>
							<regexCodeList>
								<string>You give a chunk of mixed ore to Jinjin.</string>
							</regexCodeList>
							<regexCodePropertyList>
								<integer>3</integer>
							</regexCodePropertyList>
						</Trigger>
					</TriggerGroup>
					<TriggerGroup isActive="yes" isFolder="yes" isTempTrigger="no" isMultiline="no" isPerlSlashGOption="no" isColorizerTrigger="no" isFilterTrigger="no" isSoundTrigger="no" isColorTrigger="no" isColorTriggerFg="no" isColorTriggerBg="no">
						<name>Helba</name>
						<script></script>
						<triggerType>0</triggerType>
						<conditonLineDelta>0</conditonLineDelta>
						<mStayOpen>0</mStayOpen>
						<mCommand></mCommand>
						<packageName></packageName>
						<mFgColor>#ff0000</mFgColor>
						<mBgColor>#ffff00</mBgColor>
						<mSoundFile></mSoundFile>
						<colorTriggerFgColor>#000000</colorTriggerFgColor>
						<colorTriggerBgColor>#000000</colorTriggerBgColor>
						<regexCodeList />
						<regexCodePropertyList />
						<Trigger isActive="yes" isFolder="no" isTempTrigger="no" isMultiline="no" isPerlSlashGOption="no" isColorizerTrigger="no" isFilterTrigger="no" isSoundTrigger="no" isColorTrigger="no" isColorTriggerFg="no" isColorTriggerBg="no">
							<name>ore</name>
							<script>if not snd.items["a rich vein of iron ore"] and not snd.items["a vein of iron ore"] then
 snd.send("qeb get 50 ore")
end</script>
							<triggerType>0</triggerType>
							<conditonLineDelta>0</conditonLineDelta>
							<mStayOpen>0</mStayOpen>
							<mCommand></mCommand>
							<packageName></packageName>
							<mFgColor>#ff0000</mFgColor>
							<mBgColor>#ffff00</mBgColor>
							<mSoundFile></mSoundFile>
							<colorTriggerFgColor>#000000</colorTriggerFgColor>
							<colorTriggerBgColor>#000000</colorTriggerBgColor>
							<regexCodeList>
								<string>You raise your pickaxe and swing it at a rich vein of iron ore, striking off the final chunk of ore.</string>
								<string>You raise your pickaxe and swing it at a vein of iron ore, striking off the final chunk of ore.</string>
							</regexCodeList>
							<regexCodePropertyList>
								<integer>3</integer>
								<integer>3</integer>
							</regexCodePropertyList>
						</Trigger>
						<Trigger isActive="no" isFolder="no" isTempTrigger="no" isMultiline="no" isPerlSlashGOption="no" isColorizerTrigger="no" isFilterTrigger="no" isSoundTrigger="no" isColorTrigger="no" isColorTriggerFg="no" isColorTriggerBg="no">
							<name>rubble</name>
							<script>snd.send("dig rubble")</script>
							<triggerType>0</triggerType>
							<conditonLineDelta>0</conditonLineDelta>
							<mStayOpen>0</mStayOpen>
							<mCommand></mCommand>
							<packageName></packageName>
							<mFgColor>#ff0000</mFgColor>
							<mBgColor>#ffff00</mBgColor>
							<mSoundFile></mSoundFile>
							<colorTriggerFgColor>#000000</colorTriggerFgColor>
							<colorTriggerBgColor>#000000</colorTriggerBgColor>
							<regexCodeList>
								<string>A large pile of rubble hinders passage through the mines here.</string>
							</regexCodeList>
							<regexCodePropertyList>
								<integer>0</integer>
							</regexCodePropertyList>
						</Trigger>
						<Trigger isActive="yes" isFolder="no" isTempTrigger="no" isMultiline="no" isPerlSlashGOption="no" isColorizerTrigger="no" isFilterTrigger="no" isSoundTrigger="no" isColorTrigger="no" isColorTriggerFg="no" isColorTriggerBg="no">
							<name>radek</name>
							<script>snd.send("greet radek")
snd.send("give ore to radek")</script>
							<triggerType>0</triggerType>
							<conditonLineDelta>0</conditonLineDelta>
							<mStayOpen>0</mStayOpen>
							<mCommand></mCommand>
							<packageName></packageName>
							<mFgColor>#ff0000</mFgColor>
							<mBgColor>#ffff00</mBgColor>
							<mSoundFile></mSoundFile>
							<colorTriggerFgColor>#000000</colorTriggerFgColor>
							<colorTriggerBgColor>#000000</colorTriggerBgColor>
							<regexCodeList>
								<string>Dust and grime peppering his skin, Foreman Radek is here.</string>
							</regexCodeList>
							<regexCodePropertyList>
								<integer>0</integer>
							</regexCodePropertyList>
						</Trigger>
						<Trigger isActive="yes" isFolder="no" isTempTrigger="no" isMultiline="no" isPerlSlashGOption="no" isColorizerTrigger="no" isFilterTrigger="no" isSoundTrigger="no" isColorTrigger="no" isColorTriggerFg="no" isColorTriggerBg="no">
							<name>give ore</name>
							<script>snd.send("give ore to radek")</script>
							<triggerType>0</triggerType>
							<conditonLineDelta>0</conditonLineDelta>
							<mStayOpen>0</mStayOpen>
							<mCommand></mCommand>
							<packageName></packageName>
							<mFgColor>#ff0000</mFgColor>
							<mBgColor>#ffff00</mBgColor>
							<mSoundFile></mSoundFile>
							<colorTriggerFgColor>#000000</colorTriggerFgColor>
							<colorTriggerBgColor>#000000</colorTriggerBgColor>
							<regexCodeList>
								<string>You give a lump of iron ore to Foreman Radek.</string>
							</regexCodeList>
							<regexCodePropertyList>
								<integer>3</integer>
							</regexCodePropertyList>
						</Trigger>
					</TriggerGroup>
					<TriggerGroup isActive="yes" isFolder="yes" isTempTrigger="no" isMultiline="no" isPerlSlashGOption="no" isColorizerTrigger="no" isFilterTrigger="no" isSoundTrigger="no" isColorTrigger="no" isColorTriggerFg="no" isColorTriggerBg="no">
						<name>Arget Massai</name>
						<script></script>
						<triggerType>0</triggerType>
						<conditonLineDelta>0</conditonLineDelta>
						<mStayOpen>0</mStayOpen>
						<mCommand></mCommand>
						<packageName></packageName>
						<mFgColor>#ff0000</mFgColor>
						<mBgColor>#ffff00</mBgColor>
						<mSoundFile></mSoundFile>
						<colorTriggerFgColor>#000000</colorTriggerFgColor>
						<colorTriggerBgColor>#000000</colorTriggerBgColor>
						<regexCodeList />
						<regexCodePropertyList />
						<Trigger isActive="yes" isFolder="no" isTempTrigger="no" isMultiline="no" isPerlSlashGOption="no" isColorizerTrigger="no" isFilterTrigger="no" isSoundTrigger="no" isColorTrigger="no" isColorTriggerFg="no" isColorTriggerBg="no">
							<name>putoran ash</name>
							<script>snd.send("get ash")</script>
							<triggerType>0</triggerType>
							<conditonLineDelta>0</conditonLineDelta>
							<mStayOpen>0</mStayOpen>
							<mCommand></mCommand>
							<packageName></packageName>
							<mFgColor>#ff0000</mFgColor>
							<mBgColor>#ffff00</mBgColor>
							<mSoundFile></mSoundFile>
							<colorTriggerFgColor>#000000</colorTriggerFgColor>
							<colorTriggerBgColor>#000000</colorTriggerBgColor>
							<regexCodeList>
								<string>A pile of volcanic ash has accumulated here, gritty and coarse underfoot.</string>
							</regexCodeList>
							<regexCodePropertyList>
								<integer>0</integer>
							</regexCodePropertyList>
						</Trigger>
						<Trigger isActive="yes" isFolder="no" isTempTrigger="no" isMultiline="no" isPerlSlashGOption="no" isColorizerTrigger="no" isFilterTrigger="no" isSoundTrigger="no" isColorTrigger="no" isColorTriggerFg="no" isColorTriggerBg="no">
							<name>grecht</name>
							<script>snd.send("give ash to grecht")</script>
							<triggerType>0</triggerType>
							<conditonLineDelta>0</conditonLineDelta>
							<mStayOpen>0</mStayOpen>
							<mCommand></mCommand>
							<packageName></packageName>
							<mFgColor>#ff0000</mFgColor>
							<mBgColor>#ffff00</mBgColor>
							<mSoundFile></mSoundFile>
							<colorTriggerFgColor>#000000</colorTriggerFgColor>
							<colorTriggerBgColor>#000000</colorTriggerBgColor>
							<regexCodeList>
								<string>An elderly Grecht man totters around here, serenely tending to his gardens.</string>
							</regexCodeList>
							<regexCodePropertyList>
								<integer>0</integer>
							</regexCodePropertyList>
						</Trigger>
						<Trigger isActive="yes" isFolder="no" isTempTrigger="no" isMultiline="no" isPerlSlashGOption="no" isColorizerTrigger="no" isFilterTrigger="no" isSoundTrigger="no" isColorTrigger="no" isColorTriggerFg="no" isColorTriggerBg="no">
							<name>give ash</name>
							<script>snd.send("give ash to grecht")</script>
							<triggerType>0</triggerType>
							<conditonLineDelta>0</conditonLineDelta>
							<mStayOpen>0</mStayOpen>
							<mCommand></mCommand>
							<packageName></packageName>
							<mFgColor>#ff0000</mFgColor>
							<mBgColor>#ffff00</mBgColor>
							<mSoundFile></mSoundFile>
							<colorTriggerFgColor>#000000</colorTriggerFgColor>
							<colorTriggerBgColor>#000000</colorTriggerBgColor>
							<regexCodeList>
								<string>You give a pile of volcanic ash to a wizened Grecht gardener.</string>
							</regexCodeList>
							<regexCodePropertyList>
								<integer>3</integer>
							</regexCodePropertyList>
						</Trigger>
						<Trigger isActive="yes" isFolder="no" isTempTrigger="no" isMultiline="no" isPerlSlashGOption="no" isColorizerTrigger="no" isFilterTrigger="no" isSoundTrigger="no" isColorTrigger="no" isColorTriggerFg="no" isColorTriggerBg="no">
							<name>garden</name>
							<script>snd.send("p garden")</script>
							<triggerType>0</triggerType>
							<conditonLineDelta>0</conditonLineDelta>
							<mStayOpen>0</mStayOpen>
							<mCommand></mCommand>
							<packageName></packageName>
							<mFgColor>#ff0000</mFgColor>
							<mBgColor>#ffff00</mBgColor>
							<mSoundFile></mSoundFile>
							<colorTriggerFgColor>#000000</colorTriggerFgColor>
							<colorTriggerBgColor>#000000</colorTriggerBgColor>
							<regexCodeList>
								<string>A thriving garden of mountain plants springs up from the thin soil, tilled in neat rows.</string>
							</regexCodeList>
							<regexCodePropertyList>
								<integer>0</integer>
							</regexCodePropertyList>
						</Trigger>
						<Trigger isActive="yes" isFolder="no" isTempTrigger="no" isMultiline="no" isPerlSlashGOption="no" isColorizerTrigger="no" isFilterTrigger="no" isSoundTrigger="no" isColorTrigger="no" isColorTriggerFg="no" isColorTriggerBg="no">
							<name>mountain garden</name>
							<script></script>
							<triggerType>0</triggerType>
							<conditonLineDelta>0</conditonLineDelta>
							<mStayOpen>200</mStayOpen>
							<mCommand></mCommand>
							<packageName></packageName>
							<mFgColor>#ff0000</mFgColor>
							<mBgColor>#ffff00</mBgColor>
							<mSoundFile></mSoundFile>
							<colorTriggerFgColor>#000000</colorTriggerFgColor>
							<colorTriggerBgColor>#000000</colorTriggerBgColor>
							<regexCodeList>
								<string>A thriving mountain garden is holding:</string>
							</regexCodeList>
							<regexCodePropertyList>
								<integer>3</integer>
							</regexCodePropertyList>
							<Trigger isActive="yes" isFolder="no" isTempTrigger="no" isMultiline="no" isPerlSlashGOption="no" isColorizerTrigger="no" isFilterTrigger="no" isSoundTrigger="no" isColorTrigger="no" isColorTriggerFg="no" isColorTriggerBg="no">
								<name>garden end</name>
								<script>setTriggerStayOpen("mountain garden", 0)</script>
								<triggerType>0</triggerType>
								<conditonLineDelta>0</conditonLineDelta>
								<mStayOpen>0</mStayOpen>
								<mCommand></mCommand>
								<packageName></packageName>
								<mFgColor>#ff0000</mFgColor>
								<mBgColor>#ffff00</mBgColor>
								<mSoundFile></mSoundFile>
								<colorTriggerFgColor>#000000</colorTriggerFgColor>
								<colorTriggerBgColor>#000000</colorTriggerBgColor>
								<regexCodeList>
									<string>^It is holding \d+ objects\.$</string>
								</regexCodeList>
								<regexCodePropertyList>
									<integer>1</integer>
								</regexCodePropertyList>
							</Trigger>
							<Trigger isActive="yes" isFolder="no" isTempTrigger="no" isMultiline="no" isPerlSlashGOption="no" isColorizerTrigger="no" isFilterTrigger="no" isSoundTrigger="no" isColorTrigger="no" isColorTriggerFg="no" isColorTriggerBg="no">
								<name>garden line</name>
								<script>if string.find(matches[4], "thriving") or string.find(matches[4], "tenacious") or string.find(matches[4], "stubborn") then
 snd.send("get "..matches[3].." from garden")
end</script>
								<triggerType>0</triggerType>
								<conditonLineDelta>0</conditonLineDelta>
								<mStayOpen>0</mStayOpen>
								<mCommand></mCommand>
								<packageName></packageName>
								<mFgColor>#ff0000</mFgColor>
								<mBgColor>#ffff00</mBgColor>
								<mSoundFile></mSoundFile>
								<colorTriggerFgColor>#000000</colorTriggerFgColor>
								<colorTriggerBgColor>#000000</colorTriggerBgColor>
								<regexCodeList>
									<string>^"([^\d]+)(\d+)"\s+(.+)$</string>
								</regexCodeList>
								<regexCodePropertyList>
									<integer>1</integer>
								</regexCodePropertyList>
							</Trigger>
						</Trigger>
					</TriggerGroup>
					<Trigger isActive="yes" isFolder="no" isTempTrigger="no" isMultiline="no" isPerlSlashGOption="no" isColorizerTrigger="no" isFilterTrigger="no" isSoundTrigger="no" isColorTrigger="no" isColorTriggerFg="no" isColorTriggerBg="no">
						<name>Agrasha</name>
						<script>snd.send("say I want to fight Agrasha")</script>
						<triggerType>0</triggerType>
						<conditonLineDelta>0</conditonLineDelta>
						<mStayOpen>0</mStayOpen>
						<mCommand></mCommand>
						<packageName></packageName>
						<mFgColor>#ff0000</mFgColor>
						<mBgColor>#ffff00</mBgColor>
						<mSoundFile></mSoundFile>
						<colorTriggerFgColor>#000000</colorTriggerFgColor>
						<colorTriggerBgColor>#000000</colorTriggerBgColor>
						<regexCodeList>
							<string>Kali, keeper of the pit says, "Aha! Another soul has come to see Agrasha, the feared Spider! Are you brave enough to descend to Agrasha's lair and test your strength, though, \w+? The reward can be hefty, but so is the loss!"</string>
						</regexCodeList>
						<regexCodePropertyList>
							<integer>1</integer>
						</regexCodePropertyList>
					</Trigger>
					<TriggerGroup isActive="yes" isFolder="yes" isTempTrigger="no" isMultiline="no" isPerlSlashGOption="no" isColorizerTrigger="no" isFilterTrigger="no" isSoundTrigger="no" isColorTrigger="no" isColorTriggerFg="no" isColorTriggerBg="no">
						<name>Rainforest</name>
						<script></script>
						<triggerType>0</triggerType>
						<conditonLineDelta>0</conditonLineDelta>
						<mStayOpen>0</mStayOpen>
						<mCommand></mCommand>
						<packageName></packageName>
						<mFgColor>#ff0000</mFgColor>
						<mBgColor>#ffff00</mBgColor>
						<mSoundFile></mSoundFile>
						<colorTriggerFgColor>#000000</colorTriggerFgColor>
						<colorTriggerBgColor>#000000</colorTriggerBgColor>
						<regexCodeList />
						<regexCodePropertyList />
						<Trigger isActive="yes" isFolder="no" isTempTrigger="no" isMultiline="no" isPerlSlashGOption="no" isColorizerTrigger="no" isFilterTrigger="no" isSoundTrigger="no" isColorTrigger="no" isColorTriggerFg="no" isColorTriggerBg="no">
							<name>Bruce</name>
							<script>snd.send("give sapphire to bruce")</script>
							<triggerType>0</triggerType>
							<conditonLineDelta>0</conditonLineDelta>
							<mStayOpen>0</mStayOpen>
							<mCommand></mCommand>
							<packageName></packageName>
							<mFgColor>#ff0000</mFgColor>
							<mBgColor>#ffff00</mBgColor>
							<mSoundFile></mSoundFile>
							<colorTriggerFgColor>#000000</colorTriggerFgColor>
							<colorTriggerBgColor>#000000</colorTriggerBgColor>
							<regexCodeList>
								<string>Bruce the Collector stands nearby with odd objects of many sizes and shapes shoved into his pockets. </string>
							</regexCodeList>
							<regexCodePropertyList>
								<integer>0</integer>
							</regexCodePropertyList>
						</Trigger>
						<Trigger isActive="yes" isFolder="no" isTempTrigger="no" isMultiline="no" isPerlSlashGOption="no" isColorizerTrigger="no" isFilterTrigger="no" isSoundTrigger="no" isColorTrigger="no" isColorTriggerFg="no" isColorTriggerBg="no">
							<name>give sapphire</name>
							<script>snd.send("give sapphire to bruce")</script>
							<triggerType>0</triggerType>
							<conditonLineDelta>0</conditonLineDelta>
							<mStayOpen>0</mStayOpen>
							<mCommand></mCommand>
							<packageName></packageName>
							<mFgColor>#ff0000</mFgColor>
							<mBgColor>#ffff00</mBgColor>
							<mSoundFile></mSoundFile>
							<colorTriggerFgColor>#000000</colorTriggerFgColor>
							<colorTriggerBgColor>#000000</colorTriggerBgColor>
							<regexCodeList>
								<string>You give a beautiful rough sapphire to Bruce the Collector.</string>
							</regexCodeList>
							<regexCodePropertyList>
								<integer>3</integer>
							</regexCodePropertyList>
						</Trigger>
					</TriggerGroup>
					<Trigger isActive="yes" isFolder="no" isTempTrigger="no" isMultiline="no" isPerlSlashGOption="no" isColorizerTrigger="no" isFilterTrigger="no" isSoundTrigger="no" isColorTrigger="no" isColorTriggerFg="no" isColorTriggerBg="no">
						<name>Agrasha start</name>
						<script>expandAlias("aa")</script>
						<triggerType>0</triggerType>
						<conditonLineDelta>0</conditonLineDelta>
						<mStayOpen>0</mStayOpen>
						<mCommand></mCommand>
						<packageName></packageName>
						<mFgColor>#ff0000</mFgColor>
						<mBgColor>#ffff00</mBgColor>
						<mSoundFile></mSoundFile>
						<colorTriggerFgColor>#000000</colorTriggerFgColor>
						<colorTriggerBgColor>#000000</colorTriggerBgColor>
						<regexCodeList>
							<string>Kali grabs you by your arm and drags you towards a nearly invisible trap door. Flinging it open, he pushes you into the dark depths. For what seems like eternity you slide down a muck-covered tunnel, landing at last with a thump in the web-filled cavern of the feared Spider.</string>
						</regexCodeList>
						<regexCodePropertyList>
							<integer>3</integer>
						</regexCodePropertyList>
					</Trigger>
				</TriggerGroup>
				<TriggerGroup isActive="yes" isFolder="yes" isTempTrigger="no" isMultiline="no" isPerlSlashGOption="no" isColorizerTrigger="no" isFilterTrigger="no" isSoundTrigger="no" isColorTrigger="no" isColorTriggerFg="no" isColorTriggerBg="no">
					<name>Utilities</name>
					<script></script>
					<triggerType>0</triggerType>
					<conditonLineDelta>0</conditonLineDelta>
					<mStayOpen>0</mStayOpen>
					<mCommand></mCommand>
					<packageName></packageName>
					<mFgColor>#ff0000</mFgColor>
					<mBgColor>#ffff00</mBgColor>
					<mSoundFile></mSoundFile>
					<colorTriggerFgColor>#000000</colorTriggerFgColor>
					<colorTriggerBgColor>#000000</colorTriggerBgColor>
					<regexCodeList />
					<regexCodePropertyList />
					<TriggerGroup isActive="yes" isFolder="yes" isTempTrigger="no" isMultiline="no" isPerlSlashGOption="no" isColorizerTrigger="no" isFilterTrigger="no" isSoundTrigger="no" isColorTrigger="no" isColorTriggerFg="no" isColorTriggerBg="no">
						<name>Toxicology</name>
						<script></script>
						<triggerType>0</triggerType>
						<conditonLineDelta>0</conditonLineDelta>
						<mStayOpen>0</mStayOpen>
						<mCommand></mCommand>
						<packageName></packageName>
						<mFgColor>#ff0000</mFgColor>
						<mBgColor>#ffff00</mBgColor>
						<mSoundFile></mSoundFile>
						<colorTriggerFgColor>#000000</colorTriggerFgColor>
						<colorTriggerBgColor>#000000</colorTriggerBgColor>
						<regexCodeList />
						<regexCodePropertyList />
						<Trigger isActive="yes" isFolder="no" isTempTrigger="no" isMultiline="no" isPerlSlashGOption="no" isColorizerTrigger="no" isFilterTrigger="no" isSoundTrigger="no" isColorTrigger="no" isColorTriggerFg="no" isColorTriggerBg="no">
							<name>milking</name>
							<script>snd.send("qeb milk "..matches[2].." into fluidcache")</script>
							<triggerType>0</triggerType>
							<conditonLineDelta>0</conditonLineDelta>
							<mStayOpen>0</mStayOpen>
							<mCommand></mCommand>
							<packageName></packageName>
							<mFgColor>#ff0000</mFgColor>
							<mBgColor>#ffff00</mBgColor>
							<mSoundFile></mSoundFile>
							<colorTriggerFgColor>#000000</colorTriggerFgColor>
							<colorTriggerBgColor>#000000</colorTriggerBgColor>
							<regexCodeList>
								<string>^You milk \d+ doses of (\w+) into your fluidcache, consuming the venom sacs on hand\.$</string>
							</regexCodeList>
							<regexCodePropertyList>
								<integer>1</integer>
							</regexCodePropertyList>
						</Trigger>
						<Trigger isActive="yes" isFolder="no" isTempTrigger="no" isMultiline="no" isPerlSlashGOption="no" isColorizerTrigger="no" isFilterTrigger="no" isSoundTrigger="no" isColorTrigger="no" isColorTriggerFg="no" isColorTriggerBg="no">
							<name>casks</name>
							<script>snd.send("qeb milk "..matches[2].." into cask")</script>
							<triggerType>0</triggerType>
							<conditonLineDelta>0</conditonLineDelta>
							<mStayOpen>0</mStayOpen>
							<mCommand></mCommand>
							<packageName></packageName>
							<mFgColor>#ff0000</mFgColor>
							<mBgColor>#ffff00</mBgColor>
							<mSoundFile></mSoundFile>
							<colorTriggerFgColor>#000000</colorTriggerFgColor>
							<colorTriggerBgColor>#000000</colorTriggerBgColor>
							<regexCodeList>
								<string>^Preparing your tools, you carefully squeeze and milk out a dose of (\w+) into a small wooden cask, consuming the venom sacs in hand\.$</string>
							</regexCodeList>
							<regexCodePropertyList>
								<integer>1</integer>
							</regexCodePropertyList>
						</Trigger>
						<Trigger isActive="yes" isFolder="no" isTempTrigger="no" isMultiline="no" isPerlSlashGOption="no" isColorizerTrigger="no" isFilterTrigger="no" isSoundTrigger="no" isColorTrigger="no" isColorTriggerFg="no" isColorTriggerBg="no">
							<name>rags</name>
							<script>snd.send("qeb craft rag")</script>
							<triggerType>0</triggerType>
							<conditonLineDelta>0</conditonLineDelta>
							<mStayOpen>0</mStayOpen>
							<mCommand></mCommand>
							<packageName></packageName>
							<mFgColor>#ff0000</mFgColor>
							<mBgColor>#ffff00</mBgColor>
							<mSoundFile></mSoundFile>
							<colorTriggerFgColor>#000000</colorTriggerFgColor>
							<colorTriggerBgColor>#000000</colorTriggerBgColor>
							<regexCodeList>
								<string>Taking care with your work, you quickly patch together a simple rag.</string>
							</regexCodeList>
							<regexCodePropertyList>
								<integer>3</integer>
							</regexCodePropertyList>
						</Trigger>
						<Trigger isActive="yes" isFolder="no" isTempTrigger="no" isMultiline="no" isPerlSlashGOption="no" isColorizerTrigger="no" isFilterTrigger="no" isSoundTrigger="no" isColorTrigger="no" isColorTriggerFg="no" isColorTriggerBg="no">
							<name>venoms missing</name>
							<script>snd.my_venoms = {}</script>
							<triggerType>0</triggerType>
							<conditonLineDelta>0</conditonLineDelta>
							<mStayOpen>200</mStayOpen>
							<mCommand></mCommand>
							<packageName></packageName>
							<mFgColor>#ff0000</mFgColor>
							<mBgColor>#ffff00</mBgColor>
							<mSoundFile></mSoundFile>
							<colorTriggerFgColor>#000000</colorTriggerFgColor>
							<colorTriggerBgColor>#000000</colorTriggerBgColor>
							<regexCodeList>
								<string>==============================[     Venoms      ]==============================</string>
							</regexCodeList>
							<regexCodePropertyList>
								<integer>3</integer>
							</regexCodePropertyList>
							<Trigger isActive="yes" isFolder="no" isTempTrigger="no" isMultiline="no" isPerlSlashGOption="no" isColorizerTrigger="no" isFilterTrigger="no" isSoundTrigger="no" isColorTrigger="no" isColorTriggerFg="no" isColorTriggerBg="no">
								<name>venom line</name>
								<script>table.insert(snd.my_venoms, matches[2])
table.insert(snd.my_venoms, matches[3])</script>
								<triggerType>0</triggerType>
								<conditonLineDelta>0</conditonLineDelta>
								<mStayOpen>0</mStayOpen>
								<mCommand></mCommand>
								<packageName></packageName>
								<mFgColor>#ff0000</mFgColor>
								<mBgColor>#ffff00</mBgColor>
								<mSoundFile></mSoundFile>
								<colorTriggerFgColor>#000000</colorTriggerFgColor>
								<colorTriggerBgColor>#000000</colorTriggerBgColor>
								<regexCodeList>
									<string>^\s+\[\s+\d+\] the venom (\w+)\s+\[\s+\d+\] the venom (\w+)$</string>
								</regexCodeList>
								<regexCodePropertyList>
									<integer>1</integer>
								</regexCodePropertyList>
							</Trigger>
							<Trigger isActive="yes" isFolder="no" isTempTrigger="no" isMultiline="no" isPerlSlashGOption="no" isColorizerTrigger="no" isFilterTrigger="no" isSoundTrigger="no" isColorTrigger="no" isColorTriggerFg="no" isColorTriggerBg="no">
								<name>single venom line</name>
								<script>table.insert(snd.my_venoms, matches[2])</script>
								<triggerType>0</triggerType>
								<conditonLineDelta>0</conditonLineDelta>
								<mStayOpen>0</mStayOpen>
								<mCommand></mCommand>
								<packageName></packageName>
								<mFgColor>#ff0000</mFgColor>
								<mBgColor>#ffff00</mBgColor>
								<mSoundFile></mSoundFile>
								<colorTriggerFgColor>#000000</colorTriggerFgColor>
								<colorTriggerBgColor>#000000</colorTriggerBgColor>
								<regexCodeList>
									<string>^\s+\[\s+\d+\] the venom (\w+)$</string>
								</regexCodeList>
								<regexCodePropertyList>
									<integer>1</integer>
								</regexCodePropertyList>
							</Trigger>
							<Trigger isActive="yes" isFolder="no" isTempTrigger="no" isMultiline="no" isPerlSlashGOption="no" isColorizerTrigger="no" isFilterTrigger="no" isSoundTrigger="no" isColorTrigger="no" isColorTriggerFg="no" isColorTriggerBg="no">
								<name>venoms end</name>
								<script>setTriggerStayOpen("venoms missing", 0)

local all_venoms = {
"sumac",
"xentio",
"oleander",
"eurypteria",
"kalmia",
"digitalis",
"darkshade",
"curare",
"epteth",
"prefarar",
"monkshood",
"euphorbia",
"colocasia",
"oculus",
"hepafarin",
"camus",
"vernalius",
"epseth",
"larkspur",
"slike",
"voyria",
"delphinium",
"vardrax",
"loki",
"aconite",
"selarnia",
"gecko",
"scytherus",
"ouabain"
}

local missing_venoms = {}

for venom in pairs(all_venoms) do
 if not table.contains(snd.my_venoms, all_venoms[venom]) then
  table.insert(missing_venoms, all_venoms[venom])
 end
end
if #missing_venoms &gt;= 1 then
 snd.message("You are missing: &lt;red&gt;"..table.concat(missing_venoms, "&lt;white&gt;,&lt;red&gt; "))
 snd.send(" ")
else
 snd.message("You have all the venoms!")
 snd.send(" ")
end</script>
								<triggerType>0</triggerType>
								<conditonLineDelta>0</conditonLineDelta>
								<mStayOpen>0</mStayOpen>
								<mCommand></mCommand>
								<packageName></packageName>
								<mFgColor>#ff0000</mFgColor>
								<mBgColor>#ffff00</mBgColor>
								<mSoundFile></mSoundFile>
								<colorTriggerFgColor>#000000</colorTriggerFgColor>
								<colorTriggerBgColor>#000000</colorTriggerBgColor>
								<regexCodeList>
									<string>return isPrompt()</string>
								</regexCodeList>
								<regexCodePropertyList>
									<integer>4</integer>
								</regexCodePropertyList>
							</Trigger>
						</Trigger>
					</TriggerGroup>
					<TriggerGroup isActive="no" isFolder="yes" isTempTrigger="no" isMultiline="no" isPerlSlashGOption="no" isColorizerTrigger="no" isFilterTrigger="no" isSoundTrigger="no" isColorTrigger="no" isColorTriggerFg="no" isColorTriggerBg="no">
						<name>Who parser</name>
						<script></script>
						<triggerType>0</triggerType>
						<conditonLineDelta>0</conditonLineDelta>
						<mStayOpen>0</mStayOpen>
						<mCommand></mCommand>
						<packageName></packageName>
						<mFgColor>#ff0000</mFgColor>
						<mBgColor>#ffff00</mBgColor>
						<mSoundFile></mSoundFile>
						<colorTriggerFgColor>#000000</colorTriggerFgColor>
						<colorTriggerBgColor>#000000</colorTriggerBgColor>
						<regexCodeList />
						<regexCodePropertyList />
						<Trigger isActive="yes" isFolder="no" isTempTrigger="no" isMultiline="no" isPerlSlashGOption="no" isColorizerTrigger="no" isFilterTrigger="no" isSoundTrigger="no" isColorTrigger="no" isColorTriggerFg="no" isColorTriggerBg="no">
							<name>Who line</name>
							<script>local person = matches[2]
local room = matches[3]
local vnum = matches[4]

local room_table = snd.who_list[room] or {}
table.insert(room_table, person)
snd.who_list[room] = room_table</script>
							<triggerType>0</triggerType>
							<conditonLineDelta>0</conditonLineDelta>
							<mStayOpen>0</mStayOpen>
							<mCommand></mCommand>
							<packageName></packageName>
							<mFgColor>#ff0000</mFgColor>
							<mBgColor>#ffff00</mBgColor>
							<mSoundFile></mSoundFile>
							<colorTriggerFgColor>#000000</colorTriggerFgColor>
							<colorTriggerBgColor>#000000</colorTriggerBgColor>
							<regexCodeList>
								<string>^\s+(\w+) - (.+?)\s+- (?:v(\d+))?</string>
							</regexCodeList>
							<regexCodePropertyList>
								<integer>1</integer>
							</regexCodePropertyList>
						</Trigger>
						<Trigger isActive="yes" isFolder="no" isTempTrigger="no" isMultiline="no" isPerlSlashGOption="no" isColorizerTrigger="no" isFilterTrigger="no" isSoundTrigger="no" isColorTrigger="no" isColorTriggerFg="no" isColorTriggerBg="no">
							<name>More</name>
							<script>send("more")</script>
							<triggerType>0</triggerType>
							<conditonLineDelta>0</conditonLineDelta>
							<mStayOpen>0</mStayOpen>
							<mCommand></mCommand>
							<packageName></packageName>
							<mFgColor>#ff0000</mFgColor>
							<mBgColor>#ffff00</mBgColor>
							<mSoundFile></mSoundFile>
							<colorTriggerFgColor>#000000</colorTriggerFgColor>
							<colorTriggerBgColor>#000000</colorTriggerBgColor>
							<regexCodeList>
								<string>Type more to continue reading.</string>
							</regexCodeList>
							<regexCodePropertyList>
								<integer>2</integer>
							</regexCodePropertyList>
						</Trigger>
						<Trigger isActive="yes" isFolder="no" isTempTrigger="no" isMultiline="no" isPerlSlashGOption="no" isColorizerTrigger="no" isFilterTrigger="no" isSoundTrigger="no" isColorTrigger="no" isColorTriggerFg="no" isColorTriggerBg="no">
							<name>Total people</name>
							<script>disableTrigger("Who parser")

for room, players in pairs(snd.who_list) do
  if #players &gt; 1 then
    snd.message("&lt;gold&gt;" .. room .. " - &lt;green&gt;" .. #players .. " &lt;white&gt;people\n - " .. table.concat(players, ", "))
  end
end
</script>
							<triggerType>0</triggerType>
							<conditonLineDelta>0</conditonLineDelta>
							<mStayOpen>0</mStayOpen>
							<mCommand></mCommand>
							<packageName></packageName>
							<mFgColor>#ff0000</mFgColor>
							<mBgColor>#ffff00</mBgColor>
							<mSoundFile></mSoundFile>
							<colorTriggerFgColor>#000000</colorTriggerFgColor>
							<colorTriggerBgColor>#000000</colorTriggerBgColor>
							<regexCodeList>
								<string>^There are (\d+) people total online with (\d+) people that are hidden from you.$</string>
							</regexCodeList>
							<regexCodePropertyList>
								<integer>1</integer>
							</regexCodePropertyList>
						</Trigger>
					</TriggerGroup>
					<Trigger isActive="yes" isFolder="no" isTempTrigger="no" isMultiline="no" isPerlSlashGOption="no" isColorizerTrigger="no" isFilterTrigger="no" isSoundTrigger="no" isColorTrigger="no" isColorTriggerFg="no" isColorTriggerBg="no">
						<name>rock crush</name>
						<script>snd.send("qeb rockcrush rock for ink")</script>
						<triggerType>0</triggerType>
						<conditonLineDelta>0</conditonLineDelta>
						<mStayOpen>0</mStayOpen>
						<mCommand></mCommand>
						<packageName></packageName>
						<mFgColor>#ff0000</mFgColor>
						<mBgColor>#ffff00</mBgColor>
						<mSoundFile></mSoundFile>
						<colorTriggerFgColor>#000000</colorTriggerFgColor>
						<colorTriggerBgColor>#000000</colorTriggerBgColor>
						<regexCodeList>
							<string>^You crush an? (the )?\w+ rock in your mighty fist\. When you open your hand, you find (the )?\w+ inks?\.$</string>
						</regexCodeList>
						<regexCodePropertyList>
							<integer>1</integer>
						</regexCodePropertyList>
					</Trigger>
					<Trigger isActive="yes" isFolder="no" isTempTrigger="no" isMultiline="no" isPerlSlashGOption="no" isColorizerTrigger="no" isFilterTrigger="no" isSoundTrigger="no" isColorTrigger="no" isColorTriggerFg="no" isColorTriggerBg="no">
						<name>shop ih</name>
						<script></script>
						<triggerType>0</triggerType>
						<conditonLineDelta>0</conditonLineDelta>
						<mStayOpen>200</mStayOpen>
						<mCommand></mCommand>
						<packageName></packageName>
						<mFgColor>#ff0000</mFgColor>
						<mBgColor>#ffff00</mBgColor>
						<mSoundFile></mSoundFile>
						<colorTriggerFgColor>#000000</colorTriggerFgColor>
						<colorTriggerBgColor>#000000</colorTriggerBgColor>
						<regexCodeList>
							<string>^You can see the following (\d+) objects:$</string>
						</regexCodeList>
						<regexCodePropertyList>
							<integer>1</integer>
						</regexCodePropertyList>
						<Trigger isActive="yes" isFolder="no" isTempTrigger="no" isMultiline="no" isPerlSlashGOption="no" isColorizerTrigger="no" isFilterTrigger="no" isSoundTrigger="no" isColorTrigger="no" isColorTriggerFg="no" isColorTriggerBg="no">
							<name>shop ih end</name>
							<script>setTriggerStayOpen("shop ih", 0)
snd.shopih = false</script>
							<triggerType>0</triggerType>
							<conditonLineDelta>0</conditonLineDelta>
							<mStayOpen>0</mStayOpen>
							<mCommand></mCommand>
							<packageName></packageName>
							<mFgColor>#ff0000</mFgColor>
							<mBgColor>#ffff00</mBgColor>
							<mSoundFile></mSoundFile>
							<colorTriggerFgColor>#000000</colorTriggerFgColor>
							<colorTriggerBgColor>#000000</colorTriggerBgColor>
							<regexCodeList>
								<string>return isPrompt()</string>
							</regexCodeList>
							<regexCodePropertyList>
								<integer>4</integer>
							</regexCodePropertyList>
						</Trigger>
						<Trigger isActive="yes" isFolder="no" isTempTrigger="no" isMultiline="no" isPerlSlashGOption="no" isColorizerTrigger="no" isFilterTrigger="no" isSoundTrigger="no" isColorTrigger="no" isColorTriggerFg="no" isColorTriggerBg="no">
							<name>ih line</name>
							<script>if snd.shopih then
 snd.send("shop price item "..matches[3].." "..snd.shopprice.." shelf "..snd.shopshelf)
end</script>
							<triggerType>0</triggerType>
							<conditonLineDelta>0</conditonLineDelta>
							<mStayOpen>0</mStayOpen>
							<mCommand></mCommand>
							<packageName></packageName>
							<mFgColor>#ff0000</mFgColor>
							<mBgColor>#ffff00</mBgColor>
							<mSoundFile></mSoundFile>
							<colorTriggerFgColor>#000000</colorTriggerFgColor>
							<colorTriggerBgColor>#000000</colorTriggerBgColor>
							<regexCodeList>
								<string>^"([^\d]+)(\d+)"\s+(.*).$</string>
							</regexCodeList>
							<regexCodePropertyList>
								<integer>1</integer>
							</regexCodePropertyList>
						</Trigger>
					</Trigger>
					<Trigger isActive="yes" isFolder="no" isTempTrigger="no" isMultiline="no" isPerlSlashGOption="no" isColorizerTrigger="no" isFilterTrigger="no" isSoundTrigger="no" isColorTrigger="no" isColorTriggerFg="no" isColorTriggerBg="no">
						<name>Room Vnums</name>
						<script>mmp.locateAndEcho(matches[3], matches[4])</script>
						<triggerType>0</triggerType>
						<conditonLineDelta>0</conditonLineDelta>
						<mStayOpen>0</mStayOpen>
						<mCommand></mCommand>
						<packageName></packageName>
						<mFgColor>#ff0000</mFgColor>
						<mBgColor>#ffff00</mBgColor>
						<mSoundFile></mSoundFile>
						<colorTriggerFgColor>#000000</colorTriggerFgColor>
						<colorTriggerBgColor>#000000</colorTriggerBgColor>
						<regexCodeList>
							<string>You divine the location of this death as (.+) in (.+)\.$</string>
						</regexCodeList>
						<regexCodePropertyList>
							<integer>1</integer>
						</regexCodePropertyList>
					</Trigger>
					<Trigger isActive="yes" isFolder="no" isTempTrigger="no" isMultiline="no" isPerlSlashGOption="no" isColorizerTrigger="no" isFilterTrigger="no" isSoundTrigger="no" isColorTrigger="no" isColorTriggerFg="no" isColorTriggerBg="no">
						<name>Zealot farsee</name>
						<script>mmp.locateAndEcho(matches[2])</script>
						<triggerType>0</triggerType>
						<conditonLineDelta>0</conditonLineDelta>
						<mStayOpen>0</mStayOpen>
						<mCommand></mCommand>
						<packageName></packageName>
						<mFgColor>#ff0000</mFgColor>
						<mBgColor>#ffff00</mBgColor>
						<mSoundFile></mSoundFile>
						<colorTriggerFgColor>#000000</colorTriggerFgColor>
						<colorTriggerBgColor>#000000</colorTriggerBgColor>
						<regexCodeList>
							<string>^The hazy scenery of (.+) fills the space briefly before fading away\.$</string>
						</regexCodeList>
						<regexCodePropertyList>
							<integer>1</integer>
						</regexCodePropertyList>
					</Trigger>
					<Trigger isActive="yes" isFolder="no" isTempTrigger="no" isMultiline="no" isPerlSlashGOption="no" isColorizerTrigger="no" isFilterTrigger="no" isSoundTrigger="no" isColorTrigger="no" isColorTriggerFg="no" isColorTriggerBg="no">
						<name>Faster Water Movement w/mmap</name>
						<script>mmp.swim()</script>
						<triggerType>0</triggerType>
						<conditonLineDelta>0</conditonLineDelta>
						<mStayOpen>0</mStayOpen>
						<mCommand></mCommand>
						<packageName></packageName>
						<mFgColor>#ff0000</mFgColor>
						<mBgColor>#ffff00</mBgColor>
						<mSoundFile></mSoundFile>
						<colorTriggerFgColor>#000000</colorTriggerFgColor>
						<colorTriggerBgColor>#000000</colorTriggerBgColor>
						<regexCodeList>
							<string>There's water ahead of you. You'll have to swim to make it through.</string>
						</regexCodeList>
						<regexCodePropertyList>
							<integer>3</integer>
						</regexCodePropertyList>
					</Trigger>
				</TriggerGroup>
				<TriggerGroup isActive="yes" isFolder="yes" isTempTrigger="no" isMultiline="no" isPerlSlashGOption="no" isColorizerTrigger="no" isFilterTrigger="no" isSoundTrigger="no" isColorTrigger="no" isColorTriggerFg="no" isColorTriggerBg="no">
					<name>Fishing v2.0</name>
					<script></script>
					<triggerType>0</triggerType>
					<conditonLineDelta>0</conditonLineDelta>
					<mStayOpen>0</mStayOpen>
					<mCommand></mCommand>
					<packageName></packageName>
					<mFgColor>#ff0000</mFgColor>
					<mBgColor>#ffff00</mBgColor>
					<mSoundFile></mSoundFile>
					<colorTriggerFgColor>#000000</colorTriggerFgColor>
					<colorTriggerBgColor>#000000</colorTriggerBgColor>
					<regexCodeList />
					<regexCodePropertyList />
					<Trigger isActive="yes" isFolder="no" isTempTrigger="no" isMultiline="no" isPerlSlashGOption="no" isColorizerTrigger="no" isFilterTrigger="no" isSoundTrigger="no" isColorTrigger="no" isColorTriggerFg="no" isColorTriggerBg="no">
						<name>fishing prompt</name>
						<script>if auto_fish and fish_update then

	fish_update = false

local linestrength = matches[2]
local fishstrength = matches[3]
local distance = matches[4]

if tonumber(linestrength) &gt;= 90 and tonumber(distance) &gt;= 12 then
	send("qeb fishing cut")
elseif tonumber(linestrength) &gt;= 80 and tonumber(distance) &gt;= 35 then
	send("qeb fishing cut")
elseif tonumber(fishstrength) &gt;= 20 then
	send("qeb fishing lead")
elseif tonumber(linestrength) &lt;= 100 then
	send("qeb fishing reel")

end

end</script>
						<triggerType>0</triggerType>
						<conditonLineDelta>0</conditonLineDelta>
						<mStayOpen>0</mStayOpen>
						<mCommand></mCommand>
						<packageName></packageName>
						<mFgColor>#ff0000</mFgColor>
						<mBgColor>#ffff00</mBgColor>
						<mSoundFile></mSoundFile>
						<colorTriggerFgColor>#000000</colorTriggerFgColor>
						<colorTriggerBgColor>#000000</colorTriggerBgColor>
						<regexCodeList>
							<string>^Line: (\d+)\% Fish: (\d+)\% Distance: (\d+)\%$</string>
						</regexCodeList>
						<regexCodePropertyList>
							<integer>1</integer>
						</regexCodePropertyList>
					</Trigger>
					<Trigger isActive="yes" isFolder="no" isTempTrigger="no" isMultiline="no" isPerlSlashGOption="no" isColorizerTrigger="no" isFilterTrigger="no" isSoundTrigger="no" isColorTrigger="no" isColorTriggerFg="no" isColorTriggerBg="no">
						<name>fishing caught</name>
						<script>Fishingcast = false
Fishingcaught = false
Reeling = "none"
send("qeb fishing cast")
Fishtick = 0</script>
						<triggerType>0</triggerType>
						<conditonLineDelta>0</conditonLineDelta>
						<mStayOpen>0</mStayOpen>
						<mCommand></mCommand>
						<packageName></packageName>
						<mFgColor>#ff0000</mFgColor>
						<mBgColor>#ffff00</mBgColor>
						<mSoundFile></mSoundFile>
						<colorTriggerFgColor>#000000</colorTriggerFgColor>
						<colorTriggerBgColor>#000000</colorTriggerBgColor>
						<regexCodeList>
							<string>^With a mighty heave, you lift (.*) out of the water\.$</string>
							<string>The creature at the other end of your line gives a mighty jerk, snapping its tether and leaving you with an empty pole.</string>
							<string>You use Fishing Catch.</string>
							<string>You use Fishing Spear.</string>
						</regexCodeList>
						<regexCodePropertyList>
							<integer>1</integer>
							<integer>3</integer>
							<integer>3</integer>
							<integer>3</integer>
						</regexCodePropertyList>
					</Trigger>
					<Trigger isActive="yes" isFolder="no" isTempTrigger="no" isMultiline="no" isPerlSlashGOption="no" isColorizerTrigger="no" isFilterTrigger="no" isSoundTrigger="no" isColorTrigger="no" isColorTriggerFg="no" isColorTriggerBg="no">
						<name>FishCast</name>
						<script>Fishingcast = true
Reeling = "none"
Fishtick = 0</script>
						<triggerType>0</triggerType>
						<conditonLineDelta>0</conditonLineDelta>
						<mStayOpen>0</mStayOpen>
						<mCommand></mCommand>
						<packageName></packageName>
						<mFgColor>#ff0000</mFgColor>
						<mBgColor>#ffff00</mBgColor>
						<mSoundFile></mSoundFile>
						<colorTriggerFgColor>#000000</colorTriggerFgColor>
						<colorTriggerBgColor>#000000</colorTriggerBgColor>
						<regexCodeList>
							<string>With a fluid flick of your wrist, you loose the fishhook from its holding place and cast your line into the water.</string>
						</regexCodeList>
						<regexCodePropertyList>
							<integer>3</integer>
						</regexCodePropertyList>
					</Trigger>
					<Trigger isActive="yes" isFolder="no" isTempTrigger="no" isMultiline="yes" isPerlSlashGOption="no" isColorizerTrigger="no" isFilterTrigger="no" isSoundTrigger="no" isColorTrigger="no" isColorTriggerFg="no" isColorTriggerBg="no">
						<name>CaptureFishingHole</name>
						<script>-- Make sure tables actually exist.
if not fishing_holes then
	load_fishing_db()
end

fishing_holes[multimatches[1][2]] = fishing_holes[multimatches[1][2]] or {}

-- Get some basic data.
fishing_holes[multimatches[1][2]].name = multimatches[1][2]
fishing_holes[multimatches[1][2]].type = multimatches[2][2]

-- Track the room.
fishing_holes[multimatches[1][2]].rooms = fishing_holes[multimatches[1][2]].rooms or {}
local found_room = false
for k,v in pairs(fishing_holes[multimatches[1][2]].rooms) do
	if v == gmcp.Room.Info.num then 
		found_room = true
		break
	end
end
if not found_room then
	table.insert(fishing_holes[multimatches[1][2]].rooms, gmcp.Room.Info.num)
end

-- Format the fishing hole contents string so that it can be parsed.
multimatches[2][3] = "|" .. multimatches[2][3]:gsub(", ", "||") .. "|"
multimatches[2][3] = multimatches[2][3]:gsub(" and ", "||")
multimatches[2][3] = multimatches[2][3]:gsub("%|and ", "||")
multimatches[2][3] = multimatches[2][3]:gsub("%|%|%|", "||")

-- Iterate over the fishing hole contents and get the fish in the hole.
local temp_fish = {}
for ftype in multimatches[2][3]:gmatch("%|%d+ of ([%w%s%'%-]+)%|") do	
	table.insert(temp_fish, ftype)
end
for ftype in multimatches[2][3]:gmatch("%|([%w%s%'%-]+)%|") do
	local skip = false
	for tmp in ftype:gmatch("%d of ") do
		skip = true
		break
	end
	if not skip then 
		table.insert(temp_fish, ftype) 
	end
end

-- Make sure our fishing table exists before checking it in the following loop.
fishing_holes[multimatches[1][2]].fish = fishing_holes[multimatches[1][2]].fish or {}
for k, v in pairs(fishing_holes[multimatches[1][2]].fish) do
	if v == "unfamiliar creatures" then
		table.remove(fishing_holes[multimatches[1][2]].fish, k)
		break
	end
end

for _, ftype in pairs(temp_fish) do
	local found = false
	for k,v in pairs(fishing_holes[multimatches[1][2]].fish) do
		if ftype == v then 
			found = true
			break
		end
	end
	if not found then table.insert(fishing_holes[multimatches[1][2]].fish, ftype) end
end

-- Save data.
save_fishing_db()</script>
						<triggerType>0</triggerType>
						<conditonLineDelta>1</conditonLineDelta>
						<mStayOpen>0</mStayOpen>
						<mCommand></mCommand>
						<packageName></packageName>
						<mFgColor>#ff0000</mFgColor>
						<mBgColor>#ffff00</mBgColor>
						<mSoundFile></mSoundFile>
						<colorTriggerFgColor>#000000</colorTriggerFgColor>
						<colorTriggerBgColor>#000000</colorTriggerBgColor>
						<regexCodeList>
							<string>^You are standing within (.+)\.$</string>
							<string>^The (.+) teem with (.+).</string>
						</regexCodeList>
						<regexCodePropertyList>
							<integer>1</integer>
							<integer>1</integer>
						</regexCodePropertyList>
					</Trigger>
					<Trigger isActive="yes" isFolder="no" isTempTrigger="no" isMultiline="no" isPerlSlashGOption="no" isColorizerTrigger="yes" isFilterTrigger="no" isSoundTrigger="no" isColorTrigger="no" isColorTriggerFg="no" isColorTriggerBg="no">
						<name>no more</name>
						<script>	echo("Autofishing disabled.\n")
	auto_fish = false
	Reeling = "none"
Fishingcast = false
Fishingcaught = false
Fishtick = 0
	if currently_fishing then send("qeb fishing cut") end
	currently_fishing = false</script>
						<triggerType>0</triggerType>
						<conditonLineDelta>0</conditonLineDelta>
						<mStayOpen>0</mStayOpen>
						<mCommand></mCommand>
						<packageName></packageName>
						<mFgColor>#ff0000</mFgColor>
						<mBgColor>#000000</mBgColor>
						<mSoundFile></mSoundFile>
						<colorTriggerFgColor>#000000</colorTriggerFgColor>
						<colorTriggerBgColor>#000000</colorTriggerBgColor>
						<regexCodeList>
							<string>You sense that you will be unable to catch any of the fish that remain here.</string>
						</regexCodeList>
						<regexCodePropertyList>
							<integer>3</integer>
						</regexCodePropertyList>
					</Trigger>
					<Trigger isActive="yes" isFolder="no" isTempTrigger="no" isMultiline="no" isPerlSlashGOption="no" isColorizerTrigger="no" isFilterTrigger="no" isSoundTrigger="no" isColorTrigger="no" isColorTriggerFg="no" isColorTriggerBg="no">
						<name>Fishing tick</name>
						<script>if Fishingcaught then
	send("qeb fishing reel")
end
Fishtick = Fishtick + 1
if tonumber(Fishtick) &gt; 15 then
	send("qeb fishing discern")
end</script>
						<triggerType>0</triggerType>
						<conditonLineDelta>0</conditonLineDelta>
						<mStayOpen>0</mStayOpen>
						<mCommand></mCommand>
						<packageName></packageName>
						<mFgColor>#ff0000</mFgColor>
						<mBgColor>#ffff00</mBgColor>
						<mSoundFile></mSoundFile>
						<colorTriggerFgColor>#000000</colorTriggerFgColor>
						<colorTriggerBgColor>#000000</colorTriggerBgColor>
						<regexCodeList>
							<string>You use Fishing (tick).</string>
						</regexCodeList>
						<regexCodePropertyList>
							<integer>3</integer>
						</regexCodePropertyList>
					</Trigger>
					<Trigger isActive="yes" isFolder="no" isTempTrigger="no" isMultiline="no" isPerlSlashGOption="no" isColorizerTrigger="no" isFilterTrigger="no" isSoundTrigger="no" isColorTrigger="no" isColorTriggerFg="no" isColorTriggerBg="no">
						<name>Fishing failed or failed</name>
						<script>Fishingcast = false
Fishingcaught = false
Reeling = "none"
send("qeb fishing cast")</script>
						<triggerType>0</triggerType>
						<conditonLineDelta>0</conditonLineDelta>
						<mStayOpen>0</mStayOpen>
						<mCommand></mCommand>
						<packageName></packageName>
						<mFgColor>#ff0000</mFgColor>
						<mBgColor>#ffff00</mBgColor>
						<mSoundFile></mSoundFile>
						<colorTriggerFgColor>#000000</colorTriggerFgColor>
						<colorTriggerBgColor>#000000</colorTriggerBgColor>
						<regexCodeList>
							<string>You use Fishing Disappointment.</string>
						</regexCodeList>
						<regexCodePropertyList>
							<integer>3</integer>
						</regexCodePropertyList>
					</Trigger>
					<Trigger isActive="yes" isFolder="no" isTempTrigger="no" isMultiline="no" isPerlSlashGOption="no" isColorizerTrigger="no" isFilterTrigger="no" isSoundTrigger="no" isColorTrigger="no" isColorTriggerFg="no" isColorTriggerBg="no">
						<name>Fishing stopped</name>
						<script>Reeling = "none"
Fishingcast = false
Fishingcaught = false
Fishtick = 0
currently_fishing = false</script>
						<triggerType>0</triggerType>
						<conditonLineDelta>0</conditonLineDelta>
						<mStayOpen>0</mStayOpen>
						<mCommand></mCommand>
						<packageName></packageName>
						<mFgColor>#ff0000</mFgColor>
						<mBgColor>#ffff00</mBgColor>
						<mSoundFile></mSoundFile>
						<colorTriggerFgColor>#000000</colorTriggerFgColor>
						<colorTriggerBgColor>#000000</colorTriggerBgColor>
						<regexCodeList>
							<string>You reel in your line and cease fishing.</string>
						</regexCodeList>
						<regexCodePropertyList>
							<integer>3</integer>
						</regexCodePropertyList>
					</Trigger>
					<Trigger isActive="yes" isFolder="no" isTempTrigger="no" isMultiline="no" isPerlSlashGOption="no" isColorizerTrigger="no" isFilterTrigger="no" isSoundTrigger="no" isColorTrigger="no" isColorTriggerFg="no" isColorTriggerBg="no">
						<name>You use Fishing Cut.</name>
						<script>Fishingcast = false
Fishingcaught = false
Reeling = "none"
if currently_fishing then send("queue bal fishing cast") end</script>
						<triggerType>0</triggerType>
						<conditonLineDelta>0</conditonLineDelta>
						<mStayOpen>0</mStayOpen>
						<mCommand></mCommand>
						<packageName></packageName>
						<mFgColor>#ff0000</mFgColor>
						<mBgColor>#ffff00</mBgColor>
						<mSoundFile></mSoundFile>
						<colorTriggerFgColor>#000000</colorTriggerFgColor>
						<colorTriggerBgColor>#000000</colorTriggerBgColor>
						<regexCodeList>
							<string>You use Fishing Cut.</string>
						</regexCodeList>
						<regexCodePropertyList>
							<integer>3</integer>
						</regexCodePropertyList>
					</Trigger>
					<Trigger isActive="yes" isFolder="no" isTempTrigger="no" isMultiline="no" isPerlSlashGOption="no" isColorizerTrigger="no" isFilterTrigger="no" isSoundTrigger="no" isColorTrigger="no" isColorTriggerFg="no" isColorTriggerBg="no">
						<name>FishNeedUpdate</name>
						<script>fish_update = true
Fishtick = 0</script>
						<triggerType>0</triggerType>
						<conditonLineDelta>0</conditonLineDelta>
						<mStayOpen>0</mStayOpen>
						<mCommand></mCommand>
						<packageName></packageName>
						<mFgColor>#ff0000</mFgColor>
						<mBgColor>#ffff00</mBgColor>
						<mSoundFile></mSoundFile>
						<colorTriggerFgColor>#000000</colorTriggerFgColor>
						<colorTriggerBgColor>#000000</colorTriggerBgColor>
						<regexCodeList>
							<string>You reel frantically against</string>
							<string>You guide the pole to one side, leading the fighting creature</string>
							<string>With a fluid flick of your wrist, you loose the fishhook</string>
							<string>The fish tugs wearily against your line.</string>
							<string>Your line jerks sharply down as your hook finds a home in something.</string>
						</regexCodeList>
						<regexCodePropertyList>
							<integer>0</integer>
							<integer>0</integer>
							<integer>0</integer>
							<integer>0</integer>
							<integer>0</integer>
						</regexCodePropertyList>
					</Trigger>
					<Trigger isActive="yes" isFolder="no" isTempTrigger="no" isMultiline="no" isPerlSlashGOption="no" isColorizerTrigger="no" isFilterTrigger="no" isSoundTrigger="no" isColorTrigger="no" isColorTriggerFg="no" isColorTriggerBg="no">
						<name>FishAuto</name>
						<script>currently_fishing = false
if auto_fish then
  send("qeb fishing cast")
end</script>
						<triggerType>0</triggerType>
						<conditonLineDelta>0</conditonLineDelta>
						<mStayOpen>0</mStayOpen>
						<mCommand></mCommand>
						<packageName></packageName>
						<mFgColor>#ff0000</mFgColor>
						<mBgColor>#ffff00</mBgColor>
						<mSoundFile></mSoundFile>
						<colorTriggerFgColor>#000000</colorTriggerFgColor>
						<colorTriggerBgColor>#000000</colorTriggerBgColor>
						<regexCodeList>
							<string>With a mighty heave, you lift </string>
							<string>The creature at the other end of your line gives a mighty jerk, snapping its tether and leaving you with an empty pole.</string>
							<string>You lightly nick your taut line, which snaps in a whoosh of released tension.</string>
							<string>You're not fishing yet! Try FISHING CAST at a fishing hole to get started.</string>
						</regexCodeList>
						<regexCodePropertyList>
							<integer>0</integer>
							<integer>0</integer>
							<integer>0</integer>
							<integer>0</integer>
						</regexCodePropertyList>
					</Trigger>
					<Trigger isActive="yes" isFolder="no" isTempTrigger="no" isMultiline="no" isPerlSlashGOption="no" isColorizerTrigger="no" isFilterTrigger="no" isSoundTrigger="no" isColorTrigger="no" isColorTriggerFg="no" isColorTriggerBg="no">
						<name>FishCast</name>
						<script>currently_fishing = true</script>
						<triggerType>0</triggerType>
						<conditonLineDelta>0</conditonLineDelta>
						<mStayOpen>0</mStayOpen>
						<mCommand></mCommand>
						<packageName></packageName>
						<mFgColor>#ff0000</mFgColor>
						<mBgColor>#ffff00</mBgColor>
						<mSoundFile></mSoundFile>
						<colorTriggerFgColor>#000000</colorTriggerFgColor>
						<colorTriggerBgColor>#000000</colorTriggerBgColor>
						<regexCodeList>
							<string>With a fluid flick of your wrist, you loose the fishhook</string>
						</regexCodeList>
						<regexCodePropertyList>
							<integer>0</integer>
						</regexCodePropertyList>
					</Trigger>
					<Trigger isActive="yes" isFolder="no" isTempTrigger="no" isMultiline="no" isPerlSlashGOption="no" isColorizerTrigger="no" isFilterTrigger="no" isSoundTrigger="no" isColorTrigger="no" isColorTriggerFg="no" isColorTriggerBg="no">
						<name>FishStart</name>
						<script></script>
						<triggerType>0</triggerType>
						<conditonLineDelta>0</conditonLineDelta>
						<mStayOpen>0</mStayOpen>
						<mCommand></mCommand>
						<packageName></packageName>
						<mFgColor>#ff0000</mFgColor>
						<mBgColor>#ffff00</mBgColor>
						<mSoundFile></mSoundFile>
						<colorTriggerFgColor>#000000</colorTriggerFgColor>
						<colorTriggerBgColor>#000000</colorTriggerBgColor>
						<regexCodeList>
							<string>Your line jerks sharply down as your hook finds a home in something.</string>
							<string>You use Fishing (hit).</string>
						</regexCodeList>
						<regexCodePropertyList>
							<integer>0</integer>
							<integer>0</integer>
						</regexCodePropertyList>
					</Trigger>
					<Trigger isActive="yes" isFolder="no" isTempTrigger="no" isMultiline="no" isPerlSlashGOption="no" isColorizerTrigger="no" isFilterTrigger="no" isSoundTrigger="no" isColorTrigger="no" isColorTriggerFg="no" isColorTriggerBg="no">
						<name>Lead</name>
						<script>send("qeb fishing lead")</script>
						<triggerType>0</triggerType>
						<conditonLineDelta>0</conditonLineDelta>
						<mStayOpen>0</mStayOpen>
						<mCommand></mCommand>
						<packageName></packageName>
						<mFgColor>#ff0000</mFgColor>
						<mBgColor>#ffff00</mBgColor>
						<mSoundFile></mSoundFile>
						<colorTriggerFgColor>#000000</colorTriggerFgColor>
						<colorTriggerBgColor>#000000</colorTriggerBgColor>
						<regexCodeList>
							<string>Your line jerks sharply down as your hook finds a home in something.</string>
						</regexCodeList>
						<regexCodePropertyList>
							<integer>0</integer>
						</regexCodePropertyList>
					</Trigger>
					<Trigger isActive="yes" isFolder="no" isTempTrigger="no" isMultiline="no" isPerlSlashGOption="no" isColorizerTrigger="no" isFilterTrigger="no" isSoundTrigger="no" isColorTrigger="no" isColorTriggerFg="no" isColorTriggerBg="no">
						<name>Speed up fishing</name>
						<script>if snd.class == "Archivist" and tonumber(gmcp.Char.Vitals.bio) &gt; 0 then
	send("qeb bio steroid")
end
Fishtick = 0</script>
						<triggerType>0</triggerType>
						<conditonLineDelta>0</conditonLineDelta>
						<mStayOpen>0</mStayOpen>
						<mCommand></mCommand>
						<packageName></packageName>
						<mFgColor>#ff0000</mFgColor>
						<mBgColor>#ffff00</mBgColor>
						<mSoundFile></mSoundFile>
						<colorTriggerFgColor>#000000</colorTriggerFgColor>
						<colorTriggerBgColor>#000000</colorTriggerBgColor>
						<regexCodeList>
							<string>You use Fishing Lead.</string>
							<string>You use Fishing Reel.</string>
						</regexCodeList>
						<regexCodePropertyList>
							<integer>3</integer>
							<integer>3</integer>
						</regexCodePropertyList>
					</Trigger>
					<Trigger isActive="yes" isFolder="no" isTempTrigger="no" isMultiline="no" isPerlSlashGOption="no" isColorizerTrigger="no" isFilterTrigger="no" isSoundTrigger="no" isColorTrigger="no" isColorTriggerFg="no" isColorTriggerBg="no">
						<name>fishing hit</name>
						<script>snd.send("qeb fishing reel")</script>
						<triggerType>0</triggerType>
						<conditonLineDelta>0</conditonLineDelta>
						<mStayOpen>0</mStayOpen>
						<mCommand></mCommand>
						<packageName></packageName>
						<mFgColor>#ff0000</mFgColor>
						<mBgColor>#ffff00</mBgColor>
						<mSoundFile></mSoundFile>
						<colorTriggerFgColor>#000000</colorTriggerFgColor>
						<colorTriggerBgColor>#000000</colorTriggerBgColor>
						<regexCodeList>
							<string>Your line jerks sharply down as your hook finds a home in something.</string>
						</regexCodeList>
						<regexCodePropertyList>
							<integer>0</integer>
						</regexCodePropertyList>
					</Trigger>
				</TriggerGroup>
			</TriggerGroup>
		</TriggerGroup>
	</TriggerPackage>
	<TimerPackage>
		<TimerGroup isActive="yes" isFolder="yes" isTempTimer="no" isOffsetTimer="no">
			<name>mudlet-mapper</name>
			<script></script>
			<command></command>
			<packageName>mudlet-mapper</packageName>
			<time></time>
			<TimerGroup isActive="yes" isFolder="yes" isTempTimer="no" isOffsetTimer="no">
				<name>Mudlet Mapper</name>
				<script></script>
				<command></command>
				<packageName></packageName>
				<time>00:00:00.000</time>
				<Timer isActive="yes" isFolder="no" isTempTimer="no" isOffsetTimer="no">
					<name>Check for updates periodically</name>
					<script>mmp.checkforupdate()</script>
					<command></command>
					<packageName></packageName>
					<time>01:00:00.000</time>
				</Timer>
			</TimerGroup>
		</TimerGroup>
	</TimerPackage>
	<AliasPackage>
		<AliasGroup isActive="yes" isFolder="yes">
			<name>mudlet-mapper</name>
			<script></script>
			<command></command>
			<packageName>mudlet-mapper</packageName>
			<regex></regex>
			<AliasGroup isActive="yes" isFolder="yes">
				<name>Mudlet Mapper</name>
				<script>mudlet = mudlet or {}; mudlet.mapper_script = true</script>
				<command></command>
				<packageName></packageName>
				<regex></regex>
				<Alias isActive="yes" isFolder="no">
					<name>Go to ID or area</name>
					<script>local where = matches[2]:lower()
local gallop
if command:ends("gallop") then
  gallop = "gallop"
  where = where:sub(1, -8)
elseif command:ends("sprint") then
  gallop = "sprint"
  where = where:sub(1, -8)
elseif command:ends("dash") then
  gallop = "dash"
  where = where:sub(1, -6)
elseif command:ends("runaway") then
  gallop = "runaway"
  where = where:sub(1, -9)
elseif command:ends("glide") then
  gallop = "glide"
  where = where:sub(1, -7)
end
if mmp.debug then
  mmp.gotoPerf = mmp.gotoPerf or createStopWatch()
  startStopWatch(mmp.gotoPerf)
end
-- goto room ID
if tonumber(where) then
  mmp.gotoRoom(where, gallop)
else
  -- goto area or feature
  local split = where:split(" ")
  if split[1] == "feature" then
	  table.remove(split, 1)
    mmp.gotoFeature(table.concat(split, " "), gallop)
  else
    if tonumber(split[#split]) then
      mmp.gotoArea(where:sub(1, -#(split[#split]) - 2), tonumber(split[#split]), gallop)
    else
      mmp.gotoArea(where, nil, gallop)
    end
  end
end
if mmp.debug then
  mmp.echo("goto alias took " .. stopStopWatch(mmp.gotoPerf) .. "s to run.")
end</script>
					<command></command>
					<packageName></packageName>
					<regex>^goto (.+)$</regex>
				</Alias>
				<Alias isActive="yes" isFolder="no">
					<name>View roomID or area</name>
					<script>local where = matches[2]

if not where then
	centerview(mmp.currentroom)
elseif tonumber(where) then -- view a room ID
	centerview(where)
else -- view an area
	mmp.viewArea (where)
end</script>
					<command></command>
					<packageName></packageName>
					<regex>^mmap ?(.+)?$</regex>
				</Alias>
				<Alias isActive="yes" isFolder="no">
					<name>Toggle pause</name>
					<script>mmp.pause(matches[2])</script>
					<command></command>
					<packageName></packageName>
					<regex>^mpp(?:\s?(on|off))?$</regex>
				</Alias>
				<Alias isActive="yes" isFolder="no">
					<name>Stop walking</name>
					<script>mmp.stop()</script>
					<command></command>
					<packageName></packageName>
					<regex>^mstop$</regex>
				</Alias>
				<Alias isActive="yes" isFolder="no">
					<name>Option</name>
					<script>if not matches[2] then
	mmp.settings:showAllOptions(mmp.game)
	return
end

local val = matches[4]
if val == "true" or val == "yes" or val == "on" then val = true end
if val == "false" or val == "no" or val == "off" then val = false end

mmp.settings:setOption(matches[3], val)</script>
					<command></command>
					<packageName></packageName>
					<regex>^mconfig( (\w+) (.*))?$</regex>
				</Alias>
				<Alias isActive="yes" isFolder="no">
					<name>Display area for lock/unlock</name>
					<script>mmp.doLockArea(matches[2])</script>
					<command></command>
					<packageName></packageName>
					<regex>^arealock(?: (.*))?$</regex>
				</Alias>
				<Alias isActive="yes" isFolder="no">
					<name>Add a room label</name>
					<script>mmp.roomLabel(matches[2])</script>
					<command></command>
					<packageName></packageName>
					<regex>^room label (.+)$</regex>
				</Alias>
				<Alias isActive="yes" isFolder="no">
					<name>View/delete area labels</name>
					<script>mmp.areaLabels(matches[2])</script>
					<command></command>
					<packageName></packageName>
					<regex>^area labels ?(.+)?$</regex>
				</Alias>
				<Alias isActive="yes" isFolder="no">
					<name>Room find</name>
					<script>mmp.roomFind(matches[2])</script>
					<command></command>
					<packageName></packageName>
					<regex>^(?:rf|room find) (.+)$</regex>
				</Alias>
				<Alias isActive="yes" isFolder="no">
					<name>Room look</name>
					<script>mmp.roomLook(matches[2])</script>
					<command></command>
					<packageName></packageName>
					<regex>^(?:rl|room look)(?: (.+))?$</regex>
				</Alias>
				<Alias isActive="yes" isFolder="no">
					<name>Room list</name>
					<script>mmp.echoRoomList(matches[2] or mmp.areatabler[getRoomArea(mmp.currentroom)])</script>
					<command></command>
					<packageName></packageName>
					<regex>^room list(?: (.+))?$</regex>
				</Alias>
				<Alias isActive="yes" isFolder="no">
					<name>Area list</name>
					<script>mmp.echoAreaList()</script>
					<command></command>
					<packageName></packageName>
					<regex>^area list$</regex>
				</Alias>
				<AliasGroup isActive="no" isFolder="yes">
					<name>mm Mapping</name>
					<script></script>
					<command></command>
					<packageName></packageName>
					<regex></regex>
					<Alias isActive="yes" isFolder="no">
						<name>Manually set the room coordinates</name>
						<script>-- want the current room, but we're lost
if matches[2] == '' and (not mmp.currentroom or not mmp.roomexists(mmp.currentroom)) then mmp.echo("Don't know where we are at the moment.") return end

-- want another room, but it doesn't actually exist
if matches[2] ~= '' and not mmp.roomexists(matches[2]) then mmp.echo("v"..matches[2].." doesn't exist.") return end

local m = matches[3]
local rid, rname = (matches[2] ~= "" and matches[2] or mmp.currentroom),
  (matches[2] ~= "" and getRoomName(matches[2]) or mmp.currentroomname)
local x,y,z

local function set() -- small func to set things
  setRoomCoordinates(rid, x, y, z)
  mmp.echo(string.format("%s (%d) is now at %dx, %dy, %dz.\n", rname, rid, x,y,z))
  centerview(rid)
end

-- let's be flexible and allow several ways if giving an arg
-- rc x y z
x,y,z = string.match(m, "(%-?%d+) (%-?%d+) (%-?%d+)")
if x then
  set(); return
end

-- rc xx? yy? zz?
x,y,z = string.match(m, "(%-?%d+)x"), string.match(m, "(%-?%d+)y"), string.match(m, "(%-?%d+)z")
if x or y or z then
  -- merge w/ old coords if any are missing
  local ox, oy, oz = getRoomCoordinates(rid)
  x = x or ox; y = y or oy; z = z or oz
  set(); return
end

-- rc left/west, right/east, ...
local ox, oy, oz = getRoomCoordinates(rid)
local has = table.contains
for w in string.gmatch(m, "%a+") do
  if has({"west", "left", "w", "l"}, w) then
    x = (x or ox) - 1; y = (y or oy); z = (z or oz)
  elseif has({"east", "right", "e", "r"}, w) then
    x = (x or ox) + 1; y = (y or oy); z = (z or oz)
  elseif has({"north", "top", "n", "t"}, w) then
    x = (x or ox); y = (y or oy) + 1; z = (z or oz)
  elseif has({"south", "bottom", "s", "b"}, w) then
    x = (x or ox); y = (y or oy) - 1; z = (z or oz)
  elseif has({"northwest", "topleft", "nw", "tl"}, w) then
    x = (x or ox) - 1; y = (y or oy) + 1; z = (z or oz)
  elseif has({"northeast", "topright", "ne", "tr"}, w) then
    x = (x or ox) + 1; y = (y or oy) + 1; z = (z or oz)
  elseif has({"southeast", "bottomright", "se", "br"}, w) then
    x = (x or ox) + 1; y = (y or oy) - 1; z = (z or oz)
  elseif has({"southwest", "bottomleft", "sw", "bl"}, w) then
    x = (x or ox) - 1; y = (y or oy) - 1; z = (z or oz)
  elseif has({"up", "u"}, w) then
    x = (x or ox); y = (y or oy); z = (z or oz) + 1
  elseif has({"down", "d"}, w) then
    x = (x or ox); y = (y or oy); z = (z or oz) - 1
  end

end
if x then set(); return end

mmp.echo([[Where do you want to move the room to?
  You can use direct coordinates or relative directions.]])</script>
						<command></command>
						<packageName></packageName>
						<regex>^(?:rc|room coords) (?:v(\d+) )?(.+)$</regex>
					</Alias>
					<Alias isActive="yes" isFolder="no">
						<name>Add a special exit</name>
						<script>-- spe clear and spe list match on this
if matches[2] == "clear" or matches[2] == "list" then return end

-- need the current room, but we're lost
if not mmp.currentroom or not mmp.roomexists(mmp.currentroom) then mmp.echo("Don't know where we are at the moment.") return end

local otherroom = tonumber(matches[2]) or mmp.relativeroom(mmp.currentroom, matches[2])

-- need the another room, but it doesn't actually exist
if not otherroom or not mmp.roomexists(otherroom) then mmp.echo(matches[2].." doesn't exist.") return end

addSpecialExit(mmp.currentroom, tonumber(otherroom), matches[3])
addSpecialExit(mmp.currentroom, tonumber(otherroom), matches[3])
mmp.echo(string.format("Added special exit with command '%s' to %s (%d).", matches[3], getRoomName(otherroom), otherroom))
centerview(mmp.currentroom)</script>
						<command></command>
						<packageName></packageName>
						<regex>^(?:spe|exit special) (\w+) (.+)$</regex>
					</Alias>
					<Alias isActive="yes" isFolder="no">
						<name>Add a special exit from one remote room to another</name>
						<script>local room1, room2 = tonumber(matches[2]), tonumber(matches[3])

if not room1 or not mmp.roomexists(room1) then
  mmp.echo("Room #"..matches[2].." doesn't exist - create it first, or make sure you got the room ID right?")
  return
end

if not room2 or not mmp.roomexists(room2) then
  mmp.echo("Room #"..matches[3].." doesn't exist - create it first, or make sure you got the room ID right?")
  return
end

addSpecialExit(room1, room2, matches[4])
mmp.echo(string.format("Added special exit with command '%s' to from %s (%d) to %s (%d).", matches[4], getRoomName(room1), room1, getRoomName(room2), room2))</script>
						<command></command>
						<packageName></packageName>
						<regex>^spev (\d+) (\d+) (.+)$</regex>
					</Alias>
					<Alias isActive="yes" isFolder="no">
						<name>List special exits</name>
						<script>mmp.listSpecialExits(matches[2])</script>
						<command></command>
						<packageName></packageName>
						<regex>^spe list(?: (.+))?$</regex>
					</Alias>
					<Alias isActive="yes" isFolder="no">
						<name>Clear all special exits</name>
						<script>-- want the current room, but we're lost
if not matches[2] and (not mmp.currentroom or not mmp.roomexists(mmp.currentroom)) then mmp.echo("Don't know where we are at the moment.") return end

-- want another room, but it doesn't exist
if matches[2] and tonumber(matches[2]) and not mmp.roomexists(matches[2]) then mmp.echo("v"..matches[2].." doesn't exist.") return end

-- or a relative one
if matches[2] and not tonumber(matches[2]) and not mmp.relativeroom(mmp.currentroom, matches[2]) then mmp.echo("There is no room "..matches[2].. " of us.") return end

local rid = (not matches[2] and mmp.currentroom or (tonumber(matches[2]) or mmp.relativeroom(mmp.currentroom, matches[2])))

clearSpecialExits(rid)
mmp.echo(string.format("Cleared all special exits in %s (%d).\n", getRoomName(rid), rid))</script>
						<command></command>
						<packageName></packageName>
						<regex>^(?:spe clear|exit special clear) ?(\w+)?$</regex>
					</Alias>
					<Alias isActive="yes" isFolder="no">
						<name>Create a room</name>
						<script>local m = matches[2]
if m:starts("feature") then
  -- another alias was meant.
  return
end
local rid, rname
if mmp.roomexists(mmp.currentroom) then
  rid, rname = mmp.currentroom, mmp.currentroomname
end
local x, y, z

local function set(newid)
  -- small func to set things
  local rid = newid or createRoomID()
  addRoom(rid)
  setRoomCoordinates(rid, x, y, z)
  if mmp.roomexists(mmp.currentroom) then
    setRoomArea(rid, getRoomArea(mmp.currentroom))
  end
  if mmp.roomexists(mmp.currentroom) then
    setRoomEnv(rid, getRoomEnv(mmp.currentroom))
  end
  setExit(mmp.currentroom, rid, m)
  mmp.echo(string.format("Created new room (%d) at %dx, %dy, %dz.\n", rid, x, y, z))
  centerview(mmp.roomexists(mmp.currentroom) and mmp.currentroom or rid)
  if not mmp.roomexists(mmp.currentroom) then
    mmp.currentroom = rid;
    mmp.currentroomname = ""
  end
end

-- let's be flexible and allow several ways if giving an arg
-- rc v# x y z
newid, x, y, z = string.match(m, "v(%d+) (%-?%d+) (%-?%d+) (%-?%d+)")
if x then
  set(newid);
  return
end
-- rc x y z
x, y, z = string.match(m, "(%-?%d+) (%-?%d+) (%-?%d+)")
if x then
  set();
  return
end
if not rid then
  mmp.echo("Don't know where we are at the moment in order to use relative coordinates.")
  return
end
-- rc xx? yy? zz?
x, y, z = string.match(m, "(%-?%d+)x"), string.match(m, "(%-?%d+)y"), string.match(m, "(%-?%d+)z")
if x or y or z then
  -- merge w/ old coords if any are missing
  local ox, oy, oz = getRoomCoordinates(rid)
  x = x or ox;
  y = y or oy;
  z = z or oz
  set();
  return
end
-- rc left/west, right/east, ...
local ox, oy, oz = getRoomCoordinates(rid)
local has = table.contains
for w in string.gmatch(m, "%a+") do
  if has({"west", "left", "w", "l"}, w) then
    x = (x or ox) - 1;
    y = (y or oy);
    z = (z or oz)
  elseif has({"east", "right", "e", "r"}, w) then
    x = (x or ox) + 1;
    y = (y or oy);
    z = (z or oz)
  elseif has({"north", "top", "n", "t"}, w) then
    x = (x or ox);
    y = (y or oy) + 1;
    z = (z or oz)
  elseif has({"south", "bottom", "s", "b"}, w) then
    x = (x or ox);
    y = (y or oy) - 1;
    z = (z or oz)
  elseif has({"northwest", "topleft", "nw", "tl"}, w) then
    x = (x or ox) - 1;
    y = (y or oy) + 1;
    z = (z or oz)
  elseif has({"northeast", "topright", "ne", "tr"}, w) then
    x = (x or ox) + 1;
    y = (y or oy) + 1;
    z = (z or oz)
  elseif has({"southeast", "bottomright", "se", "br"}, w) then
    x = (x or ox) + 1;
    y = (y or oy) - 1;
    z = (z or oz)
  elseif has({"southwest", "bottomleft", "sw", "bl"}, w) then
    x = (x or ox) - 1;
    y = (y or oy) - 1;
    z = (z or oz)
  elseif has({"up", "u"}, w) then
    x = (x or ox);
    y = (y or oy);
    z = (z or oz) + 1
  elseif has({"down", "d"}, w) then
    x = (x or ox);
    y = (y or oy);
    z = (z or oz) - 1
  end
end
if x then
  set();
  return
end
mmp.echo(
  [[Where do you want to move the room to?
  You can use direct coordinates or relative directions.]]
)</script>
						<command></command>
						<packageName></packageName>
						<regex>^(?:rlc|room create) (.+)?$</regex>
					</Alias>
					<Alias isActive="yes" isFolder="no">
						<name>Create a link between two rooms</name>
						<script>-- need the current room, but we're lost
if not mmp.currentroom or not mmp.roomexists(mmp.currentroom) then mmp.echo("Don't know where we are at the moment.") return end

-- make sure the dir is valid
local dir = mmp.anytolong(matches[3])
if not dir then mmp.echo(matches[3].." isn't a valid normal exit.") return end

-- if we don't give a room number, then we want to auto-locate an appropriate room nearby.
local otherroom
if matches[2] == "" then
  local w = matches[3]
  local ox, oy, oz, x,y,z = getRoomCoordinates(mmp.currentroom)
  local has = table.contains
  if has({"west", "left", "w", "l"}, w) then
    x = (x or ox) - 1; y = (y or oy); z = (z or oz)
  elseif has({"east", "right", "e", "r"}, w) then
    x = (x or ox) + 1; y = (y or oy); z = (z or oz)
  elseif has({"north", "top", "n", "t"}, w) then
    x = (x or ox); y = (y or oy) + 1; z = (z or oz)
  elseif has({"south", "bottom", "s", "b"}, w) then
    x = (x or ox); y = (y or oy) - 1; z = (z or oz)
  elseif has({"northwest", "topleft", "nw", "tl"}, w) then
    x = (x or ox) - 1; y = (y or oy) + 1; z = (z or oz)
  elseif has({"northeast", "topright", "ne", "tr"}, w) then
    x = (x or ox) + 1; y = (y or oy) + 1; z = (z or oz)
  elseif has({"southeast", "bottomright", "se", "br"}, w) then
    x = (x or ox) + 1; y = (y or oy) - 1; z = (z or oz)
  elseif has({"southwest", "bottomleft", "sw", "bl"}, w) then
    x = (x or ox) - 1; y = (y or oy) - 1; z = (z or oz)
  elseif has({"up", "u"}, w) then
    x = (x or ox); y = (y or oy); z = (z or oz) + 1
  elseif has({"down", "d"}, w) then
    x = (x or ox); y = (y or oy); z = (z or oz) - 1
  end

  local carea = getRoomArea(mmp.currentroom)
  if not carea then mmp.echo("Don't know what area are we in.") return end

  otherroom = select(2, next(getRoomsByPosition(carea,x,y,z)))

  if not otherroom then
    mmp.echo("There isn't a room to the "..w.." that I see - try with an exact room id.") return
  end

else
  if not mmp.roomexists(matches[2]) then -- check that an explicit other room ID is valid
    mmp.echo("A room with id "..matches[2].. " doesn't exist.") return
  else
    otherroom = tonumber(matches[2])
  end
end

if setExit(mmp.currentroom, otherroom, matches[3]) then
  if not matches[4] then setExit(otherroom, mmp.currentroom, mmp.ranytolong(matches[3])) end

  mmp.echo(string.format("Linked %s (%d) to %s (%d) via a %s%s exit.",
    (getRoomName(mmp.currentroom) ~= "" and getRoomName(mmp.currentroom) or "''"), mmp.currentroom, (getRoomName(otherroom) ~= "" and getRoomName(otherroom) or "''"), otherroom, (matches[4] and "one-way " or ''), matches[3]))
else
  mmp.echo("Couldn't create an exit.")
end
centerview(mmp.currentroom)</script>
						<command></command>
						<packageName></packageName>
						<regex>^(?:rlk|room link) ?(\d+)? (\w+)( one)?$</regex>
					</Alias>
					<Alias isActive="yes" isFolder="no">
						<name>Delete a room</name>
						<script>-- want the current room, but we're lost
if not matches[2] and (not mmp.currentroom or not mmp.roomexists(mmp.currentroom)) then mmp.echo("Don't know where we are at the moment.") return end

-- want another room, but it doesn't exist
if matches[2] and tonumber(matches[2]) and not mmp.roomexists(matches[2]) then mmp.echo("v"..matches[2].." doesn't exist.") return end

-- or a relative one
if matches[2] and not tonumber(matches[2]) and not mmp.relativeroom(mmp.currentroom, matches[2]) then mmp.echo("There is no room "..matches[2].. " of us.") return end

local rid = (not matches[2] and mmp.currentroom or (tonumber(matches[2]) or mmp.relativeroom(mmp.currentroom, matches[2])))

local n = getRoomName(rid)
deleteRoom(rid)
mmp.echo(string.format("Deleted the %s (%d) room.\n", (n ~= "" and n or "''"), rid))
centerview(mmp.currentroom)</script>
						<command></command>
						<packageName></packageName>
						<regex>^(?:rld|room delete) ?(\w+)?$</regex>
					</Alias>
					<Alias isActive="yes" isFolder="no">
						<name>Delete a link</name>
						<script>-- need the current room, but we're lost
if not mmp.currentroom or not mmp.roomexists(mmp.currentroom) then mmp.echo("Don't know where we are at the moment.") return end

-- make sure the dir is valid
local dir = mmp.anytolong(matches[2])
if not dir then mmp.echo(matches[2].." isn't a valid normal exit.") return end

-- gone already?
if not getRoomExits(mmp.currentroom)[dir] then mmp.echo(dir.." link doesn't exist already.") end

-- locate the room on the other end, so we can unlink it from there as well if necessary
local otherroom
if getRoomExits(getRoomExits(mmp.currentroom)[dir])[mmp.ranytolong(dir)] then
  otherroom = getRoomExits(mmp.currentroom)[dir]
end

if setExit(mmp.currentroom, -1, dir) then
  if otherroom then
    if setExit(otherroom, -1, mmp.ranytolong(dir)) then
      mmp.echo(string.format("Deleted the %s exit from %s (%d).",
        dir, getRoomName(mmp.currentroom), mmp.currentroom))
     else mmp.echo("Couldn't delete the incoming exit.") end
  else
    mmp.echo(string.format("Deleted the one-way %s exit from %s (%d).",
      dir, getRoomName(mmp.currentroom), mmp.currentroom))
  end
else
  mmp.echo("Couldn't delete the outgoing exit.")
end
centerview(mmp.currentroom)</script>
						<command></command>
						<packageName></packageName>
						<regex>^(?:urlk|room unlink) (\w+)$</regex>
					</Alias>
					<Alias isActive="yes" isFolder="no">
						<name>Move room to another area</name>
						<script>mmp.roomArea(matches[2], matches[3])</script>
						<command></command>
						<packageName></packageName>
						<regex>^room area (?:v(\d+) )?(.+)$</regex>
					</Alias>
					<Alias isActive="yes" isFolder="no">
						<name>Set a room character</name>
						<script>local room = matches[3] or mmp.currentroom
room = tonumber(room) or mmp.relativeroom(mmp.currentroom, room)
if not room or not mmp.roomexists(room) then
  mmp.echo("Sorry - which room do you want to put this character in? I don't know where you are at the moment, if you want to do the current room.")
  return
end

local char = matches[2]

if char == "clear" then
  setRoomChar(room, ' ')
  mmp.echo("Cleared the character from "..room.." ("..getRoomName(room)..")")
else
  setRoomChar(room, char)
  mmp.echo("Set the "..char:sub(1,1).." character on "..room.." ("..getRoomName(room)..")")
end
centerview(mmp.currentroom)</script>
						<command></command>
						<packageName></packageName>
						<regex>^rcc ([^ ]+)(?: (\w+))?$</regex>
					</Alias>
					<Alias isActive="yes" isFolder="no">
						<name>Set room weight</name>
						<script>local weight = tonumber(matches[3]), room
if matches[2] == '' then room = mmp.currentroom
else
  room = tonumber(matches[2]) or mmp.relativeroom(mmp.currentroom, matches[2])
end

if not room or not mmp.roomexists(room) then
  mmp.echo("Sorry - which room do you want to set the weight on? I don't know where you are at the moment, if you want to do the current room.")
  return
end

if not weight then
  mmp.echo("What weight do you want to set on #"..room.."?")
end

local oldweight = getRoomWeight(room)
setRoomWeight(room, weight)

if weight &gt; oldweight then
  mmp.echo("Increased the room weight on #"..room.." ("..getRoomName(room)..") by "..(weight-oldweight).." to "..weight.." - making it less desirable to travel through.")
elseif weight &lt; oldweight then
  mmp.echo("Decreased the room weight on #"..room.." ("..getRoomName(room)..") by "..(oldweight-weight).." to "..weight.." - making it more desirable to travel through.")
else
  mmp.echo("The room weight on #"..room.." ("..getRoomName(room)..") is already "..weight..".")
end</script>
						<command></command>
						<packageName></packageName>
						<regex>^rw(?: (\w+))? (\d+)$</regex>
					</Alias>
					<Alias isActive="yes" isFolder="no">
						<name>Set exit weight</name>
						<script>local room = (matches[2] ~= "" and tonumber(matches[2]) or mmp.currentroom)

local weight, exit = tonumber(matches[3]), matches[4]

if not roomExists(room) then mmp.echo("Room "..room.." doesn't exist. It has to before we can set weights on exits.") return end

setExitWeight(room, exit, weight)

mmp.echo(string.format("Set the weight on the %d room going %s to %s. If it's a two-way exit, please set the reverse exit as well.", room, exit, weight))</script>
						<command></command>
						<packageName></packageName>
						<regex>^rwe(?: (\d+))? (\d+) (.+)$</regex>
					</Alias>
					<Alias isActive="yes" isFolder="no">
						<name>Add/delete doors</name>
						<script>local room = (matches[2] ~= "" and tonumber(matches[2]) or mmp.currentroom)

local direction, status = matches[3], matches[4]

if not roomExists(room) then mmp.echo("Room "..room.." doesn't exist. It has to before we can make doors in it.") return end

local validdirs = {'e', 's', 'w', 'n', 'ne', 'se', 'sw', 'nw', 'in', 'out', 'up', 'down'}

if not table.contains(validdirs, direction) then
  mmp.echo("Can't make a door in the '"..direction.."' direction - available choices are:\n  "..table.concat(validdirs, ', '))
  return
end

local statusnum

if status == "" or status == "open" or status == "o" then
  statusnum = 1
elseif status == "closed" or status ==  "c" then
  statusnum = 2
elseif status == "locked" or status ==  "l" then
  statusnum = 3
elseif status == "clear" or status == "gone" then
  statusnum = 0
end

if not statusnum then mmp.echo("Unrecognized option - a door can be open, closed, locked or gone.") return end

setDoor(room, direction, statusnum)

if statusnum == 0 then
  mmp.echo("OK, door removed.")
else
  mmp.echo("OK, door added/adjusted.")
end</script>
						<command></command>
						<packageName></packageName>
						<regex>^rd(?: (\d+))? (\w+)(?: (\w+))?$</regex>
					</Alias>
					<Alias isActive="no" isFolder="no">
						<name>-- (area functions)</name>
						<script></script>
						<command></command>
						<packageName></packageName>
						<regex></regex>
					</Alias>
					<Alias isActive="yes" isFolder="no">
						<name>Create an area</name>
						<script>local t = getAreaTable(); local tr = {}; for k,v in pairs(t) do tr[v] = k end
local newid = table.maxn(tr) + 1

setAreaName( newid, matches[2] )
mmp.echo(string.format("Created new area %s (%d)", matches[2], newid))
centerview(mmp.currentroom)
raiseEvent("mmp areas changed")</script>
						<command></command>
						<packageName></packageName>
						<regex>^area add (.+)$</regex>
					</Alias>
					<Alias isActive="yes" isFolder="no">
						<name>Delete an area</name>
						<script>mmp.deleteArea(matches[2])</script>
						<command></command>
						<packageName></packageName>
						<regex>^area delete (.+)$</regex>
					</Alias>
					<Alias isActive="yes" isFolder="no">
						<name>Cancel area deletion</name>
						<script>if not mmp.deletingarea then mmp.echo("I wasn't deleting any areas already.") return end

local areaname = mmp.deletingarea.areaname
mmp.deletingarea = nil

mmp.echo("Stopped deleting rooms in the '"..areaname.."'. The area is partially missing its rooms now, you'll want to restart the process to finish it.")</script>
						<command></command>
						<packageName></packageName>
						<regex>^cancel area deletion$</regex>
					</Alias>
					<Alias isActive="yes" isFolder="no">
						<name>Rename an area</name>
						<script>mmp.renameArea(matches[2])</script>
						<command></command>
						<packageName></packageName>
						<regex>^area rename (.+)$</regex>
					</Alias>
					<Alias isActive="yes" isFolder="no">
						<name>List continents</name>
						<script>local continents = mmp.getcontinents()

if not next(continents) then mmp.echo("No continents known.")
else
  for continent, areadata in pairs(continents) do
    mmp.echo(continent.." continent:")

    for _, areaid in ipairs(areadata) do
      cecho("  "..getRoomAreaName(areaid).."\n")
    end
  end
end</script>
						<command></command>
						<packageName></packageName>
						<regex>^(?:acl|area continents)$</regex>
					</Alias>
					<Alias isActive="yes" isFolder="no">
						<name>Add area to continent</name>
						<script>-- aca continent [optional area]

local continent = matches[2]:title()
local area
if not matches[3] then area = getRoomArea(mmp.currentroom)
elseif tonumber(matches[3]) then
  area = tonumber(matches[3])
  if getRoomAreaName(area) == -1 then area = nil end
else
  local areas = getAreaTable()

  for karea, id in pairs(areas) do if karea:lower():find(matches[3]:lower(), 1, true) then area = id break end end
end

if not area then mmp.echo(matches[3].." isn't a known area. Which one do you want to set?") return end

local res, error = mmp.addcontinent(area, continent)
if res then
  mmp.echo("Recorded that "..getRoomAreaName(area).." is on the "..continent.." continent.")
else
  mmp.echo(error)
end</script>
						<command></command>
						<packageName></packageName>
						<regex>^aca ([\w']+)(?: (.+))?$</regex>
					</Alias>
					<Alias isActive="yes" isFolder="no">
						<name>remove area from continent</name>
						<script>-- acr continent [optional area]

local continent = matches[2]:title()
local area
if not matches[3] then area = getRoomArea(mmp.currentroom)
elseif tonumber(matches[3]) then
  area = tonumber(matches[3])
  if getRoomAreaName(area) == -1 then area = nil end
else
  local areas = getAreaTable()

  for karea, id in pairs(areas) do if karea:lower():find(matches[3]:lower(), 1, true) then area = id break end end
end

if not area then mmp.echo(matches[3].." isn't a known area. Which one do you want to set?") return end

local res, error = mmp.removecontinent(area, continent)
if res then
  mmp.echo("Recorded that "..getRoomAreaName(area).." is not on the "..continent.." continent.")
else
  mmp.echo(error)
end</script>
						<command></command>
						<packageName></packageName>
						<regex>^acr ([\w']+)(?: (.+))?$</regex>
					</Alias>
					<Alias isActive="yes" isFolder="no">
						<name>Add/remove a ferry room</name>
						<script>local room = tonumber(matches[2])

if matches[3] == "add" then
  if mmp.ferry_rooms[room] then
    mmp.echo("Ferry room #"..room.." is already recorded as such.") return
  else
    mmp.ferry_rooms[room] = true; mmp.echo("Added #"..room.." to be a ferry room.")
  end
else
  if not mmp.ferry_rooms[room] then
    mmp.echo("Room #"..room.." isn't a ferry one already.") return
  else
    mmp.ferry_rooms[room] = nil; mmp.echo("Removed #"..room.." from being a ferry room.")
  end
end

local keys = {}; for k,_ in pairs(mmp.ferry_rooms) do keys[#keys+1] = k end

setRoomUserData(1, "ferry rooms", yajl.to_string(keys))</script>
						<command></command>
						<packageName></packageName>
						<regex>^fr (\d+) (add|remove)$</regex>
					</Alias>
					<Alias isActive="yes" isFolder="no">
						<name>Show ferry rooms</name>
						<script>mmp.echo("Ferry rooms available:")
if not next(mmp.ferry_rooms) then  mmp.echo("(none)") return end

for k, _ in pairs(mmp.ferry_rooms) do
  mmp.echo(string.format("  (%d) - %s\n", k, getRoomName(k)))
end</script>
						<command></command>
						<packageName></packageName>
						<regex>^fr show$</regex>
					</Alias>
					<Alias isActive="yes" isFolder="no">
						<name>Weight ferry exits</name>
						<script>local ferryCommands = {
  ["buy passage to"] = {"achaea"},
  ["takeoff to"] = {"starmourn"},
  ["station transfer to"] = {"starmourn"}
}
local c = 0
local weight = 200
for area in pairs(mmp.areatabler) do
  local rooms = getAreaRooms(area) or {}
  for i = 0, #rooms do
    local exits = getSpecialExits(rooms[i] or 0)
    if exits and next(exits) then
      for exit, cmd in pairs(exits) do
        if type(cmd) == "table" then
          cmd = next(cmd)
        end
        local lowerCommand = cmd:lower()
        local found = false
        for ferryCommand, games in pairs(ferryCommands) do
          if table.contains(games, mmp.game) and lowerCommand:find(ferryCommand, 1, true) then
            found = true
            break
          end
        end
        if found then
          setExitWeight(rooms[i], cmd, weight)
          mmp.echo(
            "Weighted " .. cmd .. " going to " .. rooms[i] .. " (" .. getRoomName(rooms[i]) .. ")."
          )
          c = c + 1
        end
      end
    end
  end
end
mmp.echo(
  string.format(
    "%s ferry exits weighted to %s (so we don't take them over too short distances).", c, weight
  )
)</script>
						<command></command>
						<packageName></packageName>
						<regex>^weight ferry exits$</regex>
					</Alias>
					<Alias isActive="no" isFolder="no">
						<name>-- (Map feature functions)</name>
						<script></script>
						<command></command>
						<packageName></packageName>
						<regex></regex>
					</Alias>
					<Alias isActive="yes" isFolder="no">
						<name>Create map feature</name>
						<script>mmp.createMapFeature(matches[2]:trim(), (matches[3] and matches[3]:trim()))</script>
						<command></command>
						<packageName></packageName>
						<regex>^feature create (.+?)(?: char (.+))?$</regex>
					</Alias>
					<Alias isActive="yes" isFolder="no">
						<name>List map features</name>
						<script>mmp.listMapFeatures()</script>
						<command></command>
						<packageName></packageName>
						<regex>^feature list$</regex>
					</Alias>
					<Alias isActive="yes" isFolder="no">
						<name>Add map feature to room</name>
						<script>mmp.roomCreateMapFeature(matches[3], matches[2] == "" and mmp.currentroom or tonumber(matches[2]))</script>
						<command></command>
						<packageName></packageName>
						<regex>^(?:room create feature|rcf) (?:v(\d+) )?(.+)$</regex>
					</Alias>
					<Alias isActive="yes" isFolder="no">
						<name>Delete map feature from room</name>
						<script>mmp.roomDeleteMapFeature(matches[3], matches[2] == "" and mmp.currentroom or tonumber(matches[2]))</script>
						<command></command>
						<packageName></packageName>
						<regex>^(?:room delete feature|rdf) (?:v(\d+) )?(.+)$</regex>
					</Alias>
					<Alias isActive="yes" isFolder="no">
						<name>Delete map feature</name>
						<script>mmp.deleteMapFeature(matches[2]:trim())</script>
						<command></command>
						<packageName></packageName>
						<regex>^feature delete (.+)$</regex>
					</Alias>
					<Alias isActive="yes" isFolder="no">
						<name>migrate features</name>
						<script>local translation
if mmp.game == "starmourn" then
  translation =
  {
    ["@"] = "landing dock",
    ["C"] = "cloning",
    ["R"] = "repair",
    ["$"] = "denizen shop",
    ["I"] = "insurance office",
    ["T"] = "transport",
    ["J"] = "junk",
    ["M"] = "mail",
    ["L"] = "lift",
    ["P"] = "ptp",
    ["TT"] = "trade terminal",
  }
else
  mmp.echo("Sorry, don't know which room character maps to which map feature for your game. Please contact us at https://discord.gg/PPUNnc3 to get this sorted out.")
	return
end
mmp.echo("Migrating room characters to map features...")
for char, feature in pairs(translation) do
  mmp.createMapFeature(feature, char)
end
for key in pairs(getRooms()) do
  local char = getRoomChar(key)
  if char ~= "" then
    if translation[char] then
      if not mmp.roomCreateMapFeature(translation[char], key) then
			  mmp.echo("An error occured when migrating room characters, see messages above for details. Migration incomplete!")
			  return
			end
    end
  end
end
mmp.echo("Migration done.")</script>
						<command></command>
						<packageName></packageName>
						<regex>^feature migrate$</regex>
					</Alias>
					<Alias isActive="no" isFolder="no">
						<name>-- (dangerous functions)</name>
						<script></script>
						<command></command>
						<packageName></packageName>
						<regex></regex>
					</Alias>
					<Alias isActive="yes" isFolder="no">
						<name>Clear the map completely</name>
						<script>if not mmp.map_delete_warning then
  mmp.echo("Are you really, really, really sure you want to delete all of the map to go to a blank state? Do the command again if you're certain.")
  mmp.map_delete_warning = true
  return
end

mmp.echo("Okay, deleting...")

tempTimer(.1, function()
  for name, id in pairs(getAreaTable()) do
    deleteArea(tonumber(id))
  end

  mmp.echo("Deleted everything. It's all gone.")
  mmp.map_delete_warning = nil
  centerview(1)
end)</script>
						<command></command>
						<packageName></packageName>
						<regex>^map delete all$</regex>
					</Alias>
					<Alias isActive="yes" isFolder="no">
						<name>Delete shop stockroom exits</name>
						<script>mmp.echo("Deleting all known stockroom exits (rooms with $ and a down exit)")
local c = 0

for area, areaname in pairs(mmp.areatabler) do
  local rooms = getAreaRooms(area) or {}
  for i = 0, #rooms do
    if rooms[i] then
      local char = getRoomChar(rooms[i])
      if char == '$' then
        local exits = getRoomExits(rooms[i]) -- retrieve after $, more efficient

        if exits.down then
          setExit(rooms[i], -1, 'down')
          mmp.echo(string.format("Deleted the stockroom exit at %s (#%d in %s)", getRoomName(rooms[i]), rooms[i], mmp.areatabler[getRoomArea(rooms[i])]))
          c = c + 1
        end
      end
    end

  end
end

mmp.echo(string.format("Deleted %s known stockroom exit%s.", c, (c ~= 1 and 's' or '')))
centerview(mmp.currentroom)</script>
						<command></command>
						<packageName></packageName>
						<regex>^delete known stockrooms$</regex>
					</Alias>
					<Alias isActive="yes" isFolder="no">
						<name>Clear continent data</name>
						<script>if not mmp.wipingcontinents then
  mmp.wipingcontinents = true
  mmp.echo("Are you sure you want to wipe all continent data? If yes, do this again.")
  return
end
mmp.wipingcontinents = nil

local toserialize = yajl.to_string{}
setRoomUserData(1, "areaContinents", toserialize)
mmp.echo("Wiped all continents data.")</script>
						<command></command>
						<packageName></packageName>
						<regex>^clear continent data$</regex>
					</Alias>
					<Alias isActive="yes" isFolder="no">
						<name>Delete suffixed periods</name>
						<script>mmp.echo("Deleting removing all periods at the end of room names...")
local c = 0

for area, areaname in pairs(mmp.areatabler) do
  local rooms = getAreaRooms(area) or {}
  for i = 0, #rooms do
    local name = getRoomName(rooms[i] or 0)
    if string.ends(name, ".") then
      name = string.sub(name, 1, (#name-1))
      setRoomName(rooms[i], name)
      mmp.echo(string.format("Patched up room #%s - '%s'", rooms[i], name))
      c = c + 1
    end
  end
end

mmp.echo(string.format("Fixed up %s room%s.", c, (c ~= 1 and 's' or '')))</script>
						<command></command>
						<packageName></packageName>
						<regex>^delete suffixed periods$</regex>
					</Alias>
					<Alias isActive="yes" isFolder="no">
						<name>Find single exits</name>
						<script>local c = 0

local getAreaRooms, getRoomExits, contains, echoLink, getRoomEnv, envidsr =
  getAreaRooms, getRoomExits, table.contains, echoLink, getRoomEnv, mmp.envidsr

for area, id in pairs(getAreaTable()) do
  for _, roomid in pairs(getAreaRooms(id)) do
    local exits = getRoomExits(roomid)
    for dir, otherroom in pairs(exits) do
      local otherexits = getRoomExits(otherroom) or {}
      if not contains(otherexits, roomid) then
        echoLink(string.format("%s -&gt; %s is oneway (%s-&gt;%s type)\n", roomid, otherroom,
          (envidsr and envidsr[getRoomEnv(roomid)] or "?"),
          (envidsr and envidsr[getRoomEnv(otherroom)] or "?")),
        [[mmp.gotoRoom(]]..roomid..[[)]], "Click to go to the start room "..roomid, true)
        c = c + 1
     end
    end
  end
end

mmp.echo(string.format("Found %s oneways.%s", c, (c &gt; 10 and " Have fun. Click on lines to go to the rooms." or "")))</script>
						<command></command>
						<packageName></packageName>
						<regex>^find single exits$</regex>
					</Alias>
					<Alias isActive="yes" isFolder="no">
						<name>Show char marks</name>
						<script>local c = 0
local m = {}
local areas = getAreaTable()
local show_area = table.size(areas) &gt; 1 and true or false

for area, id in pairs(areas) do
  for _, roomid in pairs(getAreaRooms(id)) do
    local c = getRoomChar(roomid)
    if c ~= '' and c ~= ' ' then
      m[c] = m[c] or {}
      m[c][#m[c]+1] = roomid
    end
  end
end

if not next(m) then mmp.echo("This map has no char marks on it. Do mc on and rcc &lt;mark&gt; in a room to add them!") return end

for letter, rooms in pairs(m) do
  table.sort(rooms)
  mmp.echo("Rooms with the &lt;"..mmp.settings.echocolour.."&gt;"..letter.."&lt;reset&gt; character on them:")
  for i = 1, #rooms do
    if not show_area then
      cecho(string.format("  &lt;sea_green&gt;%-5s&lt;reset&gt; %s\n", rooms[i], getRoomName(rooms[i])))
    else
      cecho(string.format("  &lt;sea_green&gt;%-5s&lt;reset&gt; %-35s &lt;dim_grey&gt;(in&lt;reset&gt; %s&lt;dim_grey&gt;)\n", rooms[i], getRoomName(rooms[i]), mmp.areatabler[getRoomArea(rooms[i])]))
    end
  end
end</script>
						<command></command>
						<packageName></packageName>
						<regex>^show char marks$</regex>
					</Alias>
					<Alias isActive="yes" isFolder="no">
						<name>Delete all special exits across a map</name>
						<script>mmp.delSpecialExits(matches[2])</script>
						<command></command>
						<packageName></packageName>
						<regex>^spe delete all(?: (.+))?$</regex>
					</Alias>
				</AliasGroup>
				<Alias isActive="yes" isFolder="no">
					<name>Toggle mapping mode</name>
					<script>if (matches[2] and matches[2] == "on") or (not matches[2] and not mmp.editing) then
  mmp.editing = true
  enableAlias("mm Mapping")

  mmp_regenerate_areas()
  mmp.highlight_unfinished_rooms()

  mmp.echo("Mapping mode enabled. Happy mapping!")
elseif (matches[2] and matches[2] == "off") or (not matches[2] and mmp.editing) then
  mmp.editing = false
  disableAlias("mm Mapping")
  mmp.echo("Mapping mode disabled.")
end</script>
					<command></command>
					<packageName></packageName>
					<regex>^(?:mc|map create) ?(on|off)?$</regex>
				</Alias>
				<Alias isActive="yes" isFolder="no">
					<name>Save a map</name>
					<script>local function s(loc)
    if not saveMap(loc) then
      mmp.echo("Couldn't save the map :(")
    else
      if loc ~= "" then mmp.echo("Map saved.") else mmp.echo("Saved the default map.") end
    end
end

if not saveMap then
  mmp.echo("Your Mudlet can't save maps. Please upgrade it!")
else
  if matches[2] and matches[2] == "custom" then
    s(invokeFileDialog(false, "Please select the folder to save the map in and hit Open").."/Mudlet map from "..os.date("%A %d, %b '%y")..".dat")
  elseif matches[2] then
	s(getMudletHomeDir().."/map/"..matches[2])
  else
    s("")
  end
end</script>
					<command></command>
					<packageName></packageName>
					<regex>^map save(?: (.+))?$</regex>
				</Alias>
				<Alias isActive="yes" isFolder="no">
					<name>Load a map</name>
					<script>local function s(loc)
    if not loadMap(loc) then
      mmp.echo("Couldn't load the map :(")
    else
      mmp.lockWormholes(); mmp.lockSewers(); mmp.lockPebble();
      if mmp.settings.waterwalk then mmp.enableWaterWalk() else mmp.disableWaterWalk() end

      if loc ~= "" then mmp.echo("Map loaded.") else mmp.echo("Loaded the default map.") end
      raiseEvent("mmapper updated map")
    end
end

if not loadMap then
  mmp.echo("Your Mudlet can't load maps. Please upgrade it!")
else
  if matches[2] and matches[2] == "custom" then
    s(invokeFileDialog(true, "Please select the map file and click Open to load it"))
  elseif matches[2] then
	s(getMudletHomeDir().."/map/"..matches[2])
  else
    s("")
  end
end</script>
					<command></command>
					<packageName></packageName>
					<regex>^map load(?: (.+))?$</regex>
				</Alias>
				<Alias isActive="yes" isFolder="no">
					<name>Get dirs</name>
					<script>if not matches[2] and not matches[3] then
  mmp.echo("Where do you want to showpath to?")
elseif matches[2] and not matches[3] then
  mmp.echoPath(mmp.currentroom, matches[2])
else
  mmp.echoPath(matches[2], matches[3])
end</script>
					<command></command>
					<packageName></packageName>
					<regex>^showpath(?: (\d+))?(?: (\d+))?$</regex>
				</Alias>
				<Alias isActive="yes" isFolder="no">
					<name>Check wholist</name>
					<script>enableTrigger("Parse wholist")
send("who b")
tempTimer(10, [[disableTrigger'Parse wholist']])</script>
					<command></command>
					<packageName></packageName>
					<regex>^who b$</regex>
				</Alias>
				<Alias isActive="yes" isFolder="no">
					<name>Add Room Mark</name>
					<script>local tmp = getRoomUserData(1, "gotoMapping")
local maptable = {}

if tmp ~= "" then
  maptable = yajl.to_value(tmp)
end

local location, markname
if not matches[3] then
  markname = matches[2]
  location = mmp.currentroom
elseif tonumber(matches[2]) then
  location = matches[2]; markname = matches[3]
else
  location = matches[3]; markname = matches[2]
end

-- can't allow mark name to ne a number - yajl then generates a giant table of null's
if tonumber(markname) then
  mmp.echo("The mark name can't be a number.") return
end

maptable[markname] = location
local tmp2 = yajl.to_string(maptable)

if not mmp.roomexists(1) then
  addRoom(1)
end

setRoomUserData(1, "gotoMapping", tmp2)
mmp.echo(string.format("Room mark for '%s' set to room %s.", markname, location))</script>
					<command></command>
					<packageName></packageName>
					<regex>^room mark (\w+)(?: (\w+))?$</regex>
				</Alias>
				<Alias isActive="yes" isFolder="no">
					<name>Remove Room Mark</name>
					<script>local tmp= getRoomUserData(1, "gotoMapping")
if tmp~="" then
  local maptable=yajl.to_value(tmp)
  if not maptable[matches[2]] then mmp.echo("Don't have such a mark in the db.") return end

  maptable[matches[2]]=nil
  local tmp2=yajl.to_string(maptable)
  setRoomUserData(1, "gotoMapping", tmp2)
  mmp.echo("Removed the "..matches[2].." mark.")
else
  mmp.echo("We don't have any marks stored anyway.")
end</script>
					<command></command>
					<packageName></packageName>
					<regex>^room unmark (\w+)$</regex>
				</Alias>
				<Alias isActive="yes" isFolder="no">
					<name>Display Room Marks</name>
					<script>local tmp= getRoomUserData(1, "gotoMapping")
if tmp~="" then
	local maptable = yajl.to_value(tmp) or {}
    local sortedkeys = {}
    for k in pairs(maptable) do sortedkeys[#sortedkeys+1] = k end
    table.sort(sortedkeys)

    mmp.echo("Known marks in this map:")
    if next(maptable) then
      for i = 1, #sortedkeys do echo(string.format("  %-21s  %s\n", tostring(sortedkeys[i]), tostring(maptable[sortedkeys[i]]))) end
    else
      echo("  (none)\n")
    end
else
	mmp.echo("No marks are recorded in this map.")
end</script>
					<command></command>
					<packageName></packageName>
					<regex>^room marks$</regex>
				</Alias>
				<Alias isActive="yes" isFolder="no">
					<name>Toggle map sizes</name>
					<script>local size = matches[2]

if size == "biggest" then
  mapper = Geyser.Mapper:new({
    name = "mapper",
    x = 0, y = 0,
    width = "100%", height = "97%"
  })
  mmp.echo("Map size set to pretty damn big.")

elseif size == "small" then
  mapper = Geyser.Mapper:new({
    x = "70%", y = 0,
    width = "28%", height = "50%"
  })
  mmp.echo("Map size set to comfortable.")

elseif size == "big" then
  local window_width, window_height = getMainWindowSize()
  local used_width = getMainConsoleWidth()

  local available_space = window_width - used_width

  if matches[3] then available_space = available_space - tonumber(matches[3]) end

  mapper = Geyser.Mapper:new({
    x = available_space*-1, y = 0,
    width = available_space, height = "100%"
  })

  mmp.echo("Set the map size to big - it'll cover all of the space on the right that game text isn't using. You'll want to call this alias again if you resize the window to update.")
end</script>
					<command></command>
					<packageName></packageName>
					<regex>^(small|big|biggest)map(?: (\d+))?$</regex>
				</Alias>
				<Alias isActive="yes" isFolder="no">
					<name>^make maps$</name>
					<script>local c = 0
for _, id in pairs(getAreaTable()) do
  tempTimer(c*.5, [[exportAreaImage(]]..id..[[)]])
  c = c + 1
end
mmp.echo("Done!")</script>
					<command></command>
					<packageName></packageName>
					<regex>^make maps$</regex>
				</Alias>
				<Alias isActive="yes" isFolder="no">
					<name>Set debug mode</name>
					<script>if matches[2] == "on" then
  mmp.debug = true
else
  mmp.debug = false
end

mmp.echo("Debug &amp; performance telemetry "..(mmp.debug and "enabled" or "disabled")..".")</script>
					<command></command>
					<packageName></packageName>
					<regex>^(?:mdg|mdebug) (on|off)$</regex>
				</Alias>
				<Alias isActive="yes" isFolder="no">
					<name>measure getPath()</name>
					<script>mmp = mmp or {}

mmp.getPathPerf = mmp.getPathPerf or createStopWatch()
startStopWatch(mmp.getPathPerf)

local from, to = tonumber(matches[2]), tonumber(matches[3])

getPath(from, to)

mmp.echon = mmp.echon or echo
mmp.echon("a new getPath() from "..from.." to "..to.." took "..stopStopWatch(mmp.getPathPerf).."s. There are "..#speedWalkPath.." rooms to visit in it.")
echo(" ")
echoLink("[unhighlight]", [[
  for room in pairs(mmp.getpathhighlights) do
    unHighlightRoom(room)
  end
]], "Click me to remove highlighting from getpath")

mmp.getpathhighlights = mmp.getpathhighlights or {}

for room in pairs(mmp.getpathhighlights) do
  unHighlightRoom(room)
end

mmp.getpathhighlights = {}

local r,g,b = unpack(color_table.yellow)
local br,bg,bb = unpack(color_table.yellow)
-- add the first room to the speedWalkPath, as we'd like it highlighted as well
table.insert(speedWalkPath, 1, from)
for i = 1, #speedWalkPath do
  local room = speedWalkPath[i]
  highlightRoom(room, r,g,b,br,bg,bb, 1, 255, 255)
  mmp.getpathhighlights[room] = true
end

centerview(from)</script>
					<command></command>
					<packageName></packageName>
					<regex>^getpath (?:from )?(\d+) (?:to )?(\d+)$</regex>
				</Alias>
				<AliasGroup isActive="yes" isFolder="yes">
					<name>Game-specific</name>
					<script></script>
					<command></command>
					<packageName></packageName>
					<regex></regex>
					<AliasGroup isActive="yes" isFolder="yes">
						<name>Lusternia</name>
						<script></script>
						<command></command>
						<packageName></packageName>
						<regex></regex>
						<Alias isActive="yes" isFolder="no">
							<name>Lock or unlock pathfinding exits</name>
							<script>mmp.lockpaths(matches[2]:lower()=="lock")</script>
							<command></command>
							<packageName></packageName>
							<regex>(?i)^(lock|unlock) paths$</regex>
						</Alias>
						<Alias isActive="yes" isFolder="no">
							<name>Link through manse</name>
							<script>local portalRooms = {
gaudiguch="19861",
glomdoring="7747",
celest="6834",
serenwilde="6833",
hallifax="19937",
magnagora="6832",
aetherplex="6831",
}

if mmp.game ~= "lusternia" then return end
matches[2]=matches[2]:lower()
matches[3]=matches[3]:lower()
local manse, city
if portalRooms[matches[2]] then
	city=matches[2]
	manse=matches[3]
elseif portalRooms[matches[3]] then
	city=matches[3]
	manse=matches[2]
else
	mmp.echo("Invalid city")
	return
end
if not gmcp.Room.Info.area:find("(manse)") then
	mmp.echo("You are not in a manse")
else
	if	searchRoom(gmcp.Room.Info.num):sub(0,11)=="searchRoom:" then
		addRoom(gmcp.Room.Info.num)
	end
	if getRoomArea(gmcp.Room.Info.num)==-1 then
		setRoomArea(gmcp.Room.Info.num,addAreaName(manse:title().." Manse"))
	end
	setRoomChar(gmcp.Room.Info.num,"A")
	addSpecialExit(portalRooms[city],gmcp.Room.Info.num,"Portal enter "..manse)
	addSpecialExit(portalRooms["aetherplex"],gmcp.Room.Info.num,"Portal enter "..manse)
	addSpecialExit(gmcp.Room.Info.num,portalRooms["aetherplex"],"portal exit aetherplex")
	addSpecialExit(gmcp.Room.Info.num,portalRooms[city],"portal exit "..city)
	mmp.echo(city:title().." has been linked to the Aetherplex through "..manse:title())
end</script>
							<command></command>
							<packageName></packageName>
							<regex>(?i)^manselink (\w+) (\w+)$</regex>
						</Alias>
						<Alias isActive="yes" isFolder="no">
							<name>Astral jumping boots</name>
							<script>mmp.astroboots(matches[2]:lower()=="on")
mmp.echo("&lt;yellow&gt;Astral jumping "..(matches[2]:lower()=="on" and "enabled" or "disabled").."!")</script>
							<command></command>
							<packageName></packageName>
							<regex>(?i)astroboots (on|off)$</regex>
						</Alias>
						<Alias isActive="yes" isFolder="no">
							<name>Wildnodes toggle</name>
							<script>if mmp.game ~= "lusternia" then return end
mmp.wildnodes(matches[2]:lower()=="on")
mmp.echo("All astral nodes have been "..(matches[2]:lower()=="on" and "" or "un").."linked.")</script>
							<command></command>
							<packageName></packageName>
							<regex>(?i)^nodes (on|off)$</regex>
						</Alias>
					</AliasGroup>
				</AliasGroup>
			</AliasGroup>
		</AliasGroup>
		<AliasGroup isActive="yes" isFolder="yes">
			<name>send-text-to-all-games</name>
			<script></script>
			<command></command>
			<packageName>send-text-to-all-games</packageName>
			<regex></regex>
			<Alias isActive="yes" isFolder="no">
				<name>Send text to all games with :</name>
				<script>-- prefix with : to send text or run an alias in all open profiles that have this script installed
-- for example - :hi or :follow bob
local matchedText = matches[2]
expandAlias(matchedText)
raiseGlobalEvent("sysSendAllProfiles", matchedText)
</script>
				<command></command>
				<packageName></packageName>
				<regex>^:(.*)$</regex>
			</Alias>
		</AliasGroup>
		<AliasGroup isActive="yes" isFolder="yes">
			<name>deleteOldProfiles</name>
			<script></script>
			<command></command>
			<packageName>deleteOldProfiles</packageName>
			<regex></regex>
			<Alias isActive="yes" isFolder="no">
				<name>delete old profiles</name>
				<script>deleteOldProfiles(matches[3], matches[2]=="maps")

--Syntax examples: "delete old profiles"  -&gt; deletes profiles older than 31 days
--					"delete old maps 10"	-&gt; deletes maps older than 10 days</script>
				<command></command>
				<packageName></packageName>
				<regex>^delete old (profiles|maps)(?: (\d+))?$</regex>
			</Alias>
		</AliasGroup>
		<AliasGroup isActive="yes" isFolder="yes">
			<name>echo</name>
			<script></script>
			<command></command>
			<packageName>echo</packageName>
			<regex></regex>
			<Alias isActive="yes" isFolder="no">
				<name>`echo</name>
				<script>local s = matches[2]

s = string.gsub(s, "%$", "\n")
feedTriggers("\n" .. s .. "\n")
echo("\n")</script>
				<command></command>
				<packageName></packageName>
				<regex>`echo (.+)</regex>
			</Alias>
		</AliasGroup>
		<AliasGroup isActive="yes" isFolder="yes">
			<name>run-lua-code-v4</name>
			<script></script>
			<command></command>
			<packageName>run-lua-code-v4</packageName>
			<regex></regex>
			<Alias isActive="yes" isFolder="no">
				<name>run lua code</name>
				<script>local f, e = loadstring("return "..matches[2])
if not f then
  f, e = assert(loadstring(matches[2]))
end

local r =
  function(...)
    if not table.is_empty({...}) then
      display(...)
    end
  end
r(f())</script>
				<command></command>
				<packageName></packageName>
				<regex>^lua (.*)$</regex>
			</Alias>
		</AliasGroup>
		<AliasGroup isActive="yes" isFolder="yes">
			<name>Sunder v4.181</name>
			<script></script>
			<command></command>
			<packageName>Sunder v4.181</packageName>
			<regex></regex>
			<AliasGroup isActive="yes" isFolder="yes">
				<name>Sunder</name>
				<script></script>
				<command></command>
				<packageName></packageName>
				<regex></regex>
				<AliasGroup isActive="yes" isFolder="yes">
					<name>Core</name>
					<script></script>
					<command></command>
					<packageName></packageName>
					<regex></regex>
					<AliasGroup isActive="yes" isFolder="yes">
						<name>Vitals</name>
						<script></script>
						<command></command>
						<packageName></packageName>
						<regex></regex>
						<Alias isActive="yes" isFolder="no">
							<name>setup</name>
							<script>snd.send("config wrapwidth 0")
snd.send("config separator &amp;&amp;")
snd.send("config mxp on")
snd.send("config auto_outc on")
snd.send("config combatmessages on")
snd.send("config affliction_view on")
snd.send("config simple_diag on")
snd.send("config tellsprefix on")
snd.send("config curemsgs default")
snd.send("config fishnumbers on")</script>
							<command></command>
							<packageName></packageName>
							<regex>^\?setup$</regex>
						</Alias>
						<Alias isActive="yes" isFolder="no">
							<name>halp</name>
							<script>cecho("&lt;white&gt;Welcome to &lt;green&gt;Sunder&lt;white&gt;!")
cecho("\n&lt;SteelBlue&gt;Here are some useful commands you should know:")
cecho("\n&lt;red&gt;If you have not used Sunder before, please enter the command ?setup.")
cecho("\n &lt;green&gt;?setup&lt;white&gt;             To config Aetolia to fit Sunder.")
cecho("\n ")
cecho("\n&lt;red&gt;System commands:")
cecho("\n &lt;green&gt;sndon/sndoff&lt;white&gt;             Turn the system on/off.")
cecho("\n &lt;green&gt;stap&lt;white&gt;               Will stop whatever you're doing.")
cecho("\n &lt;green&gt;t \&lt;poor sap\&gt;&lt;white&gt;       To set your current target.")
cecho("\n &lt;green&gt;ldd/defup \&lt;option\&gt;&lt;white&gt; will load defenses based on your current class.")
cecho("\n &lt;green&gt;kd \&lt;defense\&gt;&lt;white&gt;       to toggle keeping a defense on or off.")
cecho("\n &lt;green&gt;mnt&lt;white&gt;                Call and mount your set mount.")
cecho("\n &lt;green&gt;dm&lt;white&gt;                 Dismount and dismiss your set mount.")
cecho("\n &lt;green&gt;pt \&lt;location\&gt;&lt;white&gt;      quickly travel to that landmark.")
cecho("\n              &lt;white&gt;      Try entering 'landmarks' to see ones set up already!")
cecho("\n&lt;red&gt;Bashing commands to know:")
cecho("\n &lt;green&gt;aa&lt;white&gt;                 Will automatically hit things in the room, if it knows it exists.")
cecho("\n              &lt;white&gt;      Use this if you're following someone that is bashing.")
cecho("\n &lt;green&gt;gogo&lt;white&gt;               Turns on the automatic movement for bashing, following a defined path.")
cecho("\n              &lt;white&gt;      You can either use 'gogo low' or 'gogo high'.")
cecho("\n              &lt;white&gt;      If you choose neither, it picks based on level!")
cecho("\n &lt;green&gt;grp &lt;friend&gt;&lt;white&gt;       Sets someone in your group in Sunder's knowledge.")
cecho("\n              &lt;white&gt;      Sunder won't bash in a room with someone else unless they're grouped!")
cecho("\n&lt;red&gt;PK commands to know:")
cecho("\n &lt;green&gt;?pk&lt;white&gt;                Will introduce you to using Sunder to PK!")
cecho("\n ")</script>
							<command></command>
							<packageName></packageName>
							<regex>^halp$</regex>
						</Alias>
						<Alias isActive="yes" isFolder="no">
							<name>toggles</name>
							<script>cecho("&lt;white&gt;Toggles:")
for tog in pairs(snd.toggles) do
 if snd.toggles[tog] then
  cecho("&lt;green&gt;\n"..string.title(tog))
 else
  cecho("&lt;red&gt;\n"..string.title(tog))
 end
end
send(" ")</script>
							<command></command>
							<packageName></packageName>
							<regex>^togs$</regex>
						</Alias>
						<Alias isActive="yes" isFolder="no">
							<name>PK help</name>
							<script>cecho("&lt;white&gt;Welcome to &lt;green&gt;Sunder PK&lt;white&gt;!")
cecho("\n&lt;red&gt;PK commands to know:")
cecho("\n &lt;green&gt;loc&lt;white&gt;                Call out your place in the world.")
cecho("\n &lt;green&gt;acl&lt;white&gt;                Short for affliction calling - toggle on/off.")
cecho("\n &lt;green&gt;tcl&lt;white&gt;                Short for target calling     - toggle on/off.")
cecho("\n &lt;green&gt;ls &lt;leader&gt;&lt;white&gt;        Declare the name of someone so you can follow targets.")
cecho("\n ")
cecho("\n&lt;firebrick&gt;When you get into PK, you want to make sure the first thing you do is '&lt;green&gt;ls &lt;leader name&gt;'.")
cecho("\n&lt;firebrick&gt;This will make sure you're following targets. &lt;red&gt;Look in web or ask who is calling targets.")
cecho("\n&lt;firebrick&gt;Next is to make sure you have &lt;green&gt;ACL&lt;firebrick&gt; toggled ON. You want to let your friends know what you're doing!")
cecho("\n ")
cecho("\n&lt;firebrick&gt;After that, listen to your leader to see what advice they may have. Perhaps they ask you to block")
cecho("\n&lt;firebrick&gt;a certain direction, if you can. Perhaps they ask you to drop a certain class effect. If you're")
cecho("\n&lt;firebrick&gt;not sure what they mean, that's okay! Just tell them over web that you can't at the moment. Once")
cecho("\n&lt;firebrick&gt;all of the fighting is over, feel free to bring up your questions. If you can't get a great answer")
cecho("\n&lt;firebrick&gt;or you're not sure what it means, please feel encouraged to ask further!")
cecho("\n ")
cecho("\n&lt;firebrick&gt;Below, you will find a few different aliases that you will type in, hit enter and start to attack.")
cecho("\n&lt;firebrick&gt;It is encouraged to try these in a training room environment to get a feel for how they work.")
cecho("\n&lt;firebrick&gt;If at any time you need to stop, just type &lt;green&gt;stap&lt;firebrick&gt;.")
cecho("\n ")
cecho("\n&lt;firebrick&gt;Automatic dispersing is also set up. You can set it to disperse nobody if you're selfish!")
cecho("\n&lt;firebrick&gt;Or you can use it to disperse your callers, or anyone if they're an ally!")
cecho("\n&lt;firebrick&gt;The command is &lt;red&gt;use disperse none&lt;firebrick&gt;/&lt;yellow&gt;callers&lt;firebrick&gt;/&lt;green&gt;all.")
cecho("\n ")
cecho("\n&lt;red&gt;Your class can use the following aliases:")
if snd.class == "Monk" then
cecho("\n&lt;goldenrod&gt;Afflictions:")
cecho("\n &lt;green&gt;aff&lt;white&gt;                - Will use mind batter to hit with affs, if enemy prone then wrench.")
cecho("\n&lt;goldenrod&gt;Damage:")
cecho("\n &lt;green&gt;head &lt;white&gt;              - Used for damage, does not deviate unless target is proned.")
cecho("\n&lt;goldenrod&gt;Limbs:")
cecho("\n &lt;green&gt;ms&lt;white&gt;                 - Used to hit different limbs, will change combo depending on parry.")
elseif snd.class == "Lycan" then
cecho("\n&lt;goldenrod&gt;Damage:")
cecho("\n &lt;green&gt;dmg&lt;white&gt;                - Goes for the head. Each time. Big damage/bleeding if not parried.")
cecho("\n&lt;goldenrod&gt;Limb:")
cecho("\n &lt;green&gt;ms &lt;white&gt;                - Straight limb breaks into jawlocks.")
cecho("\n &lt;green&gt;insta&lt;white&gt;              - Goes for quarter kills. Check AB QUARTER for more information.")
cecho("\n &lt;green&gt;limbs&lt;white&gt;              - Utilizes slash to delay limb breaks, good for pushing level 2 breaks.")
elseif snd.class == "Syssin" then
cecho("\n&lt;goldenrod&gt;Afflictions:")
cecho("\n &lt;green&gt;ms &lt;white&gt;                - Basic dstab w/venoms. No hypnosis.")
cecho("\n &lt;green&gt;magic&lt;white&gt;              - More advanced, geared towards magic, uses hypnosis.")
cecho("\n &lt;green&gt;aff&lt;white&gt;                - More advanced, geared towards physical, uses hypnosis.")
cecho("\n &lt;green&gt;kl&lt;white&gt;                 - 1v1 offense. Does not snap for you as that requires timing.")
cecho("\n&lt;goldenrod&gt;Damage:")
cecho("\n &lt;green&gt;dmg&lt;white&gt;                - Straight damage - will backstab when hidden or phased.")
elseif snd.class == "Wayfarer" then
cecho("\n&lt;goldenrod&gt;Afflictions:")
cecho("\n &lt;green&gt;legs &lt;white&gt;              - Uses lob to pressure leg breaks, will try to dropstrike if able.")
cecho("\n &lt;green&gt;lock&lt;white&gt;               - Experimental skirmish route to seal locks w/slaughter and muddled.")
cecho("\n&lt;goldenrod&gt;Damage:")
cecho("\n &lt;green&gt;dmg&lt;white&gt;                - Sensitivity/sight to support transfix. Boosted halt to keep people in room.")
cecho("\n &lt;green&gt;gaff&lt;white&gt;               - Group affs w/preference toward venom lock. Slaughter if prone w/sensitivity.")
elseif snd.class == "Templar" then
cecho("\n&lt;goldenrod&gt;Afflictions:")
cecho("\n &lt;green&gt;ret &lt;white&gt;               - The 1v1 standard. Lock into retribution.")
cecho("\n &lt;green&gt;ms&lt;white&gt;                 - Basic venoms, no bladefire empowerments, does use vorpal.")
cecho("\n &lt;green&gt;newb&lt;white&gt;               - Basic venoms, no bladefire empowerments, no vorpal.")
cecho("\n&lt;goldenrod&gt;Damage:")
cecho("\n &lt;green&gt;dmg&lt;white&gt;                - Use a 2h weapon to zeal/dsw someone and do physical damage.")
cecho("\n &lt;green&gt;gimp&lt;white&gt;               - Affs into either impale or dsw w/sensitivity.")
cecho("\n&lt;goldenrod&gt;Limb:")
cecho("\n &lt;green&gt;limbs&lt;white&gt;              - Two small bludgeon weapons to deal bruising and limb damage.")
elseif snd.class == "Shaman" then
cecho("\n&lt;goldenrod&gt;Afflictions:")
cecho("\n &lt;green&gt;ms &lt;white&gt;                - Straight vinelash w/venoms.")
cecho("\n &lt;green&gt;storm&lt;white&gt;              - Works toward stormtouched, then goes for lightning damage.")
cecho("\n &lt;green&gt;supp&lt;white&gt;               - Aff-lock support.")
elseif snd.class == "Sentinel" then
cecho("\n&lt;goldenrod&gt;Afflictions:")
cecho("\n &lt;green&gt;salve&lt;white&gt;              - Works towards frozen w/limb breaks. Need raloth/icewyrm.")
cecho("\n &lt;green&gt;aff&lt;white&gt;                - Venom lock into spinecut death sequence.")
cecho("\n &lt;green&gt;lumi&lt;white&gt;               - T-fix + sensitivity support.")
cecho("\n &lt;green&gt;ms&lt;white&gt;                 - Just venoms, no dhuriv attacks, perfect for starters.")
elseif snd.class == "Luminary" then
cecho("\n&lt;goldenrod&gt;Afflictions:")
cecho("\n &lt;green&gt;dmg &lt;white&gt;               - Damage kill with aff stacking and overwhelm.")
cecho("\n &lt;green&gt;mana&lt;white&gt;               - Straight mana sap.")
cecho("\n &lt;green&gt;aff&lt;white&gt;                - Build mental affs into disrupt to help root/disrupt.")
cecho("\n &lt;green&gt;ms&lt;white&gt;                 - Sight into tfix/overwhelm.")
elseif snd.class == "Ascendril" then
cecho("\n&lt;goldenrod&gt;Damage:")
cecho("\n &lt;green&gt;damage&lt;white&gt;             - Damage kill")
cecho("\n &lt;green&gt;fire&lt;white&gt;               - Set them ablaze and watch them burn.")
cecho("\n&lt;goldenrod&gt;Afflictions:")
cecho("\n &lt;green&gt;affs&lt;white&gt;               - Build affs!")
cecho("\n &lt;green&gt;solo&lt;white&gt;               - Push limb damage/frozen for a shatter!")
elseif snd.class == "Archivist" then
cecho("\n&lt;goldenrod&gt;Afflictions:")
cecho("\n &lt;green&gt;dmg &lt;white&gt;               - Damage kill")
cecho("\n &lt;green&gt;aff&lt;white&gt;                - Build mental affs and go for unravel")
elseif snd.class == "Carnifex" then
cecho("\n&lt;goldenrod&gt;Afflictions:")
cecho("\n &lt;green&gt;dmg &lt;white&gt;               - Damage kill")
cecho("\n &lt;green&gt;aff&lt;white&gt;                - Build affs!")
cecho("\n &lt;green&gt;limbs&lt;white&gt;              - Overall limb route")
cecho("\n &lt;green&gt;legs&lt;white&gt;               - Specifically for legs!")
elseif snd.class == "Indorani" then
cecho("\n&lt;goldenrod&gt;Afflictions:")
cecho("\n &lt;green&gt;dmg &lt;white&gt;               - Damage kill")
cecho("\n &lt;green&gt;aff&lt;white&gt;                - Build affs! Mostly for unravel support.")
elseif snd.class == "Praenomen" then
cecho("\n&lt;goldenrod&gt;Afflictions:")
cecho("\n &lt;green&gt;dmg &lt;white&gt;               - Damage kill")
cecho("\n &lt;green&gt;aff&lt;white&gt;                - Build affs!")
cecho("\n &lt;green&gt;mez&lt;white&gt;                - Work on siphoning mana for annihilate and mesmerize!")
elseif snd.class == "Teradrim" then
cecho("\n&lt;goldenrod&gt;Afflictions:")
cecho("\n &lt;green&gt;dmg &lt;white&gt;               - Damage kill")
cecho("\n &lt;green&gt;aff&lt;white&gt;                - Build affs!")
elseif snd.class == "Sciomancer" then
cecho("\n&lt;goldenrod&gt;Afflictions:")
cecho("\n &lt;green&gt;dmg &lt;white&gt;               - Damage kill")
cecho("\n &lt;green&gt;aff&lt;white&gt;                - Build affs!")
cecho("\n &lt;green&gt;limbs&lt;white&gt;              - Overall limb route via grip and erupt")
end
cecho("\n ")</script>
							<command></command>
							<packageName></packageName>
							<regex>^\?pk$</regex>
						</Alias>
						<Alias isActive="yes" isFolder="no">
							<name>fishing help</name>
							<script>cecho("Help file for fishing:\n")
cecho("\n")
cecho("Fishing has been put together from several different systems. Here's a summary of how to use it:\n")
cecho("1. Put up your wielded items manually and wield your pole.\n")
cecho("2. Go to a fishing hole.\n")
cecho("3. Do 'FISHING DISCERN' to make sure you see fish. This will track the hole type, vnum,\n")
cecho("   and what fish you see automatically in a database it creates on the first time you use it.\n")
cecho("4. If you can fish there and there are fish, type in 'afish' to turn on the auto-fisher.\n")
cecho("5. If you run out of fish in this hole, it will turn off fishing on its own.\n")
cecho("   You can also type in 'afish' to turn it off.\n")
cecho("\n")
cecho("Aliases:\n")
cecho("afish - turn off/on\n")
cecho("fishing search - you can search for a water hole type, or fish, from holes you've discerned")
cecho("\n ")</script>
							<command></command>
							<packageName></packageName>
							<regex>^halp fishing$</regex>
						</Alias>
					</AliasGroup>
					<AliasGroup isActive="yes" isFolder="yes">
						<name>Toggles</name>
						<script></script>
						<command></command>
						<packageName></packageName>
						<regex></regex>
						<Alias isActive="yes" isFolder="no">
							<name>lighting</name>
							<script>snd.toggle("lighting")</script>
							<command></command>
							<packageName></packageName>
							<regex>^lgt$</regex>
						</Alias>
						<Alias isActive="yes" isFolder="no">
							<name>on</name>
							<script>snd.toggles.active = true
cecho("&lt;green&gt;Sunder is ON!")
send(" ")</script>
							<command></command>
							<packageName></packageName>
							<regex>^sndon$</regex>
						</Alias>
						<Alias isActive="yes" isFolder="no">
							<name>off</name>
							<script>snd.toggles.active = false
cecho("&lt;red&gt;Sunder is OFF!")
send(" ")</script>
							<command></command>
							<packageName></packageName>
							<regex>^sndoff$</regex>
						</Alias>
						<Alias isActive="yes" isFolder="no">
							<name>calling</name>
							<script>snd.toggle("calling")
snd.set_faction()</script>
							<command></command>
							<packageName></packageName>
							<regex>^tcl$</regex>
						</Alias>
						<Alias isActive="yes" isFolder="no">
							<name>zeal</name>
							<script>snd.toggle("zeal")</script>
							<command></command>
							<packageName></packageName>
							<regex>^tzl$</regex>
						</Alias>
						<Alias isActive="yes" isFolder="no">
							<name>affcalling</name>
							<script>snd.toggle("affcalling")</script>
							<command></command>
							<packageName></packageName>
							<regex>^acl$</regex>
						</Alias>
						<Alias isActive="yes" isFolder="no">
							<name>gallop</name>
							<script>snd.toggle("gallop")</script>
							<command></command>
							<packageName></packageName>
							<regex>^tgl$</regex>
						</Alias>
						<Alias isActive="yes" isFolder="no">
							<name>newb basher</name>
							<script>snd.toggle("newbie")</script>
							<command></command>
							<packageName></packageName>
							<regex>^tnewb$</regex>
						</Alias>
						<Alias isActive="yes" isFolder="no">
							<name>parry</name>
							<script>snd.toggle("parrying")</script>
							<command></command>
							<packageName></packageName>
							<regex>^tpry$</regex>
						</Alias>
						<Alias isActive="yes" isFolder="no">
							<name>attack echoes</name>
							<script>snd.toggle("atkecho")</script>
							<command></command>
							<packageName></packageName>
							<regex>^tatk$</regex>
						</Alias>
						<Alias isActive="yes" isFolder="no">
							<name>listening</name>
							<script>if matches[2] == "off" then
 snd.toggles.listening = false
 cecho("&lt;white&gt;Listening &lt;red&gt;OFF&lt;white&gt;!")
 send(" ")
else
 snd.toggles.listening = true
 if snd.offense_loaded then
  snd.callers = {}
  for name in string.gmatch(matches[2], '([^ ]+)') do
   table.insert(snd.callers, string.title(name))
  end
  cecho("&lt;white&gt;Listening to: &lt;green&gt;"..table.concat(snd.callers, "&lt;white&gt;, &lt;green&gt;").."&lt;white&gt;!")
  send(" ")
 else
  cecho("&lt;white&gt;Listening &lt;green&gt;ON&lt;white&gt;!")
	send(" ")
 end
end</script>
							<command></command>
							<packageName></packageName>
							<regex>^ls (.+)$</regex>
						</Alias>
						<Alias isActive="yes" isFolder="no">
							<name>scepter bashing</name>
							<script>snd.toggle("scepter")</script>
							<command></command>
							<packageName></packageName>
							<regex>^tscp$</regex>
						</Alias>
						<Alias isActive="yes" isFolder="no">
							<name>rockharvest</name>
							<script>snd.toggle("rockharvest")</script>
							<command></command>
							<packageName></packageName>
							<regex>^tr$</regex>
						</Alias>
						<Alias isActive="yes" isFolder="no">
							<name>lightning</name>
							<script>snd.toggle("lightning")</script>
							<command></command>
							<packageName></packageName>
							<regex>^tlgt$</regex>
						</Alias>
						<Alias isActive="yes" isFolder="no">
							<name>dash</name>
							<script>snd.toggle("dash")</script>
							<command></command>
							<packageName></packageName>
							<regex>^tds$</regex>
						</Alias>
						<Alias isActive="yes" isFolder="no">
							<name>roe</name>
							<script>snd.toggle("roe")</script>
							<command></command>
							<packageName></packageName>
							<regex>^troe$</regex>
						</Alias>
						<Alias isActive="yes" isFolder="no">
							<name>Chameleon</name>
							<script>snd.toggle("chameleon")</script>
							<command></command>
							<packageName></packageName>
							<regex>^tcm$</regex>
						</Alias>
					</AliasGroup>
					<AliasGroup isActive="yes" isFolder="yes">
						<name>Misc</name>
						<script></script>
						<command></command>
						<packageName></packageName>
						<regex></regex>
						<Alias isActive="yes" isFolder="no">
							<name>mount</name>
							<script>snd.send("qeb recall "..snd.mount..snd.sep.."recall mount"..snd.sep.."quickmount "..snd.mount)
</script>
							<command></command>
							<packageName></packageName>
							<regex>^mnt$</regex>
						</Alias>
						<Alias isActive="yes" isFolder="no">
							<name>dismount</name>
							<script>snd.send("qeb qdmount"..snd.sep.."order "..snd.mount.." follow me")</script>
							<command></command>
							<packageName></packageName>
							<regex>^dm$</regex>
						</Alias>
						<Alias isActive="yes" isFolder="no">
							<name>shield tattoo</name>
							<script>snd.toggles.attacking = false
snd.toggles.bashing = false
snd.toggles.fasthunt = false
if snd.toggles.attacking then
 snd.send("undefend")
end
if snd.have_aff("paresis") then
 snd.send("firstaid elevate paresis")
end
if snd.class == "Carnifex" then
 snd.send("qeb soul shield")
else
 snd.send("qeb touch shield tattoo")
end</script>
							<command></command>
							<packageName></packageName>
							<regex>^ts$</regex>
						</Alias>
						<Alias isActive="yes" isFolder="no">
							<name>wield none</name>
							<script>snd.send("wipe left"..snd.sep.."wipe right"..snd.sep.."secure left"..snd.sep.."secure right"..snd.sep.."wear tower"..snd.sep.."wear buckler"..snd.sep.."wear shield")
</script>
							<command></command>
							<packageName></packageName>
							<regex>^wnon$</regex>
						</Alias>
						<Alias isActive="yes" isFolder="no">
							<name>directions</name>
							<script>if snd.toggles.calling and not snd.toggles.fasthunt then
 snd.send("qeb get monolith"..snd.sep..matches[2]..snd.sep.."drop monolith")
else
 snd.send("qeb "..matches[2])
end</script>
							<command></command>
							<packageName></packageName>
							<regex>^(n|e|s|w|ne|nw|se|sw|in|up?|out|o|d|down)$</regex>
						</Alias>
						<Alias isActive="yes" isFolder="no">
							<name>group</name>
							<script>snd.group = {}
if matches[2] ~= "none" then
 for name in string.gmatch(matches[2], '([^ ]+)') do
  table.insert(snd.group, string.title(name))
 end
end
display(snd.group)</script>
							<command></command>
							<packageName></packageName>
							<regex>^grp (.*)$</regex>
						</Alias>
						<Alias isActive="yes" isFolder="no">
							<name>Landmarks w/descriptions</name>
							<script>snd.landmarks_descs = {
["eno"] = "enorian",
["dui"] = "duiran",
["sp"] = "spinesreach",
["bl"] = "bloodloch",
["es"] = "esterport",
["crack"] = "Bloodloch meeting place",
["ty"] = "templar training room",
["rd"] = "Rising dawn - hidden room in enorian",
["milk"] = "Enorian milking room",
["bp"] = "boiling point, bloodloch training room",
["im"] = "ironmaw, spinesreach training room",
["dir"] = "directory",
["tear"] = "tear of lleis for reviving folks instantly",
["tw"] = "three widows",
["tw1"] = "three widows mine (quest)",
["tw2"] = "three widows cows (quest)",
["tw3"] = "jinjin (quest)",
["tw4"] = "turn in alpacas (quest)",
["tw5"] = "turn in kestrels (quest)",
["stp"] = "spinesreach stipend",
["hlb"] = "radek in helba (quest)",
["hlbp"] = "helba pickaxes for sale (quest)",
["hlbm"] = "helba mine (quest)",
["ag"] = "agrasha (quest)",
["put"] = "putoran (quest)",
["gre"] = "grecht with the garden (quest)",
["oy"] = "oysters for bruce (quest)",
["bruce"] = "turn in sapphires (quest)",
["ann"] = "annaria (quest)",
["tue"] = "tuera (quest)",
["tlm"] = "near tellimerius, so darkies don't die (quest)",
["tlmt"] = "turn in tellimerius (quest)",
["vn"] = "venicus (quest)",
["vn1"] = "venicus turnin (quest)",
["sr"] = "siroccian mountains",
["sr1"] = "turn in ores, nuggets, and coal (quest)",
["sr2"] = "if you found the chest with the axe (quest)",
["ms1"] = "24493 (quest)",
["ms2"] = "65216 (quest)",
["ms3"] = "59970 (quest)",
["ms4"] = "60126 (quest)",
["ms5"] = "59967 (quest)",
["ms6"] = "59955 (quest)",
["or"] = "orrery",
["hg"] = "4746",
["nighteye"] = "9342",
["claw"] = "9341",
["shade"] = "6090",
["staghelm"] = "9348",
["silence"] = "4614",
["rose"] = "9341",
["ivory"] = "6842",
["rowan"] = "6842",
["hgshrine"] = "23489",
}

display(snd.landmarks_descs)</script>
							<command></command>
							<packageName></packageName>
							<regex>^landmarks$</regex>
						</Alias>
						<Alias isActive="yes" isFolder="no">
							<name>landmarks</name>
							<script>if snd.landmarks[matches[2]] then
 --snd.send("path track "..snd.landmarks[matches[2]])
 snd.moving_to = snd.landmarks[matches[2]]
else
 --snd.send("path track "..matches[2])
 snd.moving_to = matches[2]
end
snd.core()</script>
							<command></command>
							<packageName></packageName>
							<regex>^pt (\w+)$</regex>
						</Alias>
					</AliasGroup>
					<Alias isActive="yes" isFolder="no">
						<name>target</name>
						<script>snd.target = string.title(matches[2])
if snd.toggles.calling then
 snd.send("wt Target: "..snd.target)
end
echo("Target: "..snd.target)
send(" ")
if snd.target_trigger_id then killTrigger(snd.target_trigger_id) end
snd.target_trigger_id = tempTrigger(snd.target, [[selectString("]] .. snd.target .. [[", 1) fg("DarkOrchid") resetFormat()]])
if snd.target_trigger_idlow then killTrigger(snd.target_trigger_idlow) end
snd.target_trigger_idlow = tempTrigger(string.lower(snd.target), [[selectString("]] .. string.lower(snd.target) .. [[", 1) fg("DarkOrchid") resetFormat()]])
if snd.offense_loaded then
 snd.reset_target()
 snd.target_gone = false
end
if snd.gui_loaded then
 enemy:echo("&lt;center&gt;[["..snd.target.."]]&lt;/center&gt;")
 if #snd.target_has &gt; 1 then
 	eaffs:echo(table.concat(snd.target_has, "&lt;br&gt;"))
 else
 	eaffs:echo("&lt;center&gt;enemy affs&lt;/center&gt;")
 end
end</script>
						<command></command>
						<packageName></packageName>
						<regex>^t (.*)$</regex>
					</Alias>
					<Alias isActive="yes" isFolder="no">
						<name>stop attacking</name>
						<script>snd.toggles.attacking = false
snd.send("queue clear")
snd.send("path stop")
if snd.bashing_loaded then
 if snd.toggles.fasthunt then
  expandAlias("ff", false)
 end
 bot.going = false
 snd.toggles.bashing = false
 snd.defenses.def_vigor.needit = false
 snd.which_path = ""
end
if snd.offense_loaded then
 snd.send("target nothing"..snd.sep.."target nothing with right")
 snd.hound_queue = {}
end
if mmp ~= nil then
 expandAlias("mstop", false)
end
if snd.ylem_loaded then
 ylm.active = false
end
snd.pathing = false</script>
						<command></command>
						<packageName></packageName>
						<regex>^stap$</regex>
					</Alias>
					<Alias isActive="yes" isFolder="no">
						<name>target call over web - individual targets</name>
						<script>send("wt Target: "..matches[2])
snd.target = string.title(matches[2])
echo("Target: "..snd.target)
send(" ")
if snd.gui_loaded then
 enemy:echo("&lt;center&gt;[["..snd.target.."]]&lt;/center&gt;")
 if #snd.target_has &gt; 1 then
 	eaffs:echo(table.concat(snd.target_has, "&lt;br&gt;"))
 else
 	eaffs:echo("enemy affs")
 end
end

if snd.target_trigger_id then killTrigger(snd.target_trigger_id) end
snd.target_trigger_id = tempTrigger(snd.target, [[selectString("]] .. snd.target .. [[", 1) fg("DarkOrchid") resetFormat()]])
if snd.target_trigger_idlow then killTrigger(snd.target_trigger_idlow) end
snd.target_trigger_idlow = tempTrigger(string.lower(snd.target), [[selectString("]] .. string.lower(snd.target) .. [[", 1) fg("DarkOrchid") resetFormat()]])
if snd.offense_loaded then
 snd.reset_target()
end</script>
						<command></command>
						<packageName></packageName>
						<regex>^tc (\w+)$</regex>
					</Alias>
				</AliasGroup>
				<AliasGroup isActive="yes" isFolder="yes">
					<name>Bashing</name>
					<script></script>
					<command></command>
					<packageName></packageName>
					<regex></regex>
					<Alias isActive="yes" isFolder="no">
						<name>start bashing</name>
						<script>snd.toggles.bashing = true
cecho("&lt;green&gt;Bashing ON!")
send(" ")
snd.room_clear = true
snd.defenses.def_vigor.needit = true
</script>
						<command></command>
						<packageName></packageName>
						<regex>^aa$</regex>
					</Alias>
					<Alias isActive="yes" isFolder="no">
						<name>stop bashing</name>
						<script>snd.toggles.bashing = false
snd.defenses.def_vigor.needit = false
cecho("&lt;green&gt;Bashing OFF!")
if snd.toggles.fasthunt then
 snd.toggles.fasthunt = false
 echo("\nFasthunt OFF!")
end
snd.send("queue clear")
send(" ")</script>
						<command></command>
						<packageName></packageName>
						<regex>^ast$</regex>
					</Alias>
					<Alias isActive="yes" isFolder="no">
						<name>fasthunt</name>
						<script>snd.toggle("fasthunt")</script>
						<command></command>
						<packageName></packageName>
						<regex>^ff$</regex>
					</Alias>
					<AliasGroup isActive="yes" isFolder="yes">
						<name>Autobashing</name>
						<script></script>
						<command></command>
						<packageName></packageName>
						<regex></regex>
						<Alias isActive="yes" isFolder="no">
							<name>move</name>
							<script>x = bot.info.room
x = "v"..x
if bot.going then
 if bot.path[x] ~= nil then
--  echo(bot.path[x])
  if string.find(bot.path[x], "pt") then
	 y = string.sub(bot.path[x], 3)
	 snd.moving_to = y
	 send(" ")
	elseif mmp ~= nil then
   expandAlias("goto "..bot.path[x], false)
  else
   snd.moving_to = bot.path[x]
	 send(" ")
  end
 else
  echo("where r we")
 end
end</script>
							<command></command>
							<packageName></packageName>
							<regex>^move$</regex>
						</Alias>
						<Alias isActive="yes" isFolder="no">
							<name>initiate</name>
							<script>snd.which_path = ""

--Set the correct path, whether that is by checking level or using input from the user.
if matches[3] then
	if matches[3] == "high" or matches[3] == "low" then 
		snd.which_path = matches[3]
	else
		cecho("\n&lt;red&gt;Not a viable choice! Enter a viable choice or only enter 'gogo'!")
		cecho("\n&lt;green&gt;'low' to do lower level areas, 'high' to go for exp!")
	end
else
	local level = ""
	for check in string.gmatch(gmcp.Char.Status.level, '[%d]+') do
		if level == "" then
			level = tonumber(check)
		end
	end
	if level &gt; 93 then
		snd.which_path = "high"
	else
		snd.which_path = "low"
	end
end

if snd.which_path ~= "" then
  bot.going = true
	bot.path =  sndpathpick()
  if not snd.toggles.fasthunt then
  	expandAlias("ff")
  end
  
  expandAlias("aa")
end</script>
							<command></command>
							<packageName></packageName>
							<regex>^gogo( (\w+))?$</regex>
						</Alias>
					</AliasGroup>
					<Alias isActive="yes" isFolder="no">
						<name>generics</name>
						<script>snd.toggle("generics")</script>
						<command></command>
						<packageName></packageName>
						<regex>^gen$</regex>
					</Alias>
					<Alias isActive="yes" isFolder="no">
						<name>orbs</name>
						<script>snd.send("activate amberorb"..snd.sep.."activate greenorb"..snd.sep.."activate whiteorb"..snd.sep.."activate crimsonorb"..snd.sep.."activate ceruleanorb")
</script>
						<command></command>
						<packageName></packageName>
						<regex>^orbs$</regex>
					</Alias>
					<Alias isActive="yes" isFolder="no">
						<name>chocolates</name>
						<script>snd.send("eat mint;eat hazelnut;eat caramel;eat strawberry")</script>
						<command></command>
						<packageName></packageName>
						<regex>^choc$</regex>
					</Alias>
				</AliasGroup>
				<AliasGroup isActive="yes" isFolder="yes">
					<name>GUI</name>
					<script></script>
					<command></command>
					<packageName></packageName>
					<regex></regex>
					<AliasGroup isActive="yes" isFolder="yes">
						<name>Chat</name>
						<script></script>
						<command></command>
						<packageName></packageName>
						<regex></regex>
						<AliasGroup isActive="yes" isFolder="yes">
							<name>Shared</name>
							<script></script>
							<command></command>
							<packageName></packageName>
							<regex></regex>
							<Alias isActive="yes" isFolder="no">
								<name>Reset chasing</name>
								<script>demonnic.chaser:reset()</script>
								<command></command>
								<packageName></packageName>
								<regex>^chaseres$</regex>
							</Alias>
							<Alias isActive="yes" isFolder="no">
								<name>Debug</name>
								<script>if matches[2] then
  demonnic:listCategories()
else
  demonnic:toggleDebug()
end</script>
								<command></command>
								<packageName></packageName>
								<regex>^debug(?: (list))?$</regex>
							</Alias>
							<Alias isActive="yes" isFolder="no">
								<name>debug categories</name>
								<script>if matches[2] then
  demonnic:watchCategory( matches[2] )
else
  demonnic:listCategories()
end</script>
								<command></command>
								<packageName></packageName>
								<regex>^debugc(?: (.*))?$</regex>
							</Alias>
						</AliasGroup>
						<AliasGroup isActive="yes" isFolder="yes">
							<name>Tabbed Chat</name>
							<script></script>
							<command></command>
							<packageName></packageName>
							<regex></regex>
							<Alias isActive="yes" isFolder="no">
								<name>Toggle blinking (temporary change)</name>
								<script>if demonnic.chat.config.blink then
  demonnic.chat.config.blink = false
  demonnic.chat.tabsToBlink = {}
  demonnic:echo("Blinking temporarily turned &lt;red&gt;off&lt;grey&gt;. It will reset if you edit your tabbed chat configuration, or close and reopen mudlet. To make it permanent, change demonnic.chat.config.blink to false in \"Demonnic-&gt;Tabbed Chat-&gt;Configuration options\" under scripts\n")
else
  demonnic.chat.config.blink = true
  demonnic.chat:blink()
  demonnic:echo("Blinking temporarily turned &lt;red&gt;on&lt;grey&gt;. It will reset if you edit your tabbed chat configuration, or close and reopen mudlet. To make it permanent, change demonnic.chat.config.blink to true in \"Demonnic-&gt;Tabbed Chat-&gt;Configuration options\" under scripts\n")
end</script>
								<command></command>
								<packageName></packageName>
								<regex>^dblink$</regex>
							</Alias>
							<Alias isActive="yes" isFolder="no">
								<name>fixChat</name>
								<script>local currentsetting = demonnic.chat.config.location
local newsetting = ""
if currentsetting == "topright" then 
  newsetting = "bottomleft" 
elseif currentsetting == "topleft" then
  newsetting = "bottomright"
elseif currentsetting == "bottomleft" then
  newsetting = "topright"
elseif currentsetting == "bottomright" then
  newsetting = "topleft"
end

demonnic.chat.config.location = newsetting
demonnic.chat:create()
demonnic.chat.config.location = currentsetting
demonnic.chat:create()</script>
								<command></command>
								<packageName></packageName>
								<regex>^fixchat$</regex>
							</Alias>
						</AliasGroup>
					</AliasGroup>
				</AliasGroup>
				<AliasGroup isActive="yes" isFolder="yes">
					<name>Healing</name>
					<script></script>
					<command></command>
					<packageName></packageName>
					<regex></regex>
					<Alias isActive="yes" isFolder="no">
						<name>defense toggle</name>
						<script>if not string.find(matches[2], "def_") then
 matches[2] = "def_"..matches[2]
end
for i in pairs(snd.defenses) do
 if string.find(i, matches[2]) then
  if snd.defenses[i].needit then
   snd.defenses[i].needit = false
   snd.message("No longer keeping &lt;red&gt;"..i.."&lt;white&gt;.", "echo")
   send(" ")
  else
   snd.defenses[i].needit = true
   snd.message("Now keeping &lt;green&gt;"..i.."&lt;white&gt;.", "echo")
   send(" ")
  end
  return
 end
end
snd.message("No such defense as &lt;red&gt;"..matches[2].."&lt;white&gt;!", "echo")
send(" ")</script>
						<command></command>
						<packageName></packageName>
						<regex>^kd (.*)$</regex>
					</Alias>
					<Alias isActive="yes" isFolder="no">
						<name>defense options</name>
						<script>local class = ""
if matches[3] then class = matches[3] else class = snd.class:lower() end
if snd.class == "Ascendril" then send("simultaneity") end
if snd.class == "Archivist" then snd.send("incite lens") end
send("def", false)
snd.load_def(class)

</script>
						<command></command>
						<packageName></packageName>
						<regex>^(ldd (.*)|defup)$</regex>
					</Alias>
					<AliasGroup isActive="yes" isFolder="yes">
						<name>Toggles</name>
						<script></script>
						<command></command>
						<packageName></packageName>
						<regex></regex>
						<Alias isActive="no" isFolder="no">
							<name>healing</name>
							<script>snd.toggle("healing")</script>
							<command></command>
							<packageName></packageName>
							<regex>^hl$</regex>
						</Alias>
						<Alias isActive="yes" isFolder="no">
							<name>defenses</name>
							<script>snd.toggle("defenses")</script>
							<command></command>
							<packageName></packageName>
							<regex>^tdf$</regex>
						</Alias>
						<Alias isActive="no" isFolder="no">
							<name>clotting</name>
							<script>snd.toggle("clotting")</script>
							<command></command>
							<packageName></packageName>
							<regex>^tclt$</regex>
						</Alias>
						<Alias isActive="no" isFolder="no">
							<name>standing</name>
							<script>snd.toggle("standing")</script>
							<command></command>
							<packageName></packageName>
							<regex>^ss$</regex>
						</Alias>
					</AliasGroup>
				</AliasGroup>
				<AliasGroup isActive="yes" isFolder="yes">
					<name>Offense</name>
					<script></script>
					<command></command>
					<packageName></packageName>
					<regex></regex>
					<Alias isActive="yes" isFolder="no">
						<name>template</name>
						<script>--[[ This is a blank attack template, just the most basic outline of what an offense
 alias should look like. ]]--
if snd.class == "MyClass" then -- set this to the class this alias is for
snd.starting_attack() -- always run this first, it does some important resets
function snd.attack_function() -- defining this function is how we tell sunder what to do
	if not snd.waiting.queue then -- don't want to spam, this will prevent that
		-- declare some important variables, you can add more here if you need
		local string = ""
		local call = ""

		-- attack logic goes here, you need to set string = whatever you want to send
		string = "punch "..snd.target
		call = "wt Afflicting "..snd.target..": DEATH"

		-- check if we need to prepend an affliction call
		if snd.toggles.affcalling and not snd.target_gone then
			string = call..snd.sep..string
		end
		-- we don't want to resend our existing attack, so check against that
		if string ~= snd.last_attack and not snd.waiting.queue then
			-- if we've got a new attack now, 
			snd.last_attack = string
			snd.attack(snd.last_attack)
			-- manage the anti-spam check below
			snd.waiting.queue = true
			tempTimer(snd.delay(), [[snd.waiting.queue = false]])
		end
	end
end
snd.attack_function() -- make sure to actually send the attack once on use!
end</script>
						<command></command>
						<packageName></packageName>
						<regex></regex>
					</Alias>
					<AliasGroup isActive="yes" isFolder="yes">
						<name>Generic</name>
						<script></script>
						<command></command>
						<packageName></packageName>
						<regex></regex>
						<Alias isActive="yes" isFolder="no">
							<name>my location</name>
							<script>snd.send("wt I'm at ("..gmcp.Room.Info.num..") '"..gmcp.Room.Info.name.."' in "..gmcp.Room.Info.area)</script>
							<command></command>
							<packageName></packageName>
							<regex>^loc$</regex>
						</Alias>
						<Alias isActive="yes" isFolder="no">
							<name>eye sigil</name>
							<script>snd.set_queue("quickwield both eyesigil"..snd.sep.."relax grip"..snd.sep.."throw eye at ground"..snd.sep.."qeb secure eyesigil")</script>
							<command></command>
							<packageName></packageName>
							<regex>^eye$</regex>
						</Alias>
						<Alias isActive="yes" isFolder="no">
							<name>web tattoo</name>
							<script>snd.toggles.attacking = false
if matches[2] == nil then
 snd.send("qeb touch web "..snd.target)
else
 snd.send("qeb touch web "..matches[2])
end</script>
							<command></command>
							<packageName></packageName>
							<regex>^tw(?: (.*))?$</regex>
						</Alias>
						<Alias isActive="yes" isFolder="no">
							<name>brazier</name>
							<script>if matches[2] == nil then
 snd.attack("touch brazier "..snd.target)
else
 snd.attack("touch brazier "..matches[2])
end</script>
							<command></command>
							<packageName></packageName>
							<regex>^brz(?: (.*))?$</regex>
						</Alias>
						<Alias isActive="yes" isFolder="no">
							<name>tentacle</name>
							<script>if matches[2] == nil then
 snd.attack("touch tentacle "..snd.target)
else
 snd.attack("touch tentacle "..matches[2])
end</script>
							<command></command>
							<packageName></packageName>
							<regex>^tnt(?: (.*))?$</regex>
						</Alias>
						<Alias isActive="yes" isFolder="no">
							<name>orrery</name>
							<script>snd.send("infuse orrery with "..snd.faction)</script>
							<command></command>
							<packageName></packageName>
							<regex>^or$</regex>
						</Alias>
						<Alias isActive="yes" isFolder="no">
							<name>breathe fire</name>
							<script>snd.send("qeb breathe fire at icewall")</script>
							<command></command>
							<packageName></packageName>
							<regex>^bf$</regex>
						</Alias>
						<Alias isActive="yes" isFolder="no">
							<name>prism</name>
							<script>if matches[2] == nil then
 snd.attack("touch prism "..snd.target)
else
 snd.attack("touch prism "..matches[2])
end</script>
							<command></command>
							<packageName></packageName>
							<regex>^prm(?: (.*))?$</regex>
						</Alias>
						<Alias isActive="yes" isFolder="no">
							<name>shackle</name>
							<script>snd.send("qeb refining shackle eld")</script>
							<command></command>
							<packageName></packageName>
							<regex>^sh$</regex>
						</Alias>
						<Alias isActive="yes" isFolder="no">
							<name>tumble</name>
							<script>snd.send("qeb tumble "..matches[2])</script>
							<command></command>
							<packageName></packageName>
							<regex>^tm (\w+)$</regex>
						</Alias>
						<Alias isActive="yes" isFolder="no">
							<name>dummy mode</name>
							<script>snd.starting_attack()
function snd.attack_function()
 if not snd.waiting.queue then
  local string = "punch "..snd.target
  if string ~= snd.last_attack and not snd.waiting.queue then
   snd.last_attack = string
   snd.attack(snd.last_attack)
   snd.waiting.queue = true
   tempTimer(snd.delay(), [[snd.waiting.queue = false]])
  end
 end
end
snd.attack_function()
</script>
							<command></command>
							<packageName></packageName>
							<regex>^dummy$</regex>
						</Alias>
						<Alias isActive="yes" isFolder="no">
							<name>swing up</name>
							<script>snd.toggles.attacking = false
snd.send("qeb swing up")</script>
							<command></command>
							<packageName></packageName>
							<regex>^su$</regex>
						</Alias>
						<Alias isActive="yes" isFolder="no">
							<name>swing down</name>
							<script>snd.toggles.attacking = false
snd.send("qeb swing down")</script>
							<command></command>
							<packageName></packageName>
							<regex>^sd$</regex>
						</Alias>
						<Alias isActive="yes" isFolder="no">
							<name>^ut$</name>
							<script>snd.toggles.attacking = false
snd.toggles.bashing = false
snd.toggles.fasthunt = false
snd.send("qeb use translocator")</script>
							<command></command>
							<packageName></packageName>
							<regex>^ut$</regex>
						</Alias>
						<Alias isActive="yes" isFolder="no">
							<name>disperse</name>
							<script>if matches[2] ~= "none" and matches[2]~= "callers" and matches[2]~="all" then 
	send(" ")
	cecho("\n&lt;red&gt;Not a viable choice! &lt;white&gt;Enter either: &lt;red&gt;none &lt;white&gt;| &lt;yellow&gt;callers &lt;white&gt;| &lt;green&gt;all")
	snd.toggles.dispersing = false
else
	snd.disperse = matches[2]
	if snd.disperse == "none" then
		snd.toggles.dispersing = false
		send(" ")
		cecho("\n&lt;red&gt;Dispersing is now off.")
	else
		snd.toggles.dispersing = true
		send(" ")
		cecho("\n&lt;red&gt;Dispersing: &lt;green&gt;"..snd.disperse)
	end
end
</script>
							<command></command>
							<packageName></packageName>
							<regex>^use disperse (\w+)$</regex>
						</Alias>
					</AliasGroup>
					<AliasGroup isActive="yes" isFolder="yes">
						<name>Neutral</name>
						<script></script>
						<command></command>
						<packageName></packageName>
						<regex></regex>
						<AliasGroup isActive="yes" isFolder="yes">
							<name>Monk</name>
							<script></script>
							<command></command>
							<packageName></packageName>
							<regex></regex>
							<AliasGroup isActive="yes" isFolder="yes">
								<name>Affliction Offenses</name>
								<script></script>
								<command></command>
								<packageName></packageName>
								<regex></regex>
								<Alias isActive="yes" isFolder="no">
									<name>afflictions</name>
									<script>if snd.class == "Monk" then
snd.giving = {
"paresis",
"stupidity",
"anorexia",
"recklessness",
"dizziness",
"confusion",
"epilepsy",
"hallucinations"
}
snd.starting_attack()
function snd.attack_function()
 if not snd.waiting.queue then
  if snd.used.shield then
   string = "combo "..snd.target.." sck ucp ucp"
	elseif snd.target_prone then
	 if snd.parried_limb == "left leg" then
	  string = "combo "..snd.target.." wrt right leg hfp right hfp right"
	 else
	  string = "combo "..snd.target.." wrt left leg hfp left hfp left"
	 end
  else
	 one = "none"
	 two = "none"
	 three = "none"
   for i in pairs(snd.giving) do
    if not snd.checkAff(snd.giving[i]) then
     if one == "none" then
      one = snd.giving[i]
		 elseif two == "none" then
		  two = snd.giving[i]
		 elseif three == "none" then
		  three = snd.giving[i]
     end
    end
   end
	 if three ~= "none" then
    string = "mind batter "..snd.target.." "..one.." "..two.." "..three
		if snd.toggles.affcalling and not snd.target_gone then
		 string = "wt Battering "..snd.target..": "..one..", "..two..", "..three..snd.sep..string
		end
	 else
    if snd.parried_limb == "head" then
     string = "combo "..snd.target.." sdk hkp hkp"
		else
	   string = "combo "..snd.target.." wwk ucp ucp"
		end
	 end
  end
  if string ~= snd.last_attack and not snd.waiting.queue then
   snd.last_attack = string
   snd.attack(snd.last_attack)
   snd.waiting.queue = true
   tempTimer(snd.delay(), [[snd.waiting.queue = false]])
  end
 end
end
snd.attack_function()
end</script>
									<command></command>
									<packageName></packageName>
									<regex>^aff$</regex>
								</Alias>
							</AliasGroup>
							<AliasGroup isActive="yes" isFolder="yes">
								<name>Damage Offenses</name>
								<script></script>
								<command></command>
								<packageName></packageName>
								<regex></regex>
								<Alias isActive="yes" isFolder="no">
									<name>mouse mode</name>
									<script>if snd.class == "Monk" then
snd.starting_attack()
function snd.attack_function()
 if not snd.waiting.queue then
  if snd.used.shield then
   string = "combo "..snd.target.." sck ucp ucp"
	elseif snd.target_prone then
	 if snd.parried_limb == "left leg" then
	  string = "combo "..snd.target.." wrt right leg hfp right hfp right"
	 else
	  string = "combo "..snd.target.." wrt left leg hfp left hfp left"
	 end
  elseif snd.parried_limb == "head" or not snd.no_parry() then
	 string = "combo "..snd.target.." sdk hkp hkp"
	else
	 string = "combo "..snd.target.." wwk ucp ucp"
  end
  if string ~= snd.last_attack and not snd.waiting.queue then
   snd.last_attack = string
   snd.attack(snd.last_attack)
   snd.waiting.queue = true
   tempTimer(snd.delay(), [[snd.waiting.queue = false]])
  end
 end
end
snd.attack_function()
end</script>
									<command></command>
									<packageName></packageName>
									<regex>^ms$</regex>
								</Alias>
								<Alias isActive="yes" isFolder="no">
									<name>head</name>
									<script>if snd.class == "Monk" then
snd.starting_attack()
function snd.attack_function()
 if not snd.waiting.queue then
  if snd.used.shield then
   string = "combo "..snd.target.." sck ucp ucp"
	elseif snd.target_prone then
	 string = "bbt "..snd.target
	else
	 string = "combo "..snd.target.." wwk ucp ucp"
  end
  if string ~= snd.last_attack and not snd.waiting.queue then
   snd.last_attack = string
   snd.attack(snd.last_attack)
   snd.waiting.queue = true
   tempTimer(snd.delay(), [[snd.waiting.queue = false]])
  end
 end
end
snd.attack_function()
end</script>
									<command></command>
									<packageName></packageName>
									<regex>^head$</regex>
								</Alias>
							</AliasGroup>
						</AliasGroup>
						<AliasGroup isActive="yes" isFolder="yes">
							<name>Shapeshifter</name>
							<script></script>
							<command></command>
							<packageName></packageName>
							<regex></regex>
							<AliasGroup isActive="yes" isFolder="yes">
								<name>Limb Offenses</name>
								<script></script>
								<command></command>
								<packageName></packageName>
								<regex></regex>
								<Alias isActive="yes" isFolder="no">
									<name>mouse mode</name>
									<script>if snd.class == "Shapeshifter" then
snd.starting_attack()
function snd.attack_function()
 if not snd.waiting.queue then
  -- list what limbs to hit
  limbs = {"left leg", "right leg", "left arm", "right arm", "head", "torso"}
	mangled = "nothing"
	broken = "nothing"
	for limb in pairs(limbs) do
	 if snd.limb_status[limbs[limb]] == "mangled" and mangled == "nothing" then
	  if string.find(limbs[limb], "leg") and not table.contains(snd.target_has, "thighlock") then
	   mangled = limbs[limb]
		elseif limbs[limb] == "head" and not table.contains(snd.target_has, "necklock") then
		 mangled = limbs[limb]
		elseif not table.contains(snd.target_has, "armpitlock") and (limbs[limb] == "torso" or string.find(limbs[limb], "arm")) then
		 mangled = limbs[limb]
		end
	 elseif snd.limb_status[limbs[limb]] == "broken" and snd.limb_dmg[limbs[limb]] &lt; 66.66 and broken == "nothing" then
	  if string.find(limbs[limb], "leg") or string.find(limbs[limb], "arm") then
	   broken = limbs[limb]
		end
	 end
	end
	if snd.used.shield then
	 string = "touch hammer "..snd.target
	-- check if we can jawlock now!
  elseif snd.proned() and mangled ~= "nothing" and not snd.jawlocked then
	 if string.find(mangled, "leg") then
	  string = "jawlock thigh of "..snd.target
	 elseif mangled == "head" then
	  string = "jawlock neck of "..snd.target
	 elseif mangled == "torso" or string.find(mangled, "arm") then
	  string = "jawlock armpit of "..snd.target
	 end
	elseif broken ~= "nothing" and not snd.jawlocked then
	 string = "destroy "..broken.." of "..snd.target
	else
	 left = "nothing"
	 right = "nothing"
	 for limb in pairs(limbs) do
	  if limbs[limb] ~= snd.parried_limb and limbs[limb] ~= snd.last_hit_limb and (limbs[limb] ~= snd.resto_limb or snd.limb_dmg[limbs[limb]] &gt;= 33.33) then
		 if right == "nothing" then
		  right = limbs[limb]
		 elseif left == "nothing" then
		  left = limbs[limb]
		 end
		end
	 end
	 if left == "nothing" then -- we only found one limb to hit
	  left = right -- double up!
	 end
	 string = "combo "..snd.target.." slash "..left.." slash "..right
	end
  if string ~= snd.last_attack and not snd.waiting.queue then
   snd.last_attack = string
   snd.attack(snd.last_attack)
   snd.waiting.queue = true
   tempTimer(snd.delay(), [[snd.waiting.queue = false]])
  end
 end
end
snd.attack_function()
end</script>
									<command></command>
									<packageName></packageName>
									<regex>^ms$</regex>
								</Alias>
								<Alias isActive="yes" isFolder="no">
									<name>group quarter</name>
									<script>if snd.class == "Shapeshifter" then
snd.starting_attack()
function snd.attack_function()
 if not snd.waiting.queue then
  -- list what limbs to hit
  limbs = {"left leg", "right leg", "left arm", "right arm", "head", "torso"}
	mangled = "nothing"
	broken = "nothing"
	for limb in pairs(limbs) do
	 if snd.limb_status[limbs[limb]] == "mangled" and mangled == "nothing" then
	  if string.find(limbs[limb], "leg") and not table.contains(snd.target_has, "thighlock") then
	   mangled = limbs[limb]
		elseif limbs[limb] == "head" and not table.contains(snd.target_has, "necklock") then
		 mangled = limbs[limb]
		elseif not table.contains(snd.target_has, "armpitlock") and (limbs[limb] == "torso" or string.find(limbs[limb], "arm")) then
		 mangled = limbs[limb]
		end
	 elseif snd.limb_status[limbs[limb]] == "broken" and snd.limb_dmg[limbs[limb]] &lt; 66.66 and broken == "nothing" then
	  if string.find(limbs[limb], "leg") or string.find(limbs[limb], "arm") then
	   broken = limbs[limb]
		end
	 end
	end
	if snd.used.shield then
	 string = "touch hammer "..snd.target
	-- check if we can jawlock now!
	elseif (table.contains(snd.target_has, "thighlock") or table.contains(snd.target_has, "necklock") or table.contains(snd.target_has, "armpitlock")) and not snd.jawlocked then
	 string = "quarter "..snd.target
	elseif broken ~= "nothing" and not snd.jawlocked then
	 string = "destroy "..broken.." of "..snd.target
	else
	 left = "nothing"
	 right = "nothing"
	 for limb in pairs(limbs) do
	  if limbs[limb] ~= snd.parried_limb and limbs[limb] ~= snd.last_hit_limb and (limbs[limb] ~= snd.resto_limb or snd.limb_dmg[limbs[limb]] &gt;= 33.33) then
		 if right == "nothing" then
		  right = limbs[limb]
		 elseif left == "nothing" then
		  left = limbs[limb]
		 end
		end
	 end
	 if left == "nothing" then -- we only found one limb to hit
	  left = right -- double up!
	 end
	 string = "combo "..snd.target.." slash "..left.." slash "..right
	end
  if string ~= snd.last_attack and not snd.waiting.queue then
   snd.last_attack = string
   snd.attack(snd.last_attack)
   snd.waiting.queue = true
   tempTimer(snd.delay(), [[snd.waiting.queue = false]])
  end
 end
end
snd.attack_function()
end</script>
									<command></command>
									<packageName></packageName>
									<regex>^insta$</regex>
								</Alias>
								<Alias isActive="yes" isFolder="no">
									<name>limbs</name>
									<script>if snd.class == "Shapeshifter" then
snd.starting_attack()
function snd.attack_function()
 if not snd.waiting.queue then
  -- list what limbs to hit
  limbs = {"left leg", "right leg", "left arm", "right arm", "head", "torso"}
	mangled = "nothing"
	broken = "nothing"
	crippled = "nothing"
	for limb in pairs(limbs) do
	 if snd.limb_status[limbs[limb]] == "mangled" and mangled == "nothing" then
	  if string.find(limbs[limb], "leg") and not table.contains(snd.target_has, "thighlock") then
	   mangled = limbs[limb]
		elseif limbs[limb] == "head" and not table.contains(snd.target_has, "necklock") then
		 mangled = limbs[limb]
		elseif not table.contains(snd.target_has, "armpitlock") and (limbs[limb] == "torso" or string.find(limbs[limb], "arm")) then
		 mangled = limbs[limb]
		end
	 elseif snd.limb_status[limbs[limb]] == "broken" and snd.limb_dmg[limbs[limb]] &lt; 66.66 and broken == "nothing" then
	  if string.find(limbs[limb], "leg") or string.find(limbs[limb], "arm") then
	   broken = limbs[limb]
		end
	 elseif table.contains(snd.target_has, "a broken "..limbs[limb]) and snd.limb_dmg[limbs[limb]] &lt; 33.33 and crippled == "nothing" then
	  if string.find(limbs[limb], "leg") or string.find(limbs[limb], "arm") then
		 crippled = limbs[limb]
		end
	 end
	end
	if snd.used.shield then
	 string = "touch hammer "..snd.target
	elseif snd.jawlocked then
	 string = "rupture "..snd.target
	-- check if we can jawlock now!
  elseif snd.proned() and mangled ~= "nothing" and not snd.jawlocked then
	 if string.find(mangled, "leg") then
	  string = "jawlock thigh of "..snd.target
	 elseif mangled == "head" then
	  string = "jawlock neck of "..snd.target
	 elseif mangled == "torso" or string.find(mangled, "arm") then
	  string = "jawlock armpit of "..snd.target
	 end
	elseif broken ~= "nothing" and not snd.jawlocked and snd.defenses.def_fury.state ~= "deffed" then
	 string = "destroy "..broken.." of "..snd.target
	elseif crippled ~= "nothing" and not snd.jawlocked and snd.defenses.def_fury.state ~= "deffed" then
	 string = "mangle "..crippled.." of "..snd.target
	elseif snd.resto_limb ~= "none" and snd.defenses.def_fury.state ~= "deffed" then
	 string = "combo "..snd.target.." hamstring left hamstring right"
	else
	 left = "nothing"
	 right = "nothing"
	 for limb in pairs(limbs) do
	  if limbs[limb] ~= snd.parried_limb and limbs[limb] ~= snd.last_hit_limb and (limbs[limb] ~= snd.resto_limb or snd.limb_dmg[limbs[limb]] &gt;= 33.33) then
		 if right == "nothing" then
		  right = limbs[limb]
		 elseif left == "nothing" then
		  left = limbs[limb]
		 end
		end
	 end
	 if left == "nothing" then -- we only found one limb to hit
	  left = right -- double up!
	 end
	 string = "combo "..snd.target.." slash "..left.." slash "..right
	 if snd.defenses.def_fury.state == "deffed" then
	  string = "pounce "..snd.target..snd.sep..string
	 end
	end
  if string ~= snd.last_attack and not snd.waiting.queue then
   snd.last_attack = string
   snd.attack(snd.last_attack)
   snd.waiting.queue = true
   tempTimer(snd.delay(), [[snd.waiting.queue = false]])
  end
 end
end
snd.attack_function()
end</script>
									<command></command>
									<packageName></packageName>
									<regex>^limbs$</regex>
								</Alias>
							</AliasGroup>
							<AliasGroup isActive="yes" isFolder="yes">
								<name>Damage Offenses</name>
								<script></script>
								<command></command>
								<packageName></packageName>
								<regex></regex>
								<Alias isActive="yes" isFolder="no">
									<name>raw damage</name>
									<script>if snd.class == "Shapeshifter" then
snd.starting_attack()
function snd.attack_function()
 if not snd.waiting.queue then
  if snd.used.shield then
   string = "touch hammer "..snd.target
	elseif snd.defenses.def_fury.state == "deffed" then
	 string = "pounce "..snd.target..snd.sep.."combo "..snd.target.." jugular jugular"
	elseif not snd.no_parry() then
	 string = "combo "..snd.target.." bodypunch jugular"
	else
	 string = "combo "..snd.target.." jugular jugular"
	end
  if string ~= snd.last_attack and not snd.waiting.queue then
   snd.last_attack = string
   snd.attack(snd.last_attack)
   snd.waiting.queue = true
   tempTimer(snd.delay(), [[snd.waiting.queue = false]])
  end
 end
end
snd.attack_function()
end</script>
									<command></command>
									<packageName></packageName>
									<regex>^dmg$</regex>
								</Alias>
							</AliasGroup>
						</AliasGroup>
						<AliasGroup isActive="yes" isFolder="yes">
							<name>Syssin</name>
							<script></script>
							<command></command>
							<packageName></packageName>
							<regex></regex>
							<AliasGroup isActive="yes" isFolder="yes">
								<name>Wielding</name>
								<script></script>
								<command></command>
								<packageName></packageName>
								<regex></regex>
								<Alias isActive="yes" isFolder="no">
									<name>wield bashing</name>
									<script>if snd.class == "Syssin" then
snd.send("quickwield left whip"..snd.sep.."quickwield right shield")
end</script>
									<command></command>
									<packageName></packageName>
									<regex>^wbsh$</regex>
								</Alias>
								<Alias isActive="yes" isFolder="no">
									<name>wield pvp</name>
									<script>if snd.class == "Syssin" then
snd.send("quickwield left dirk"..snd.sep.."quickwield right shield")
end</script>
									<command></command>
									<packageName></packageName>
									<regex>^wpvp$</regex>
								</Alias>
							</AliasGroup>
							<AliasGroup isActive="yes" isFolder="yes">
								<name>Assassination</name>
								<script></script>
								<command></command>
								<packageName></packageName>
								<regex></regex>
								<Alias isActive="yes" isFolder="no">
									<name>yank</name>
									<script>if snd.class == "Syssin" then
if matches[2] == "" then
 snd.send("qeb quickwield left whip"..snd.sep.."yank "..snd.target)
else
 snd.send("qeb quickwield left whip"..snd.sep.."yank "..matches[2])
end
end</script>
									<command></command>
									<packageName></packageName>
									<regex>^bk(.*)$</regex>
								</Alias>
								<Alias isActive="yes" isFolder="no">
									<name>backstab</name>
									<script>if snd.class == "Syssin" then
if matches[2] == "" then
 snd.send("qeb quickwield left dirk"..snd.sep.."backstab "..snd.target.." curare")
else
 snd.send("qeb quickwield left dirk"..snd.sep.."backstab "..matches[2].." curare")
end
end</script>
									<command></command>
									<packageName></packageName>
									<regex>^bs(.*)$</regex>
								</Alias>
							</AliasGroup>
							<AliasGroup isActive="yes" isFolder="yes">
								<name>Subterfuge</name>
								<script></script>
								<command></command>
								<packageName></packageName>
								<regex></regex>
								<Alias isActive="yes" isFolder="no">
									<name>darkflood</name>
									<script>if snd.class == "Syssin" then
snd.send("qeb conjure darkflood")
end</script>
									<command></command>
									<packageName></packageName>
									<regex>^df$</regex>
								</Alias>
								<Alias isActive="yes" isFolder="no">
									<name>abduct</name>
									<script>if snd.class == "Syssin" then
if matches[2] == nil then
 snd.send("qeb abduct "..snd.target)
else
 snd.send("qeb abduct "..matches[2])
end
end</script>
									<command></command>
									<packageName></packageName>
									<regex>^at(?: (.*))?$</regex>
								</Alias>
							</AliasGroup>
							<AliasGroup isActive="yes" isFolder="yes">
								<name>Hypnosis</name>
								<script></script>
								<command></command>
								<packageName></packageName>
								<regex></regex>
								<Alias isActive="yes" isFolder="no">
									<name>hypnotise</name>
									<script>if snd.class == "Syssin" then
snd.send("qeb hypnotise "..snd.target)
end</script>
									<command></command>
									<packageName></packageName>
									<regex>^hyp$</regex>
								</Alias>
								<Alias isActive="yes" isFolder="no">
									<name>suggest</name>
									<script>if snd.class == "Syssin" then
local shorthand = {
["clu"] = "clumsiness",
["imp"] = "impatience"
}
if shorthand[matches[2]] then
 snd.send("qeb suggest "..snd.target.." "..shorthand[matches[2]])
else
 cecho("&lt;red&gt;No such affliction!")
end
end</script>
									<command></command>
									<packageName></packageName>
									<regex>^sg (\w+)$</regex>
								</Alias>
								<Alias isActive="yes" isFolder="no">
									<name>shadow mark</name>
									<script>if snd.class == "Syssin" then
snd.send("qeb shadow mark numbness "..snd.target)
end</script>
									<command></command>
									<packageName></packageName>
									<regex>^sm$</regex>
								</Alias>
								<Alias isActive="yes" isFolder="no">
									<name>hypnotise stack</name>
									<script>if snd.class == "Syssin" then
snd.hypno_stack = {
 "hypochondria",
 "clumsiness",
 "impatience",
 "lethargy",
 "hypochondria",
 "impatience",
 "clumsiness",
 "lethargy",
 "impatience",
 "loneliness",
 "lethargy",
 "claustrophobia",
 "impatience",
 "agoraphobia"
}
snd.hyp = 0
snd.last_hypno = 0
snd.starting_attack()
function snd.attack_function()
 local string = ""
 if not snd.waiting.queue then
  if snd.hypno == "open" or snd.hypno == "none" then
   if snd.hypno == "none" then
    string = "hypnotise "..snd.target..snd.sep
   end
   if #snd.hypno_stack &gt; snd.last_hypno + 1 then
    snd.hyp = snd.last_hypno+1
    string = string.."suggest "..snd.target.." "..snd.hypno_stack[snd.hyp]
   else
    string = "seal "..snd.target.." 3"
   end
  else
   snd.message("Good to go! KILL THEM NOW!")
  end
 end
 if string ~= snd.last_attack and not snd.waiting.queue then
  snd.last_attack = string
  snd.attack(snd.last_attack)
  snd.waiting.queue = true
  tempTimer(snd.delay(), [[snd.waiting.queue = false]])
 end
end
snd.attack_function()
end</script>
									<command></command>
									<packageName></packageName>
									<regex>^hypno$</regex>
								</Alias>
								<Alias isActive="yes" isFolder="no">
									<name>hypnotise magic stack</name>
									<script>if snd.class == "Syssin" then
snd.hypno_stack = {
 "hypochondria",
 "clumsiness",
 "impatience",
 "confusion",
 "hypochondria",
 "impatience",
 "clumsiness",
 "confusion",
 "impatience",
 "loneliness",
 "confusion",
 "claustrophobia",
 "impatience",
 "agoraphobia"
}
snd.hyp = 0
snd.last_hypno = 0
snd.starting_attack()
function snd.attack_function()
 local string = ""
 if not snd.waiting.queue then
  if snd.hypno == "open" or snd.hypno == "none" then
   if snd.hypno == "none" then
    string = "hypnotise "..snd.target..snd.sep
   end
   if #snd.hypno_stack &gt; snd.last_hypno + 1 then
    snd.hyp = snd.last_hypno+1
    string = string.."suggest "..snd.target.." "..snd.hypno_stack[snd.hyp]
   else
    string = "seal "..snd.target.." 3"
   end
  else
   snd.message("Good to go! KILL THEM NOW!")
  end
 end
 if string ~= snd.last_attack and not snd.waiting.queue then
  snd.last_attack = string
  snd.attack(snd.last_attack)
  snd.waiting.queue = true
  tempTimer(snd.delay(), [[snd.waiting.queue = false]])
 end
end
snd.attack_function()
end</script>
									<command></command>
									<packageName></packageName>
									<regex>^hypm$</regex>
								</Alias>
							</AliasGroup>
							<AliasGroup isActive="yes" isFolder="yes">
								<name>Affliction Offenses</name>
								<script></script>
								<command></command>
								<packageName></packageName>
								<regex></regex>
								<Alias isActive="yes" isFolder="no">
									<name>mouse mode</name>
									<script>if snd.class == "Syssin" then
snd.starting_attack()
function snd.attack_function()
	local string = "" -- this will populate with our attack
	local call = "" -- this will be for affliction calling
	local touse = {} -- this will store the affs we still want to hit with
	local tohit = {} -- this will store the effects from touse
	local extraaff = "delphinium" -- what to use if we used everything else
	-- and how far away we are from a lock
	local missing = snd.missingAff("stupidity/paresis/anorexia/asthma/slickness", "/")
	if snd.target_locked() then
		snd.giving = {
		"a broken left leg",
		"a broken right leg",
		"hearing",
		"sensitivity",
		"voyria"
		}
	else
		snd.giving = { -- the venoms we're going to apply while hypnosis is building, in prioritized order
		--"sight",
		"clumsiness",
		"asthma",
		"paresis",
		"slickness",
		"stupidity",
		"anorexia",
		"hearing",
		"sensitivity",
		--"squelched",
		"shyness", -- to bury impatience once hypno fires
		--"vomiting", -- stick these two early, to bury scytherus
		"allergies", -- this being the second
		--"haemophilia",
		--"recklessness",
		"weariness",
		--"dizziness",
		--"voyria",
		}
	end
	if not snd.waiting.queue then -- make sure not to spam
		if not snd.can_arms() then -- this means we have at least one broken arm
			-- so we'll have to bedazzle instead of dstab
			string = "bedazzle "..snd.target
		-- let's move on
		elseif (snd.checkAff("anorexia") or snd.checkAff("allergies") or snd.checkAff("vomiting") or snd.checkAff("mental disruption")) 
					and not snd.checkAff("thin_blood") then
			if snd.used.paste then
				string = "quickwield left whip"..snd.sep.."flay "..snd.target.." fangbarrier"
				snd.flayingfang = true
			else
				-- if they don't yet have scytherus, fangbarrier is down, and they have at least one thing to cover it
				string = "bite "..snd.target.." scytherus"
			end
		elseif snd.target_locked() and snd.checkAff("sensitivity") then
			-- they're locked and ready to be finished off
			if snd.used.paste then
				string = "quickwield left whip"..snd.sep.."flay "..snd.target
			else
				string = "bite "..snd.target.." camus"
			end
		else -- none of the special conditions are met, let's go with a meat-and-potatoes dstab
			-- first and foremost, check if we can lock them with one or two more affs
			if #missing == 1 or (#missing == 2 and not snd.used.shield and not snd.used.rebounding) then
				touse = missing
			end
			-- any aff we're not using to lock, we'll pick from the lists above
			for i in pairs(snd.giving) do
				if not snd.checkAff(snd.giving[i]) then
					if not table.contains(touse, snd.giving[i]) then
						table.insert(touse, snd.giving[i])
					end
				end
			end
			for aff in pairs(touse) do
				table.insert(tohit, snd.effects[touse[aff]])
			end
			-- now we know which venoms we want, let's decide what attack to use
			if (snd.defenses.def_hiding.state == "deffed" or snd.defenses.def_phase.state == "deffed") and not snd.used.shield then
				string = "quickwield left dirk"..snd.sep.."backstab "..snd.target.." "..tohit[1]
				call = "wt Afflicting "..snd.target..": "..tohit[1]
			elseif snd.used.shield or snd.used.rebounding then
				-- we can use a venom with flay if we're flaying shield
				string = "quickwield left whip"..snd.sep.."wipe left"..snd.sep.."envenom whip with "..tohit[1]..snd.sep.."flay "..snd.target
				call = "wt Afflicting "..snd.target..": "..tohit[1]
			else -- otherwise, we don't need to flay - go full ham!
				string = "quickwield left dirk"..snd.sep.."wipe left"..snd.sep.."dstab "..snd.target.." "..tohit[2].." "..tohit[1]
				call = "wt Afflicting "..snd.target..": "..tohit[2]..", "..tohit[1]
			end
		end
		if snd.toggles.affcalling and not snd.target_gone then
			string = call..snd.sep..string
		end
	end
	-- anything we can do with shadow balance this round?
	if gmcp.Char.Vitals.ability_bal == "1" and gmcp.Char.Vitals.prone == "0" then
		-- we do have shadow balance and we don't need to hold it for numbness
		if snd.target_locked() and #snd.target_has &gt;= 8 then
			-- the target's locked and affed up, let's hurry the finish along
			string = string..snd.sep.."shadow sleight pall "..snd.target
		elseif not snd.checkAff("void") and snd.hypno ~= "running" then
			-- they aren't under active hypnosis, and not locked - let's void!
			string = string..snd.sep.."shadow sleight void "..snd.target
		else -- they're under hypnosis, but not yet locked, nudge it along with dissipate
			string = string..snd.sep.."shadow sleight dissipate "..snd.target
		end
	end
	if string ~= snd.last_attack and not snd.waiting.queue then
		snd.last_attack = string
		snd.attack(snd.last_attack)
		snd.waiting.queue = true
		tempTimer(0.2, [[snd.waiting.queue = false]])
	end
end
snd.attack_function()
end</script>
									<command></command>
									<packageName></packageName>
									<regex>^ms$</regex>
								</Alias>
								<Alias isActive="yes" isFolder="no">
									<name>magic</name>
									<script>if snd.class == "Syssin" then
snd.hypno_stack = { -- hypnosis affs, in priority order
 "hypochondria",
 "impatience",
 "loneliness",
 "confusion",
 "hypochondria",
 "impatience",
 "vertigo",
 "confusion",
 "impatience",
 "loneliness",
 "confusion"
}
snd.starting_attack()
function snd.attack_function()
	local string = "" -- this will populate with our attack
	local call = "" -- this will be for affliction calling
	local touse = {} -- this will store the affs we still want to hit with
	local tohit = {} -- this will store the effects from touse
	local extraaff = "delphinium" -- what to use if we used everything else
	-- and how far away we are from a lock
	local missing = snd.missingAff("stupidity/paresis/anorexia/asthma/slickness", "/")
	if snd.target_locked() then
		snd.giving = {
		"a broken left leg",
		"a broken right leg",
		"hearing",
		"sensitivity",
		"voyria"
		}
	elseif snd.hypno == "running" then
		snd.giving = { -- the venoms we're going to apply while hypnosis is running, in prioritized order
		--"sight",
		"paresis",
		"weariness",
		"asthma",
		"shyness", -- to keep impatience stuck, this buries it
		"slickness",
		"anorexia", -- work harder on the lock than buffer affs, while hypnosis is going
		"stupidity", -- not as important, since we're running impatience
		--"vomiting",
		"allergies",
		"sensitivity",
		--"haemophilia",
		--"recklessness",
		"clumsiness",
		--"dizziness",
		"voyria",
		}
	else
		snd.giving = { -- the venoms we're going to apply while hypnosis is building, in prioritized order
		--"sight",
		"weariness",
		"asthma",
		"paresis",
		--"squelched",
		"shyness", -- to bury impatience once hypno fires
		--"vomiting", -- stick these two early, to bury scytherus
		"allergies", -- this being the second
		"slickness",
		"stupidity",
		"anorexia",
		"sensitivity",
		--"haemophilia",
		--"recklessness",
		"clumsiness",
		--"dizziness",
		--"voyria",
		}
	end
	if not snd.waiting.queue then -- make sure not to spam
		if not snd.can_arms() then -- this means we have at least one broken arm
			-- so we'll have to bedazzle instead of dstab
			string = "bedazzle "..snd.target
		elseif not snd.checkAff("numbed_skin") then
			-- they don't have numbness yet
			if snd.used.paste then -- but they have fangbarrier, so we can't give it
				-- we need to flay first
				string = "quickwield left whip"..snd.sep.."flay "..snd.target.." fangbarrier"
				snd.flayingfang = true
			else -- they don't have fangbarrier - go for it!
				string = "shadow mark numbness "..snd.target
			end
		-- they already have numbness, let's move on
		elseif (snd.checkAff("anorexia") or snd.checkAff("allergies") or snd.checkAff("vomiting") or snd.checkAff("mental disruption")) 
						and not snd.checkAff("thin_blood") then
			if snd.used.paste then
				string = "quickwield left whip"..snd.sep.."flay "..snd.target.." fangbarrier"
				snd.flayingfang = true
			else
				-- if they don't yet have scytherus, fangbarrier is down, and they have at least one thing to cover it
				string = "bite "..snd.target.." scytherus"
			end
		elseif snd.target_locked() and snd.checkAff("sensitivity") then
			-- they're locked and ready to be finished off
			if snd.used.paste then
				string = "quickwield left whip"..snd.sep.."flay "..snd.target
			else
				string = "bite "..snd.target.." camus"
			end
		else -- none of the special conditions are met, let's go with a meat-and-potatoes dstab
			-- first and foremost, check if we can lock them with one or two more affs
			if #missing == 1 or (#missing == 2 and not snd.used.shield and not snd.used.rebounding) then
				touse = missing
			end
			-- any aff we're not using to lock, we'll pick from the lists above
			for i in pairs(snd.giving) do
				if not snd.checkAff(snd.giving[i]) then
					if not table.contains(touse, snd.giving[i]) then
						table.insert(touse, snd.giving[i])
					end
				end
			end
			for aff in pairs(touse) do
				table.insert(tohit, snd.effects[touse[aff]])
			end
			-- now we know which venoms we want, let's decide what attack to use
			if snd.used.shield or snd.used.rebounding then
				-- we can use a venom with flay if we're flaying shield
				string = "quickwield left whip"..snd.sep.."wipe left"..snd.sep.."envenom whip with "..tohit[1]..snd.sep.."flay "..snd.target
				call = "wt Afflicting "..snd.target..": "..tohit[1]
			else -- otherwise, we don't need to flay - go full ham!
				string = "quickwield left dirk"..snd.sep.."wipe left"..snd.sep.."dstab "..snd.target.." "..tohit[2].." "..tohit[1]
				call = "wt Afflicting "..snd.target..": "..tohit[2]..", "..tohit[1]
			end
		end
		if snd.toggles.affcalling and not snd.target_gone then
			string = call..snd.sep..string
		end
		-- now let's see if we can append some hypnosis
		if snd.hypno == "open" or snd.hypno == "none" then
			-- 'open' means they're ready for suggestions, 'none' means we haven't started yet
			-- either way, we're going to suggest something now
			if #snd.hypno_stack &gt;= snd.last_hypno + 1 then -- we still have more in the hypno_stack
				snd.hyp = snd.last_hypno+1 -- move on to the next thing
				if snd.hypno == "none" then -- if we haven't hypnotised yet
					string = string..snd.sep.."hypnotise "..snd.target -- do that first
				end
				-- append the suggestion to our attack string
				string = string..snd.sep.."suggest "..snd.target.." "..snd.hypno_stack[snd.hyp]
			elseif snd.hypno == "open" then -- we're at the end of the (hypno) line, and they're not sealed yet
				string = "seal "..snd.target.." 3" -- so seal them up
			end
		elseif snd.hypno == "running" then -- we have an active hypnosis going
			-- just append hypnotise so we don't miss when it ends
			string = string..snd.sep.."hypnotise "..snd.target
		end
	end
	-- anything we can do with shadow balance this round?
	if gmcp.Char.Vitals.ability_bal == "1" and gmcp.Char.Vitals.prone == "0" and table.contains(snd.target_has, "numbed_skin") then
		-- we do have shadow balance and we don't need to hold it for numbness
		if snd.target_locked() and #snd.target_has &gt;= 8 then
			-- the target's locked and affed up, let's hurry the finish along
			string = string..snd.sep.."shadow sleight pall "..snd.target
		elseif not snd.checkAff("void") and snd.hypno ~= "running" then
			-- they aren't under active hypnosis, and not locked - let's void!
			string = string..snd.sep.."shadow sleight void "..snd.target
		else -- they're under hypnosis, but not yet locked, nudge it along with dissipate
			string = string..snd.sep.."shadow sleight dissipate "..snd.target
		end
	end
	if string ~= snd.last_attack and not snd.waiting.queue then
		snd.last_attack = string
		snd.attack(snd.last_attack)
		snd.waiting.queue = true
		tempTimer(0.2, [[snd.waiting.queue = false]])
	end
end
snd.attack_function()
end</script>
									<command></command>
									<packageName></packageName>
									<regex>^mg$</regex>
								</Alias>
								<Alias isActive="yes" isFolder="no">
									<name>kill</name>
									<script>if snd.class == "Syssin" then
snd.hypno_stack = { -- hypnosis affs, in priority order
 "hypochondria",
 "impatience",
 "loneliness",
 "lethargy",
 "hypochondria",
 "impatience",
 "vertigo",
 "lethargy",
 "impatience",
 "loneliness",
 "lethargy"
}
snd.starting_attack()
function snd.attack_function()
	local string = "" -- this will populate with our attack
	local call = "" -- this will be for affliction calling
	local touse = {} -- this will store the affs we still want to hit with
	local tohit = {} -- this will store the effects from touse
	local extraaff = "delphinium" -- what to use if we used everything else
	-- and how far away we are from a lock
	local missing = snd.missingAff("stupidity/paresis/anorexia/asthma/slickness", "/")
	if snd.target_locked() then
		snd.giving = {
		"a broken left leg",
		"a broken right leg",
		"hearing",
		"sensitivity",
		"voyria"
		}
	elseif snd.hypno == "running" then
		snd.giving = { -- the venoms we're going to apply while hypnosis is running, in prioritized order
		--"sight",
		"paresis",
		"clumsiness",
		"asthma",
		"shyness", -- to keep impatience stuck, this buries it
		"slickness",
		"anorexia", -- work harder on the lock than buffer affs, while hypnosis is going
		"stupidity", -- not as important, since we're running impatience
		--"vomiting",
		"allergies",
		"sensitivity",
		--"haemophilia",
		--"recklessness",
		"weariness",
		--"dizziness",
		"voyria",
		}
	else
		snd.giving = { -- the venoms we're going to apply while hypnosis is building, in prioritized order
		--"sight",
		"clumsiness",
		"asthma",
		"paresis",
		--"squelched",
		"shyness", -- to bury impatience once hypno fires
		--"vomiting", -- stick these two early, to bury scytherus
		"allergies", -- this being the second
		"slickness",
		"stupidity",
		"anorexia",
		"sensitivity",
		--"haemophilia",
		--"recklessness",
		"weariness",
		--"dizziness",
		--"voyria",
		}
	end
	if not snd.waiting.queue then -- make sure not to spam
		if not snd.can_arms() then -- this means we have at least one broken arm
			-- so we'll have to bedazzle instead of dstab
			string = "bedazzle "..snd.target
		elseif not snd.checkAff("numbed_skin") then
			-- they don't have numbness yet
			if snd.used.paste then -- but they have fangbarrier, so we can't give it
				-- we need to flay first
				string = "quickwield left whip"..snd.sep.."flay "..snd.target.." fangbarrier"
				snd.flayingfang = true
			else -- they don't have fangbarrier - go for it!
				string = "shadow mark numbness "..snd.target
			end
		-- they already have numbness, let's move on
		elseif (snd.checkAff("anorexia") or snd.checkAff("allergies") or snd.checkAff("vomiting") or snd.checkAff("mental disruption")) and not snd.checkAff("thin_blood") then
			if snd.used.paste then
				string = "quickwield left whip"..snd.sep.."flay "..snd.target.." fangbarrier"
				snd.flayingfang = true
			else
				-- if they don't yet have scytherus, fangbarrier is down, and they have at least one thing to cover it
				string = "bite "..snd.target.." scytherus"
			end
		elseif snd.target_locked() and snd.checkAff("sensitivity") then
			-- they're locked and ready to be finished off
			if snd.used.paste then
				string = "quickwield left whip"..snd.sep.."flay "..snd.target
			else
				string = "bite "..snd.target.." camus"
			end
		else -- none of the special conditions are met, let's go with a meat-and-potatoes dstab
			-- first and foremost, check if we can lock them with one or two more affs
			if #missing == 1 or (#missing == 2 and not snd.used.shield and not snd.used.rebounding) then
				touse = missing
			end
			-- any aff we're not using to lock, we'll pick from the lists above
			for i in pairs(snd.giving) do
				if not snd.checkAff(snd.giving[i]) then
					if not table.contains(touse, snd.giving[i]) then
						table.insert(touse, snd.giving[i])
					end
				end
			end
			for aff in pairs(touse) do
				table.insert(tohit, snd.effects[touse[aff]])
			end
			-- now we know which venoms we want, let's decide what attack to use
			if snd.used.shield or snd.used.rebounding then
				-- we can use a venom with flay if we're flaying shield
				string = "quickwield left whip"..snd.sep.."wipe left"..snd.sep.."envenom whip with "..tohit[1]..snd.sep.."flay "..snd.target
				call = "wt Afflicting "..snd.target..": "..tohit[1]
			else -- otherwise, we don't need to flay - go full ham!
				string = "quickwield left dirk"..snd.sep.."wipe left"..snd.sep.."dstab "..snd.target.." "..tohit[2].." "..tohit[1]
				call = "wt Afflicting "..snd.target..": "..tohit[2]..", "..tohit[1]
			end
		end
		if snd.toggles.affcalling and not snd.target_gone then
			string = call..snd.sep..string
		end
		-- now let's see if we can append some hypnosis
		if snd.hypno == "open" or snd.hypno == "none" then
			-- 'open' means they're ready for suggestions, 'none' means we haven't started yet
			-- either way, we're going to suggest something now
			if #snd.hypno_stack &gt;= snd.last_hypno + 1 then -- we still have more in the hypno_stack
				snd.hyp = snd.last_hypno+1 -- move on to the next thing
				if snd.hypno == "none" then -- if we haven't hypnotised yet
					string = string..snd.sep.."hypnotise "..snd.target -- do that first
				end
				-- append the suggestion to our attack string
				string = string..snd.sep.."suggest "..snd.target.." "..snd.hypno_stack[snd.hyp]
			elseif snd.hypno == "open" then -- we're at the end of the (hypno) line, and they're not sealed yet
				string = "seal "..snd.target.." 3" -- so seal them up
			end
		elseif snd.hypno == "running" then -- we have an active hypnosis going
			-- just append hypnotise so we don't miss when it ends
			string = string..snd.sep.."hypnotise "..snd.target
		end
	end
	-- anything we can do with shadow balance this round?
	if gmcp.Char.Vitals.ability_bal == "1" and gmcp.Char.Vitals.prone == "0" and table.contains(snd.target_has, "numbed_skin") then
		-- we do have shadow balance and we don't need to hold it for numbness
		if snd.target_locked() and #snd.target_has &gt;= 8 then
			-- the target's locked and affed up, let's hurry the finish along
			string = string..snd.sep.."shadow sleight pall "..snd.target
		elseif not snd.checkAff("void") and snd.hypno ~= "running" then
			-- they aren't under active hypnosis, and not locked - let's void!
			string = string..snd.sep.."shadow sleight void "..snd.target
		else -- they're under hypnosis, but not yet locked, nudge it along with dissipate
			string = string..snd.sep.."shadow sleight dissipate "..snd.target
		end
	end
	if string ~= snd.last_attack and not snd.waiting.queue then
		snd.last_attack = string
		snd.attack(snd.last_attack)
		snd.waiting.queue = true
		tempTimer(0.2, [[snd.waiting.queue = false]])
	end
end
snd.attack_function()
end</script>
									<command></command>
									<packageName></packageName>
									<regex>^kl$</regex>
								</Alias>
								<Alias isActive="yes" isFolder="no">
									<name>1v1</name>
									<script>if snd.class == "Syssin" then
snd.hypno_stack = { -- hypnosis affs, in priority order
 "hypochondria",
 "impatience",
 "loneliness",
 "lethargy",
 "hypochondria",
 "impatience",
 "vertigo",
 "lethargy",
 "impatience",
 "loneliness",
 "lethargy"
}
snd.starting_attack()
function snd.attack_function()
	local string = "" -- this will populate with our attack
	local call = "" -- this will be for affliction calling
	local touse = {} -- this will store the affs we still want to hit with
	local tohit = {} -- this will store the effects from touse
	local extraaff = "delphinium" -- what to use if we used everything else
	-- and how far away we are from a lock
	local missing = snd.missingAff("stupidity/paresis/anorexia/asthma/slickness", "/")
	if snd.target_locked() then
		snd.giving = {
		"a broken left leg",
		"a broken right leg",
		"hearing",
		"sensitivity",
		"voyria"
		}
	elseif snd.hypno == "running" then
		snd.giving = { -- the venoms we're going to apply while hypnosis is running, in prioritized order
		--"sight",
		"paresis",
		"clumsiness",
		"asthma",
		"shyness", -- to keep impatience stuck, this buries it
		"slickness",
		"anorexia", -- work harder on the lock than buffer affs, while hypnosis is going
		"stupidity", -- not as important, since we're running impatience
		--"vomiting",
		"allergies",
		"sensitivity",
		--"haemophilia",
		--"recklessness",
		"weariness",
		--"dizziness",
		"voyria",
		}
	else
		snd.giving = { -- the venoms we're going to apply while hypnosis is building, in prioritized order
		--"sight",
		"clumsiness",
		"asthma",
		"paresis",
		--"squelched",
		"shyness", -- to bury impatience once hypno fires
		--"vomiting", -- stick these two early, to bury scytherus
		"allergies", -- this being the second
		"slickness",
		"stupidity",
		"anorexia",
		"sensitivity",
		--"haemophilia",
		--"recklessness",
		"weariness",
		--"dizziness",
		--"voyria",
		}
	end
	if not snd.waiting.queue then -- make sure not to spam
		if not snd.can_arms() then -- this means we have at least one broken arm
			-- so we'll have to bedazzle instead of dstab
			string = "bedazzle "..snd.target
		-- they already have numbness, let's move on
		elseif (snd.checkAff("anorexia") or snd.checkAff("allergies") or snd.checkAff("vomiting") or snd.checkAff("mental disruption")) and not snd.checkAff("thin_blood") then
			if snd.used.paste then
				string = "quickwield left whip"..snd.sep.."flay "..snd.target.." fangbarrier"
				snd.flayingfang = true
			else
				-- if they don't yet have scytherus, fangbarrier is down, and they have at least one thing to cover it
				string = "bite "..snd.target.." scytherus"
			end
		elseif snd.target_locked() and snd.checkAff("sensitivity") then
			-- they're locked and ready to be finished off
			if snd.used.paste then
				string = "quickwield left whip"..snd.sep.."flay "..snd.target
			else
				string = "bite "..snd.target.." camus"
			end
		else -- none of the special conditions are met, let's go with a meat-and-potatoes dstab
			-- first and foremost, check if we can lock them with one or two more affs
			if #missing == 1 or (#missing == 2 and not snd.used.shield and not snd.used.rebounding) then
				touse = missing
			end
			-- any aff we're not using to lock, we'll pick from the lists above
			for i in pairs(snd.giving) do
				if not snd.checkAff(snd.giving[i]) then
					if not table.contains(touse, snd.giving[i]) then
						table.insert(touse, snd.giving[i])
					end
				end
			end
			for aff in pairs(touse) do
				table.insert(tohit, snd.effects[touse[aff]])
			end
			-- now we know which venoms we want, let's decide what attack to use
			if snd.used.shield or snd.used.rebounding then
				-- we can use a venom with flay if we're flaying shield
				string = "quickwield left whip"..snd.sep.."wipe left"..snd.sep.."envenom whip with "..tohit[1]..snd.sep.."flay "..snd.target
				call = "wt Afflicting "..snd.target..": "..tohit[1]
			else -- otherwise, we don't need to flay - go full ham!
				string = "quickwield left dirk"..snd.sep.."wipe left"..snd.sep.."dstab "..snd.target.." "..tohit[2].." "..tohit[1]
				call = "wt Afflicting "..snd.target..": "..tohit[2]..", "..tohit[1]
			end
		end
		if snd.toggles.affcalling and not snd.target_gone then
			string = call..snd.sep..string
		end
		-- now let's see if we can append some hypnosis
		if snd.hypno == "open" or snd.hypno == "none" then
			-- 'open' means they're ready for suggestions, 'none' means we haven't started yet
			-- either way, we're going to suggest something now
			if #snd.hypno_stack &gt;= snd.last_hypno + 1 then -- we still have more in the hypno_stack
				snd.hyp = snd.last_hypno+1 -- move on to the next thing
				if snd.hypno == "none" then -- if we haven't hypnotised yet
					string = string..snd.sep.."hypnotise "..snd.target -- do that first
				end
				-- append the suggestion to our attack string
				string = string..snd.sep.."suggest "..snd.target.." "..snd.hypno_stack[snd.hyp]
			elseif snd.hypno == "open" then -- we're at the end of the (hypno) line, and they're not sealed yet
				string = "seal "..snd.target.." 3" -- so seal them up
			end
		elseif snd.hypno == "running" then -- we have an active hypnosis going
			-- just append hypnotise so we don't miss when it ends
			string = string..snd.sep.."hypnotise "..snd.target
		end
	end
	-- anything we can do with shadow balance this round?
	if gmcp.Char.Vitals.ability_bal == "1" and gmcp.Char.Vitals.prone == "0" then
		-- we do have shadow balance and we don't need to hold it for numbness
		if snd.target_locked() and #snd.target_has &gt;= 8 then
			-- the target's locked and affed up, let's hurry the finish along
			string = string..snd.sep.."shadow sleight pall "..snd.target
		elseif not snd.checkAff("void") and snd.hypno ~= "running" then
			-- they aren't under active hypnosis, and not locked - let's void!
			string = string..snd.sep.."shadow sleight void "..snd.target
		else -- they're under hypnosis, but not yet locked, nudge it along with dissipate
			string = string..snd.sep.."shadow sleight dissipate "..snd.target
		end
	end
	if string ~= snd.last_attack and not snd.waiting.queue then
		snd.last_attack = string
		snd.attack(snd.last_attack)
		snd.waiting.queue = true
		tempTimer(0.2, [[snd.waiting.queue = false]])
	end
end
snd.attack_function()
end</script>
									<command></command>
									<packageName></packageName>
									<regex>^aff$</regex>
								</Alias>
							</AliasGroup>
							<AliasGroup isActive="yes" isFolder="yes">
								<name>Damage Offenses</name>
								<script></script>
								<command></command>
								<packageName></packageName>
								<regex></regex>
								<Alias isActive="yes" isFolder="no">
									<name>damage</name>
									<script>if snd.class == "Syssin" then
snd.starting_attack()
function snd.attack_function()
 local string = ""
 if not snd.waiting.queue then
  if (snd.defenses.def_hiding.state == "deffed" or snd.defenses.def_phase.state == "deffed") and not snd.used.shield then
	 string = "quickwield left dirk"..snd.sep.."backstab "..snd.target
  elseif snd.proned() and not snd.used.shield then
   string = "quickwield left whip"..snd.sep.."garrote "..snd.target
  else
	 if snd.used.paste then
	  string = "quickwield left whip"..snd.sep.."flay "..snd.target.." fangbarrier"
	 else
    string = "bite "..snd.target.." camus"
	 end
  end
 if gmcp.Char.Vitals.ability_bal == "1" and gmcp.Char.Vitals.prone == "0" then
	-- we do have shadow balance
  string = string..snd.sep.."shadow sleight pall "..snd.target
 end
  if string ~= snd.last_attack and not snd.waiting.queue then
   snd.last_attack = string
   snd.attack(snd.last_attack)
   snd.waiting.queue = true
   tempTimer(snd.delay(), [[snd.waiting.queue = false]])
  end
 end
end
snd.attack_function()
end</script>
									<command></command>
									<packageName></packageName>
									<regex>^dmg$</regex>
								</Alias>
							</AliasGroup>
						</AliasGroup>
						<AliasGroup isActive="yes" isFolder="yes">
							<name>Wayfarer</name>
							<script></script>
							<command></command>
							<packageName></packageName>
							<regex></regex>
							<AliasGroup isActive="yes" isFolder="yes">
								<name>Affs</name>
								<script></script>
								<command></command>
								<packageName></packageName>
								<regex></regex>
								<Alias isActive="yes" isFolder="no">
									<name>Salve affs priority</name>
									<script>if snd.class == "Wayfarer" then -- Requires dropstrike
snd.starting_attack()
function snd.attack_function()
	if not snd.waiting.queue then
		local string = "" -- we'll load this with our attack string
		local call = "" -- and this with our affliction call
		local touse = {}
		local tohit = {}
		local extraaff = ""
		local missing = snd.missingAff("stupidity/paresis/anorexia/asthma/slickness", "/")
		local shatter = false
		local indoors = table.contains(gmcp.Room.Info.details, "indoors")
		local enrage = false
		local preatk = "qa "..snd.target..snd.sep
		
		if tonumber(gmcp.Char.Vitals.fury) &gt;=40 then
			shatter = true -- spam it
		else
			shatter = false
		end

		if tonumber(gmcp.Char.Vitals.fury) &gt;=50 then
			enrage = true
		else
			enrage = false
		end
		
		snd.giving = {
			"a broken left leg",
			"a broken right leg",
			"sensitivity",
			"a broken left arm",
			"a broken right arm",
			"stupidity",
			"anorexia",
			"asthma",
			"slickness",
			"paresis",
			"clumsiness",
    }
		if #missing == 2 and not snd.used.shield and not snd.used.rebounding then
			venom = snd.effects[missing[1]]
		elseif #missing == 1 and not snd.used.shield then
			venom = snd.effects[missing[1]]
		end
		
  	for i in pairs(snd.giving) do
  		if not snd.checkAff(snd.giving[i]) then
				if not table.contains(touse, snd.giving[i]) then 
				table.insert(touse, snd.giving[i])
				end
  		end
  	end
		
		for i in pairs(touse) do
        table.insert(tohit, snd.effects[touse[i]])
		end
		
		while #tohit &lt; 3 do
			table.insert(tohit, extraaff)
		end
		
		if snd.used.shield then
			string = "axe devastate "..snd.target.." "..tohit[1]
			call = "wt Afflicting "..snd.target..": "..tohit[1]..snd.sep
		elseif snd.used.shield and snd.used.rebounding then
			string = "axe devastate "..snd.target
		else
			string = "axe lob "..snd.target.." "..tohit[1]
			call = "wt Afflicting "..snd.target..": "..tohit[1]..snd.sep
		end
		
		if snd.health_percent &lt;= 35 and not indoors then
			if not snd.used_rebounding and not snd.highjumped then
			string = "highjump"
			elseif snd.highjumped == true then
				string = "axe dropstrike "..snd.target.." "..tohit[1]
				call = "wt Afflicting "..snd.target..": "..tohit[1]..snd.sep
			elseif snd.used_rebounding then
			string = "axe devastate "..snd.target.." "..tohit[1]
			call = "wt Afflicting "..snd.target..": "..tohit[1]..snd.sep
			end
		end

    if snd.health_percent &gt; 35 and not indoors and snd.checkAff("sensitivity") and snd.proned() and (snd.checkAff("a broken right leg") or snd.checkAff("a broken left leg")) then
			string = preatk.."axe slaughter "..snd.target.." "..tohit[2].." "..tohit[1]
			call = "wt Afflicting "..snd.target..": "..tohit[2]..", "..tohit[1]..snd.sep
		end
		
		if indoors and snd.checkAff("sensitivity") and snd.proned() and (snd.checkAff("a broken right leg") or snd.checkAff("a broken left leg")) then
			string = preatk.."axe slaughter "..snd.target.." "..tohit[2].." "..tohit[1]
			call = "wt Afflicting "..snd.target..": "..tohit[2]..", "..tohit[1]..snd.sep
		end
		
		if shatter and not snd.checkAff("sensitivity") and not snd.checkAff("weariness") and not snd.enraged then
			string = "fury shatter "..snd.target..snd.sep..string
		end
		
		if enrage == true and not snd.enraged and snd.checkAff("sensitivity") then
			string = "fury enrage "..snd.sep..string
		end
		

		if snd.toggles.affcalling and not snd.target_gone then
			string = call..string
		end
		
		-- handle anti-spam and the actual attacking now
		if string ~= snd.last_attack and not snd.waiting.queue then
			snd.last_attack = string
			snd.attack(snd.last_attack)
			snd.waiting.queue = true
			tempTimer(snd.delay(), [[snd.waiting.queue = false]])
		end
	end
end
		
snd.attack_function()
end</script>
									<command></command>
									<packageName></packageName>
									<regex>^legs$</regex>
								</Alias>
								<Alias isActive="yes" isFolder="no">
									<name>wayfarer aff support</name>
									<script>if snd.class == "Wayfarer" then
snd.starting_attack()
function snd.attack_function()
	if not snd.waiting.queue then
		local string = ""
		local call = "" 
		local touse = {}
		local tohit = {}
		local preatk = "qa "..snd.target..snd.sep
		
		local fury_amount = tonumber(gmcp.Char.Vitals.fury)
		local fury = ""

snd.giving = {
	"paresis",
	"clumsiness",
	"asthma",
	"slickness",
	"anorexia",
	"stupidity",
	"weariness",
  "a broken right arm",
  "a broken left arm",
  "a broken right leg",
  "a broken left leg",
	"sensitivity",	
	"allergies",
	"dizziness",
	"vomiting",
	"recklessness",
	"voyria",

	
	}
		
--This is a special case to use slaughter to quickly lock someone, with the additional chance 
--of using muddled to seal it long enough for next round. Affs are checked backwards so we can
--use the most necessary first, as they'll be put on top of the stack first.
		
		--[[if snd.checksomeAffs({"slickness","clumsiness", "hypochondria", "weariness", "paresis"}, 2) and snd.checkAff("asthma") then
			if not snd.checkAff("stupidity") then
				if fury_amount &gt;= 60 and tonumber(gmcp.Char.Vitals.ability_bal) then
					fury = "fury shatter "..snd.target.." boost"
				else
					table.insert(snd.giving, 1, "stupidity")
				end
			end

			if not snd.checkAff("anorexia") then
				table.insert(snd.giving, 1, "anorexia")
			end

			if not snd.checkAff("slickness") then
				table.insert(snd.giving, 1, "slickness")
			end
			string = "we gon slaughter this bruh"
		end]]
-----	
		for i in pairs(snd.giving) do
  		if not snd.checkAff(snd.giving[i]) then
				if not table.contains(touse, snd.giving[i]) then 
				table.insert(touse, snd.giving[i])
				end
  		end
  	end
		
		for i in pairs(touse) do
        table.insert(tohit, snd.effects[touse[i]])
		end
-----
		if snd.used.shield then
			if snd.used.rebounding then
				string = "axe devastate "..snd.target
				call = nil
			else
				string = "axe devastate "..snd.target.." "..tohit[1]
			end
			
		--[[elseif string:find("slaughter") or snd.target_locked() then
			string = "axe slaughter "..snd.target.." "..tohit[2].." "..tohit[1] ]]
		
		else
			string = "axe lob "..snd.target.." "..tohit[1]
			
		end
		
		if fury_amount &gt;= 30 and tonumber(gmcp.Char.Vitals.ability_bal) and not snd.checkAff("lethargy") then
			fury = "fury halt "..snd.target
		
       elseif fury_amount &gt;= 30 and tonumber(gmcp.Char.Vitals.ability_bal) and not snd.checkAff("exhausted") then
		    	fury = "fury exhaust "..snd.target
		
		    elseif fury_amount &gt;= 30 and tonumber(gmcp.Char.Vitals.ability_bal) and (touse == "anorexia" or touse == "slickness") and not snd.checkAff("weariness") then
			     fury = "fury shake "..snd.target
	     	elseif fury_amount &gt;= 50 and tonumber(gmcp.Char.Vitals.ability_bal) and snd.target_locked() then
		      	fury = "fury halt "..snd.target.." boost"
        elseif fury_amount &gt;= 60 and tonumber(gmcp.Char.Vitals.ability_bal) then
			      fury = "fury shatter "..snd.target.." boost"
  	    elseif fury_amount &gt;= 40 and tonumber(gmcp.Char.Vitals.ability_bal) then
			      fury = "fury shatter "..snd.target
		end
if fury~= "" then string = fury..snd.sep..string end
-----
		if snd.toggles.affcalling and not snd.target_gone and call ~= nil then
			if string:find("slaughter") then
				call = "wt Afflicting "..snd.target..": "..tohit[2]..", "..tohit[1]..snd.sep
			else
				call = "wt Afflicting "..snd.target..": "..tohit[1]..snd.sep
			end
			string = call..string
		end

		if string ~= snd.last_attack and not snd.waiting.queue then
			snd.last_attack = string
			snd.attack(snd.last_attack)
			snd.waiting.queue = true
			tempTimer(snd.delay(), [[snd.waiting.queue = false]])
		end
	end
end
		
snd.attack_function()
end</script>
									<command></command>
									<packageName></packageName>
									<regex>^lock$</regex>
								</Alias>
								<Alias isActive="yes" isFolder="no">
									<name>New alias</name>
									<script></script>
									<command></command>
									<packageName></packageName>
									<regex></regex>
								</Alias>
							</AliasGroup>
							<AliasGroup isActive="yes" isFolder="yes">
								<name>Damage</name>
								<script></script>
								<command></command>
								<packageName></packageName>
								<regex></regex>
								<Alias isActive="yes" isFolder="no">
									<name>sensi + tfix support</name>
									<script>if snd.class == "Wayfarer" then
snd.starting_attack()
function snd.attack_function()
	
	if not snd.waiting.queue then
	
		local string = ""
		local call = ""
		local touse = {}
		local tohit = {}
		local extraaff = ""
		local boosthalt = false
		if tonumber(gmcp.Char.Vitals.fury) &gt;=50 then
			boosthalt = true -- spam it
		else
			boosthalt = false
		end
		
		snd.giving = {
		"hearing",
		"sensitivity",
		"sight",
		"paresis",
		"asthma",
		"vomiting",
		"allergies",
		"slickness",
		"a broken left leg",
		"a broken right leg",
		"anorexia",
		"stupidity",
    }
		
		for i in pairs(snd.giving) do
			if not snd.checkAff(snd.giving[i]) then
			if not table.contains(touse, snd.giving[i]) then 
				table.insert(touse, snd.giving[i])
				end
 			end
		end
		
		for i in pairs(touse) do
			table.insert(tohit, snd.effects[touse[i]])
		end
		
		while #tohit &lt; 3 do
			table.insert(tohit, extraaff)
		end
		
		if snd.used.shield then
			string = "axe devastate "..snd.target.." "..tohit[1]
			call = "wt Afflicting "..snd.target..": "..tohit[1]..snd.sep
		elseif snd.used.shield and snd.used.rebounding then
			string = "axe devastate "..snd.target
		else
			string = "axe slaughter "..snd.target.." "..tohit[2].." "..tohit[1]
			call = "wt Afflicting "..snd.target..": "..tohit[2]..", "..tohit[1]..snd.sep
		end
		
		if boosthalt and not snd.enraged then
			string = "fury halt "..snd.target.." boost"..snd.sep..string
		end
		
		if snd.proned() and boosthalt and not snd.enraged and snd.checkAff("sensitivity") and (snd.checkAff("a broken right leg") or snd.checkAff("a broken left leg")) then
			string = "fury enrage"..snd.sep..string
		end

		if snd.toggles.affcalling and not snd.target_gone then
			string = call..snd.sep..string
		end
		
		if string ~= snd.last_attack and not snd.waiting.queue then
			snd.last_attack = string
			snd.attack(snd.last_attack)
			snd.waiting.queue = true
			tempTimer(snd.delay(), [[snd.waiting.queue = false]])
		end
	end
end

snd.attack_function()
end
</script>
									<command></command>
									<packageName></packageName>
									<regex>^dmg$</regex>
								</Alias>
								<Alias isActive="yes" isFolder="no">
									<name>lock into slaughter</name>
									<script>if snd.class == "Wayfarer" then
snd.starting_attack()
function snd.attack_function()
	if not snd.waiting.queue then
		local string = "" -- we'll load this with our attack string
		local call = "" -- and this with our affliction call
		local touse = {}
		local tohit = {}
		local extraaff = ""
		local missing = snd.missingAff("stupidity/paresis/anorexia/asthma/slickness", "/")
		local shatter = false
		local boostshatter = false
		local indoors = table.contains(gmcp.Room.Info.details, "indoors")
		local enrage = false
		local preatk = "qa "..snd.target..snd.sep
		
		if tonumber(gmcp.Char.Vitals.fury) &gt;=40 then
			shatter = true -- spam it
		else
			shatter = false
		end

		if tonumber(gmcp.Char.Vitals.fury) &gt;=60 then
			boostshatter = true -- spam it
		else
			boostshatter = false
		end


		
		-- set the affs we want to use
		snd.giving = {
		"paresis",
		"asthma",
		"weariness",
		"sight",
		"sensitivity",
		"slickness",
		"anorexia",
		"stupidity",
		"a broken left leg",
		"a broken right leg",
		"clumsiness",
		"haemophilia",
		"allergies",
		"vomiting",
		"recklessness",
		"dizziness",
    }
		if #missing == 2 and not snd.used.shield and not snd.used.rebounding then
			venom = snd.effects[missing[1]]
		elseif #missing == 1 and not snd.used.shield then
			venom = snd.effects[missing[1]]
		end
		
		-- pick affs from the list above
  	for i in pairs(snd.giving) do
  		-- make sure not to double up paresis and paralysis
  		if not snd.checkAff(snd.giving[i]) then
  			-- and don't add an aff we've already got one higher in the list!
				if not table.contains(touse, snd.giving[i]) then 
				table.insert(touse, snd.giving[i])
				end
  		end
  	end
		
		for i in pairs(touse) do
        table.insert(tohit, snd.effects[touse[i]])
		end
		
		while #tohit &lt; 3 do
			table.insert(tohit, extraaff)
		end
		
		-- now to decide what attack to use!
		if snd.used.shield then
			string = "axe devastate "..snd.target.." "..tohit[1]
			call = "wt Afflicting "..snd.target..": "..tohit[1]..snd.sep
		elseif snd.used.shield and snd.used.rebounding then
			string = "axe devastate "..snd.target
		else
			string = "axe lob "..snd.target.." "..tohit[1]
			call = "wt Afflicting "..snd.target..": "..tohit[1]..snd.sep
		end
		
    if snd.proned() and snd.checkAff("sensitivity") and (snd.checkAff("a broken right leg") or snd.checkAff("a broken left leg")) then
			string = preatk.."axe slaughter "..snd.target.." "..tohit[2].." "..tohit[1]
			call = "wt Afflicting "..snd.target..": "..tohit[2]..", "..tohit[1]..snd.sep
		end
		
		if shatter and #missing &gt; 2 and not snd.checkAff("sensitivity") and not snd.enraged then
			string = "fury shatter "..snd.target..snd.sep..string
		end
		
		if boostshatter and #missing &lt;= 2 and not snd.checkAff("sensitivity") and not snd.enraged then
			string = "fury shatter "..snd.target.." boost"..snd.sep..string
		end
		
		if enrage == true and not snd.enraged and snd.checkAff("sensitivity") then
			string = "fury enrage "..snd.sep..string
		end
		
		-- prepend our affliction call, if we need one
		if snd.toggles.affcalling and not snd.target_gone then
			string = call..string
		end
		
		-- handle anti-spam and the actual attacking now
		if string ~= snd.last_attack and not snd.waiting.queue then
			snd.last_attack = string
			snd.attack(snd.last_attack)
			snd.waiting.queue = true
			tempTimer(snd.delay(), [[snd.waiting.queue = false]])
		end
	end
end

snd.attack_function()
end</script>
									<command></command>
									<packageName></packageName>
									<regex>^gaff$</regex>
								</Alias>
							</AliasGroup>
							<AliasGroup isActive="yes" isFolder="yes">
								<name>Limbs</name>
								<script></script>
								<command></command>
								<packageName></packageName>
								<regex></regex>
								<Alias isActive="yes" isFolder="no">
									<name>Execute</name>
									<script>if snd.class == "Wayfarer" then
snd.starting_attack()

function snd.attack_function()

	if not snd.waiting.queue then
		local string = ""
		local call = "" 
		local touse = {}
		local tohit = {}
		local preatk = "qeb "..snd.target..snd.sep
		local axe = ""
		local fury_amount = tonumber(gmcp.Char.Vitals.fury)
		local fury = ""
  
snd.giving = {
	"paresis",
	"clumsiness",
	"asthma",
	"slickness",
	"anorexia",
	"stupidity",
	"weariness",
  "a broken right arm",
  "a broken left arm",
  "a broken right leg",
  "a broken left leg",
	"sensitivity",	
	"allergies",
	"dizziness",
	"vomiting",
	"recklessness",
	"voyria",

	
	}
		
--This is a special case to use slaughter to quickly lock someone, with the additional chance 
--of using muddled to seal it long enough for next round. Affs are checked backwards so we can
--use the most necessary first, as they'll be put on top of the stack first.
		
		--[[if snd.checksomeAffs({"slickness","clumsiness", "hypochondria", "weariness", "paresis"}, 2) and snd.checkAff("asthma") then
			if not snd.checkAff("stupidity") then
				if fury_amount &gt;= 60 and tonumber(gmcp.Char.Vitals.ability_bal) then
					fury = "fury shatter "..snd.target.." boost"
				else
					table.insert(snd.giving, 1, "stupidity")
				end
			end

			if not snd.checkAff("anorexia") then
				table.insert(snd.giving, 1, "anorexia")
			end

			if not snd.checkAff("slickness") then
				table.insert(snd.giving, 1, "slickness")
			end
			string = "we gon slaughter this bruh"
		end]]
-----	

		for i in pairs(snd.giving) do
  		if not snd.checkAff(snd.giving[i]) then
				if not table.contains(touse, snd.giving[i]) then 
				table.insert(touse, snd.giving[i])
				end
  		end
  	end
		
		for i in pairs(touse) do
        table.insert(tohit, snd.effects[touse[i]])
		end
-----



-----

    
  -- list what limbs to hit
  limbs = {"left leg", "right leg", "left arm", "right arm", "torso", "head",}
	-- check if we can execute now!
  if (table.contains(snd.limb_status["right leg"] == "damaged") or table.contains(snd.limb_status["left leg"] == "damaged")) and table.contains(snd.limb_status["head"] == "damaged") and snd.target_prone then
     string = "axe execute "..snd.target
    else -- can't execute, needs logic
	 -- pick what limbs to hit
	 axe = "nothing"
   
   --assault handling

	 
	    if snd.target_prone and table.contains(snd.limb_status["right leg"] == "damaged") and not table.contains(snd.limb_status["head"] == "damaged") then -- focus head to go for kill
	       axe = "head"
	
	 -- are the legs prepped?
	        elseif snd.limb_dmg["right leg"] &lt; 33.33 and (snd.limb_dmg["right leg"] + 11 &gt;= 33.33) and snd.limb_dmg["left leg"] &lt; 33.33 and (snd.limb_dmg["left leg"] + 11 &gt;= 33.33) and not snd.used.shield and not snd.used.rebounding then
		       string = "target left leg with left"..snd.sep.."target right leg with right"..snd.sep.."hammer doublebash "..snd.target
	         else -- target not prone, legs not prepped
	         for limb in pairs(limbs) do
		         -- ignore last parried, last hit, and any limbs being resto'd
	            if limbs[limb] ~= snd.parried_limb and limbs[limb] ~= snd.last_hit_limb and (limbs[limb] ~= snd.resto_limb or snd.limb_dmg[limbs[limb]] &gt;= 33.33) then
	         	  -- if it's a leg that's about to break
	                if (limbs[limb] == "left leg" or limbs[limb] == "right leg") and (snd.limb_dmg[limbs[limb]]+snd.limb_dmg_done &gt;= 33.3) then
		             -- don't do anything!
			             -- if it's not a leg about to break, go for it
		                elseif axe == "nothing" then
		                   axe = limbs[limb]
                         

		               end
	             end
	          end
        end

	  -- end limb picking logic
	  -- on to attacking logic!
	 	if snd.used.shield then

			string = "axe devastate "..snd.target.." "..tohit[1]
			call = "wt Afflicting "..snd.target..": "..tohit[1]..snd.sep
		  elseif snd.used.shield and snd.used.rebounding then
			string = "axe devastate "..snd.target
      elseif axe ~= snd.assaulted_limb then
      string = "axe assault "..snd.target.." "..axe.." "..tohit[1]
      call = "wt Afflicting "..snd.target..": "..tohit[1]..snd.sep
      else
     string = "axe chop "..snd.target.." "..axe.." "..tohit[1]
     call = "wt Afflicting "..snd.target..": "..tohit[1]..snd.sep

		 end


  		--fury logic
		if fury_amount &gt;= 30 and tonumber(gmcp.Char.Vitals.ability_bal) and not snd.checkAff("lethargy") then
			fury = "fury halt "..snd.target
		
       elseif fury_amount &gt;= 30 and tonumber(gmcp.Char.Vitals.ability_bal) and not snd.checkAff("exhausted") then
		    	fury = "fury exhaust "..snd.target
		
		    elseif fury_amount &gt;= 30 and tonumber(gmcp.Char.Vitals.ability_bal) and (touse == "anorexia" or touse == "slickness") and not snd.checkAff("weariness") then
			     fury = "fury shake "..snd.target
	     	elseif fury_amount &gt;= 50 and tonumber(gmcp.Char.Vitals.ability_bal) and snd.target_locked() then
		      	fury = "fury halt "..snd.target.." boost"
        elseif fury_amount &gt;= 60 and tonumber(gmcp.Char.Vitals.ability_bal) then
			      fury = "fury shatter "..snd.target.." boost"
  	    elseif fury_amount &gt;= 40 and tonumber(gmcp.Char.Vitals.ability_bal) then
			      fury = "fury shatter "..snd.target
		end
		if fury~= "" then string = fury..snd.sep..string end

    		if snd.toggles.affcalling and not snd.target_gone and call ~= nil then

				call = "wt Afflicting "..snd.target..": "..tohit[1]..snd.sep
			
			string = call..string
		    end
    end
  if string ~= snd.last_attack and not snd.waiting.queue then
   snd.last_attack = string
   snd.attack(snd.last_attack)
   snd.waiting.queue = true
   tempTimer(snd.delay(), [[snd.waiting.queue = false]])
  end
end
end
snd.attack_function()
end

</script>
									<command></command>
									<packageName></packageName>
									<regex>^execute$</regex>
								</Alias>
								<Alias isActive="yes" isFolder="no">
									<name>New alias</name>
									<script></script>
									<command></command>
									<packageName></packageName>
									<regex></regex>
								</Alias>
							</AliasGroup>
						</AliasGroup>
					</AliasGroup>
					<AliasGroup isActive="yes" isFolder="yes">
						<name>Spirit</name>
						<script></script>
						<command></command>
						<packageName></packageName>
						<regex></regex>
						<AliasGroup isActive="yes" isFolder="yes">
							<name>Ascendril</name>
							<script></script>
							<command></command>
							<packageName></packageName>
							<regex></regex>
							<AliasGroup isActive="yes" isFolder="yes">
								<name>Damage Offense</name>
								<script></script>
								<command></command>
								<packageName></packageName>
								<regex></regex>
								<Alias isActive="yes" isFolder="no">
									<name>Manually reset glimpse</name>
									<script>if matches[2] == "none" then
  snd.glimpse = "none"
  snd.glimpsing = false
else
  snd.glimpse = matches[2]
  snd.glimpsing = true
end</script>
									<command></command>
									<packageName></packageName>
									<regex>^glimpse (\w+)$</regex>
								</Alias>
								<Alias isActive="yes" isFolder="no">
									<name>order loyals aggro</name>
									<script>send("order efreeti kill "..snd.target)</script>
									<command></command>
									<packageName></packageName>
									<regex>^olk$</regex>
								</Alias>
								<Alias isActive="yes" isFolder="no">
									<name>order loyals stop aggro</name>
									<script>send("order loyals passive")</script>
									<command></command>
									<packageName></packageName>
									<regex>^olp$</regex>
								</Alias>
								<Alias isActive="yes" isFolder="no">
									<name>frozen</name>
									<script>if snd.class == "Ascendril" then
  snd.starting_attack()

  function snd.attack_function()
    if not snd.waiting.queue then
      local string = ""
      -- we'll load this with our attack string
      local call = ""
      -- and this with our affliction call
      -- next, the afflictions we want to give
      local touse = {}
      local tohit = {}
      local stalled = false
      if snd.defenses.def_stalled.state == "deffed" then
        stalled = true
      end
      -- and in case we don't find enough of them
      local total_aff_count = 0
      for aff in pairs(snd.all_affs) do
        if table.contains(snd.target_has, snd.all_affs[aff]) then
          total_aff_count = total_aff_count + 1
        end
      end
      local extraaff = ""
      snd.giving = {"anorexia"}
      for i in pairs(snd.giving) do
        -- make sure not to double up paresis and paralysis
        if not snd.checkAff(snd.giving[i]) then
          -- and don't add an aff we've already got in the list!
          if not table.contains(touse, snd.giving[i]) then
            table.insert(touse, snd.giving[i])
          end
        end
      end
      -- now let's convert affs to venoms/empowerments
      for aff in pairs(touse) do
        table.insert(tohit, snd.effects[touse[aff]])
      end
      -- if we didn't find enough stuff to hit with, stick in our filler
      while #tohit &lt; 3 do
        table.insert(tohit, extraaff)
      end
      if snd.glimpse == "none" and not snd.glimpsing and not snd.checkAff("frostbrand") then
        string = "fulcrum glimpse water"
      elseif snd.glimpse == "none" and snd.checkAff("frostbrand") then
        string = "fulcrum catalyst " .. snd.target .. " frost"
      elseif snd.used.shield == true or 
			((snd.checksomeAffs({"a broken left leg", "a broken right leg"},1) or snd.limb_status["left leg"] ~= "healed" or snd.limb_status["right leg"] ~= "healed") and not snd.target_prone) then
				string = "cast windlance " .. snd.target
      elseif snd.glimpse == "water" or snd.glimpse == "fire" or snd.glimpse == "air" then
        if gmcp.Char.Vitals.ability_bal == "1" then
          string = "fulcrum flare " .. snd.target
        end
        if snd.checkAff("frozen") and snd.checkAff("impaled") then
          string = string .. snd.sep .. "cast shatter " .. snd.target
        elseif gmcp.Char.Vitals.resonance == "water" then
          if not stalled then
            if snd.limb_dmg.torso == 0 and snd.parried_limb ~= "torso" then
              string = string .. snd.sep .. "fulcrum stall 3 firelash " .. snd.target .. " torso"
            elseif snd.limb_dmg.torso &gt; 0 then
              string = string .. snd.sep .. "fulcrum stall 3 mistral " .. snd.target
            end
          elseif stalled then
            if snd.checkAff("shivering") and not snd.checkAff("direfrost") and not snd.checkAff("frostbrand") then
              string = string .. snd.sep .. "cast direfrost " .. snd.target
            elseif snd.checkAff("frozen") and not snd.target_impaled then
              string = string .. snd.sep .. "cast icicle " .. snd.target
            else
              string = string .. snd.sep .. "cast mistral " .. snd.target
						end
          end
        elseif gmcp.Char.Vitals.resonance == "fire" then
          if not stalled then
            if snd.limb_dmg.torso == 0 and snd.parried_limb ~= "torso" then
              string = string .. snd.sep .. "fulcrum stall 3 firelash " .. snd.target .. " torso"
            elseif snd.limb_dmg.torso &gt; 0 then
              string = string .. snd.sep .. "fulcrum stall 3 coldsnap " .. snd.target
            end
          elseif stalled then
            if snd.checkAff("shivering") and not snd.checkAff("direfrost") and not snd.checkAff("frostbrand") then
              string = string .. snd.sep .. "cast direfrost " .. snd.target
            elseif snd.checkAff("frozen") and not snd.target_impaled then
              string = string .. snd.sep .. "cast icicle " .. snd.target
            elseif not snd.checkAff("gorged") then
              string = string .. snd.sep .. "cast gorge " .. snd.target .. " euphoriant"
						else
							string = string .. snd.sep .. "cast hailstorm " .. snd.target
            end
          end
        elseif gmcp.Char.Vitals.resonance == "air" then
          if not stalled then
            if snd.limb_dmg.torso == 0 and snd.parried_limb ~= "torso" then
              string = string .. snd.sep .. "fulcrum stall 3 firelash " .. snd.target .. " torso"
            else
              string = string .. snd.sep .. "fulcrum stall 3 hailstorm " .. snd.target
            end
          elseif stalled then
           if snd.checkAff("shivering") and not snd.checkAff("direfrost") and not snd.checkAff("frostbrand") then
              string = string .. snd.sep .. "cast direfrost " .. snd.target
            elseif snd.checkAff("frozen") and not snd.target_impaled then
              string = string .. snd.sep .. "cast icicle " .. snd.target
            elseif not snd.checkAff("gorged") then
              string = string .. snd.sep .. "cast gorge " .. snd.target .. " euphoriant"
						elseif not snd.checkAff("masochism") then
							string = string .. snd.sep .. "cast coldsnap " ..snd.target
						else
							string = string .. snd.sep .. "cast hailstorm " ..snd.target
            end
          end
        end
      end
      if string ~= snd.last_attack and not snd.waiting.queue then
        snd.last_attack = string
        snd.attack(snd.last_attack)
        snd.waiting.queue = true
        tempTimer(snd.delay(), [[snd.waiting.queue = false]])
      end
    end
  end

  snd.attack_function()
end</script>
									<command></command>
									<packageName></packageName>
									<regex>^freeze$</regex>
								</Alias>
								<Alias isActive="yes" isFolder="no">
									<name>damage</name>
									<script>if snd.class == "Ascendril" then
snd.starting_attack()
function snd.attack_function()
	if not snd.waiting.queue then
		local string = "" -- we'll load this with our attack string
		local call = "" -- and this with our affliction call
			
	if snd.glimpse == "none" and snd.checkAff("stormtouched") and not snd.glimpsing then
		string = "fulcrum glimpse air"
	elseif snd.glimpse == "none" and not snd.checkAff("stormtouched") then
		string = "fulcrum glimpse fire"
	end

	if snd.checkAff("stormtouched") and not snd.used.shield then
		string = string..snd.sep.."cast lightning "..snd.target
  elseif snd.used.shield == true or 
			((snd.checksomeAffs({"a broken left leg", "a broken right leg"},1) or snd.limb_status["left leg"] ~= "healed" or snd.limb_status["right leg"] ~= "healed") and not snd.target_prone) then
				string = "cast windlance " .. snd.target
	else
  	if snd.glimpse == "water" or snd.glimpse == "fire" or snd.glimpse == "air" then
  	
  		if gmcp.Char.Vitals.ability_bal == "1" then
  			string = "fulcrum flare "..snd.target
  		end
  		
  		if gmcp.Char.Vitals.resonance == "none" or gmcp.Char.Vitals.resonance == "water" then
  			string = string..snd.sep.."fulcrum enrich fire"
  		end
  
  		if gmcp.Char.Vitals.resonance == "fire" then
  			string = string..snd.sep.."cast windlance "..snd.target
  		end
  
  		if gmcp.Char.Vitals.resonance == "air" then
  			string = string..snd.sep.."cast fireball "..snd.target
  		end
	end
end

	if string ~= snd.last_attack and not snd.waiting.queue then
		snd.last_attack = string
		snd.attack(snd.last_attack)
		snd.waiting.queue = true
		tempTimer(snd.delay(), [[snd.waiting.queue = false]])
	end
end
end
snd.attack_function()
end</script>
									<command></command>
									<packageName></packageName>
									<regex>^damage$</regex>
								</Alias>
								<Alias isActive="yes" isFolder="no">
									<name>solo shatter</name>
									<script>if snd.class == "Ascendril" then
  snd.starting_attack()

  function snd.attack_function()
    if not snd.waiting.queue then
      local string = ""
      -- we'll load this with our attack string
      local call = ""
      -- and this with our affliction call
      local limbs = {"left leg", "right leg", "left arm", "right arm"}
      local targ = "nothing"
      local stalled = false
      if snd.defenses.def_stalled.state == "deffed" then
        stalled = true
      end
      for limb in pairs(limbs) do
        -- ignore last parried, last hit, and any limbs being resto'd
        if
          limbs[limb] ~= snd.parried_limb and
          limbs[limb] ~= snd.last_hit_limb and
          limbs[limb] ~= snd.resto_limb
        then
          if targ == "nothing" then
            targ = limbs[limb]
          end
        end
      end
      if snd.glimpse == "none" and not snd.glimpsing and not snd.checkAff("frostbrand") then
        string = "fulcrum glimpse water"
      elseif snd.glimpse == "none" and snd.checkAff("frostbrand") then
        string = "fulcrum catalyst " .. snd.target .. " frost"
      elseif snd.used.shield == true then
        string = "cast windlance " .. snd.target
      elseif snd.glimpse == "water" or snd.glimpse == "fire" or snd.glimpse == "air" then
        if gmcp.Char.Vitals.ability_bal == "1" then
          string = "fulcrum flare " .. snd.target
        end
        if snd.checkAff("frozen") and snd.checkAff("impaled") then
          string = string .. snd.sep .. "cast shatter " .. snd.target
        elseif gmcp.Char.Vitals.resonance == "water" then
          if not stalled then
            if snd.limb_dmg.torso == 0 and snd.parried_limb ~= "torso" then
              string = string .. snd.sep .. "fulcrum stall 3 firelash " .. snd.target .. " torso"
            else
              string = string .. snd.sep .. "fulcrum stall 3 firelash " .. snd.target .. " " .. targ
            end
          elseif stalled then
            if
              snd.checkAff("no_caloric") and
              not snd.checkAff("direfrost") and
              not snd.checkAff("frostbrand")
            then
              string = string .. snd.sep .. "cast direfrost " .. snd.target
            elseif snd.checkAff("frozen") and not snd.target_impaled then
              string = string .. snd.sep .. "cast icicle " .. snd.target
            else
              string = string .. snd.sep .. "cast firelash " .. snd.target .. " " .. targ
            end
          end
        elseif gmcp.Char.Vitals.resonance == "fire" then
          if not stalled then
            if snd.limb_dmg.torso == 0 and snd.parried_limb ~= "torso" then
              string = string .. snd.sep .. "fulcrum stall 3 firelash " .. snd.target .. " torso"
            else
              string = string .. snd.sep .. "fulcrum stall 3 firelash " .. snd.target .. " " .. targ
            end
          elseif stalled then
            if
              snd.checkAff("no_caloric") and
              not snd.checkAff("direfrost") and
              not snd.checkAff("frostbrand")
            then
              string = string .. snd.sep .. "cast direfrost " .. snd.target
            elseif snd.checkAff("frozen") and not snd.target_impaled then
              string = string .. snd.sep .. "cast icicle " .. snd.target
            else
              string = string .. snd.sep .. "cast firelash " .. snd.target .. " " .. targ
            end
          end
        elseif gmcp.Char.Vitals.resonance == "air" then
          if not stalled then
            if snd.limb_dmg.torso == 0 and snd.parried_limb ~= "torso" then
              string = string .. snd.sep .. "fulcrum stall 3 firelash " .. snd.target .. " torso"
            else
              string = string .. snd.sep .. "fulcrum stall 3 firelash " .. snd.target .. " " .. targ
            end
          elseif stalled then
            --not snd.direfrost and not snd.checkAff("frostbrand") then
            if
              snd.checkAff("no_caloric") and
              not snd.checkAff("direfrost") and
              not snd.checkAff("frostbrand")
            then
              string = string .. snd.sep .. "cast direfrost " .. snd.target
            elseif snd.checkAff("frozen") and not snd.target_impaled then
              string = string .. snd.sep .. "cast icicle " .. snd.target
            else
              string = string .. snd.sep .. "cast firelash " .. snd.target .. " " .. targ
            end
          end
        end
      end
      if string ~= snd.last_attack and not snd.waiting.queue then
        snd.last_attack = string
        snd.attack(snd.last_attack)
        snd.waiting.queue = true
        tempTimer(snd.delay(), [[snd.waiting.queue = false]])
      end
    end
  end

  snd.attack_function()
end</script>
									<command></command>
									<packageName></packageName>
									<regex>^solo$</regex>
								</Alias>
								<Alias isActive="yes" isFolder="no">
									<name>affs</name>
									<script>if snd.class == "Ascendril" then
snd.starting_attack()
function snd.attack_function()
	if not snd.waiting.queue then
		local string = "" -- we'll load this with our attack string
		local call = "" -- and this with our affliction call
		-- next, the afflictions we want to give
		local touse = {}
		local tohit = {}
		-- and in case we don't find enough of them
		local total_aff_count = 0
    for aff in pairs(snd.all_affs) do
        if table.contains(snd.target_has, snd.all_affs[aff]) then
            total_aff_count = total_aff_count + 1
        end
    end
		local extraaff = ""
		
			snd.giving = {
			"clumsiness",
			"paresis",
			"haemophilia",
			"asthma",
			"slickness",
			"anorexia",
			"stupidity",
			}
			
	for i in pairs(snd.giving) do
		-- make sure not to double up paresis and paralysis
		if not snd.checkAff(snd.giving[i]) then
			-- and don't add an aff we've already got in the list!
			if not table.contains(touse, snd.giving[i]) then
				table.insert(touse, snd.giving[i])
			end
		end
	end
	-- now let's convert affs to venoms/empowerments
	for aff in pairs(touse) do
		table.insert(tohit, snd.effects[touse[aff]])
	end
	-- if we didn't find enough stuff to hit with, stick in our filler
	while #tohit &lt; 3 do
		table.insert(tohit, extraaff)
	end
			
	if snd.glimpse == "none" and not snd.checkAff("thunderbrand") and not snd.glimpsing then
		string = "fulcrum glimpse air"
	elseif snd.glimpse == "none" and snd.checkAff("thunderbrand") then
		string = "fulcrum catalyst "..snd.target.." air"
	end

	if snd.checkAff("stormtouched") then
		string = string..snd.sep.."cast lightning "..snd.target
	elseif snd.glimpse == "water" or snd.glimpse == "fire" or snd.glimpse == "air" then
	
		if snd.checkAff("vertigo") then
			string = "fulcrum flare"
		end
		
		if gmcp.Char.Vitals.resonance == "" or gmcp.Char.Vitals.resonance == "none" or gmcp.Char.Vitals.resonance == "fire" then
			string = "fulcrum enrich air"
		end

		if gmcp.Char.Vitals.resonance == "water" then
			if snd.defenses.def_stalled.state ~= "deffed" then
				string = string..snd.sep.."fulcrum stall 3 pressurize "..snd.target
			elseif snd.defenses.def_stalled.state == "deffed" then
				if snd.used.shield then
					string = string..snd.sep.."cast windlance "..snd.target
				else
					if snd.checksomeAffs({"dizziness", "stupidity"},2) then
						string = string..snd.sep.."cast frostblade "..snd.target.." "..tohit[1]
					else
						string = string..snd.sep.."cast lightning "..snd.target
					end
				end
			end

		elseif gmcp.Char.Vitals.resonance == "air" then
			if snd.defenses.def_stalled.state ~= "deffed" then
				if snd.checksomeAffs({"dizziness", "stupidity"},2) and not snd.proned then
					string = string..snd.sep.."fulcrum stall 3 frostblade "..snd.target.." "..tohit[2]
				else
					string = string..snd.sep.."fulcrum stall 3 thunder "..snd.target
				end
			elseif snd.defenses.def_stalled.state == "deffed" then
				if snd.used.shield then
					string = string..snd.sep.."cast windlance "..snd.target
				elseif snd.proned then
					if snd.checksomeAffs({"lethargy", "confusion"},2) then
						string = string..snd.sep.."cast frostblade "..snd.target.." "..tohit[1]
					else
						string = string..snd.sep.."cast hailstorm "..snd.target
					end
				elseif not snd.proned then
					if snd.checksomeAffs({"masochism", "stupidity"},2) then
						string = string..snd.sep.."cast frostblade "..snd.target.." "..tohit[1]
					else
						string = string..snd.sep.."cast coldsnap "..snd.target
					end
				end
			end
		end

end

	if string ~= snd.last_attack and not snd.waiting.queue then
		snd.last_attack = string
		snd.attack(snd.last_attack)
		snd.waiting.queue = true
		tempTimer(snd.delay(), [[snd.waiting.queue = false]])
	end
end
end
snd.attack_function()
end</script>
									<command></command>
									<packageName></packageName>
									<regex>^affs$</regex>
								</Alias>
								<Alias isActive="yes" isFolder="no">
									<name>ablaze</name>
									<script>if snd.class == "Ascendril" then
snd.starting_attack()
function snd.attack_function()
	if not snd.waiting.queue then
		local string = "" -- we'll load this with our attack string
		local call = "" -- and this with our affliction call
		local limbs = {"head", "left leg", "torso", "right leg", "left arm", "right arm"}
		local targ = "nothing"
		
		for limb in pairs(limbs) do
			-- ignore last parried, last hit, and any limbs being resto'd
			if limbs[limb] ~= snd.parried_limb and limbs[limb] ~= snd.last_hit_limb and limbs[limb] ~= snd.resto_limb then
				if targ == "nothing" then
					targ = limbs[limb]
				end
			end
		end
			
	if snd.used.shield then
		string = string..snd.sep.."cast windlance "..snd.target
	end
			
	if snd.glimpse == "none" and not snd.glimpsing then
		string = "fulcrum glimpse fire"
	end

	if snd.glimpse == "water" or snd.glimpse == "fire" or snd.glimpse == "air" then
	
		if gmcp.Char.Vitals.ability_bal == "1" then
			string = "fulcrum flare "..snd.target
		end
		
		if gmcp.Char.Vitals.resonance ~= "fire" then
			string = string..snd.sep.."fulcrum enrich fire"
		end
		
		if gmcp.Char.Vitals.resonance == "fire" then
			if snd.defenses.def_stalled.state ~= "deffed" then
				string = string..snd.sep.."fulcrum stall 3 firelash "..snd.target.." "..targ
			else
				string = string..snd.sep.."cast firelash "..snd.target.." "..targ
			end
		end

	end

	if string ~= snd.last_attack and not snd.waiting.queue then
		snd.last_attack = string
		snd.attack(snd.last_attack)
		snd.waiting.queue = true
		tempTimer(snd.delay(), [[snd.waiting.queue = false]])
	end
	
end
end
snd.attack_function()
end</script>
									<command></command>
									<packageName></packageName>
									<regex>^fire$</regex>
								</Alias>
							</AliasGroup>
						</AliasGroup>
						<AliasGroup isActive="yes" isFolder="yes">
							<name>Luminary</name>
							<script></script>
							<command></command>
							<packageName></packageName>
							<regex></regex>
							<AliasGroup isActive="yes" isFolder="yes">
								<name>Wielding</name>
								<script></script>
								<command></command>
								<packageName></packageName>
								<regex></regex>
								<Alias isActive="yes" isFolder="no">
									<name>wield bashing</name>
									<script>if snd.class == "Luminary" then
snd.send("quickwield both tower mace")
end</script>
									<command></command>
									<packageName></packageName>
									<regex>^wbsh$</regex>
								</Alias>
								<Alias isActive="yes" isFolder="no">
									<name>wield pvp</name>
									<script>if snd.class == "Luminary" then
snd.send("quickwield both buckler mace")
end</script>
									<command></command>
									<packageName></packageName>
									<regex>^wpvp$</regex>
								</Alias>
							</AliasGroup>
							<AliasGroup isActive="yes" isFolder="yes">
								<name>Spirituality</name>
								<script></script>
								<command></command>
								<packageName></packageName>
								<regex></regex>
								<Alias isActive="yes" isFolder="no">
									<name>beckon</name>
									<script>if snd.class == "Luminary" then
if matches[2] == "" then
 snd.send("qeb angel beckon "..snd.target)
elseif matches[2] == "all" then
 snd.send("qeb angel beckon")
else
 snd.send("qeb angel beckon "..matches[2])
end
end</script>
									<command></command>
									<packageName></packageName>
									<regex>^bk(.*)$</regex>
								</Alias>
							</AliasGroup>
							<AliasGroup isActive="yes" isFolder="yes">
								<name>Devotion</name>
								<script></script>
								<command></command>
								<packageName></packageName>
								<regex></regex>
								<Alias isActive="yes" isFolder="no">
									<name>force stop</name>
									<script>if snd.class == "Luminary" then
 snd.toggles.attacking = false
 if matches[2] == "" then
  snd.send("qeb perform force "..snd.target.." stop")
 else
  snd.send("qeb perform force "..matches[2].." stop")
 end
end</script>
									<command></command>
									<packageName></packageName>
									<regex>^fs(.*)$</regex>
								</Alias>
								<Alias isActive="yes" isFolder="no">
									<name>resurrection</name>
									<script>if snd.class == "Luminary" then
snd.toggles.attacking = false
snd.send("qeb perform resurrection "..matches[2])
end</script>
									<command></command>
									<packageName></packageName>
									<regex>^rez (\w+)$</regex>
								</Alias>
							</AliasGroup>
							<AliasGroup isActive="yes" isFolder="yes">
								<name>Affliction Offenses</name>
								<script></script>
								<command></command>
								<packageName></packageName>
								<regex></regex>
								<Alias isActive="yes" isFolder="no">
									<name>mouse mode</name>
									<script>if snd.class == "Luminary" then
snd.giving_shield = {
"sight",
"paresis",
"weariness",
"asthma",
}
snd.giving_battle = {
"impatience",
"sensitivity",
"stupidity",
"vertigo",
"self-pity",
"migraine",
}
snd.giving_chasten = {
"loneliness",
"hypochondria",
"stupidity",
"lethargy",
"dementia",
"recklessness",
"masochism",
"paranoia"
}
snd.starting_attack()
function snd.attack_function()
 local string = "contemplate "..snd.target..snd.sep
 	if not string.find(gmcp.Char.Vitals.wield_right, "mace") then string = string.."quickwield right mace"..snd.sep end
	if not string.find(gmcp.Char.Vitals.wield_left, "buckler") then string = string.."quickwield left buckler"..snd.sep end
 local shield = "none"
 local battle = "none"
 local chasten = "none"
 if snd.mana_percent &lt; 40 and not snd.used.shield then
  string = "angel absolve "..snd.target
 elseif snd.proned() then
  string = "shield overwhelm "..snd.target
 elseif table.contains(snd.target_has, "sight") then
  string = "evoke transfixion "..snd.target
 else
  if snd.balance.battle then
   for i in pairs(snd.giving_battle) do
	  if not snd.checkAff(snd.giving_battle[i]) and battle == "none" then
	   battle = snd.giving_battle[i]
	  end
	 end
  end
  if snd.used.shield then
   shield = "shield raze"
  else
   for i in pairs(snd.giving_shield) do
    if not snd.checkAff(snd.giving_shield[i]) and shield == "none" then
	   shield = snd.spirituality_attacks[snd.giving_shield[i]]
	  end
   end
  end
  if shield == "none" then
   shield = "shield strike"
  end
  if snd.used.rebounding and shield ~= "facesmash" then
   shield = "shield raze"
  end
  for i in pairs(snd.giving_chasten) do
   if not snd.checkAff(snd.giving_chasten[i]) and chasten == "none" and snd.giving_chasten[i] ~= battle then
	  chasten = snd.giving_chasten[i]
	 end
  end
  if battle ~= "none" then
   if snd.toggles.affcalling and not snd.target_gone then
	  string = "wt Battle "..snd.target..": "..battle..snd.sep
	 end
   string = string.."angel battle "..battle.." "..snd.target..snd.sep
  end
  string = string..shield.." "..snd.target..snd.sep
  if shield ~= "slam" and shield ~= "overwhelm" then
   if chasten == "none" then
    string = string.."chasten "..snd.target
   else
	  if snd.toggles.affcalling and not snd.target_gone then
	   string = string.."wt Chasten "..snd.target..": "..chasten..snd.sep
	  end
    string = string.."chasten "..snd.target.." "..chasten
	 end
  end
 end
 
 if string.find(string, "overwhelm") and not string.find(gmcp.Char.Vitals.wield_left, "tower") then 
 	string = string..snd.sep.."quickwield left tower"
 end

 if string ~= snd.last_attack and not snd.waiting.queue then
  snd.last_attack = string
  snd.attack(snd.last_attack)
  snd.waiting.queue = true
  tempTimer(snd.delay(), [[snd.waiting.queue = false]])
 end
end
snd.attack_function()
end</script>
									<command></command>
									<packageName></packageName>
									<regex>^ms$</regex>
								</Alias>
								<Alias isActive="yes" isFolder="no">
									<name>Group Affs - Used to lock someone in place</name>
									<script>-- The purpose of this is to lock someone down with disrupt so they cannot use lock-breakers to escape.
if snd.class == "Luminary" then
  snd.giving_shield = {"sight", "confusion", "weariness", "transfixed", "paresis", "asthma"}
  snd.giving_battle = {"impatience", "stupidity", "sensitivity", "self_pity", "vertigo"}
  snd.giving_chasten =
    {
      "hypochondria",
      "stupidity",
      "recklessness",
      "lethargy",
      "masochism",
      "dementia",
      "paranoia",
      "anorexia",
    }
  snd.starting_attack()

  function snd.attack_function()
    local total_aff_count = 0
    for aff in pairs(snd.all_affs) do
      if table.contains(snd.target_has, snd.all_affs[aff]) then
        total_aff_count = total_aff_count + 1
      end
    end
    local mental_aff_count = 0
    for aff in pairs(snd.mental_affs) do
      if table.contains(snd.target_has, snd.mental_affs[aff]) then
        mental_aff_count = mental_aff_count + 1
      end
    end
    local string = "contemplate " .. snd.target .. snd.sep
    if not string.find(gmcp.Char.Vitals.wield_right, "mace") then
      string = string .. "quickwield right mace" .. snd.sep
    end
    if not string.find(gmcp.Char.Vitals.wield_left, "buckler") then
      string = string .. "quickwield left buckler" .. snd.sep
    end
    local shield = "none"
    local battle = "none"
    local chasten = "none"
    --Absolve check
    if snd.mana_percent &lt; 40 and not snd.used.shield then
      string = "angel absolve " .. snd.target
    else
      --battle aff pick
      if snd.balance.battle then
        for i in pairs(snd.giving_battle) do
          if not snd.checkAff(snd.giving_battle[i]) and battle == "none" then
            battle = snd.giving_battle[i]
          end
        end
      end
      --If they have shield we can do nothing
      if snd.used.shield then
        shield = "shield raze"
        --If they are prone/psuedo prone and have 5 affs, smack them
      elseif total_aff_count &gt;= 5 and snd.proned() then
        shield = "shield overwhelm " .. snd.target
        --We need to build up disrupt/affs.
      else
        for i in pairs(snd.giving_shield) do
          if not snd.checkAff(snd.giving_shield[i]) and shield == "none" then
            shield = snd.spirituality_attacks[snd.giving_shield[i]]
          end
        end
        --If they have 2 mental affs and confusion is one of them, disrupt ASAP to lock them in place.
        if
          mental_aff_count &gt;= 2 and
          snd.checkAff("confusion") and
          not snd.checkAff("disrupted") and
          total_aff_count &lt; 7
        then
          shield = "shield crash"
        end
      end
      --Dazzle can hit through rebounding, check if they have confusion first.
      if snd.used.rebounding then
        if snd.checkAff("confusion") then
          shield = "shield raze"
        else
          shield = "perform dazzle"
        end
      end
      --Chasten aff pick
      for i in pairs(snd.giving_chasten) do
        if
          not snd.checkAff(snd.giving_chasten[i]) and
          chasten == "none" and
          snd.giving_chasten[i] ~= battle
        then
          chasten = snd.giving_chasten[i]
        end
      end
      --Start building our attack - battle first
      if battle ~= "none" then
        if snd.toggles.affcalling and not snd.target_gone then
          string = "wt Battle " .. snd.target .. ": " .. battle .. snd.sep
        end
        string = string .. "angel battle " .. battle .. " " .. snd.target .. snd.sep
      end
      --Add shield/evoke/perform attacks
      string = string .. shield .. " " .. snd.target .. snd.sep
      --Add chasten choice
      if shield ~= "slam" then
        if chasten == "none" then
          string = string .. "chasten " .. snd.target
        else
          if snd.toggles.affcalling and not snd.target_gone then
            string = string .. "wt Chasten " .. snd.target .. ": " .. chasten .. snd.sep
          end
          string = string .. "chasten " .. snd.target .. " " .. chasten
        end
      end
    end
    --Are we gonna smack them with overwhelm? Let's make it hurt.
    if string.find(string, "overwhelm") and not string.find(gmcp.Char.Vitals.wield_left, "tower") then
      string = string..snd.sep.."quickwield left tower"
    end
    if string ~= snd.last_attack and not snd.waiting.queue then
      snd.last_attack = string
      snd.attack(snd.last_attack)
      snd.waiting.queue = true
      tempTimer(snd.delay(), [[snd.waiting.queue = false]])
    end
  end

  snd.attack_function()
end</script>
									<command></command>
									<packageName></packageName>
									<regex>^gaff$</regex>
								</Alias>
							</AliasGroup>
							<AliasGroup isActive="yes" isFolder="yes">
								<name>Damage Offenses</name>
								<script></script>
								<command></command>
								<packageName></packageName>
								<regex></regex>
								<Alias isActive="yes" isFolder="no">
									<name>mana drain</name>
									<script>if snd.class == "Luminary" then
  snd.giving_battle = {"stupidity", "vertigo", "self-pity", "migraine", "sensitivity", "impatience"}
  snd.giving_chasten =
    {
      "lethargy",
      "loneliness",
      "stupidity",
      "hypochondria",
      "dementia",
      "recklessness",
      "masochism",
      "paranoia",
    }
  snd.starting_attack()

  function snd.attack_function()
 local string = "contemplate "..snd.target..snd.sep
 	if not string.find(gmcp.Char.Vitals.wield_right, "mace") then string = string.."quickwield right mace"..snd.sep end
	if not string.find(gmcp.Char.Vitals.wield_left, "buckler") then string = string.."quickwield left buckler"..snd.sep end

    local battle = "none"
    local chasten = "none"
    if snd.mana_percent &lt; 40 and not snd.used.shield then
      string = "angel absolve " .. snd.target
    elseif snd.mana_percent &lt; 40 and snd.used.shield then
      for i in pairs(snd.giving_chasten) do
        if
          not snd.checkAff(snd.giving_chasten[i]) and
          chasten == "none" and
          snd.giving_chasten[i] ~= battle
        then
          chasten = snd.giving_chasten[i]
        end
      end
      string = "shield raze " .. snd.target .. snd.sep
      if snd.toggles.affcalling and not snd.target_gone then
        string = string .. "wt Chasten " .. snd.target .. ": " .. chasten .. snd.sep
      end
      string = string .. "chasten " .. snd.target .. " " .. chasten
    else
      string = string.."angel sap " .. snd.target
    end
		
    if snd.balance.battle then
      for i in pairs(snd.giving_battle) do
        if not snd.checkAff(snd.giving_battle[i]) and battle == "none" then
          battle = snd.giving_battle[i]
        end
      end
    end
    string = "angel battle " .. battle .. " " .. snd.target .. snd.sep .. string
    if snd.toggles.affcalling and not snd.target_gone then
      string = "wt Battle " .. snd.target .. ": " .. battle .. snd.sep .. string
    end

    if string ~= snd.last_attack and not snd.waiting.queue then
      snd.last_attack = string
      snd.attack(snd.last_attack)
      snd.waiting.queue = true
      tempTimer(snd.delay(), [[snd.waiting.queue = false]])
    end
  end

  snd.attack_function()
end</script>
									<command></command>
									<packageName></packageName>
									<regex>^mana$</regex>
								</Alias>
								<Alias isActive="yes" isFolder="no">
									<name>Group Damage - Best used with an impale</name>
									<script>--This is for quick kills with sensitivity/transfix/impale/overwhelm/disembowel.
--May have tougher time on hardier opponents.
--May vary in usefulness depending on damage output.
if snd.class == "Luminary" then
  snd.giving_shield = {"paresis", "weariness", "sight", "asthma"}
  snd.giving_battle = {"impatience", "sensitivity", "self_pity", "stupidity", "vertigo"}
  snd.giving_chasten =
    {
      "hypochondria",
      "loneliness",
      "recklessness",
      "stupidity",
      "lethargy",
      "masochism",
      "dementia",
      "paranoia",
      "anorexia",
    }
  snd.starting_attack()

  function snd.attack_function()
    local total_aff_count = 0
    for aff in pairs(snd.all_affs) do
      if table.contains(snd.target_has, snd.all_affs[aff]) then
        total_aff_count = total_aff_count + 1
      end
    end
 local string = "contemplate "..snd.target..snd.sep
 	if not string.find(gmcp.Char.Vitals.wield_right, "mace") then string = string.."quickwield right mace"..snd.sep end
	if not string.find(gmcp.Char.Vitals.wield_left, "buckler") then string = string.."quickwield left buckler"..snd.sep end

    local shield = "none"
    local battle = "none"
    local chasten = "none"
    --Absolve check
    if snd.mana_percent &lt; 40 and not snd.used.shield then
      string = "angel absolve " .. snd.target
      --They've hit our aff count limit, let's lock them down/kill them.
    elseif total_aff_count &gt;= 4 and snd.checkAff("sight") and not snd.used.shield then
      if not snd.checkAff("transfixed") then
        string = "evoke transfixion " .. snd.target
      else
        string = "shield overwhelm " .. snd.target
        if snd.checkAff("hearing") and not snd.checkAff("sensitivity") then
          string = "angel battle " .. snd.target .. " sensitivity" .. snd.sep .. string
        end
      end
      --Need to pile a few affs on still. Aiming for at least 4 before overwhelm so by the time
      --we get to overwhelm, they're in the overwhelm aff/damage scaling range.	
    else
      if snd.balance.battle then
        for i in pairs(snd.giving_battle) do
          if not snd.checkAff(snd.giving_battle[i]) and battle == "none" then
            battle = snd.giving_battle[i]
          end
        end
      end
      if snd.used.shield then
        shield = "shield raze"
      else
        for i in pairs(snd.giving_shield) do
          if not snd.checkAff(snd.giving_shield[i]) and shield == "none" then
            shield = snd.spirituality_attacks[snd.giving_shield[i]]
          end
        end
      end
      if shield == "none" then
        shield = "shield strike"
      end
      if snd.used.rebounding and shield ~= "facesmash" then
        shield = "shield raze"
      end
      --Chasten aff pick
      for i in pairs(snd.giving_chasten) do
        if
          not snd.checkAff(snd.giving_chasten[i]) and
          chasten == "none" and
          snd.giving_chasten[i] ~= battle
        then
          chasten = snd.giving_chasten[i]
        end
      end
      --Start building our attack - battle first
      if battle ~= "none" then
        if snd.toggles.affcalling and not snd.target_gone then
          string = "wt Battle " .. snd.target .. ": " .. battle .. snd.sep
        end
        string = string .. "angel battle " .. battle .. " " .. snd.target .. snd.sep
      end
      --Add shield/evoke/perform attacks
      string = string .. shield .. " " .. snd.target .. snd.sep
      --Add chasten choice
      if shield ~= "slam" then
        if chasten == "none" then
          string = string .. "chasten " .. snd.target
        else
          if snd.toggles.affcalling and not snd.target_gone then
            string = string .. "wt Chasten " .. snd.target .. ": " .. chasten .. snd.sep
          end
          string = string .. "chasten " .. snd.target .. " " .. chasten
        end
      end
    end
    --Are we gonna smack them with overwhelm? Let's make it hurt.
    if string.find(string, "overwhelm") and not string.find(gmcp.Char.Vitals.wield_left, "tower") then
      string = string..snd.sep.."quickwield left tower"
    end
    --We have an instakill at 40% mana, let's make sure we keep track of mana.

    if string ~= snd.last_attack and not snd.waiting.queue then
      snd.last_attack = string
      snd.attack(snd.last_attack)
      snd.waiting.queue = true
      tempTimer(snd.delay(), [[snd.waiting.queue = false]])
    end
  end

  snd.attack_function()
end</script>
									<command></command>
									<packageName></packageName>
									<regex>^dmg$</regex>
								</Alias>
							</AliasGroup>
						</AliasGroup>
						<AliasGroup isActive="yes" isFolder="yes">
							<name>Sentinel</name>
							<script></script>
							<command></command>
							<packageName></packageName>
							<regex></regex>
							<AliasGroup isActive="yes" isFolder="yes">
								<name>Affliction Offenses</name>
								<script></script>
								<command></command>
								<packageName></packageName>
								<regex></regex>
								<Alias isActive="yes" isFolder="no">
									<name>mouse mode</name>
									<script>if snd.class == "Sentinel" then
snd.giving = {
"sight",
"paresis",
"clumsiness",
"asthma",
"sensitivity",
"vomiting",
"allergies",
"haemophilia",
"slickness",
--"anorexia",
--"stupidity",
--"recklessness",
--"weariness",
--"dizziness",
--"voyria",
}
snd.starting_attack()
function snd.attack_function()
 if not snd.waiting.queue then
  call = ""
  left = "none"
  right = "none"
  for i in pairs(snd.giving) do
   if not table.contains(snd.target_has, snd.giving[i]) then
	 if snd.giving[i] ~= "paresis" or not table.contains(snd.target_has, "paralysis") then
     if right == "none" then
      right = snd.effects[snd.giving[i]]
     elseif left == "none" then
      left = snd.effects[snd.giving[i]]
		end
    end
   end
  end
  if left == "none" then
   left = "epseth"
  end
  if right == "none" then
   right = "epseth"
  end
  if snd.used.rebounding and snd.used.shield then
   string = "dhuriv dualraze "..snd.target
  elseif snd.used.shield or snd.used.rebounding then
	 string = "dhuriv combo "..snd.target.." reave stab "..right
	if snd.toggles.affcalling and not snd.target_gone then
	 call = "wt Afflicting "..snd.target..": "..right..snd.sep
	end
  else
   string = "dhuriv combo "..snd.target.." slash stab "..left.." "..right
	if snd.toggles.affcalling and not snd.target_gone then
	 call = "wt Afflicting "..snd.target..": "..left..", "..right..snd.sep
	end
  end
	string = call..string
  if string ~= snd.last_attack and not snd.waiting.queue then
   snd.last_attack = string
   snd.attack(snd.last_attack)
   snd.waiting.queue = true
   tempTimer(snd.delay(), [[snd.waiting.queue = false]])
  end
 end
end
snd.attack_function()
end</script>
									<command></command>
									<packageName></packageName>
									<regex>^ms$</regex>
								</Alias>
								<Alias isActive="yes" isFolder="no">
									<name>Venom Lock</name>
									<script>if snd.class == "Sentinel" then
snd.current_offense = "SentVLock"

local second_attack = ""

snd.starting_attack()
function snd.attack_function()

		if not snd.waiting.queue then
		if snd.target_locked() then
			snd.giving = {
			"impairment",
			"confusion",
			"a broken left leg",
			"a broken right leg",
			"weariness",
			"dizziness",
			"hearing",
			"sensitivity",}
		else
			snd.giving = {
			"paresis",
		  "clumsiness",
			"asthma",
			"slickness",
			"confusion",
			"a broken left leg",
			"a broken right leg",
			"stupidity",
			"vomiting",
			"dizziness",
			"sight",
			"hearing",
			"sensitivity",}
		end

	call = ""
	left = "none"
	right = "none"

	 left, right = Sentinel_Attack_Choice(snd.giving, left, right) -- we send our aff list to a function to get our attacks.

		if left  == "none" then left  = "epseth" end
		if right == "none" then right = "epseth" end
	
		if snd.no_parry() then 
			second_attack = "thrust"
		else
			second_attack = "stab"
		end

		if snd.used.rebounding and snd.used.shield then
			string = "dhuriv dualraze "..snd.target
			
		elseif left == "destroyed_throat" then
			string = "dhuriv throatcrush "..snd.target
			
		elseif snd.dhuriv_attacks[left] == "daunt" or snd.dhuriv_attacks[left] == "icewyrm" then
			left = snd.daunt_animals[left]
			string = left..snd.target..snd.sep.."dhuriv flourish "..snd.target.." "..snd.effects[right]
			
		else
			if table.contains(snd.dhuriv_affs, left) then
				if not table.contains(snd.effects, right) then
					string = snd.dhuriv_attacks[left].." "..snd.dhuriv_attacks[right]
				else
					string = snd.dhuriv_attacks[left].." "..second_attack.." "..snd.effects[right]
				end
			elseif table.contains(snd.dhuriv_affs, right) then
				string = "slash "..snd.dhuriv_attacks[right].." "..snd.effects[left]
			else
				string = "slash "..second_attack.." "..snd.effects[left].." "..snd.effects[right]
			end
			
			string = "dhuriv combo "..snd.target.." "..string
		end
		
		if snd.toggles.affcalling and not snd.target_gone then
			if table.contains(snd.effects, left) then 
				call = "wt Afflicting "..snd.target..": "..snd.effects[left]
				if table.contains(snd.effects, right) then 
					call = call..", "..snd.effects[right]
				end
				call = call..snd.sep
			elseif table.contains(snd.effects, right) then 
				call = "wt Afflicting "..snd.target..": "..snd.effects[right]..snd.sep
			end
		end

		if snd.checksomeAffs({"confusion", "a broken left leg", "a broken right leg"}, 3) and snd.target_prone then
			string = "dhuriv spinecut "..snd.target
		end
		
		if string:find("impale") or string:find("gorge") or string:find("throatcrush") or string:find("dualraze") or string:find("spinecut") then
			call = ""
		end
display(string)
		string = call..string
		if string ~= snd.last_attack and not snd.waiting.queue then
			snd.last_attack = string
			snd.attack(snd.last_attack)
			snd.waiting.queue = true
			tempTimer(snd.delay(), [[snd.waiting.queue = false]])
		end
	end
end

	snd.attack_function()
end</script>
									<command></command>
									<packageName></packageName>
									<regex>^aff$</regex>
								</Alias>
								<Alias isActive="yes" isFolder="no">
									<name>Transfix + Sensitivity</name>
									<script>if snd.class == "Sentinel" then
snd.giving = {

"sight",
"hearing",
"sensitivity",
"vomiting",
"paresis",
"asthma",
"impatience",
"slickness",
"confusion",
"a broken left leg",
"a broken right leg",
"anorexia",
"stupidity",
"dizziness",
"heartflutter",
"shyness",
}


local second_attack = ""

snd.starting_attack()
function snd.attack_function()

		if not snd.waiting.queue then

	call = ""
	left = "none"
	right = "none"

	 left, right = Sentinel_Attack_Choice(snd.giving, left, right) -- we send our aff list to a function to get our attacks.

		if left  == "none" then left  = "epseth" end
		if right == "none" then right = "epseth" end
	
		if snd.no_parry() then 
			second_attack = "thrust"
		else
			second_attack = "stab"
		end

		if snd.used.rebounding and snd.used.shield then
			string = "dhuriv dualraze "..snd.target
			
		elseif left == "destroyed_throat" then
			string = "dhuriv throatcrush "..snd.target
			
		elseif snd.dhuriv_attacks[left] == "daunt" or snd.dhuriv_attacks[left] == "icewyrm" then
			left = snd.daunt_animals[left]
			string = left..snd.target..snd.sep.."dhuriv flourish "..snd.target.." "..snd.effects[right]
			
		else

			if table.contains(snd.dhuriv_affs, left) then
				if not table.contains(snd.effects, right) then
					string = "dhuriv combo "..snd.target.." "..snd.dhuriv_attacks[left].." "..snd.dhuriv_attacks[right]
				else
					string = "dhuriv combo "..snd.target.." "..snd.dhuriv_attacks[left].." "..second_attack.." "..snd.effects[right]
				end
			elseif table.contains(snd.dhuriv_affs, right) then
				string = "dhuriv combo "..snd.target.." slash "..snd.dhuriv_attacks[right].." "..snd.effects[left]
			else
				string = "dhuriv combo "..snd.target.." slash "..second_attack.." "..snd.effects[left].." "..snd.effects[right]
			end
		end

		
		if snd.toggles.affcalling and not snd.target_gone then
			if table.contains(snd.effects, left) then 
				call = "wt Afflicting "..snd.target..": "..snd.effects[left]
				if table.contains(snd.effects, right) then 
					call = call..", "..snd.effects[right]
				end
				call = call..snd.sep
			elseif table.contains(snd.effects, right) then 
				call = "wt Afflicting "..snd.target..": "..snd.effects[right]..snd.sep
			end
		end

		if snd.checksomeAffs({"confusion", "a broken left leg", "a broken right leg"}, 3) and snd.target_prone then
			string = "dhuriv spinecut "..snd.target
		end

		if string:find("impale") or string:find("gorge") or string:find("throatcrush") or string:find("dualraze") or string:find("spinecut") then
			call = ""
		end

		string = call..string
		if string ~= snd.last_attack and not snd.waiting.queue then
			snd.last_attack = string
			snd.attack(snd.last_attack)
			snd.waiting.queue = true
			tempTimer(snd.delay(), [[snd.waiting.queue = false]])
		end
	end
end

	snd.attack_function()
end</script>
									<command></command>
									<packageName></packageName>
									<regex>^lumi$</regex>
								</Alias>
								<Alias isActive="yes" isFolder="no">
									<name>Mentals</name>
									<script>if snd.class == "Sentinel" then
snd.current_offense = "SentMental"
local second_attack = ""

snd.starting_attack()
function snd.attack_function()

	if not snd.waiting.queue then

snd.giving = {

"impatience",
"stupidity",
"agoraphobia",
"claustrophobia",
"weariness",
"clumsiness",
"asthma",
"slickness",
"confusion",
"a broken left leg",
"a broken right leg",
"anorexia",
"sight",
"hearing",
"sensitivity",
}

	call = ""
	left = "none"
	right = "none"

	 left, right = Sentinel_Attack_Choice(snd.giving, left, right) -- we send our aff list to a function to get our attacks.

		if left  == "none" then left  = "epseth" end
		if right == "none" then right = "epseth" end
	
		if snd.no_parry() then 
			second_attack = "thrust"
		else
			second_attack = "stab"
		end

		if snd.used.rebounding and snd.used.shield then
			string = "dhuriv dualraze "..snd.target
			
		elseif left == "destroyed_throat" then
			string = "dhuriv throatcrush "..snd.target
			
		elseif snd.dhuriv_attacks[left] == "daunt" or snd.dhuriv_attacks[left] == "icewyrm" then
			left = snd.daunt_animals[left]
			string = left..snd.target..snd.sep.."dhuriv flourish "..snd.target.." "..snd.effects[right]
			
		else
			if table.contains(snd.dhuriv_affs, left) then
				if not table.contains(snd.effects, right) then
					string = "dhuriv combo "..snd.target.." "..snd.dhuriv_attacks[left].." "..snd.dhuriv_attacks[right]
				else
					string = "dhuriv combo "..snd.target.." "..snd.dhuriv_attacks[left].." "..second_attack.." "..snd.effects[right]
				end
			elseif table.contains(snd.dhuriv_affs, right) then
				string = "dhuriv combo "..snd.target.." slash "..snd.dhuriv_attacks[right].." "..snd.effects[left]
			else
				string = "dhuriv combo "..snd.target.." slash "..second_attack.." "..snd.effects[left].." "..snd.effects[right]
			end
		end

		
		if snd.toggles.affcalling and not snd.target_gone then
			if table.contains(snd.effects, left) then 
				call = "wt Afflicting "..snd.target..": "..snd.effects[left]
				if table.contains(snd.effects, right) then 
					call = call..", "..snd.effects[right]
				end
				call = call..snd.sep
			elseif table.contains(snd.effects, right) then 
				call = "wt Afflicting "..snd.target..": "..snd.effects[right]..snd.sep
			end
		end

		if snd.checksomeAffs({"confusion", "a broken left leg", "a broken right leg"}, 3) and snd.target_prone then
			string = "dhuriv spinecut "..snd.target
		end
			
		if string:find("impale") or string:find("gorge") or string:find("throatcrush") or string:find("dualraze") or string:find("spinecut") then
			call = ""
		end

		string = call..string
		if string ~= snd.last_attack and not snd.waiting.queue then
			snd.last_attack = string
			snd.attack(snd.last_attack)
			snd.waiting.queue = true
			tempTimer(snd.delay(), [[snd.waiting.queue = false]])
		end
	end
end

	snd.attack_function()
end</script>
									<command></command>
									<packageName></packageName>
									<regex>^ment$</regex>
								</Alias>
								<Alias isActive="yes" isFolder="no">
									<name>Salves</name>
									<script>if snd.class == "Sentinel" then -- Requires Raloth and Icewyrm
snd.current_offense = "SentSalve"

local second_attack = ""

snd.starting_attack()
function snd.attack_function()

	if not snd.waiting.queue then

    if snd.checkAff("destroyed_throat") then
    snd.giving = {
    "slickness",
    "asthma",
    "a broken left leg",
    "a broken right leg",
    "paresis",
    "confusion",
    "vomiting",
    "dizziness",
    "sight",
    "hearing",
    "sensitivity",
    }
    else
    snd.giving = {
    
    "frozen",
    "a broken left leg",
    "a broken right leg",
    "a broken left arm",
    "a broken right arm",
    "anorexia",
    "stupidity",
    "asthma",
    "slickness",
    "paresis",
    "confusion",
    "vomiting",
    "dizziness",
    "sight",
    "hearing",
    "sensitivity",
    }
    end	

	string = ""
	call = ""
	left = "none"
	right = "none"

	 left, right = Sentinel_Attack_Choice(snd.giving, left, right) -- we send our aff list to a function to get our attacks.

		if left  == "none" then left  = "epseth" end
		if right == "none" then right = "epseth" end
	
		if snd.no_parry() then 
			second_attack = "thrust"
		else
			second_attack = "stab"
		end

		if snd.used.rebounding and snd.used.shield then
			string = "dhuriv dualraze "..snd.target
			
		elseif left == "destroyed_throat" then
			string = "dhuriv throatcrush "..snd.target

		elseif not snd.used.rebounding and not snd.used.shield and snd.checkAff("a broken left leg") 
			and snd.limb_status["left leg"] == "healed" and (snd.parried_limb ~= "left leg" or snd.no_parry()) and snd.limb_status["right leg"] == "healed" then
				string = "dhuriv pierce "..snd.target.." left"
		
		elseif not snd.used.rebounding and not snd.used.shield and snd.checkAff("a broken right leg") 
			and snd.limb_status["right leg"] == "healed" and (snd.parried_limb ~= "right leg" or snd.no_parry()) and snd.limb_status["left leg"] == "healed" then
				string = "dhuriv pierce "..snd.target.." right"

		elseif snd.dhuriv_attacks[left] == "daunt" or snd.dhuriv_attacks[left] == "icewyrm" then
			left = snd.daunt_animals[left]
			string = left..snd.target..snd.sep.."dhuriv flourish "..snd.target.." "..snd.effects[right]
			
		elseif snd.target_prone and not snd.checksomeAffs({"a broken left leg", "a broken left arm", "a broken right arm", "a broken right leg"}, 2) then
			string = "qdmount"..snd.sep.."qmount "..snd.my_raloth..snd.sep.."order "..snd.my_raloth.." trample "..snd.target

		else

			if table.contains(snd.dhuriv_affs, left) then
				if not table.contains(snd.effects, right) then
					string = "dhuriv combo "..snd.target.." "..snd.dhuriv_attacks[left].." "..snd.dhuriv_attacks[right]
				else
					string = "dhuriv combo "..snd.target.." "..snd.dhuriv_attacks[left].." "..second_attack.." "..snd.effects[right]
				end
			elseif table.contains(snd.dhuriv_affs, right) then
				string = "dhuriv combo "..snd.target.." slash "..snd.dhuriv_attacks[right].." "..snd.effects[left]
			else
				string = "dhuriv combo "..snd.target.." slash "..second_attack.." "..snd.effects[left].." "..snd.effects[right]
			end
		end

		if snd.toggles.affcalling and not snd.target_gone then
			if table.contains(snd.effects, left) then 
				call = "wt Afflicting "..snd.target..": "..snd.effects[left]
				if table.contains(snd.effects, right) then 
					call = call..", "..snd.effects[right]
				end
				call = call..snd.sep
			elseif table.contains(snd.effects, right) then 
				call = "wt Afflicting "..snd.target..": "..snd.effects[right]..snd.sep
			end
		end
		
		if snd.checksomeAffs({"confusion", "a broken left leg", "a broken right leg"}, 3) and snd.target_prone then
			string = "dhuriv spinecut "..snd.target
		end
		
		if string:find("impale") or string:find("gorge") or string:find("throatcrush") or string:find("dualraze") or string:find("spinecut") or string:find("pierce") then
			call = ""
		end
display(string)
		string = call..string
		if string ~= snd.last_attack and not snd.waiting.queue then
			snd.last_attack = string
			snd.attack(snd.last_attack)
			snd.waiting.queue = true
			tempTimer(snd.delay(), [[snd.waiting.queue = false]])
		end
	end
end

	snd.attack_function()
end</script>
									<command></command>
									<packageName></packageName>
									<regex>^salve$</regex>
								</Alias>
								<Alias isActive="yes" isFolder="no">
									<name>Group Impale/Frozen</name>
									<script>if snd.class == "Sentinel" then -- Requires Raloth and Icewyrm
snd.current_offense = "SentImpale"
snd.giving = {

"frozen",
"a broken left leg",
"a broken right leg",
"a broken left arm",
"a broken right arm",
"asthma",
"slickness",
"paresis",
"confusion",
"vomiting",
"dizziness",
"sight",
"hearing",
"sensitivity",
}

local second_attack = ""

snd.starting_attack()
function snd.attack_function()

	if not snd.waiting.queue then

	string = ""
	call = ""
	left = "none"
	right = "none"

	left, right = Sentinel_Attack_Choice(snd.giving, left, right) -- we send our aff list to a function to get our attacks.

		if left  == "none" then left  = "epseth" end
		if right == "none" then right = "epseth" end
	
		if snd.no_parry() then 
			second_attack = "thrust"
		else
			second_attack = "stab"
		end

		if snd.used.rebounding and snd.used.shield then
			string = "dhuriv dualraze "..snd.target
			
		elseif left == "destroyed_throat" then
			string = "dhuriv throatcrush "..snd.target
			
		elseif snd.target_impaled then
			string = "dhuriv gorge "..snd.target
			
		elseif not snd.used.rebounding and not snd.used.shield and snd.checkAff("a broken left leg") and snd.limb_status["left leg"] == "healed" and (snd.parried_limb ~= "left leg" or snd.no_parry()) then
			string = "dhuriv pierce "..snd.target.." left"
		
		elseif not snd.used.rebounding and not snd.used.shield and snd.checkAff("a broken right leg") and snd.limb_status["right leg"] == "healed" and (snd.parried_limb ~= "right leg" or snd.no_parry()) then
			string = "dhuriv pierce "..snd.target.." right"

  	elseif snd.proned() then         
      if not snd.checkAff("impaled") then
      	string = "dhuriv impale "..snd.target
       else
        string = "qdmount"..snd.sep.."qmount "..snd.my_raloth..snd.sep.."order "..snd.my_raloth.." trample "..snd.target
      end	
			
		elseif snd.dhuriv_attacks[left] == "daunt" or snd.dhuriv_attacks[left] == "icewyrm" then
			left = snd.daunt_animals[left]
			string = left..snd.target..snd.sep.."dhuriv flourish "..snd.target.." "..snd.effects[right]
						
		else

			if table.contains(snd.dhuriv_affs, left) then
				if not table.contains(snd.effects, right) then
					string = "dhuriv combo "..snd.target.." "..snd.dhuriv_attacks[left].." "..snd.dhuriv_attacks[right]
				else
					string = "dhuriv combo "..snd.target.." "..snd.dhuriv_attacks[left].." "..second_attack.." "..snd.effects[right]
				end
			elseif table.contains(snd.dhuriv_affs, right) then
				string = "dhuriv combo "..snd.target.." slash "..snd.dhuriv_attacks[right].." "..snd.effects[left]
			else
				string = "dhuriv combo "..snd.target.." slash "..second_attack.." "..snd.effects[left].." "..snd.effects[right]
			end
		end
		
		if snd.toggles.affcalling and not snd.target_gone then
			if table.contains(snd.effects, left) then 
				call = "wt Afflicting "..snd.target..": "..snd.effects[left]
				if table.contains(snd.effects, right) then 
					call = call..", "..snd.effects[right]
				end
				call = call..snd.sep
			elseif table.contains(snd.effects, right) then 
				call = "wt Afflicting "..snd.target..": "..snd.effects[right]..snd.sep
			end
		end

		if snd.checksomeAffs({"confusion", "a broken left leg", "a broken right leg"}, 3) and snd.target_prone then
			string = "dhuriv spinecut "..snd.target
		end
		
		if string:find("impale") or string:find("gorge") or string:find("throatcrush") or string:find("dualraze") or string:find("spinecut") or string:find("pierce") then
			call = ""
		end

		string = call..string
		if string ~= snd.last_attack and not snd.waiting.queue then
			snd.last_attack = string
			snd.attack(snd.last_attack)
			snd.waiting.queue = true
			tempTimer(snd.delay(), [[snd.waiting.queue = false]])
		end
	end
end
display(string)
	snd.attack_function()
end</script>
									<command></command>
									<packageName></packageName>
									<regex>^gimp$</regex>
								</Alias>
							</AliasGroup>
							<AliasGroup isActive="yes" isFolder="yes">
								<name>Damage Offenses</name>
								<script></script>
								<command></command>
								<packageName></packageName>
								<regex></regex>
							</AliasGroup>
						</AliasGroup>
						<AliasGroup isActive="yes" isFolder="yes">
							<name>Shaman</name>
							<script></script>
							<command></command>
							<packageName></packageName>
							<regex></regex>
							<AliasGroup isActive="yes" isFolder="yes">
								<name>Damage Offenses</name>
								<script></script>
								<command></command>
								<packageName></packageName>
								<regex></regex>
								<Alias isActive="yes" isFolder="no">
									<name>mouse mode</name>
									<script>if snd.class == "Shaman" then
snd.giving = {
"sight",
"sensitivity",
"clumsiness",
"asthma",
"allergies",
"vomiting",
"haemophilia",
"slickness",
"stupidity",
"anorexia",
--"weariness",
--"recklessness",
--"dizziness",
--"voyria",
}
snd.starting_attack()
function snd.attack_function()
 if not snd.waiting.queue then
  venom = "none"
  for i in pairs(snd.giving) do
   if not table.contains(snd.target_has, snd.giving[i]) then
    if venom == "none" then
     venom = snd.effects[snd.giving[i]]
    end
   end
  end
	if venom == "none" then
	 venom = "epseth"
	end
  if snd.used.shield then
   string = "commune leafstorm "..snd.target
  elseif tonumber(gmcp.Char.Vitals.energy) then
   string = "commune boost"..snd.sep.."commune vinelash "..snd.target.." "..venom
  else
   string = "commune vinelash "..snd.target.." "..venom
  end
  if string ~= snd.last_attack and not snd.waiting.queue then
   snd.last_attack = string
   snd.attack(snd.last_attack)
   snd.waiting.queue = true
   tempTimer(snd.delay(), [[snd.waiting.queue = false]])
  end
 end
end
snd.attack_function()
end</script>
									<command></command>
									<packageName></packageName>
									<regex>^ms$</regex>
								</Alias>
								<Alias isActive="yes" isFolder="no">
									<name>Stormtouched</name>
									<script>if snd.class == "Shaman" then
snd.giving = {

"clumsiness",
"asthma",
"allergies",
"vomiting",
"haemophilia",
"slickness",
"stupidity",
"anorexia",
--"weariness",
--"recklessness",
--"dizziness",
--"voyria",
}
snd.starting_attack()
function snd.attack_function()

	call = ""
	
 if not snd.waiting.queue then
  venom = "none"
  for i in pairs(snd.giving) do
   if not table.contains(snd.target_has, snd.giving[i]) then
    if venom == "none" then
     venom = snd.effects[snd.giving[i]]
    end
   end
  end
	if venom == "none" then
	 venom = "epseth"
	end
  if snd.used.shield then
 	 string = "fetish attune "..snd.target..snd.sep.."commune leafstorm "..snd.target
  elseif snd.checkAff("stormtouched") then
 	 if tonumber(gmcp.Char.Vitals.energy) then
  	string = "fetish attune "..snd.target..snd.sep.."commune boost"..snd.sep.."commune lightning "..snd.target
 	 else
 	 	string = "fetish attune "..snd.target..snd.sep.."commune lightning "..snd.target
  	end
 	else
  	string = "fetish attune "..snd.target..snd.sep.."commune vinelash "..snd.target.." "..venom
  	call = "wt Vinelash "..snd.target..": "..venom..snd.sep
  	if tonumber(gmcp.Char.Vitals.energy) &gt;= 4 then
  		string = "commune boost "..snd.sep..string  
  	end
  end
	
	string = call..string
	
  if string ~= snd.last_attack and not snd.waiting.queue then
   snd.last_attack = string
   snd.attack(snd.last_attack)
   snd.waiting.queue = true
   tempTimer(snd.delay(), [[snd.waiting.queue = false]])
  end
 end
end
snd.attack_function()
end</script>
									<command></command>
									<packageName></packageName>
									<regex>^storm$</regex>
								</Alias>
								<Alias isActive="yes" isFolder="no">
									<name>Aff support</name>
									<script>if snd.class == "Shaman" then
snd.giving = {

"clumsiness",
"asthma",
"slickness",
"anorexia",
"stupidity",
"weariness",
"allergies",
"vomiting",
"haemophilia",
"sensitivity",
"recklessness",
"dizziness",
--"voyria",
}
snd.starting_attack()
function snd.attack_function()

	call = ""
--local boosting = false -- this is like templar vorpal
-- if tonumber(gmcp.Char.Vitals.energy) &gt;= 3 then boosting = true -- yesss
-- end
	
 if not snd.waiting.queue then
  venom = "none"
  for i in pairs(snd.giving) do
   if not table.contains(snd.target_has, snd.giving[i]) then
    if venom == "none" then
     venom = snd.effects[snd.giving[i]]
    end
   end
  end
	if venom == "none" then
	 venom = "epseth"
	end
  if snd.used.shield then
   string = "commune leafstorm "..snd.target
	elseif tonumber(gmcp.Char.Vitals.energy) &gt;= 3 then
		if not snd.checkAff("impatience") and not snd.checkAff("confusion") then
			string = "commune sporulation "..snd.target
		elseif not snd.checkAff("paresis") and not snd.checkAff("stupidity") then
			string = "commune overload "..snd.target
		else
			string = "commune vinelash "..snd.target.." "..venom
	 		call = "wt Vinelash "..snd.target..": "..venom..snd.sep
		end	
  else
   string = "commune vinelash "..snd.target.." "..venom
	 call = "wt Vinelash "..snd.target..": "..venom..snd.sep
  end
	
	string = call..string
	
  if string ~= snd.last_attack and not snd.waiting.queue then
   snd.last_attack = string
   snd.attack(snd.last_attack)
   snd.waiting.queue = true
   tempTimer(snd.delay(), [[snd.waiting.queue = false]])
  end
 end
end
snd.attack_function()
end</script>
									<command></command>
									<packageName></packageName>
									<regex>^supp$</regex>
								</Alias>
							</AliasGroup>
							<AliasGroup isActive="yes" isFolder="yes">
								<name>Naturalism Utility</name>
								<script></script>
								<command></command>
								<packageName></packageName>
								<regex></regex>
								<Alias isActive="yes" isFolder="no">
									<name>Surge</name>
									<script>if snd.class == "Shaman" then
	if matches[2] == "" then
		snd.attack("nature surge "..snd.target)
	else
 		snd.attack("nature surge "..matches[2])
	end
end</script>
									<command></command>
									<packageName></packageName>
									<regex>^ns (.*)$</regex>
								</Alias>
								<Alias isActive="yes" isFolder="no">
									<name>Pull</name>
									<script>if snd.class == "Shaman" then
if matches[2] == "" then
 snd.attack("nature pull "..snd.target)
else
 snd.attack("nature pull "..matches[2])
end
end</script>
									<command></command>
									<packageName></packageName>
									<regex>^np(.*)$</regex>
								</Alias>
								<Alias isActive="yes" isFolder="no">
									<name>Displacement</name>
									<script>if snd.class == "Shaman" then
if matches[2] == "" then
 snd.attack("nature displacement "..snd.target)
else
 snd.attack("nature displacement "..matches[2])
end
end</script>
									<command></command>
									<packageName></packageName>
									<regex>^dp(.*)$</regex>
								</Alias>
								<Alias isActive="yes" isFolder="no">
									<name>Canopy</name>
									<script>if snd.class == "Shaman" then
 snd.attack("nature canopy")
end</script>
									<command></command>
									<packageName></packageName>
									<regex>^can$</regex>
								</Alias>
								<Alias isActive="yes" isFolder="no">
									<name>Screen</name>
									<script>if snd.class == "Shaman" then
 snd.attack("nature screen")
end</script>
									<command></command>
									<packageName></packageName>
									<regex>^scr$</regex>
								</Alias>
								<Alias isActive="no" isFolder="no">
									<name>Flow</name>
									<script>if snd.class == "Shaman" then
if matches[2] == "" then
 snd.attack("nature flow "..snd.target)
else
 snd.attack("nature flow "..matches[2])
end
end</script>
									<command></command>
									<packageName></packageName>
									<regex>^fl(.*)$</regex>
								</Alias>
								<Alias isActive="yes" isFolder="no">
									<name>Thorncoat</name>
									<script>if snd.class == "Shaman" then
if matches[2] == "" then
 snd.attack("nature thorncoat me")
else
 snd.attack("nature thorncoat "..matches[2])
end
end</script>
									<command></command>
									<packageName></packageName>
									<regex>^tco(.*)$</regex>
								</Alias>
							</AliasGroup>
						</AliasGroup>
						<AliasGroup isActive="yes" isFolder="yes">
							<name>Templar</name>
							<script></script>
							<command></command>
							<packageName></packageName>
							<regex></regex>
							<AliasGroup isActive="yes" isFolder="yes">
								<name>Wielding</name>
								<script></script>
								<command></command>
								<packageName></packageName>
								<regex></regex>
								<Alias isActive="yes" isFolder="no">
									<name>wield bashing</name>
									<script>if snd.class == "Templar" then
snd.send("quickwield both longsword shield")
end</script>
									<command></command>
									<packageName></packageName>
									<regex>^wbsh$</regex>
								</Alias>
								<Alias isActive="yes" isFolder="no">
									<name>wield zeal</name>
									<script>if snd.class == "Templar" then
snd.send("quickwield both warhammer")
end</script>
									<command></command>
									<packageName></packageName>
									<regex>^wzl$</regex>
								</Alias>
								<Alias isActive="yes" isFolder="no">
									<name>wield pvp</name>
									<script>if snd.class == "Templar" then
snd.send("quickwield both shortsword shortsword.2")
end</script>
									<command></command>
									<packageName></packageName>
									<regex>^wpvp$</regex>
								</Alias>
								<Alias isActive="yes" isFolder="no">
									<name>wield limbs</name>
									<script>if snd.class == "Templar" then
snd.send("quickwield both mace mace.2")
end</script>
									<command></command>
									<packageName></packageName>
									<regex>^wlb$</regex>
								</Alias>
								<Alias isActive="yes" isFolder="no">
									<name>wield longswords</name>
									<script>if snd.class == "Templar" then
snd.send("quickwield both longsword longsword.2")
end</script>
									<command></command>
									<packageName></packageName>
									<regex>^wls$</regex>
								</Alias>
								<Alias isActive="yes" isFolder="no">
									<name>wield damage</name>
									<script>if snd.class == "Templar" then
snd.send("quickwield both bastard")
end</script>
									<command></command>
									<packageName></packageName>
									<regex>^wdmg$</regex>
								</Alias>
							</AliasGroup>
							<AliasGroup isActive="yes" isFolder="yes">
								<name>Battlefury</name>
								<script></script>
								<command></command>
								<packageName></packageName>
								<regex></regex>
								<Alias isActive="yes" isFolder="no">
									<name>strike</name>
									<script>if snd.class == "Templar" then
snd.attack("strike "..snd.target)
end</script>
									<command></command>
									<packageName></packageName>
									<regex>^stk$</regex>
								</Alias>
								<Alias isActive="yes" isFolder="no">
									<name>duality</name>
									<script>if snd.class == "Templar" then
snd.attack("dsk "..snd.target)
end</script>
									<command></command>
									<packageName></packageName>
									<regex>^dsk$</regex>
								</Alias>
								<Alias isActive="yes" isFolder="no">
									<name>impale</name>
									<script>if snd.class == "Templar" then
if matches[2] == "" then
 snd.attack("impale "..snd.target)
else
 snd.attack("impale "..matches[2])
end
end</script>
									<command></command>
									<packageName></packageName>
									<regex>^imp (.+)$</regex>
								</Alias>
								<Alias isActive="yes" isFolder="no">
									<name>disembowel</name>
									<script>if snd.class == "Templar" then
if matches[2] == "" then
 snd.attack("disembowel "..snd.target)
else
 snd.attack("disembowel "..matches[2])
end
end</script>
									<command></command>
									<packageName></packageName>
									<regex>^db(.*)$</regex>
								</Alias>
								<Alias isActive="yes" isFolder="no">
									<name>cleave</name>
									<script>if snd.class == "Templar" then
if matches[2] == "" then
 snd.attack("cleave "..snd.target)
else
 snd.attack("cleave "..matches[2])
end
end</script>
									<command></command>
									<packageName></packageName>
									<regex>^clv(.*)$</regex>
								</Alias>
								<Alias isActive="yes" isFolder="no">
									<name>lunge</name>
									<script>if matches[2] == "" then
 snd.send("qeb lunge "..snd.target)
else
 snd.send("qeb lunge "..matches[2])
end</script>
									<command></command>
									<packageName></packageName>
									<regex>^ln(.*)$</regex>
								</Alias>
							</AliasGroup>
							<AliasGroup isActive="yes" isFolder="yes">
								<name>Righteousness</name>
								<script></script>
								<command></command>
								<packageName></packageName>
								<regex></regex>
								<Alias isActive="yes" isFolder="no">
									<name>deliver</name>
									<script>if snd.class == "Templar" then
snd.send("qeb get monolith"..snd.sep.."aura deliverance "..matches[2])
end</script>
									<command></command>
									<packageName></packageName>
									<regex>^del (.*)$</regex>
								</Alias>
								<Alias isActive="yes" isFolder="no">
									<name>resurrection</name>
									<script>if snd.class == "Templar" then
snd.toggles.attacking = false
snd.send("qeb aura resurrection "..matches[2])
end</script>
									<command></command>
									<packageName></packageName>
									<regex>^rez (\w+)$</regex>
								</Alias>
								<Alias isActive="yes" isFolder="no">
									<name>pilgrimage</name>
									<script>if snd.class == "Templar" then
snd.toggles.attacking = false
snd.toggles.bashing = false
snd.toggles.fasthunt = false
if snd.have_aff("paresis") then
 snd.send("firstaid elevate paresis")
end
snd.send("undefend")
snd.send("qeb get monolith"..snd.sep.."get monolith"..snd.sep.."aura pilgrimage")
end</script>
									<command></command>
									<packageName></packageName>
									<regex>^pilg$</regex>
								</Alias>
								<Alias isActive="yes" isFolder="no">
									<name>latency</name>
									<script>if snd.class == "Templar" then
snd.toggles.attacking = false
snd.toggles.bashing = false
snd.toggles.fasthunt = false
if snd.have_aff("paresis") then
 snd.send("firstaid elevate paresis")
end
snd.send("undefend")
snd.send("qeb get monolith"..snd.sep.."get monolith"..snd.sep.."aura pilgrimage aura")
end</script>
									<command></command>
									<packageName></packageName>
									<regex>^ltn$</regex>
								</Alias>
							</AliasGroup>
							<AliasGroup isActive="yes" isFolder="yes">
								<name>Affliction Offenses</name>
								<script></script>
								<command></command>
								<packageName></packageName>
								<regex></regex>
								<Alias isActive="yes" isFolder="no">
									<name>straight retri</name>
									<script>if snd.class == "Templar" then
snd.starting_attack()
function snd.attack_function()
	if not snd.waiting.queue then
		local string = "" -- we'll load this with our attack string
		local call = "" -- and this with our affliction call
		-- next, the afflictions we want to give
		local touse = {}
		local tohit = {}
		-- and in case we don't find enough of them
		local extraaff = "sacrifice"
		local vorpal = false -- can we use vorpal?
		if tonumber(gmcp.Char.Vitals.charge_left) &gt;= 140 and tonumber(gmcp.Char.Vitals.charge_right) &gt;= 140 then
			vorpal = true -- yesssssss
		end
		-- set the affs we want to use
			snd.giving = {
			"conviction",
			"crippled",
			"paresis",
			"mental disruption",
			"physical disruption",
			"crippled body",
			--deathblow!
			}
		-- first and foremost, check if we can retri!
		
		if snd.checksomeAffs({"paralysis", "crippled body", "mental disruption","physical disruption" },4) then
			string = "retribution "..snd.target
		else -- if not...
			-- pick affs from the list above
			for i in pairs(snd.giving) do
				-- make sure not to double up paresis and paralysis
				if not snd.checkAff(snd.giving[i]) then
					-- and don't add an aff we've already got in the list!
					if not table.contains(touse, snd.giving[i]) then
						table.insert(touse, snd.giving[i])
					end
				end
			end
			-- now let's convert affs to venoms/empowerments
			for aff in pairs(touse) do
				table.insert(tohit, snd.effects[touse[aff]])
			end
			-- if we didn't find enough stuff to hit with, stick in our filler
			while #tohit &lt; 3 do
				table.insert(tohit, extraaff)
			end
			-- now to decide what attack to use!
			if snd.used.shield then
				string = "raze "..snd.target
			elseif snd.used.rebounding then
				string = "dsk "..snd.target.." blaze "..tohit[1]
				snd.blazing = true
				call = "wt Afflicting "..snd.target..": blaze, "..tohit[1]..snd.sep
			elseif vorpal then
				string = "blade release right vorpal "..snd.target.." "..tohit[1]..snd.sep.."dsk "..snd.target.." "..tohit[3].." "..tohit[2]
				call = "wt Afflicting "..snd.target..": "..tohit[1]..", "..tohit[3]..", "..tohit[2]..snd.sep
			else
				string = "dsk "..snd.target.." "..tohit[2].." "..tohit[1]
				call = "wt Afflicting "..snd.target..": "..tohit[2]..", "..tohit[1]..snd.sep
			end
		end
		-- prepend our affliction call, if we need one
		if snd.toggles.affcalling and not snd.target_gone then
			string = call..string
		end
		-- handle anti-spam and the actual attacking now
		if string ~= snd.last_attack and not snd.waiting.queue then
			snd.last_attack = string
			snd.attack(snd.last_attack)
			snd.waiting.queue = true
			tempTimer(snd.delay(), [[snd.waiting.queue = false]])
		end
	end
end
snd.attack_function()
end</script>
									<command></command>
									<packageName></packageName>
									<regex>^raw$</regex>
								</Alias>
								<Alias isActive="yes" isFolder="no">
									<name>retribution stack</name>
									<script>--Meat and potatoes for 1v1, this is a classic vlock followed by
--retri finisher. Good for whales.
if snd.class == "Templar" then
snd.starting_attack()
function snd.attack_function()
	if not snd.waiting.queue then
		local string = "" -- we'll load this with our attack string
		local call = "" -- and this with our affliction call
		-- next, the afflictions we want to give
		local touse = {}
		local tohit = {}
		-- and in case we don't find enough of them
		local extraaff = "sacrifice"
		-- let's determine how many affs we are away from locking
		local missing = snd.missingAff("stupidity/paresis/anorexia/asthma/slickness", "/")
		local vorpal = false -- can we use vorpal?
		if tonumber(gmcp.Char.Vitals.charge_left) &gt;= 140 and tonumber(gmcp.Char.Vitals.charge_right) &gt;= 140 then
			vorpal = true -- yesssssss
		end
		-- we're going to use a different affliction stack if the target is locked
		if snd.target_locked() then
			snd.giving = {
			"a broken left leg",
			"a broken right leg",
			"crippled",
			"mental disruption",
			"physical disruption",
			"crippled body",
			"sensitivity",
			"clumsiness",
			"weariness",
			}
		else
		-- and this one if they're not
			snd.giving = {
			"conviction",
			"asthma",
			"clumsiness",
			"paresis",
			"crippled",
			"slickness",
			"stupidity",
			"anorexia",
			"mental disruption",
			"physical disruption",
			"crippled body",
			--deathblow!
			"weariness",
			"haemophilia",
			"allergies",
			"sensitivity",
			"vomiting",
			"recklessness",
			"dizziness"
			}
		end
		-- first and foremost, check if we can retri!
		if snd.checksomeAffs({"paralysis", "crippled body", "mental disruption","physical disruption" },4) then
			string = "retribution "..snd.target
		else -- if not...
			-- see if we can lock this round, in any of three possible ways
			if vorpal and #missing == 3 and not snd.used.shield and not snd.used.rebounding then
				touse = missing
			elseif #missing == 2 and not snd.used.shield and not snd.used.rebounding then
				touse = missing
			elseif #missing == 1 and not snd.used.shield then
				touse = missing
			end
			-- any aff we're not using to lock, we'll pick from the list above
			for i in pairs(snd.giving) do
				-- make sure not to double up paresis and paralysis
				if not snd.checkAff(snd.giving[i]) then
					-- and don't add an aff we've already got in the list!
					if not table.contains(touse, snd.giving[i]) then
						table.insert(touse, snd.giving[i])
					end
				end
			end
			-- now let's convert affs to venoms/empowerments
			for aff in pairs(touse) do
				table.insert(tohit, snd.effects[touse[aff]])
			end
			-- if we didn't find enough stuff to hit with, stick in our filler
			while #tohit &lt; 3 do
				table.insert(tohit, extraaff)
			end
			-- now to decide what attack to use!
			if snd.used.shield then
				string = "raze "..snd.target
			elseif snd.used.rebounding then
				string = "dsk "..snd.target.." blaze "..tohit[1]
				snd.blazing = true
				call = "wt Afflicting "..snd.target..": blaze, "..tohit[1]..snd.sep
			elseif vorpal and not snd.target_locked() and #missing &gt; 2 then
				string = "blade release right vorpal "..snd.target.." "..tohit[1]..snd.sep.."dsk "..snd.target.." "..tohit[3].." "..tohit[2]
				call = "wt Afflicting "..snd.target..": "..tohit[1]..", "..tohit[3]..", "..tohit[2]..snd.sep
			else
				string = "dsk "..snd.target.." "..tohit[2].." "..tohit[1]
				call = "wt Afflicting "..snd.target..": "..tohit[2]..", "..tohit[1]..snd.sep
			end
		end
		-- prepend our affliction call, if we need one
		if snd.toggles.affcalling and not snd.target_gone then
			string = call..string
		end
		-- handle anti-spam and the actual attacking now
		if string ~= snd.last_attack and not snd.waiting.queue then
			snd.last_attack = string
			snd.attack(snd.last_attack)
			snd.waiting.queue = true
			tempTimer(snd.delay(), [[snd.waiting.queue = false]])
		end
	end
end
snd.attack_function()
end</script>
									<command></command>
									<packageName></packageName>
									<regex>^ret$</regex>
								</Alias>
								<Alias isActive="yes" isFolder="no">
									<name>magic</name>
									<script>--Meat and potatoes for 1v1, this is a classic vlock followed by
--retri finisher. Good for whales.
if snd.class == "Templar" then
snd.starting_attack()
function snd.attack_function()
	if not snd.waiting.queue then
		local string = "" -- we'll load this with our attack string
		local call = "" -- and this with our affliction call
		-- next, the afflictions we want to give
		local touse = {}
		local tohit = {}
		-- and in case we don't find enough of them
		local extraaff = "sacrifice"
		-- let's determine how many affs we are away from locking
		local missing = snd.missingAff("stupidity/paresis/anorexia/asthma/slickness", "/")
		local vorpal = false -- can we use vorpal?
		if tonumber(gmcp.Char.Vitals.charge_left) &gt;= 140 and tonumber(gmcp.Char.Vitals.charge_right) &gt;= 140 then
			vorpal = true -- yesssssss
		end
		-- we're going to use a different affliction stack if the target is locked
		if snd.target_locked() then
			snd.giving = {
			"a broken left leg",
			"a broken right leg",
			"crippled",
			"mental disruption",
			"physical disruption",
			"crippled body",
			"sensitivity",
			"weariness",
			"clumsiness",
			}
		else
		-- and this one if they're not
			snd.giving = {
			"conviction",
			"asthma",
			"weariness",
			"paresis",
			"crippled",
			"slickness",
			"stupidity",
			"anorexia",
			"mental disruption",
			"physical disruption",
			"crippled body",
			--deathblow!
			"clumsiness",
			"haemophilia",
			"allergies",
			"sensitivity",
			"vomiting",
			"recklessness",
			"dizziness"
			}
		end
		-- first and foremost, check if we can retri!
		if snd.checksomeAffs({"paralysis", "crippled body", "mental disruption","physical disruption" },4) then
			string = "retribution "..snd.target
		else -- if not...
			-- see if we can lock this round, in any of three possible ways
			if vorpal and #missing == 3 and not snd.used.shield and not snd.used.rebounding then
				touse = missing
			elseif #missing == 2 and not snd.used.shield and not snd.used.rebounding then
				touse = missing
			elseif #missing == 1 and not snd.used.shield then
				touse = missing
			end
			-- any aff we're not using to lock, we'll pick from the list above
			for i in pairs(snd.giving) do
				-- make sure not to double up paresis and paralysis
				if not snd.checkAff(snd.giving[i]) then
					-- and don't add an aff we've already got in the list!
					if not table.contains(touse, snd.giving[i]) then
						table.insert(touse, snd.giving[i])
					end
				end
			end
			-- now let's convert affs to venoms/empowerments
			for aff in pairs(touse) do
				table.insert(tohit, snd.effects[touse[aff]])
			end
			-- if we didn't find enough stuff to hit with, stick in our filler
			while #tohit &lt; 3 do
				table.insert(tohit, extraaff)
			end
			-- now to decide what attack to use!
			if snd.used.shield then
				string = "raze "..snd.target
			elseif snd.used.rebounding then
				string = "dsk "..snd.target.." blaze "..tohit[1]
				snd.blazing = true
				call = "wt Afflicting "..snd.target..": blaze, "..tohit[1]..snd.sep
			elseif vorpal and not snd.target_locked() and #missing &gt; 2 then
				string = "blade release right vorpal "..snd.target.." "..tohit[1]..snd.sep.."dsk "..snd.target.." "..tohit[3].." "..tohit[2]
				call = "wt Afflicting "..snd.target..": "..tohit[1]..", "..tohit[3]..", "..tohit[2]..snd.sep
			else
				string = "dsk "..snd.target.." "..tohit[2].." "..tohit[1]
				call = "wt Afflicting "..snd.target..": "..tohit[2]..", "..tohit[1]..snd.sep
			end
		end
		-- prepend our affliction call, if we need one
		if snd.toggles.affcalling and not snd.target_gone then
			string = call..string
		end
		-- handle anti-spam and the actual attacking now
		if string ~= snd.last_attack and not snd.waiting.queue then
			snd.last_attack = string
			snd.attack(snd.last_attack)
			snd.waiting.queue = true
			tempTimer(snd.delay(), [[snd.waiting.queue = false]])
		end
	end
end
snd.attack_function()
end</script>
									<command></command>
									<packageName></packageName>
									<regex>^mg$</regex>
								</Alias>
								<Alias isActive="yes" isFolder="no">
									<name>legs</name>
									<script>if snd.class == "Templar" then
snd.starting_attack()
function snd.attack_function()
	if not snd.waiting.queue then
		local string = "" -- we'll load this with our attack string
		local call = "" -- and this with our affliction call
		-- next, the afflictions we want to give
		local touse = {}
		local tohit = {}
		-- and in case we don't find enough of them
		local extraaff = "hemorrhage"
		local iceblast = false
		if tonumber(gmcp.Char.Vitals.charge_left) &gt;= 100 and tonumber(gmcp.Char.Vitals.charge_right) &gt;= 100 then
			iceblast = true
		end
		-- set the affs we want to use
			snd.giving = {
			"a broken right leg",
			"a broken left leg",
			"a broken right arm",
			"a broken left arm",
			"stupidity",
			"mental disruption",
			"anorexia",
			"slickness",
			"asthma",
			"paresis",
			"crippled",
			"physical disruption",
			}
			
		-- pick affs from the list above
		for i in pairs(snd.giving) do
			-- make sure not to double up paresis and paralysis
			if not snd.checkAff(snd.giving[i]) then
				-- and don't add an aff we've already got in the list!
				if not table.contains(touse, snd.giving[i]) then
					table.insert(touse, snd.giving[i])
				end
			end
		end
			
		-- first and foremost, check if we can retri!
		if snd.checkAff("paralysis") and snd.checkAff("crippled body") and snd.checkAff("mental disruption") and snd.checkAff("physical disruption") then
			string = "retribution "..snd.target
		elseif snd.target_impaled then
			string = "disembowel "..snd.target
		elseif snd.proned() and not snd.checkAff("impaled") then
			string = "penance "..snd.target..snd.sep.."impale "..snd.target
			if iceblast then
				string = "blade release left iceblast "..snd.target..snd.sep.."blade release right iceblast "..snd.target..snd.sep..string
			end
		else 
			-- now let's convert affs to venoms/empowerments
			for aff in pairs(touse) do
				table.insert(tohit, snd.effects[touse[aff]])
			end
			-- if we didn't find enough stuff to hit with, stick in our filler
			while #tohit &lt; 3 do
				table.insert(tohit, extraaff)
			end
			-- now to decide what attack to use!
			if snd.used.shield then
				string = "raze "..snd.target
			elseif snd.used.rebounding then
				string = "razestrike "..snd.target.." "..tohit[1]
				snd.blazing = true
				call = "wt Afflicting "..snd.target..": Blaze, "..tohit[1]..snd.sep
			elseif iceblast then
				string = "blade release right iceblast "..snd.target..snd.sep.."blade release left iceblast "..snd.target..snd.sep.."dsk "..snd.target.." "..tohit[2].." "..tohit[1]
				call = "wt Afflicting "..snd.target..": "..tohit[2]..", "..tohit[1]..snd.sep
			else
				string = "dsk "..snd.target.." "..tohit[2].." "..tohit[1]
				call = "wt Afflicting "..snd.target..": "..tohit[2]..", "..tohit[1]..snd.sep
			end
		end
		-- prepend our affliction call, if we need one
		if snd.toggles.affcalling and not snd.target_gone then
			string = call..string
		end
		-- handle anti-spam and the actual attacking now
		if string ~= snd.last_attack and not snd.waiting.queue then
			snd.last_attack = string
			snd.attack(snd.last_attack)
			snd.waiting.queue = true
			tempTimer(snd.delay(), [[snd.waiting.queue = false]])
		end
	end
end
snd.attack_function()
end</script>
									<command></command>
									<packageName></packageName>
									<regex>^lgs$</regex>
								</Alias>
								<Alias isActive="yes" isFolder="no">
									<name>mouse mode</name>
									<script>if snd.class == "Templar" then
snd.starting_attack()
function snd.attack_function()
	if not snd.waiting.queue then
		local string = "" -- we'll load this with our attack string
		local call = "" -- and this with our affliction call
		-- next, the afflictions we want to give
		local touse = {}
		local tohit = {}
		-- and in case we don't find enough of them
		local extraaff = "sacrifice"
		local vorpal = false -- can we use vorpal?
		if tonumber(gmcp.Char.Vitals.charge_left) &gt;= 140 and tonumber(gmcp.Char.Vitals.charge_right) &gt;= 140 then
			vorpal = true -- yesssssss
		end
		-- set the affs we want to use
			snd.giving = {
      "sight",
      "paresis",
      "clumsiness",
      "asthma",
      "sensitivity",
      "vomiting",
      "allergies",
      "haemophilia",
      "slickness",
      --"anorexia",
      --"stupidity",
      --"recklessness",
      --"weariness",
      --"dizziness",
      --"voyria",
      }
		-- first and foremost, check if we can disembowel!
		if snd.target_impaled then
			string = "disembowel "..snd.target
		-- otherwise, see if we can impale
		elseif not snd.checkAff("impaled") and snd.proned() and snd.checkAff("sensitivity") and not snd.checkAff("thighlock") and not snd.checkAff("armpitlock") and not snd.checkAff("necklock") then
			if vorpal then
				string = "blade release left crescent "..snd.target..snd.sep.."blade release right crescent "..snd.target..snd.sep.."penance "..snd.target..snd.sep.."impale "..snd.target
			else
				string = "penance "..snd.target..snd.sep.."impale "..snd.target
			end
		else -- if not...
			-- pick affs from the list above
			for i in pairs(snd.giving) do
				-- make sure not to double up paresis and paralysis
				if not snd.checkAff(snd.giving[i]) then
					-- and don't add an aff we've already got in the list!
					if not table.contains(touse, snd.giving[i]) then
						table.insert(touse, snd.giving[i])
					end
				end
			end
			-- now let's convert affs to venoms/empowerments
			for aff in pairs(touse) do
				table.insert(tohit, snd.effects[touse[aff]])
			end
			-- if we didn't find enough stuff to hit with, stick in our filler
			while #tohit &lt; 3 do
				table.insert(tohit, extraaff)
			end
			-- now to decide what attack to use!
			if snd.used.shield then
				string = "raze "..snd.target
			elseif snd.used.rebounding then
				string = "dsk "..snd.target.." blaze "..tohit[1]
				snd.blazing = true
				call = "wt Afflicting "..snd.target..": blaze, "..tohit[1]..snd.sep
			elseif vorpal then
				string = "blade release right vorpal "..snd.target.." "..tohit[1]..snd.sep.."dsk "..snd.target.." "..tohit[3].." "..tohit[2]
				call = "wt Afflicting "..snd.target..": "..tohit[1]..", "..tohit[3]..", "..tohit[2]..snd.sep
			else
				string = "dsk "..snd.target.." "..tohit[2].." "..tohit[1]
				call = "wt Afflicting "..snd.target..": "..tohit[2]..", "..tohit[1]..snd.sep
			end
		end
		-- prepend our affliction call, if we need one
		if snd.toggles.affcalling and not snd.target_gone then
			string = call..string
		end
		-- handle anti-spam and the actual attacking now
		if string ~= snd.last_attack and not snd.waiting.queue then
			snd.last_attack = string
			snd.attack(snd.last_attack)
			snd.waiting.queue = true
			tempTimer(snd.delay(), [[snd.waiting.queue = false]])
		end
	end
end
snd.attack_function()
end</script>
									<command></command>
									<packageName></packageName>
									<regex>^ms$</regex>
								</Alias>
								<Alias isActive="yes" isFolder="no">
									<name>impale mode</name>
									<script>if snd.class == "Templar" then
snd.starting_attack()
function snd.attack_function()
	if not snd.waiting.queue then
		local string = "" -- we'll load this with our attack string
		local call = "" -- and this with our affliction call
		local physcount = 0
		for aff in pairs(snd.physical_affs) do
			if table.contains(snd.target_has, snd.physical_affs[aff]) then
				physcount = physcount + 1
			end
		end
		-- next, the afflictions we want to give
		local touse = {}
		local tohit = {}
		-- and in case we don't find enough of them
		local extraaff = "sacrifice"
		local vorpal = false -- can we use vorpal?
		if tonumber(gmcp.Char.Vitals.charge_left) &gt;= 140 and tonumber(gmcp.Char.Vitals.charge_right) &gt;= 140 then
			vorpal = true -- yesssssss
		end
		-- set the affs we want to use
			snd.giving = {
      "paresis",
      "clumsiness",
      "asthma",
      "sensitivity",
      "vomiting",
      "allergies",
      "haemophilia",
      "slickness",
      "a broken left leg",
      "a broken right leg",
      --"anorexia",
      --"stupidity",
      --"recklessness",
      --"weariness",
      --"dizziness",
      --"voyria",
      }
		-- first and foremost, check if we can disembowel!
		if snd.target_impaled then
			string = "disembowel "..snd.target
		-- otherwise, see if we can impale
		elseif not snd.checkAff("impaled") and snd.proned() and snd.checkAff("sensitivity") and physcount &gt;= 4 and vorpal then
			string = "blade release left crescent "..snd.target..snd.sep.."blade release right crescent "..snd.target..snd.sep.."penance "..snd.target..snd.sep.."impale "..snd.target
		else -- if not...
			-- pick affs from the list above
			for i in pairs(snd.giving) do
				-- make sure not to double up paresis and paralysis
				if not snd.checkAff(snd.giving[i]) then
					-- and don't add an aff we've already got in the list!
					if not table.contains(touse, snd.giving[i]) then
						table.insert(touse, snd.giving[i])
					end
				end
			end
			-- now let's convert affs to venoms/empowerments
			for aff in pairs(touse) do
				table.insert(tohit, snd.effects[touse[aff]])
			end
			-- if we didn't find enough stuff to hit with, stick in our filler
			while #tohit &lt; 3 do
				table.insert(tohit, extraaff)
			end
			-- now to decide what attack to use!
			if snd.used.shield then
				string = "raze "..snd.target
			elseif snd.used.rebounding then
				string = "dsk "..snd.target.." blaze "..tohit[1]
				snd.blazing = true
				call = "wt Afflicting "..snd.target..": blaze, "..tohit[1]..snd.sep
			elseif vorpal then
				string = "blade release right vorpal "..snd.target.." "..tohit[1]..snd.sep.."dsk "..snd.target.." "..tohit[3].." "..tohit[2]
				call = "wt Afflicting "..snd.target..": "..tohit[1]..", "..tohit[3]..", "..tohit[2]..snd.sep
			else
				string = "dsk "..snd.target.." "..tohit[2].." "..tohit[1]
				call = "wt Afflicting "..snd.target..": "..tohit[2]..", "..tohit[1]..snd.sep
			end
		end
		-- prepend our affliction call, if we need one
		if snd.toggles.affcalling and not snd.target_gone then
			string = call..string
		end
		-- handle anti-spam and the actual attacking now
		if string ~= snd.last_attack and not snd.waiting.queue then
			snd.last_attack = string
			snd.attack(snd.last_attack)
			snd.waiting.queue = true
			tempTimer(snd.delay(), [[snd.waiting.queue = false]])
		end
	end
end
snd.attack_function()
end</script>
									<command></command>
									<packageName></packageName>
									<regex>^im$</regex>
								</Alias>
								<Alias isActive="yes" isFolder="no">
									<name>newbie mode</name>
									<script>if snd.class == "Templar" then
snd.starting_attack()
function snd.attack_function()
	if not snd.waiting.queue then
		local string = "" -- we'll load this with our attack string
		local call = "" -- and this with our affliction call
		-- next, the afflictions we want to give
		local touse = {}
		local tohit = {}
		-- and in case we don't find enough of them
		local extraaff = "sacrifice"
		-- set the affs we want to use
			snd.giving = {
      "sight",
      "paresis",
      "clumsiness",
      "asthma",
      "sensitivity",
      "vomiting",
      "allergies",
      "haemophilia",
      "slickness",
      --"anorexia",
      --"stupidity",
      --"recklessness",
      --"weariness",
      --"dizziness",
      --"voyria",
      }
		-- first and foremost, check if we can disembowel!
		if snd.target_impaled then
			string = "disembowel "..snd.target
		-- otherwise, see if we can impale
		elseif not snd.checkAff("impaled") and snd.proned() and not snd.checkAff("thighlock") and not snd.checkAff("armpitlock") and not snd.checkAff("necklock") then
			string = "impale "..snd.target
		else -- if not...
			-- pick affs from the list above
			for i in pairs(snd.giving) do
				-- make sure not to double up paresis and paralysis
				if not snd.checkAff(snd.giving[i]) then
					-- and don't add an aff we've already got in the list!
					if not table.contains(touse, snd.giving[i]) then
						table.insert(touse, snd.giving[i])
					end
				end
			end
			-- now let's convert affs to venoms/empowerments
			for aff in pairs(touse) do
				table.insert(tohit, snd.effects[touse[aff]])
			end
			-- if we didn't find enough stuff to hit with, stick in our filler
			while #tohit &lt; 3 do
				table.insert(tohit, extraaff)
			end
			-- now to decide what attack to use!
			if snd.used.shield then
				string = "raze "..snd.target
			elseif snd.used.rebounding then
				string = "razestrike "..snd.target.." "..tohit[1]
				call = "wt Afflicting "..snd.target..": "..tohit[1]..snd.sep
			else
				string = "dsk "..snd.target.." "..tohit[2].." "..tohit[1]
				call = "wt Afflicting "..snd.target..": "..tohit[2]..", "..tohit[1]..snd.sep
			end
		end
		-- prepend our affliction call, if we need one
		if snd.toggles.affcalling and not snd.target_gone then
			string = call..string
		end
		-- handle anti-spam and the actual attacking now
		if string ~= snd.last_attack and not snd.waiting.queue then
			snd.last_attack = string
			snd.attack(snd.last_attack)
			snd.waiting.queue = true
			tempTimer(snd.delay(), [[snd.waiting.queue = false]])
		end
	end
end
snd.attack_function()
end</script>
									<command></command>
									<packageName></packageName>
									<regex>^newb$</regex>
								</Alias>
							</AliasGroup>
							<AliasGroup isActive="yes" isFolder="yes">
								<name>Damage Offenses</name>
								<script></script>
								<command></command>
								<packageName></packageName>
								<regex></regex>
								<Alias isActive="yes" isFolder="no">
									<name>zeal</name>
									<script>if snd.class == "Templar" then
snd.starting_attack()
function snd.attack_function()
	if not snd.waiting.queue then
		local string = ""
		if snd.used.rebounding or snd.used.shield then
			string = "raze "..snd.target
		elseif tonumber(gmcp.Char.Vitals.charge_left) &gt;= 140 then
			string = "blade release left crescent "..snd.target..snd.sep.."empower left with sacrifice"..snd.sep.."empower left with sacrifice"..snd.sep.."empower left with sacrifice"..snd.sep.."empower left with sacrifice"..snd.sep.."zeal "..snd.target
		else
			string = "empower left with sacrifice"..snd.sep.."empower left with sacrifice"..snd.sep.."empower left with sacrifice"..snd.sep.."empower left with stun"..snd.sep.."zeal "..snd.target
		end
		if string ~= snd.last_attack and not snd.waiting.queue then
			snd.last_attack = string
			snd.attack(snd.last_attack)
			snd.waiting.queue = true
			tempTimer(snd.delay(), [[snd.waiting.queue = false]])
		end
	end
end
snd.attack_function()
end</script>
									<command></command>
									<packageName></packageName>
									<regex>^zeal$</regex>
								</Alias>
								<Alias isActive="yes" isFolder="no">
									<name>damage</name>
									<script>if snd.class == "Templar" then
snd.starting_attack()
function snd.attack_function()
	if not snd.waiting.queue then
		local string = ""
		if snd.used.rebounding or snd.used.shield then
			string = "raze "..snd.target
		elseif tonumber(gmcp.Char.Vitals.charge_left) &gt;= 140 then
			string = "blade release left crescent "..snd.target..snd.sep.."empower left with sacrifice"..snd.sep.."empower left with sacrifice"..snd.sep.."empower left with sacrifice"..snd.sep.."empower left with sacrifice"..snd.sep.."zeal "..snd.target
		else
			string = "dsw "..snd.target.." sacrifice sacrifice"
		end
		if string ~= snd.last_attack and not snd.waiting.queue then
			snd.last_attack = string
			snd.attack(snd.last_attack)
			snd.waiting.queue = true
			tempTimer(snd.delay(), [[snd.waiting.queue = false]])
		end
	end
end
snd.attack_function()
end</script>
									<command></command>
									<packageName></packageName>
									<regex>^dmg$</regex>
								</Alias>
								<Alias isActive="yes" isFolder="no">
									<name>mana burn</name>
									<script>if snd.class == "Templar" then
snd.starting_attack()
function snd.attack_function()
 if not snd.waiting.queue then
  local string = ""
  if snd.used.rebounding or snd.used.shield then
--   snd.send("razestrike "..snd.target.." blaze")
   string = "raze "..snd.target
  elseif tonumber(gmcp.Char.Vitals.charge_left) &gt;= 140 and tonumber(gmcp.Char.Vitals.charge_right) &gt;= 140 then
   string = "empower right with combustion"..snd.sep.."blade release right vorpal "..snd.target..snd.sep.."dsk "..snd.target.." combustion combustion"
  else
   string = "dsk "..snd.target.." combustion combustion"
  end
  if string ~= snd.last_attack and not snd.waiting.queue then
   snd.last_attack = string
   snd.attack(snd.last_attack)
   snd.waiting.queue = true
   tempTimer(snd.delay(), [[snd.waiting.queue = false]])
  end
 end
end
snd.attack_function()
--snd.send("engage "..snd.target)
end</script>
									<command></command>
									<packageName></packageName>
									<regex>^mana$</regex>
								</Alias>
								<Alias isActive="yes" isFolder="no">
									<name>iceblast</name>
									<script>if snd.class == "Templar" then
snd.starting_attack()
function snd.attack_function()
 if not snd.waiting.queue then
  local string = ""
  if snd.used.rebounding and snd.used.shield then
--   snd.send("razestrike "..snd.target.." blaze")
   string = "raze "..snd.target
  elseif snd.used.rebounding or snd.used.shield then
   string = "razestrike "..snd.target.." sacrifice"
  else
   string = "blade release left iceblast "..snd.target..snd.sep.."empower left with sacrifice"..snd.sep.."empower left with sacrifice"..snd.sep.."empower left with sacrifice"..snd.sep.."empower left with sacrifice"..snd.sep.."zeal "..snd.target
  end
  if string ~= snd.last_attack and not snd.waiting.queue then
   snd.last_attack = string
   snd.attack(snd.last_attack)
   snd.waiting.queue = true
   tempTimer(snd.delay(), [[snd.waiting.queue = false]])
  end
 end
end
snd.attack_function()
--snd.send("engage "..snd.target)
end</script>
									<command></command>
									<packageName></packageName>
									<regex>^ib$</regex>
								</Alias>
								<Alias isActive="yes" isFolder="no">
									<name>Group Impale</name>
									<script>-- Hello. This route requires a warhammer, as well as you setting up what type of weapon you're using.
-- There is a variable in the script 'PvP variables', which you need to change to be whatever weapon you use.
-- We need this so we can switch to a warhammer/switch back at will without having to put in lots of
-- weird checks to see what kind of weapon you use. Templar has many!

if snd.class == "Templar" then
snd.starting_attack()
function snd.attack_function()
	if not snd.waiting.queue then
		local string = "" -- we'll load this with our attack string
		local call = "" -- and this with our affliction call
		-- next, the afflictions we want to give
		local touse = {}
		local tohit = {}
		-- and in case we don't find enough of them
		local extraaff = "sacrifice"
		local vorpal = false -- can we use vorpal? set to false until we check
		if tonumber(gmcp.Char.Vitals.charge_left) &gt;= 140 and tonumber(gmcp.Char.Vitals.charge_right) &gt;= 140 then
			vorpal = true -- yesssssss
		end
		local wield = ""
		if not string.find(gmcp.Char.Vitals.wield_right, snd.templar_weapon_type) then wield = "relax grip".."quickwield both 1."..snd.templar_weapon_type.." 2."..snd.templar_weapon_type.."grip" end
		-- set the affs we want to use
     snd.giving = {
      "sight",
		  "paresis",
	    "sensitivity",
			"asthma",
      "vomiting",
      "allergies",
      "slickness",
			"a broken left leg",
			"a broken right leg",
      "anorexia",
      "stupidity",
      }
		-- first and foremost, check if we can disembowel!
		if snd.target_impaled then
			string = "disembowel "..snd.target
		-- otherwise, see if we can impale
		elseif not snd.checkAff("impaled") and snd.proned() and snd.checkAff("sensitivity") then
				string = "penance "..snd.target..snd.sep.."impale "..snd.target
		elseif snd.checkAff("impaled") and snd.checkAff("sensitivity") then
				string = "penance "..snd.target..snd.sep.."relax grip"..snd.sep.."quickwield both warhammer"..snd.sep.."grip"..snd.sep.."dsw "..snd.target.." sacrifice sacrifice"		
		else -- if not...
			-- pick affs from the list above
			for i in pairs(snd.giving) do
				-- make sure not to double up paresis and paralysis
				if not snd.checkAff(snd.giving[i]) then
					-- and don't add an aff we've already got in the list!
					if not table.contains(touse, snd.giving[i]) then
						table.insert(touse, snd.giving[i])
					end
				end
			end
			if string.find(string, "impale") or string.find(string, "dsw") and vorpal then -- Do we have vorpal and are we finishing someone off?
					string = "blade release left crescent "..snd.target..snd.sep.."blade release right crescent "..snd.target..snd.sep..string
			end
			-- now let's convert affs to venoms/empowerments
			for aff in pairs(touse) do
				table.insert(tohit, snd.effects[touse[aff]])
			end
			-- if we didn't find enough stuff to hit with, stick in our filler
			while #tohit &lt; 3 do
				table.insert(tohit, extraaff)
			end
			-- now to decide what attack to use!
			if snd.used.shield then
				string = "raze "..snd.target
			elseif snd.used.rebounding then
				string = "rsk "..snd.target.." "..tohit[1]
				call = "wt Afflicting "..snd.target..": "..tohit[1]..snd.sep
			else
				string = "dsk "..snd.target.." "..tohit[2].." "..tohit[1]
				call = "wt Afflicting "..snd.target..": "..tohit[2]..", "..tohit[1]..snd.sep
			end
		end
		
		--check if we need to re-wield our speed weps
		if wield ~= "" then string = wield..snd.sep..string end
		
		-- prepend our affliction call, if we need one
		if snd.toggles.affcalling and not snd.target_gone then
			string = call..string
		end
		-- handle anti-spam and the actual attacking now
		if string ~= snd.last_attack and not snd.waiting.queue then
			snd.last_attack = string
			snd.attack(snd.last_attack)
			snd.waiting.queue = true
			tempTimer(snd.delay(), [[snd.waiting.queue = false]])
		end
	end
end
snd.attack_function()
end</script>
									<command></command>
									<packageName></packageName>
									<regex>^gimp$</regex>
								</Alias>
								<Alias isActive="yes" isFolder="no">
									<name>Group Aff - Requires 1 Luminary</name>
									<script>-- Hello. This route requires a warhammer, as well as you setting up what type of weapon you're using.
-- There is a variable in the script 'PvP variables', which you need to change to be whatever weapon you use.
-- We need this so we can switch to a warhammer/switch back at will without having to put in lots of
-- weird checks to see what kind of weapon you use. Templar has many!

if snd.class == "Templar" then
snd.starting_attack()
function snd.attack_function()
	if not snd.waiting.queue then
		local string = "" -- we'll load this with our attack string
		local call = "" -- and this with our affliction call
		-- next, the afflictions we want to give
		local touse = {}
		local tohit = {}
		-- and in case we don't find enough of them
		local extraaff = "sacrifice"
		local vorpal = false -- can we use vorpal? set to false until we check
		if tonumber(gmcp.Char.Vitals.charge_left) &gt;= 140 and tonumber(gmcp.Char.Vitals.charge_right) &gt;= 140 then
			vorpal = true -- yesssssss
		end
		local wield = ""
		if not string.find(gmcp.Char.Vitals.wield_right, snd.templar_weapon_type) then wield = "relax grip".."quickwield both 1."..snd.templar_weapon_type.." 2."..snd.templar_weapon_type.."grip" end
		-- set the affs we want to use
		snd.giving = {
			"paresis",
			"asthma",
			"weariness",
			"sight",
			"sensitivity",
			"slickness",
			"anorexia",
			"stupidity",
			"a broken left leg",
			"a broken right leg",
			"clumsiness",
			"haemophilia",
			"allergies",
			"vomiting",
			"recklessness",
			"dizziness"
      }
		-- Since we're with a Luminary, we're banking on them using the Penance proc on overwhelm to instantly kill someone. Deleted!
		if snd.checkAff("transfixed") and snd.checkAff("sensitivity") then
			if  snd.health_percent &lt;= 75 then
				string = "penance "..snd.target
			else -- Okay, their health isn't low enough to kill them straight out. Let's just make sure we hit them some more.
				string = "penance "..snd.target..snd.sep.."relax grip"..snd.sep.."quickwield both warhammer"..snd.sep.."grip"..snd.sep.."dsw "..snd.target.." sacrifice sacrifice"		
				if vorpal then
					string = "blade release left crescent "..snd.target..snd.sep.."blade release right crescent "..snd.target..snd.sep..string
				end
			end
		else -- if not...
			-- pick affs from the list above
			for i in pairs(snd.giving) do
				-- make sure not to double up paresis and paralysis
				if not snd.checkAff(snd.giving[i]) then
					-- and don't add an aff we've already got in the list!
					if not table.contains(touse, snd.giving[i]) then
						table.insert(touse, snd.giving[i])
					end
				end
			end
			-- now let's convert affs to venoms/empowerments
			for aff in pairs(touse) do
				table.insert(tohit, snd.effects[touse[aff]])
			end
			-- if we didn't find enough stuff to hit with, stick in our filler
			while #tohit &lt; 3 do
				table.insert(tohit, extraaff)
			end
			-- now to decide what attack to use!
			if snd.used.shield then
				string = "raze "..snd.target
			elseif snd.used.rebounding then
				string = "rsk "..snd.target.." "..tohit[1]
				call = "wt Afflicting "..snd.target..": "..tohit[1]..snd.sep
			else
				string = "dsk "..snd.target.." "..tohit[2].." "..tohit[1]
				call = "wt Afflicting "..snd.target..": "..tohit[2]..", "..tohit[1]..snd.sep
			end
		end
		
		string = "qa "..snd.target..snd.sep..string 
		
		-- prepend our affliction call, if we need one
		if snd.toggles.affcalling and not snd.target_gone then
			string = call..string
		end
		-- handle anti-spam and the actual attacking now
		if string ~= snd.last_attack and not snd.waiting.queue then
			snd.last_attack = string
			snd.attack(snd.last_attack)
			snd.waiting.queue = true
			tempTimer(snd.delay(), [[snd.waiting.queue = false]])
		end
	end
end
snd.attack_function()
end</script>
									<command></command>
									<packageName></packageName>
									<regex>^gaff$</regex>
								</Alias>
							</AliasGroup>
							<AliasGroup isActive="yes" isFolder="yes">
								<name>Limb Offenses</name>
								<script></script>
								<command></command>
								<packageName></packageName>
								<regex></regex>
								<Alias isActive="yes" isFolder="no">
									<name>limbs</name>
									<script>if snd.class == "Templar" then
snd.starting_attack()
function snd.attack_function()
 if not snd.waiting.queue then
  local string = ""
  -- list what limbs to hit
  local limbs = {"left leg", "right leg", "left arm", "right arm"}
	-- check if we can rupture now!
  local rupture = "none"
	local vorpal = false
	local call = ""
  for limb in ipairs(limbs) do
   if snd.limb_bruising[limbs[limb]] &gt;= 3 then
    rupture = limbs[limb]
   end
  end
  if rupture ~= "none" and not snd.used.shield then -- if rupture is go
   string = "penance "..snd.target..snd.sep.."rupture "..snd.target.." "..rupture
  else -- can't rupture, needs logic
   -- but can we vorpal tho!
   if tonumber(gmcp.Char.Vitals.charge_left) &gt;= 140 and tonumber(gmcp.Char.Vitals.charge_right) &gt;= 140 then
    vorpal = true
	 else
	  vorpal = false
	 end
	 -- pick what limbs to hit
	 left = "nothing"
	 right = "nothing"
	 if snd.target_prone then -- focus legs hard on prone
	  if snd.parried_limb == "right leg" then
	   right = "left leg"
	  elseif snd.parried_limb == "left leg" then
	   right = "right leg"
	  else
	   right = "right leg"
		 left = "left leg"
	  end
	 else -- target not prone
	  for limb in pairs(limbs) do
		 -- ignore last parried, last hit, and any limbs being resto'd
	   if limbs[limb] ~= snd.parried_limb and limbs[limb] ~= snd.last_hit_limb and (limbs[limb] ~= snd.resto_limb or snd.limb_dmg[limbs[limb]] &gt;= 33.33) then
		  -- if it's a leg that's about to break
	    if (limbs[limb] == "left leg" or limbs[limb] == "right leg") and (snd.limb_dmg[limbs[limb]]+snd.limb_dmg_done &gt;= 33.3) then
		   -- if we have vorpal and can use it with impunity
			 if vorpal and not snd.used.shield and not snd.used.rebounding and snd.resto_limb ~= "none" then
			  if right == "nothing" then
			   right = limbs[limb]
			  elseif left == "nothing" then
			   left = limbs[limb]
			  end
				-- otherwise leave the prepped leg alone!
		   end
			 -- if it's not a leg about to break, go for it
		  elseif right == "nothing" then
		   right = limbs[limb]
	    elseif left == "nothing" and limbs[limb] ~= right then
	     left = limbs[limb]
		  end
	   end
	  end
	 end
	 if left == "nothing" then -- we only found one limb to hit
	  left = right -- double up!
	 end
	 -- end limb picking logic
	 -- on to attacking logic!
	 if snd.used.shield and snd.used.rebounding then -- baddie is turtling
    string = "raze "..snd.target -- raze has static balance cost
	 elseif snd.used.shield or snd.used.rebounding then
    string = "target nothing with left"..snd.sep.."target "..right.." with right"..snd.sep.."razestrike "..snd.target.." trauma"
	 -- here's the tricky part, we're checking for optimal conditions
	 -- we need vorpal ready, a leg about to break, and resto poultice off balance
	 elseif vorpal and snd.resto_limb ~= "none" and (snd.limb_dmg[left]+snd.limb_dmg_done &gt;= 33.3) and snd.limb_dmg[left] &lt; 33.33 and string.find(left, "leg") then
	  if left == "left leg" then right = "right leg" end
	  if left == "right leg" then right = "left leg" end
	  string = "target "..left.." with left"..snd.sep.."target "..right.." with right"..snd.sep.."empower right with stun"..snd.sep.."blade release right vorpal "..snd.target..snd.sep.."dsk "..snd.target.." trauma numbing"
	 -- we could also meet the same conditions, but on the other limb we picked
	 elseif vorpal and snd.resto_limb ~= "none" and (snd.limb_dmg[right]+snd.limb_dmg_done &gt;= 33.3) and snd.limb_dmg[right] &lt; 33.33 and string.find(right, "leg") then
	  if right == "left leg" then left = "right leg" end
	  if right == "right leg" then left = "left leg" end
	  string = "target "..left.." with left"..snd.sep.."target "..right.." with right"..snd.sep.."empower right with stun"..snd.sep.."blade release right vorpal "..snd.target..snd.sep.."dsk "..snd.target.." numbing trauma"
	 else -- we can't do a Big Bad Break, run normal logic
	  string = "target "..left.." with left"..snd.sep.."target "..right.." with right"..snd.sep.."dsk "..snd.target.." trauma trauma"
   end
	end
  if string ~= snd.last_attack and not snd.waiting.queue then
   snd.last_attack = string
   snd.attack(snd.last_attack)
   snd.waiting.queue = true
   tempTimer(snd.delay(), [[snd.waiting.queue = false]])
  end
 end
end
snd.attack_function()
snd.send("engage "..snd.target)
end</script>
									<command></command>
									<packageName></packageName>
									<regex>^limbs$</regex>
								</Alias>
								<Alias isActive="yes" isFolder="no">
									<name>ice blast limbs</name>
									<script>if snd.class == "Templar" then
snd.starting_attack()
function snd.attack_function()
 if not snd.waiting.queue then
  local string = ""
  local limbs = {"left leg", "right leg", "left arm", "right arm"}
  local left = "nothing"
  local right = "nothing"
	local vorpal = false
	local rupture = "none"
	if tonumber(gmcp.Char.Vitals.charge_left) &gt;= 140 and tonumber(gmcp.Char.Vitals.charge_right) &gt;= 140 then
	 vorpal = true
	else
	 vorpal = false
	end
	if table.contains(snd.target_has, "frozen") then
	 if snd.limb_dmg["left leg"] &gt;= snd.limb_dmg["right leg"] then
	  left = "left leg"
		right = "left leg"
	 else
	  left = "right leg"
		right = "right leg"
	 end
	else
	 for limb in pairs(limbs) do
	  if limbs[limb] ~= snd.parried_limb and limbs[limb] ~= snd.last_hit_limb then
	   if right == "nothing" then
	    right = limbs[limb]
	   elseif left == "nothing" and limbs[limb] ~= right and limbs[limb] ~= snd.last_hit_limb then
	    left = limbs[limb]
		 end
	  end
	 end
	end
  for limb in ipairs(limbs) do
	 if snd.limb_bruising[limbs[limb]] &gt;= 3 then
	  rupture = limbs[limb]
	 end
  end
  if snd.used.shield and snd.used.rebounding then
   string = "raze "..snd.target
	elseif snd.used.shield then
	 string = "target nothing with left"..snd.sep.."target "..left.." with right"..snd.sep.."razestrike "..snd.target.." trauma"
  elseif rupture ~= "none" then
	 string = "penance "..snd.target..snd.sep.."rupture "..snd.target.." "..rupture
	elseif snd.used.rebounding then
   string = "target nothing with left"..snd.sep.."target "..left.." with right"..snd.sep.."razestrike "..snd.target.." trauma"
	elseif tonumber(gmcp.Char.Vitals.charge_left) &gt;= 140 and not table.contains(snd.target_has, "frozen") then
	  string = "target "..left.." with left"..snd.sep.."target "..right.." with right"..snd.sep.."blade release left iceblast "..snd.target..snd.sep.."dsk "..snd.target.." trauma trauma"
	elseif tonumber(gmcp.Char.Vitals.charge_right) &gt;= 140 and not table.contains(snd.target_has, "frozen") then
	  string = "target "..left.." with left"..snd.sep.."target "..right.." with right"..snd.sep.."blade release right iceblast "..snd.target..snd.sep.."dsk "..snd.target.." trauma trauma"
	elseif vorpal then
	 string = "target "..left.." with left"..snd.sep.."target "..right.." with right"..snd.sep.."empower right with stun"..snd.sep.."blade release right vorpal "..snd.target..snd.sep.."dsk "..snd.target.." trauma trauma"
	else
   string = "target "..left.." with left"..snd.sep.."target "..right.." with right"..snd.sep.."dsk "..snd.target.." trauma trauma"
  end
  if string ~= snd.last_attack and not snd.waiting.queue then
   snd.last_attack = string
   snd.attack(snd.last_attack)
   snd.waiting.queue = true
   tempTimer(snd.delay(), [[snd.waiting.queue = false]])
  end
 end
end
snd.attack_function()
snd.send("engage "..snd.target)
end</script>
									<command></command>
									<packageName></packageName>
									<regex>^lb$</regex>
								</Alias>
							</AliasGroup>
							<Alias isActive="yes" isFolder="no">
								<name>charge</name>
								<script>if snd.class == "Templar" then
echo(gmcp.Char.Vitals.charge_right)
end</script>
								<command></command>
								<packageName></packageName>
								<regex>^bc$</regex>
							</Alias>
						</AliasGroup>
						<AliasGroup isActive="yes" isFolder="yes">
							<name>Zealot</name>
							<script></script>
							<command></command>
							<packageName></packageName>
							<regex></regex>
							<AliasGroup isActive="yes" isFolder="yes">
								<name>Affliction Offenses</name>
								<script></script>
								<command></command>
								<packageName></packageName>
								<regex></regex>
								<Alias isActive="yes" isFolder="no">
									<name>Immolation support</name>
									<script>if snd.class == "Zealot" then
  snd.starting_attack()

  function snd.attack_function()
    -- This checks for a present Firefist defense. This is used later during a Firefist check.
    local firefist = false
    if snd.defenses.def_firefist.state == "deffed" then
      firefist = true
    end
    -- This checks for a present Zenith defense. It is used later in Zenith/Flow Handling.
    local zenith = false
    if snd.defenses.def_zenith.state == "deffed" then
      zenith = true
    end
    -- This is a failsafe to take crispy off of a target that has cured ablaze.
    if snd.checkAff("crispy") then
      if not snd.checkaff("ablaze") then
        snd.target_cured("crispy")
      end
    end
    -- This uses crispy to check if they're at the right flame level.
    local immolation_ready = false
    if snd.checkAff("ablaze") then
      if snd.checkAff("crispy") then
        immolation_ready = true
      end
    end
    -- In this mode, we're going to only rely on Purification. It's built to support a quick Immolate.
    if not snd.waiting.queue then
      if snd.used.shield then
        string = "touch hammer " .. snd.target
        -- OK, so if immolation is ready... we should cast it!	
      elseif immolation_ready then
        string = "enact immolation " .. snd.target
        -- OK, so if immolation isn't ready, what next? Heatspear!
      elseif not snd.checkAff("heatspear") and snd.checkAff("ablaze") then
        string = "enact heatspear " .. snd.target
        -- OK, what if they have heatspear? Are they ablaze?! Quicken!
        --	elseif snd.checkAff("ablaze") then
        --		string = "enact quicken "..snd.target
        -- OK, so we've done all of this, but they don't have ablaze! Ez fix..
      else
        string = "enact scorch " .. snd.target
      end
      -- Flow Handling/Zenith Handling
      -- In this mode, we only Flow when we have Zenith, otherwise we are casting.
      -- This means our Flow handling IS our Zenith handling.
      -- Our Flow attacks should always be punches to take advantage of Firefist.
      if zenith then
        if snd.used.shield then
          string = "touch hammer " .. snd.target
        elseif snd.parried_limb ~= "torso" then
          string = "flow " .. snd.target .. " clawtwist clawtwist" .. snd.sep .. string
        elseif snd.parried_limb ~= "left arm" then
          string = "flow " .. snd.target .. " pummel left pummel left" .. snd.sep .. string
        else
          string = "flow " .. snd.target .. " pummel right pummel right" .. snd.sep .. string
        end
      end
      -- Hackles handling
      -- In this mode, we really just hackles whipburst.
      -- We will Whipburst even in lieu of a Flow combo.
      -- First, we should check if we have hackles balance.	
      if gmcp.Char.Vitals.ability_bal == "1" then
        string = "hackles " .. snd.target .. " whipburst " .. snd.sep .. string
      end
    end
    -- We want to turn on firefist if we have Zenith up, because that's the only time we're punching and it needs to count.
    if not firefist then
      if snd.checksomeAffs({"ablaze", "heatspear"}, 2) then
        if zenith then
          string = "enact firefist"
        else
          string = "enact zenith" .. snd.sep .. string
        end
      end
    end
    -- I am leaving this failsafe in... below checks if we're g2g with the immolate button.
    if immolation_ready then
      string = "enact immolation " .. snd.target
    end
    if string ~= snd.last_attack and not snd.waiting.queue then
      snd.last_attack = string
      snd.attack(snd.last_attack)
      snd.waiting.queue = true
      tempTimer(snd.delay(), [[snd.waiting.queue = false]])
    end
  end

  snd.attack_function()
end</script>
									<command></command>
									<packageName></packageName>
									<regex>^fire$</regex>
								</Alias>
								<Alias isActive="yes" isFolder="no">
									<name>check</name>
									<script>if snd.class == "Zealot" then
snd.starting_attack()
function snd.attack_function()
 -- This is a list of limbs we'll be hitting.
 
-- This checks for a present Firefist defense. This is used later during a Firefist check.
local firefist = false
  if snd.defenses.def_firefist.state == "deffed" then
        firefist = true
      end
 
-- This checks for a present Zenith defense. It is used later in Zenith Handling.
local zenith = false
  if snd.defenses.def_zenith.state == "deffed" then
        zenith = true
      end
 
-- Zeal Attacks Table
local zeal_attacks = {
["left arm"] = "pummel left ",
["right arm"] = "pummel right ",
["left leg"] = "wanekick left ",
["right leg"] = "wanekick right ",
torso = "clawtwist",
head = "sunkick" }


-- This uses crispy to check if they're at the right flame level.
local immolation_ready = false
    if snd.checkAff("ablaze") then
        if snd.checkAff("crispy") then
            immolation_ready = true
            end
        end
       
 
 -- This is a list of limbs we'll be hitting.
local limbs = {"torso", "left leg", "right leg", "left arm", "right arm"}
 -- This will pick two limbs to hit - they will be used to write a flow attack with left being ATK1 and right being ATK2.
local left = "nothing"
local right = "nothing"
local string = ""
    if snd.target_prone then -- Go for legs on a prone.
        if snd.parried_limb == "right leg" then
            right = "left leg"
        elseif snd.parried_limb == "left leg" then
            right = "right leg"
        else
            right = "right leg"
            left = "left leg"
        end
    else -- Target isn't prone...
      for limb in pairs(limbs) do
         -- Ignore last parried, last hit, and any limbs being resto'd
       if limbs[limb] ~= snd.parried_limb and limbs[limb] ~= snd.last_hit_limb and (limbs[limb] ~= snd.resto_limb or snd.limb_dmg[limbs[limb]] &gt;= 33.33) then
          -- If it's a leg that's about to break
        if (limbs[limb] == "left leg" or limbs[limb] == "right leg") and (snd.limb_dmg[limbs[limb]]+snd.limb_dmg_done &gt;= 33.3) then
           -- If we have zenith up, lets get in there.
             if zenith and not snd.used.shield and snd.resto_limb ~= "none" then
              if right == "nothing" then
               right = limbs[limb]
              elseif left == "nothing" then
               left = limbs[limb]
              end
                -- Otherwise, no zenith? Leave the prepped leg alone!
           end
             -- But, if it's not a leg about to break, go for it!
          elseif right == "nothing" then
           right = limbs[limb]
        elseif left == "nothing" and limbs[limb] ~= right then
         left = limbs[limb]
          end
       end
      end
     end
     if left == "nothing" then -- We only found one limb to hit!
      left = right -- double up!
     end
     -- This is the end of the limb picking logic.

-- Flow Handling - I will need to update this to use the ATK1/ATK2 lineup.
-- Consider writing a check for different combos on firefist?
 
if not snd.waiting.queue then
-- Alright, first we need to be sure we can hit them. Is shield up?
  if snd.used.shield then
    string = "touch hammer "..snd.target
-- We're checking for optimal conditions...
-- We need them off resto balance..
-- We need Zenith up, a torso about to break, a left leg about to break, and resto poultice off balance..
elseif zenith and snd.resto_limb ~="none" and (snd.limb_dmg["torso"]+snd.limb_dmg_done &gt;= 33.3) and snd.limb_dmg["torso"] &lt;= 33.33 and string.find(left, "torso") and snd.resto_limb ~= "left leg" and (snd.limb_dmg[left]+snd.limb_dmg_done &gt;= 33.3) and snd.limb_dmg[left] &lt;= 33.33 and string.find(left, "leg") then
    string = "flow "..snd.target.." wanekick left direblow"
-- No? How about all of that, but a right leg?!
elseif zenith and snd.resto_limb ~="none" and (snd.limb_dmg["torso"]+snd.limb_dmg_done &gt;= 33.3) and snd.limb_dmg["torso"] &lt; 33.33 and string.find(left, "torso") and snd.resto_limb ~= "right leg" and (snd.limb_dmg[right]+snd.limb_dmg_done &gt;= 33.3) and snd.limb_dmg[right] &lt; 33.33 and string.find(right, "leg") then
    string = "flow "..snd.target.." wanekick right direblow"
-- We need Zenith up, a leg about to break, and resto poultice off balance
elseif zenith and not snd.checkAff("heatspear") and snd.resto_limb ~= "none" and (snd.limb_dmg[left]+snd.limb_dmg_done &gt;= 33.3) and snd.limb_dmg[left] &lt; 33.33 and string.find(left, "leg") then
      string = "flow "..snd.target.." wanekick left twinpress"
-- Could we also meet the same conditions, but on the other limb we picked?
elseif zenith and not snd.checkAff("heatspear") and snd.resto_limb ~= "none" and (snd.limb_dmg[right]+snd.limb_dmg_done &gt;= 33.3) and snd.limb_dmg[right] &lt; 33.33 and string.find(right, "leg") then
      string = "flow "..snd.target.." wanekick right twinpress"
elseif zenith and snd.resto_limb ~= "none" and (snd.limb_dmg[left]+snd.limb_dmg_done &gt;= 33.3) and snd.limb_dmg[left] &lt; 33.33 and string.find(left, "leg") then
      string = "flow "..snd.target.." wanekick left dislocate left leg"
-- Could we also meet the same conditions, but on the other limb we picked?
elseif zenith and snd.resto_limb ~= "none" and (snd.limb_dmg[right]+snd.limb_dmg_done &gt;= 33.3) and snd.limb_dmg[right] &lt; 33.33 and string.find(right, "leg") then
      string = "flow "..snd.target.." wanekick right dislocate right leg"
else

string = "flow "..snd.target.." "..zeal_attacks[left].." "..zeal_attacks[right]

end
 
-- Hackles handling
-- Jawcrack &gt; Whipburst ... considering changing to rive to maximize the bleeding.
-- Prioritize Whipburst during firefist?
-- First, we should check if we have hackles balance.    
    if gmcp.Char.Vitals.ability_bal == "1" and not snd.used.shield then
-- Cool! What are we doing with it? Let's figure that out and put it before our flow string!
-- First, let's see if there's a welt and we have zenith...
        if zenith and string.find(snd.welt_ready, "arm") and (snd.limb_dmg[snd.welt_ready]+6.5 &gt;= 33.3) and snd.limb_dmg[snd.welt_ready] &lt;= 33.33 and not snd.checkAff("sore wrist") then
            string = "hackles "..snd.target.." wristlash "..snd.sep..string
        elseif zenith and string.find(snd.welt_ready, "leg") and (snd.limb_dmg[snd.welt_ready]+6.5 &gt;= 33.3) and snd.limb_dmg[snd.welt_ready] &lt;= 33.33 and not snd.checkAff("sore ankle") then    
            string = "hackles "..snd.target.." anklepin "..snd.sep..string
--There isn't? OK...
        elseif not snd.checkAff("blurry vision") then
            string = "hackles "..snd.target.." jawcrack "..snd.sep..string
        elseif snd.checkAff("heatspear") then
            string = "hackles "..snd.target.." whipburst "..snd.sep..string
        elseif not snd.checkAff("sore ankle") then
            string = "hackles "..snd.target.." anklepin "..snd.sep..string
        elseif not snd.checkAff("sore wrist") then
            string = "hackles "..snd.target.." wristlash "..snd.sep..string
        else
            string = "hackles "..snd.target.." whipburst "..snd.sep..string
        end
    end
 
   
-- Firefist handling
if not firefist then
    if zenith then
        string = "enact firefist"..snd.sep..string
        end
    end
   
-- Zenith handling
-- Immolation &gt; Pyromania &gt; Infernal &gt; Heatspear &gt; Quicken &gt; Scorch
-- handle pyromania with a variable?
-- use the limb state checker from templar limbs script for infernal check?
-- handle heatspear as an aff..
-- check if immolate not possible ... if not, quicken or scorch
 
 
if zenith then
  if snd.checkAff("heatspear") then
    string = string..snd.sep.."enact quicken "..snd.target
    elseif not snd.checkAff("heatspear") and not snd.checkAff("ablaze") and firefist then
        string = string..snd.sep.."enact heatspear "..snd.target
    elseif not snd.checkAff("heatspear") and snd.checkAff("ablaze") then
        string = string..snd.sep.."enact heatspear "..snd.target
    elseif snd.limb_status["torso"] ~= "healed" and snd.checkAff("ablaze") then
        string = string..snd.sep.."enact quicken "..snd.target
    else
        string = string..snd.sep.."enact scorch "..snd.target
    end
end
 
if not snd.checkAff("indifference") and not zenith and not snd.checkAff("heatspear") and not snd.used.shield then
    string = "psi dull "..snd.target
end
 
if not zenith then
    if not rising_sun then
        string = "enact zenith"
    end
end
 
if immolation_ready then
    string = "enact immolation "..snd.target
end
 
  if string ~= snd.last_attack and not snd.waiting.queue then
   snd.last_attack = string
   snd.attack(snd.last_attack)
   snd.waiting.queue = true
   tempTimer(snd.delay(), [[snd.waiting.queue = false]])
  end
 end
end
snd.attack_function()
end


 
</script>
									<command></command>
									<packageName></packageName>
									<regex>^checking$</regex>
								</Alias>
							</AliasGroup>
							<AliasGroup isActive="yes" isFolder="yes">
								<name>Damage Offenses</name>
								<script></script>
								<command></command>
								<packageName></packageName>
								<regex></regex>
								<Alias isActive="yes" isFolder="no">
									<name>Bleed/Damage</name>
									<script>if snd.class == "Zealot" then
  snd.starting_attack()

  function snd.attack_function()
    local firefist = false
    if snd.defenses.def_firefist.state == "deffed" then
      firefist = true
    end
    local zenith = false
    if snd.defenses.def_zenith.state == "deffed" then
      zenith = true
    end
    if snd.checkAff("crispy") then
      if not snd.checkaff("ablaze") then
        snd.target_cured("crispy")
      end
    end
    local immolation_ready = false
    if snd.checkAff("ablaze") then
      if snd.checkAff("crispy") then
        immolation_ready = true
      end
    end
    -- Flow Handling
    -- Consider writing a check for different combos on firefist?
    if not snd.waiting.queue then
      if snd.used.shield then
        string = "touch hammer " .. snd.target
      elseif snd.parried_limb ~= "torso" then
        string = "flow " .. snd.target .. " clawtwist clawtwist"
      elseif snd.parried_limb ~= "head" then
        if not snd.checkAff("crippled_throat") then
          string = "flow " .. snd.target .. " edgekick heelrush head"
        else
          string = "flow " .. snd.target .. " sunkick heelrush head"
        end
      elseif snd.parried_limb ~= "left leg" or snd.parried_limb ~= "right leg" then
        string = "flow " .. snd.target .. " wanekick left wanekick right"
      elseif snd.parried_limb ~= "left leg" and snd.parried_limb == "right leg" then
        string = "flow " .. snd.target .. " wanekick left wanekick left"
      elseif snd.parried_limb ~= "right leg" and snd.parried_limb == "left leg" then
        string = "flow " .. snd.target .. " wanekick right wanekick right"
      else
        if snd.parried_limb ~= "left arm" then
          string = "flow " .. snd.target .. " pummel left pummel left"
        end
      end
      -- Hackles handling
      -- Jawcrack &gt; Rive ...  rive to maximize the bleeding.
      -- Prioritize Whipburst during firefist?
      -- First, we should check if we have hackles balance.	
      if gmcp.Char.Vitals.ability_bal == "1" then
        -- Cool! What are we doing with it? Let's figure that out and put it before our flow string!
        if snd.parried_limb ~= "head" and not snd.checkAff("blurry vision") then
          string = "hackles " .. snd.target .. " jawcrack " .. snd.sep .. string
        else
          string = "hackles " .. snd.target .. " rive " .. snd.sep .. string
        end
      end
      -- Zenith handling
      -- Immolation &gt; Pyromania &gt; Infernal &gt; Heatspear &gt; Quicken &gt; Scorch
      -- handle pyromania with a variable?
      -- use the limb state checker from templar limbs script for infernal check?
      -- handle heatspear as an aff..
      -- check if immolate not possible ... if not, quicken or scorch
      if zenith then
        if not snd.checkAff("heatspear") and snd.checkAff("ablaze") then
          string = string .. snd.sep .. "enact heatspear " .. snd.target
        elseif snd.checkAff("ablaze") then
          string = string .. snd.sep .. "enact quicken " .. snd.target
        else
          string = string .. snd.sep .. "enact scorch " .. snd.target
        end
      end
      if not firefist then
        if snd.checksomeAffs({"ablaze", "heatspear"}, 2) then
          string = "enact firefist"
        end
      end
      if immolation_ready then
        string = "enact immolation " .. snd.target
      end
      if string ~= snd.last_attack and not snd.waiting.queue then
        snd.last_attack = string
        snd.attack(snd.last_attack)
        snd.waiting.queue = true
        tempTimer(snd.delay(), [[snd.waiting.queue = false]])
      end
    end
  end

  snd.attack_function()
end</script>
									<command></command>
									<packageName></packageName>
									<regex>^dmg$</regex>
								</Alias>
							</AliasGroup>
						</AliasGroup>
					</AliasGroup>
					<AliasGroup isActive="yes" isFolder="yes">
						<name>Shadow</name>
						<script></script>
						<command></command>
						<packageName></packageName>
						<regex></regex>
						<AliasGroup isActive="yes" isFolder="yes">
							<name>Archivist</name>
							<script></script>
							<command></command>
							<packageName></packageName>
							<regex></regex>
							<AliasGroup isActive="yes" isFolder="yes">
								<name>Damage Offenses</name>
								<script></script>
								<command></command>
								<packageName></packageName>
								<regex></regex>
								<Alias isActive="yes" isFolder="no">
									<name>damage</name>
									<script>if snd.class == "Archivist" then
snd.starting_attack()
function snd.attack_function()
 local string = ""
 local bioessence = tonumber(gmcp.Char.Vitals.bio) 
 local biostring = "" 

      if bioessence &gt; 1 then
      	biostring = "bio stimulant"..snd.sep
      end


 if not snd.waiting.queue then
  if snd.used.shield then
   	string = "incite fork "..snd.target
	elseif snd.geotrace == false then
    string = "drop " ..snd.my_token.. "" ..snd.sep.. "geo invert" ..snd.sep
	else
		string = "geo impress star"..snd.sep.."incite crux "..snd.target..snd.sep..biostring
  end
  if string ~= snd.last_attack and not snd.waiting.queue then
   snd.last_attack = string
   snd.attack(snd.last_attack)
   snd.waiting.queue = true
   tempTimer(snd.delay(), [[snd.waiting.queue = false]])
  end
 end
end
snd.attack_function()
end</script>
									<command></command>
									<packageName></packageName>
									<regex>^dmg$</regex>
								</Alias>
							</AliasGroup>
							<AliasGroup isActive="yes" isFolder="yes">
								<name>Afflictions</name>
								<script></script>
								<command></command>
								<packageName></packageName>
								<regex></regex>
								<Alias isActive="yes" isFolder="no">
									<name>Not garbo aff route</name>
									<script>if snd.class == "Archivist" then
snd.starting_attack()
function snd.attack_function()
    if not snd.waiting.queue then
			local touse = {}
      local string = "" 
      local biostring = "" 
      local call = "" 
      local bioessence = tonumber(gmcp.Char.Vitals.bio) 
      local physcount = 0
      for aff in pairs(snd.physical_affs) do
          if table.contains(snd.target_has, snd.physical_affs[aff]) then
              physcount = physcount + 1
          end
      end
      local mentcount = 0 
      for aff in pairs(snd.mental_affs) do
          if table.contains(snd.target_has, snd.mental_affs[aff]) then
              mentcount = mentcount + 1
          end
      end

				
			snd.giving = {
			"dizziness",
			"faintness",
			"epilepsy",
			"shyness",
      "laxity",
      "lovers_effect",
      "peace",
      "magnanimity",
      "merciful",
      "masochism",
      "berserking",
      "recklessness",
			
			
			}
			
			snd.mutagen_giving = {
			"addiction",
			"allergies",
			"blisters",
			"lethargy",
			}
	
			for i in pairs(snd.giving) do
				if not snd.checkAff(snd.giving[i]) then
					if not table.contains(touse, snd.giving[i]) then
						table.insert(touse, snd.giving[i])
					end
				end
			end
			
      if snd.used.shield then
      	string = string.."incite fork "..snd.target
			elseif physcount &gt;= 3 and mentcount &gt;= 3 and snd.my_mutagen == true then
         if snd.empowerready == true then
					 string = "empower rafic"..snd.sep.."elicit unravel "..snd.target..snd.sep..biostring
           else
       	   string = "elicit unravel "..snd.target..snd.sep..biostring
          end
        
      elseif not snd.checkAff("mutagen") then
			   	if snd.their_mutagen == false then
          	string = "bio infect "..snd.target.." with 6"..snd.sep
				  end
      elseif physcount &gt;= 1 and mentcount &gt;= 3 then
          if not snd.checkAff("patterns") then
          string = "geo pattern "..snd.target
          elseif snd.checkAff("patterns") and not snd.checkAff("lemniscate") then
          string = "incite lemniscate "..snd.target
          elseif snd.checkAff("patterns") and snd.checkAff("lemniscate") and not snd.checkAff("matrix") then
          string = "geo matrix "..snd.target
          end
      elseif not snd.checksomeAffs({"dementia", "paranoia", "hallucinations"}, 2) and not snd.madnessused then
          --[[if snd.my_incite == "nil" then
						string = "incite hex "..snd.target..snd.sep..biostring]]
					 if snd.empowerready == true then
             string = "empower jhako"..snd.sep.."geo impress swirl"..snd.sep.."elicit madness "..snd.target..snd.sep..biostring
					 else
						string = "geo impress swirl"..snd.sep.."elicit madness "..snd.target..snd.sep..biostring
					 end
      elseif snd.checkAff("faintness") and not snd.checkAff("mental_disruption") then
        string = "geo impress swirl"..snd.sep
      elseif mentcount &gt;=2 and not snd.madnessused  then
        string = "geo impress bloom"..snd.sep
			  --[[  elseif snd.health_percent &lt;= 75 then
				  if not snd.my_impress == "star" then
				  	string = "geo impress star"..snd.sep
				  end]]
				  --string = string.."incite "..snd.shape_attacks[touse[1]].." "..snd.target..snd.sep..biostring

        else 
					string = "geo impress hex"..snd.sep	
			  
				string = string.."geo conjoin"..snd.sep.."incite "..snd.shape_attacks[touse[1]].." "..snd.target..snd.sep..biostring
      end

      if snd.toggles.affcalling and not snd.target_gone then
          string = call..string
					call = "wt Afflicting "..snd.target..": "..string
      end

      if string ~= snd.last_attack and not snd.waiting.queue then
          snd.last_attack = string
          snd.attack(snd.last_attack)
          snd.waiting.queue = true
          tempTimer(snd.delay(), [[snd.waiting.queue = false]])
      end
 
    end
end
snd.attack_function()
end</script>
									<command></command>
									<packageName></packageName>
									<regex>asgfafdgfadgafdgasdfsdfasdf</regex>
								</Alias>
							</AliasGroup>
							<Alias isActive="yes" isFolder="no">
								<name>Not garbo aff route</name>
								<script>if snd.class == "Archivist" then
snd.starting_attack()
function snd.attack_function()
    if not snd.waiting.queue then
			local touse = {}
      local string = "" 
      local biostring = "" 
      local call = ""
      local impress = "" 
      local attack = ""
      local bioessence = tonumber(gmcp.Char.Vitals.bio) 
      local physcount = 0
      for aff in pairs(snd.physical_affs) do
          if table.contains(snd.target_has, snd.physical_affs[aff]) then
              physcount = physcount + 1
          end
      end
      local mentcount = 0 
      for aff in pairs(snd.mental_affs) do
          if table.contains(snd.target_has, snd.mental_affs[aff]) then
              mentcount = mentcount + 1
          end
      end
		
			snd.giving = {

			"dizziness",
			"faintness",
			"epilepsy",
			"shyness",
      "laxity",
      "lovers_effect",
      "peace",
      "magnanimity",
      "merciful",
      "masochism",
      "berserking",
      "recklessness",
			
			
			}
			
			snd.mutagen_giving = {
			"addiction",
			"allergies",
			"blisters",
			"lethargy",
			}
	
        local shapecount = 0
     for aff in pairs(snd.giving) do
        if table.contains(snd.target_has, snd.giving[aff]) then
          shapecount = shapecount + 1
        end
      end		
			for i in pairs(snd.giving) do
				if not snd.checkAff(snd.giving[i]) then
					if not table.contains(touse, snd.giving[i]) then
						table.insert(touse, snd.giving[i])
					end
				end
			end
			
      if mentcount &gt;=2 and not snd.madnessused  then
          impress = "geo impress bloom"..snd.sep
        elseif snd.checkAff("faintness") and not snd.checkAff("mental_disruption") then
          impress = "geo impress swirl"..snd.sep

			  elseif snd.health_percent &lt;= 75 then
				  if not snd.my_impress == "star" then
				  	impress = "geo impress star"..snd.sep
				  end
        else
          impress = "geo impress hex"
        end
          
          
      if snd.used.shield then
      	attack = string.."incite fork "..snd.target
			elseif physcount &gt;= 3 and mentcount &gt;= 3 and snd.my_mutagen == true then
      send("bio stimulant")
      send("bio steroid")
         if snd.empowerready == true then
					 attack = "empower rafic"..snd.sep.."elicit unravel "..snd.target..snd.sep..biostring
           else
       	   attack = "elicit unravel "..snd.target..snd.sep..biostring
          end
        
      elseif not snd.checkAff("mutagen") then
			   	
          	attack = "bio infect "..snd.target.." with 6"..snd.sep
				  

           elseif not snd.checksomeAffs({"dementia", "paranoia", "hallucinations"}, 2) and not snd.madnessused then
          --[[if snd.my_incite == "nil" then
						string = "incite hex "..snd.target..snd.sep..biostring]]

						attack = "elicit madness "..snd.target..snd.sep..biostring
					
     
      elseif physcount &gt; 1 or mentcount &gt;= 3 then
          if not snd.checkAff("patterns") then
          attack = "geo pattern "..snd.target..snd.sep
          elseif mentcount &gt;=5 and not snd.syncopateused then
          attack = "elicit syncopate "..snd.target..snd.sep
           elseif snd.checksomeAffs({"lethargy", "addiction", "blisters", "allergies"}, 1) and mentcount &gt; 3 and bioessence &gt;= 1 and not snd.checkAff("growth") then
          attack = "bio growth "..snd.target..snd.sep
          elseif snd.checkAff("patterns") and mentcount &lt; 8 and not snd.checkAff("lemniscate")  then
          attack = "incite lemniscate "..snd.target..snd.sep
          elseif snd.checkAff("patterns") and snd.checkAff("lemniscate")  and mentcount &lt; 8 and not snd.checkAff("matrix") then
          attack = "geo matrix "..snd.target..snd.sep
          end

      
          elseif snd.conjoinready then
				  attack = "geo conjoin"..snd.sep.."incite "..snd.shape_attacks[touse[1]].." "..snd.target
            elseif shapecount &gt; 8 then
               attack = "empower yi"..snd.sep.."elicit affliction "..snd.target
					   else
         attack = "incite "..snd.shape_attacks[touse[1]].." "..snd.target
            
			  end
				string = impress..snd.sep..attack..snd.sep..biostring
      

      if snd.toggles.affcalling and not snd.target_gone then
          string = call..string
					call = "wt Afflicting "..snd.target..": "..string
      end

      if string ~= snd.last_attack and not snd.waiting.queue then
          snd.last_attack = string
          snd.attack(snd.last_attack)
          snd.waiting.queue = true
          tempTimer(snd.delay(), [[snd.waiting.queue = false]])
      end
 
    end
end
snd.attack_function()
end</script>
								<command></command>
								<packageName></packageName>
								<regex>^aff$</regex>
							</Alias>
						</AliasGroup>
						<AliasGroup isActive="yes" isFolder="yes">
							<name>Carnifex</name>
							<script></script>
							<command></command>
							<packageName></packageName>
							<regex></regex>
							<AliasGroup isActive="yes" isFolder="yes">
								<name>Wielding</name>
								<script></script>
								<command></command>
								<packageName></packageName>
								<regex></regex>
								<Alias isActive="yes" isFolder="no">
									<name>wield bashing</name>
									<script>if snd.class == "Carnifex" then
snd.send("quickwield both greatmaul")
end</script>
									<command></command>
									<packageName></packageName>
									<regex>^wbsh$</regex>
								</Alias>
								<Alias isActive="yes" isFolder="no">
									<name>wield pvp</name>
									<script>if snd.class == "Carnifex" then
snd.send("quickwield both bardiche")
end</script>
									<command></command>
									<packageName></packageName>
									<regex>^wpvp$</regex>
								</Alias>
								<Alias isActive="yes" isFolder="no">
									<name>wield limbs</name>
									<script>if snd.class == "Carnifex" then
snd.send("quickwield both warhammer")
end</script>
									<command></command>
									<packageName></packageName>
									<regex>^wlb$</regex>
								</Alias>
							</AliasGroup>
							<AliasGroup isActive="yes" isFolder="yes">
								<name>Savagery</name>
								<script></script>
								<command></command>
								<packageName></packageName>
								<regex></regex>
								<Alias isActive="yes" isFolder="no">
									<name>impale</name>
									<script>if snd.class == "Carnifex" then
if matches[2] == "" then
 snd.attack("pole skewer "..snd.target)
else
 snd.attack("pole skewer "..matches[2])
end
end</script>
									<command></command>
									<packageName></packageName>
									<regex>^imp(.*)$</regex>
								</Alias>
								<Alias isActive="yes" isFolder="no">
									<name>disembowel</name>
									<script>if snd.class == "Carnifex" then
 snd.attack("pole wrench")
end</script>
									<command></command>
									<packageName></packageName>
									<regex>^db$</regex>
								</Alias>
							</AliasGroup>
							<AliasGroup isActive="yes" isFolder="yes">
								<name>Deathlore</name>
								<script></script>
								<command></command>
								<packageName></packageName>
								<regex></regex>
								<Alias isActive="yes" isFolder="no">
									<name>rez</name>
									<script>if snd.class == "Carnifex" then
snd.toggles.attacking = false
snd.send("qeb soul call "..matches[2])
end</script>
									<command></command>
									<packageName></packageName>
									<regex>^rez (\w+)$</regex>
								</Alias>
							</AliasGroup>
							<AliasGroup isActive="yes" isFolder="yes">
								<name>Warhounds</name>
								<script></script>
								<command></command>
								<packageName></packageName>
								<regex></regex>
							</AliasGroup>
							<AliasGroup isActive="yes" isFolder="yes">
								<name>Affliction Offenses</name>
								<script></script>
								<command></command>
								<packageName></packageName>
								<regex></regex>
								<Alias isActive="yes" isFolder="no">
									<name>venoms only</name>
									<script>if snd.class == "Carnifex" then
snd.giving = {
"paresis",
"clumsiness",
"asthma",
"slickness",
"stupidity",
"anorexia",
"allergies",
--"weariness",
--"haemophilia",
--"sensitivity",
--"vomiting",
--"recklessness",
--"dizziness",
--"voyria",
}
snd.starting_attack()
function snd.attack_function()
 if not snd.waiting.queue then
  local string = ""
  local left = "none"
  local right = "none"
  for i in pairs(snd.giving) do
   if not table.contains(snd.target_has, snd.giving[i]) then
    if right == "none" then
     right = snd.effects[snd.giving[i]]
    elseif left == "none" then
     left = snd.effects[snd.giving[i]]
    end
   end
  end
  if left == "none" then
   left = "epteth"
  end
  if right == "none" then
   right = "epseth"
  end
	x = ""
  if snd.used.rebounding and snd.used.shield then
   string = "raze "..snd.target
  elseif snd.used.rebounding or snd.used.shield then
   string = "pole razehack "..snd.target.." "..right
	 if snd.toggles.affcalling and not snd.target_gone then
	  x = "wt Afflicting "..snd.target..": "..right..snd.sep
	 end
  else
   string = "pole spinslash "..snd.target.." "..left.." "..right
	 if snd.toggles.affcalling and not snd.target_gone then
	  x = "wt Afflicting "..snd.target..": "..left..", "..right..snd.sep
	 end
	end
  if string ~= snd.last_attack and not snd.waiting.queue then
   snd.last_attack = string
   snd.attack(snd.last_attack)
   snd.waiting.queue = true
   tempTimer(snd.delay(), [[snd.waiting.queue = false]])
  end
 end
end
snd.attack_function()
end</script>
									<command></command>
									<packageName></packageName>
									<regex>^vn$</regex>
								</Alias>
								<Alias isActive="yes" isFolder="no">
									<name>affs</name>
									<script>if snd.class == "Carnifex" then
snd.giving = {
"paresis",
"asthma",
"clumsiness",
"slickness",
"stupidity",
"anorexia",
"dizziness",
--"weariness",
--"sensitivity",
--"haemophilia",
--"vomiting",
--"allergies",
--"recklessness",
--"voyria",
}
snd.hound_queue = {
"dizziness",
"berserking",
"weariness",
"impairment",
}
snd.starting_attack()
function snd.attack_function()
 snd.handle_hounds()
 if not snd.waiting.queue then
  local string = ""
  local left = "none"
  local right = "none"
  for i in pairs(snd.giving) do
   if not table.contains(snd.target_has, snd.giving[i]) and snd.giving[i] ~= snd.implant then
    if right == "none" then
     right = snd.effects[snd.giving[i]]
    elseif left == "none" then
     left = snd.effects[snd.giving[i]]
    end
   end
  end
  if left == "none" then
   left = "epseth"
  end
  if right == "none" then
   right = "epseth"
  end
	x = ""
  if snd.used.rebounding and snd.used.shield then
   string = "raze "..snd.target
  elseif snd.used.rebounding or snd.used.shield then
   string = "pole razehack "..snd.target.." "..right
	 if snd.toggles.affcalling and not snd.target_gone then
	  x = "wt Afflicting "..snd.target..": "..right..snd.sep
	 end
  else
	 if snd.target_prone and snd.target_locked() then
	  if table.contains(snd.target_has, "crushed_chest") then
		 string = "hammer pulverize "..snd.target
		else
	   string = "hammer crush "..snd.target.." chest"
		end
	 else
    string = "pole spinslash "..snd.target.." "..left.." "..right
	  if snd.toggles.affcalling and not snd.target_gone then
	   x = "wt Afflicting "..snd.target..": "..left..", "..right..snd.sep
	  end
	 end
	end
	if snd.soul &lt;= 80 and not table.contains(snd.target_has, "soul_disease") then
	 string = string..snd.sep.."soul disease "..snd.target
	elseif snd.soul &lt;= 90 and not table.contains(snd.target_has, "soul_wraith") then
	 string = string..snd.sep.."soul wraith "..snd.target
	elseif #snd.target_has &gt;= 12 and snd.balance.soulpoison then
	 string = string..snd.sep.."soul poison "..snd.target
	elseif snd.soul &lt;= 75 and snd.balance.implant and not table.contains(snd.target_has, "soul_implant") then
	 if snd.target_locked() then
	  string = string..snd.sep.."soul implant "..snd.target.." aconite slike"
	 end
	end
	string = x..string..snd.sep.."hammer throw "..snd.target
  if string ~= snd.last_attack and not snd.waiting.queue then
   snd.last_attack = string
   snd.attack(snd.last_attack)
   snd.waiting.queue = true
   tempTimer(snd.delay(), [[snd.waiting.queue = false]])
  end
 end
end
snd.attack_function()
end</script>
									<command></command>
									<packageName></packageName>
									<regex>^aff$</regex>
								</Alias>
								<Alias isActive="yes" isFolder="no">
									<name>legs</name>
									<script>if snd.class == "Carnifex" then
snd.hound_queue = {
"frozen",
}
snd.starting_attack()
function snd.attack_function()
 snd.handle_hounds()
 if not snd.waiting.queue then
  if snd.used.rebounding or snd.used.shield then
   string = "raze "..snd.target
  elseif snd.target_prone then
   if table.contains(snd.target_has, "crushed_chest") then
	  string = "hammer pulverize "..snd.target
	 else
	  string = "hammer crush "..snd.target.." chest"
	 end
  else
   string = "pole spinslash "..snd.target.." epseth epseth"
  end
	if snd.soul &lt;= 90 then
	 string = string..snd.sep.."soul distort "..snd.target
	end
  if string ~= snd.last_attack and not snd.waiting.queue then
   snd.last_attack = string
   snd.attack(snd.last_attack)
   snd.waiting.queue = true
   tempTimer(snd.delay(), [[snd.waiting.queue = false]])
	end
 end
end
snd.attack_function()
end</script>
									<command></command>
									<packageName></packageName>
									<regex>^lgs$</regex>
								</Alias>
								<Alias isActive="yes" isFolder="no">
									<name>magic</name>
									<script>if snd.class == "Carnifex" then
snd.giving = {
"paresis",
"asthma",
"weariness",
"slickness",
"stupidity",
"anorexia",
"dizziness",
--"clumsiness",
--"sensitivity",
--"haemophilia",
--"vomiting",
--"allergies",
--"recklessness",
--"voyria",
}
snd.hound_queue = {
"stupidity",
"weariness",
"confusion",
}
snd.starting_attack()
function snd.attack_function()
 snd.handle_hounds()
 if not snd.waiting.queue then
  left = "none"
  right = "none"
  for i in pairs(snd.giving) do
   if not table.contains(snd.target_has, snd.giving[i]) and snd.giving[i] ~= snd.implant then
    if right == "none" then
     right = snd.effects[snd.giving[i]]
    elseif left == "none" then
     left = snd.effects[snd.giving[i]]
    end
   end
  end
  if left == "none" then
   left = "epseth"
  end
  if right == "none" then
   right = "epseth"
  end
	x = ""
  if snd.used.rebounding and snd.used.shield then
   string = "raze "..snd.target
  elseif snd.used.rebounding or snd.used.shield then
   string = "pole razehack "..snd.target.." "..right
	 if snd.toggles.affcalling and not snd.target_gone then
	  x = "wt Afflicting "..snd.target..": "..right..snd.sep
	 end
  else
	 if snd.target_prone then
	  if table.contains(snd.target_has, "crushed_chest") then
		 string = "hammer pulverize "..snd.target
		else
	   string = "hammer crush "..snd.target.." chest"
		end
	 else
    string = "pole spinslash "..snd.target.." "..left.." "..right
	  if snd.toggles.affcalling and not snd.target_gone then
	   x = "wt Afflicting "..snd.target..": "..left..", "..right..snd.sep
	  end
	 end
	end
	if snd.soul &lt;= 80 and not table.contains(snd.target_has, "soul_disease") then
	 string = string..snd.sep.."soul disease "..snd.target
	elseif snd.soul &lt;= 90 and not table.contains(snd.target_has, "soul_wraith") then
	 string = string..snd.sep.."soul wraith "..snd.target
	elseif #snd.target_has &gt;= 12 and snd.balance.soulpoison then
	 string = string..snd.sep.."soul poison "..snd.target
	elseif snd.soul &lt;= 75 and snd.balance.implant and not table.contains(snd.target_has, "soul_implant") then
	 if snd.target_locked() and table.contains(snd.target_has, "stupidity") then
	  string = string..snd.sep.."soul implant "..snd.target.." kalmia gecko"
	 end
	elseif snd.soul &lt;= 20 then
	 string = string..snd.sep.."soul sacrifice "..snd.target
	end
	string = x..string
  if string ~= snd.last_attack and not snd.waiting.queue then
   snd.last_attack = string
   snd.attack(snd.last_attack)
   snd.waiting.queue = true
   tempTimer(snd.delay(), [[snd.waiting.queue = false]])
  end
 end
end
snd.attack_function()
end</script>
									<command></command>
									<packageName></packageName>
									<regex>^mg$</regex>
								</Alias>
							</AliasGroup>
							<AliasGroup isActive="yes" isFolder="yes">
								<name>Damage Offenses</name>
								<script></script>
								<command></command>
								<packageName></packageName>
								<regex></regex>
								<Alias isActive="yes" isFolder="no">
									<name>damage</name>
									<script>if snd.class == "Carnifex" then
snd.starting_attack()
function snd.attack_function()
 local string = ""
 if not snd.waiting.queue then
  if snd.used.shield then
		string = "soul erode "..snd.target
  else
   	string = "hammer doublebash "..snd.target
  end
  if string ~= snd.last_attack and not snd.waiting.queue then
   snd.last_attack = string
   snd.attack(snd.last_attack)
   snd.waiting.queue = true
   tempTimer(snd.delay(), [[snd.waiting.queue = false]])
  end
 end
end
snd.attack_function()
end</script>
									<command></command>
									<packageName></packageName>
									<regex>^dmg$</regex>
								</Alias>
							</AliasGroup>
							<AliasGroup isActive="yes" isFolder="yes">
								<name>Limb Offenses</name>
								<script></script>
								<command></command>
								<packageName></packageName>
								<regex></regex>
								<Alias isActive="yes" isFolder="no">
									<name>limbs</name>
									<script>if snd.class == "Carnifex" then
snd.hound_queue = {
"frozen",
}
snd.starting_attack()
function snd.attack_function()
 snd.handle_hounds()
 if not snd.waiting.queue then
  -- list what limbs to hit
  limbs = {"left leg", "right leg", "left arm", "right arm"}
	-- check if we can pulverize now!
  if table.contains(snd.target_has, "crushed_chest") and snd.target_prone then
   string = "hammer pulverize "..snd.target
	-- or if we should set up pulverize...
	elseif snd.target_prone and snd.resto_limb ~= "none" then
	 string = "hammer crush "..snd.target.." chest"
  else -- can't pulverize, needs logic
	 -- pick what limbs to hit
	 left = "nothing"
	 right = "nothing"
	 if snd.target_prone then -- focus legs hard on prone
	  if snd.parried_limb == "right leg" then
	   right = "left leg"
	  elseif snd.parried_limb == "left leg" then
	   right = "right leg"
	  else
	   right = "right leg"
		 left = "left leg"
	  end
	 -- are the legs prepped?
	 elseif snd.limb_dmg["right leg"] &lt; 33.33 and (snd.limb_dmg["right leg"] + 7.41 &gt;= 33.33) and snd.limb_dmg["left leg"] &lt; 33.33 and (snd.limb_dmg["left leg"] + 7.41 &gt;= 33.33) and not snd.used.shield and not snd.used.rebounding then
		 string = "target left leg with left"..snd.sep.."target right leg with right"..snd.sep.."hammer doublebash "..snd.target
	 else -- target not prone, legs not prepped
	  for limb in pairs(limbs) do
		 -- ignore last parried, last hit, and any limbs being resto'd
	   if limbs[limb] ~= snd.parried_limb and limbs[limb] ~= snd.last_hit_limb and (limbs[limb] ~= snd.resto_limb or snd.limb_dmg[limbs[limb]] &gt;= 33.33) then
		  -- if it's a leg that's about to break
	    if (limbs[limb] == "left leg" or limbs[limb] == "right leg") and (snd.limb_dmg[limbs[limb]]+snd.limb_dmg_done &gt;= 33.3) then
		   -- don't do anything!
			 -- if it's not a leg about to break, go for it
		  elseif right == "nothing" then
		   right = limbs[limb]
	    elseif left == "nothing" and limbs[limb] ~= right then
	     left = limbs[limb]
		  end
	   end
	  end
	  if left == "nothing" then -- we only found one limb to hit
	   left = right -- double up!
	  end
	  -- end limb picking logic
	  -- on to attacking logic!
	  if snd.used.shield or snd.used.rebounding then -- baddie is turtling
     string = "raze "..snd.target -- raze has static balance cost
	  else
	   string = "hammer doublebash "..snd.target.." "..left.." "..right
		 if snd.soul &lt;= 80 and not table.contains(snd.target_has, "glasslimb") then
		  string = string..snd.sep.."soul frailty "..snd.target
		 end
    end
	 end
	end
  if string ~= snd.last_attack and not snd.waiting.queue then
   snd.last_attack = string
   snd.attack(snd.last_attack)
   snd.waiting.queue = true
   tempTimer(snd.delay(), [[snd.waiting.queue = false]])
  end
 end
end
snd.attack_function()
end</script>
									<command></command>
									<packageName></packageName>
									<regex>^limbs$</regex>
								</Alias>
								<Alias isActive="yes" isFolder="no">
									<name>legs</name>
									<script>if snd.class == "Carnifex" then
snd.hound_queue = {
"frozen",
}
snd.starting_attack()
function snd.attack_function()
 snd.handle_hounds()
 if not snd.waiting.queue then
  -- list what limbs to hit
  limbs = {"left leg", "right leg", "left arm", "right arm"}
	-- check if we can pulverize now!
  if table.contains(snd.target_has, "crushed_chest") and snd.target_prone then
   string = "hammer pulverize "..snd.target
	-- or if they're prone and staying that way
	elseif snd.target_prone and ((snd.limb_dmg["left leg"] &gt;= 33.33 and snd.limb_dmg["right leg"] &gt;= 33.33) or snd.limb_dmg["left leg"] &gt;= 66.66 or snd.limb_dmg["right leg"] &gt;= 66.66) then
	 -- are they distorted?
	 if table.contains(snd.target_has, "distortion") and snd.soul &lt;= 70 then
	  string = "hammer crush "..snd.target.." chest"
	 -- do we need to raze?
	 elseif snd.used.shield or snd.used.rebounding then
	  string = "raze "..snd.target
	 -- can they parry?
	 else
	  string = "hammer crush "..snd.target.." chest"
	 end
	elseif snd.target_prone then -- at least they're prone
	 if (snd.used.shield or snd.used.rebounding) and not table.contains(snd.target_has, "distortion") then -- bleh!
	  string = "raze "..snd.target
	 else -- make sure they stay down
	  if table.contains(snd.target_has, "frozen") or table.contains(snd.target_has, "distortion") then
		 string = "hammer doublebash "..snd.target.." left leg right leg"
	  elseif snd.parried_limb == "left leg" then
		 string = "hammer doublebash "..snd.target.."right leg right leg"
		elseif snd.parried_limb == "right leg" then
		 string = "hammer doublebash "..snd.target.."left leg left leg"
		else
	   string = "hammer doublebash "..snd.target.." left leg right leg"
		end
	 end
	-- did they apply resto?
	--elseif not snd.used.shield and not snd.used.rebounding and snd.resto_limb ~= "none" then
	-- string = "target nothing with left"..snd.sep.."target nothing with right"..snd.sep.."pole spinslash "..snd.target.." epseth epseth"
  else -- can't pulverize, needs logic
	 -- pick what limbs to hit
	 left = "nothing"
	 right = "nothing"
	 if snd.target_prone then -- focus legs hard on prone
	  if snd.parried_limb == "right leg" then
	   right = "left leg"
	  elseif snd.parried_limb == "left leg" then
	   right = "right leg"
	  else
	   right = "right leg"
		 left = "left leg"
	  end
	 -- are the legs prepped?
	 elseif snd.limb_dmg["right leg"] &lt; 33.33 and (snd.limb_dmg["right leg"] + 7.41 &gt;= 33.33) and snd.limb_dmg["left leg"] &lt; 33.33 and (snd.limb_dmg["left leg"] + 7.41 &gt;= 33.33) and not snd.used.shield and not snd.used.rebounding then
    string = "target left leg with left"..snd.sep.."target right leg with right"..snd.sep.."hammer doublebash "..snd.target
	 else -- target not prone, legs not prepped
	  for limb in pairs(limbs) do
		 -- ignore last parried, last hit, and any limbs being resto'd
	   if limbs[limb] ~= snd.parried_limb and limbs[limb] ~= snd.last_hit_limb and (limbs[limb] ~= snd.resto_limb or snd.limb_dmg[limbs[limb]] &gt;= 33.33) then
		  if right == "nothing" then
		   right = limbs[limb]
	    elseif left == "nothing" and limbs[limb] ~= right then
	     left = limbs[limb]
		  end
	   end
	  end
	  if left == "nothing" then -- we only found one limb to hit
	   left = right -- double up!
	  end
	  -- end limb picking logic
	  -- on to attacking logic!
	  if snd.used.shield or snd.used.rebounding then -- baddie is turtling
     string = "raze "..snd.target -- raze has static balance cost
	  else
	   string = "hammer doublebash "..snd.target.." "..left.." "..right
    end
	 end
	end
	if snd.soul &lt;= 90 and not table.contains(snd.target_has, "soul_wraith") then
	 string = string..snd.sep.."soul wraith "..snd.target
	elseif snd.soul &lt;= 90 then
	 string = string..snd.sep.."soul distort "..snd.target
  elseif snd.soul &lt;= 80 and not table.contains(snd.target_has, "glasslimb") then
   string = string..snd.sep.."soul frailty "..snd.target
  end
  if string ~= snd.last_attack and not snd.waiting.queue then
   snd.last_attack = string
   snd.attack(snd.last_attack)
   snd.waiting.queue = true
   tempTimer(snd.delay(), [[snd.waiting.queue = false]])
  end
 end
end
snd.attack_function()
end</script>
									<command></command>
									<packageName></packageName>
									<regex>^legs$</regex>
								</Alias>
							</AliasGroup>
						</AliasGroup>
						<AliasGroup isActive="yes" isFolder="yes">
							<name>Indorani</name>
							<script></script>
							<command></command>
							<packageName></packageName>
							<regex></regex>
							<AliasGroup isActive="yes" isFolder="yes">
								<name>Damage Offenses</name>
								<script></script>
								<command></command>
								<packageName></packageName>
								<regex></regex>
								<Alias isActive="yes" isFolder="no">
									<name>damage</name>
									<script>if snd.class == "Indorani" then
snd.starting_attack()
function snd.attack_function()
 local string = ""
 if not snd.waiting.queue then
  if snd.used.shield then
		string = "touch hammer "..snd.target
  else
   	string = "flick bonedagger "..snd.target
  end
  if string ~= snd.last_attack and not snd.waiting.queue then
   snd.last_attack = string
   snd.attack(snd.last_attack)
   snd.waiting.queue = true
   tempTimer(snd.delay(), [[snd.waiting.queue = false]])
  end
 end
end
snd.attack_function()
end</script>
									<command></command>
									<packageName></packageName>
									<regex>^dmg$</regex>
								</Alias>
							</AliasGroup>
							<AliasGroup isActive="yes" isFolder="yes">
								<name>Afflictions</name>
								<script></script>
								<command></command>
								<packageName></packageName>
								<regex></regex>
								<Alias isActive="yes" isFolder="no">
									<name>Group Affliction</name>
									<script>if snd.class == "Indorani" then
snd.giving_sun = {
"paresis",
"asthma",
"sensitivity",
"clumsiness",
"vomiting",
"lethargy",
}
snd.giving_moon = {
		"impatience",
		"stupidity",
		"confusion",
		"recklessness",	
		"anorexia",
		"epilepsy",
}
snd.starting_attack()

function snd.attack_function()
 
 local string = ""
 local sun = "none"
 local moon = "none"
 
 if not snd.waiting.queue then
  if snd.used.shield then
		string = "touch hammer "..snd.target
	elseif snd.need_leech_aura == true then
		string = "leech "..snd.target
	else
	  if snd.balance.sun then
   		for i in pairs(snd.giving_sun) do
	  		if not snd.checkAff(snd.giving_sun[i]) and sun == "none" then
	   			sun = snd.giving_sun[i]
	  		end
	 		end
		end
		if snd.balance.moon then
			for i in pairs(snd.giving_moon) do
	  		if not snd.checkAff(snd.giving_moon[i]) and moon == "none" then
	   			moon = snd.giving_moon[i]
	  		end
	 		end
		end
		if hasSkill("Imprint") then
			if sun ~= "none" and moon ~= "none" then
				string = string.."outc blank as sun"..snd.sep.."outc blank as moon"..snd.sep.."fling sun "..sun.." and moon "..moon..snd.target..snd.sep
 			end
		else
			if hasSkill("Sun") then
				string = string.."outc sun"..snd.sep.."fling sun "..sun..snd.target..snd.sep
			end
  	end
	end
  if string ~= snd.last_attack and not snd.waiting.queue then
   snd.last_attack = string
   snd.attack(snd.last_attack)
   snd.waiting.queue = true
   tempTimer(snd.delay(), [[snd.waiting.queue = false]])
  end
 end
end
snd.attack_function()
end</script>
									<command></command>
									<packageName></packageName>
									<regex>^aff$</regex>
								</Alias>
							</AliasGroup>
						</AliasGroup>
						<AliasGroup isActive="yes" isFolder="yes">
							<name>Teradrim</name>
							<script>--If checking for sand in room use the following 

-- table.contains(gmcp.Room.Info.details, "sand")</script>
							<command></command>
							<packageName></packageName>
							<regex></regex>
							<AliasGroup isActive="yes" isFolder="yes">
								<name>Damage Offenses</name>
								<script></script>
								<command></command>
								<packageName></packageName>
								<regex></regex>
								<Alias isActive="yes" isFolder="no">
									<name>damage</name>
									<script>if snd.class == "Teradrim" then
snd.starting_attack()
function snd.attack_function()
 local sandstorm = gmcp.Char.Vitals.sandstorm -- not used but useful for building
 local string = ""
 if not snd.waiting.queue then
 	if snd.balance.sand == false then
 		string = "sand flood"
	elseif snd.used.shield then
		string = "sand slice "..snd.target
  else
   	string = "earth batter "..snd.target
  end
  if string ~= snd.last_attack and not snd.waiting.queue then
   snd.last_attack = string
   snd.attack(snd.last_attack)
   snd.waiting.queue = true
   tempTimer(snd.delay(), [[snd.waiting.queue = false]])
  end
 end
end
snd.attack_function()
end</script>
									<command></command>
									<packageName></packageName>
									<regex>^dmg$</regex>
								</Alias>
							</AliasGroup>
							<AliasGroup isActive="yes" isFolder="yes">
								<name>Afflictions</name>
								<script></script>
								<command></command>
								<packageName></packageName>
								<regex></regex>
								<Alias isActive="yes" isFolder="no">
									<name>Group Mode</name>
									<script>if snd.class == "Teradrim" then
snd.starting_attack()
function snd.attack_function()
 local sandstorm = gmcp.Char.Vitals.sandstorm -- not used but useful for building
 local string = ""
 if not snd.waiting.queue then
 	if snd.balance.sand == false then
 		string = "sand flood"
	elseif snd.used.shield then
		string = "sand slice "..snd.target
	elseif not snd.checkAff("sandrot") then
		string = "sand curse "..snd.target
	elseif not snd.checksomeAffs({"left_arm_broken", "right_arm_broken", "left_leg_broken", "right_leg_broken"},1) then
		string = "sand scourge "..snd.target
  else
   	string = "earth batter "..snd.target
  end
  if string ~= snd.last_attack and not snd.waiting.queue then
   snd.last_attack = string
   snd.attack(snd.last_attack)
   snd.waiting.queue = true
   tempTimer(snd.delay(), [[snd.waiting.queue = false]])
  end
 end
end
snd.attack_function()
end</script>
									<command></command>
									<packageName></packageName>
									<regex>^aff$</regex>
								</Alias>
							</AliasGroup>
						</AliasGroup>
						<AliasGroup isActive="yes" isFolder="yes">
							<name>Sciomancer</name>
							<script></script>
							<command></command>
							<packageName></packageName>
							<regex></regex>
							<AliasGroup isActive="yes" isFolder="yes">
								<name>Affliction</name>
								<script></script>
								<command></command>
								<packageName></packageName>
								<regex></regex>
								<Alias isActive="yes" isFolder="no">
									<name>Afflictions</name>
									<script>if snd.class == "Sciomancer" then
snd.starting_attack()
function snd.attack_function()
 local string = ""
 if not snd.waiting.queue then
	if snd.used.shield then
   string = string.."cast hew "..snd.target
  elseif not snd.checkAff("gloom") then
		if gmcp.Char.Vitals.shadowprice &lt; "2" then
			string = string.."shadowprice gloom "..snd.target..snd.sep.."cast fever "..snd.target
		else
			string = string.."cast gloom "..snd.target
		end
	elseif not snd.checksomeAffs({"clumsiness", "weariness", "lethargy", "paresis"}, 1) then
		if gmcp.Char.Vitals.shadowprice &lt; "2" then
			string = string.."shadowprice ruin "..snd.target
		else
			string = string.."cast ruin "..snd.target
		end
	elseif not snd.checksomeAffs({"vomiting", "haemophilia"}, 1) then
		string = string.."cast fever "..snd.target
  else
   string = string.."cast scourge "..snd.target
  end
  if string ~= snd.last_attack and not snd.waiting.queue then
   snd.last_attack = string
   snd.attack(snd.last_attack)
   snd.waiting.queue = true
   tempTimer(snd.delay(), [[snd.waiting.queue = false]])
  end
 end
end
snd.attack_function()
end</script>
									<command></command>
									<packageName></packageName>
									<regex>^aff$</regex>
								</Alias>
							</AliasGroup>
							<AliasGroup isActive="yes" isFolder="yes">
								<name>Damage</name>
								<script></script>
								<command></command>
								<packageName></packageName>
								<regex></regex>
								<Alias isActive="yes" isFolder="no">
									<name>Basic Damage</name>
									<script>if snd.class == "Sciomancer" then
snd.starting_attack()
function snd.attack_function()
 local string = ""
 if not snd.waiting.queue then
	if snd.used.shield then
   string = string.."cast hew "..snd.target
  elseif snd.checkAff("transfixed") then
		if tonumber(gmcp.Char.Vitals.shadowprice) &lt; 2 then
			string = string.."shadowprice gloom "..snd.target..snd.sep.."cast fever "..snd.target
		else
			string = string.."cast fever "..snd.target
		end
  else
   string = string.."cast transfix "..snd.target
  end
  if string ~= snd.last_attack and not snd.waiting.queue then
   snd.last_attack = string
   snd.attack(snd.last_attack)
   snd.waiting.queue = true
   tempTimer(snd.delay(), [[snd.waiting.queue = false]])
  end
 end
end
snd.attack_function()
end</script>
									<command></command>
									<packageName></packageName>
									<regex>^dmg$</regex>
								</Alias>
							</AliasGroup>
							<AliasGroup isActive="yes" isFolder="yes">
								<name>Limb</name>
								<script></script>
								<command></command>
								<packageName></packageName>
								<regex></regex>
								<Alias isActive="yes" isFolder="no">
									<name>Limbs</name>
									<script>if snd.class == "Sciomancer" then
snd.starting_attack()
function snd.attack_function()
 local string = ""
 if not snd.waiting.queue then
 limbs = {"left leg", "right leg", "left arm", "right arm"}
	if snd.used.shield then
   string = string.."cast hew "..snd.target
	elseif gmcp.Char.Vitals.singularity == "" then
		string = string.."gravity genesis tether"
  elseif snd.gravity &lt; 5 then
		string = string.."gravity grip "..snd.target
  else
		if not snd.checkAff("a broken left leg") then
			string = string.."gravity erupt "..snd.target.." left leg"
		elseif not snd.checkAff("a broken right leg") then
			string = string.."gravity erupt "..snd.target.." right leg"
		elseif not snd.checkAff("a broken left arm") then
			string = string.."gravity erupt "..snd.target.." left arm"
		elseif not snd.checkAff("a broken right arm") then
			string = string.."gravity erupt "..snd.target.." right arm"
		else
			string = string.."cast transfix "..snd.target
		end
  end
  if string ~= snd.last_attack and not snd.waiting.queue then
   snd.last_attack = string
   snd.attack(snd.last_attack)
   snd.waiting.queue = true
   tempTimer(snd.delay(), [[snd.waiting.queue = false]])
  end
 end
end
snd.attack_function()
end</script>
									<command></command>
									<packageName></packageName>
									<regex>^limbs$</regex>
								</Alias>
							</AliasGroup>
						</AliasGroup>
						<AliasGroup isActive="yes" isFolder="yes">
							<name>Praenomen</name>
							<script></script>
							<command></command>
							<packageName></packageName>
							<regex></regex>
							<AliasGroup isActive="yes" isFolder="yes">
								<name>Damage Offenses</name>
								<script></script>
								<command></command>
								<packageName></packageName>
								<regex></regex>
								<Alias isActive="yes" isFolder="no">
									<name>damage</name>
									<script>if snd.class == "Praenomen" then
snd.starting_attack()
function snd.attack_function()
 local string = ""
 if not snd.waiting.queue then
   	string = "frenzy "..snd.target
  if string ~= snd.last_attack and not snd.waiting.queue then
   snd.last_attack = string
   snd.attack(snd.last_attack)
   snd.waiting.queue = true
   tempTimer(snd.delay(), [[snd.waiting.queue = false]])
  end
 end
end
snd.attack_function()
end</script>
									<command></command>
									<packageName></packageName>
									<regex>^dmg$</regex>
								</Alias>
								<Alias isActive="yes" isFolder="no">
									<name>Mes feast</name>
									<script>if snd.class == "Praenomen" then
snd.giving_whisper = {
			"impatience",
			"loneliness",
			"berserking",
			"stupidity",
			"confusion",
			"recklessness",
			"masochism",
			"anorexia",
			"agoraphobia",
			"vertigo",
			"indifference",
			"peace",
			"paranoia",
	}
snd.starting_attack()
function snd.attack_function()
  local string = ""
  local corpus = "none"
  local touse = {}
  if not table.contains(snd.target_has, "transfixed") then
 		string = "mesmerize "..snd.target
	elseif not table.contains(snd.target_has, "feast") then
		string = "blood feast "..snd.target
	else
    for i in pairs(snd.giving_whisper) do
      if not snd.checkAff(snd.giving_whisper[i]) then
        if not table.contains(touse, snd.giving_whisper[i]) then
      	  table.insert(touse, snd.giving_whisper[i])
        end
      end
    end
  
		string = "feed "..snd.target..snd.sep.."whisper "..touse[1].." "..touse[2].." "..snd.target
	end
	
  string = "contemplate "..snd.target..snd.sep..string
 
 if string ~= snd.last_attack and not snd.waiting.queue then
  snd.last_attack = string
  snd.attack(snd.last_attack)
  snd.waiting.queue = true
  tempTimer(snd.delay(), [[snd.waiting.queue = false]])
 end
end
snd.attack_function()
end</script>
									<command></command>
									<packageName></packageName>
									<regex>^feast$</regex>
								</Alias>
							</AliasGroup>
							<AliasGroup isActive="yes" isFolder="yes">
								<name>Afflictions</name>
								<script></script>
								<command></command>
								<packageName></packageName>
								<regex></regex>
								<Alias isActive="yes" isFolder="no">
									<name>Group Afflictions</name>
									<script>if snd.class == "Praenomen" then
snd.starting_attack()
function snd.attack_function()
 local string = ""
 local touse = {}
 snd.giving_whisper = {
			"impatience",
			"loneliness",
			"stupidity",
			"anorexia",
			"confusion",
			"recklessness",
			"agoraphobia",
			"vertigo",
			"indifference",
			"peace",
			"masochism",
			"paranoia",

	}
			for i in pairs(snd.giving_whisper) do
				if not snd.checkAff(snd.giving_whisper[i]) then
					if not table.contains(touse, snd.giving_whisper[i]) then
						table.insert(touse, snd.giving_whisper[i])
					end
				end
			end
			
	if not snd.waiting.queue then
		string = "frenzy "..snd.target..snd.sep.."whisper "..touse[1].." "..touse[2].." "..snd.target
	end
	
  if string ~= snd.last_attack and not snd.waiting.queue then
   snd.last_attack = string
   snd.attack(snd.last_attack)
   snd.waiting.queue = true
   tempTimer(snd.delay(), [[snd.waiting.queue = false]])
  end
 end
snd.attack_function()
end</script>
									<command></command>
									<packageName></packageName>
									<regex>^aff$</regex>
								</Alias>
								<Alias isActive="yes" isFolder="no">
									<name>Annhilate and Mesmerize</name>
									<script>if snd.class == "Praenomen" then
snd.giving_whisper = {
			"impatience",
			"loneliness",
			"stupidity",
			"anorexia",
			"confusion",
			"recklessness",
			"agoraphobia",
			"vertigo",
			"indifference",
			"peace",
			"masochism",
			"paranoia",
	}
snd.starting_attack()
function snd.attack_function()
  local string = ""
  local corpus = "none"
  local touse = {}
  if snd.mana_percent &lt; 35 and not snd.used.shield then
 		string = "annihilate "..snd.target
  elseif snd.proned() then
 		string = "siphon "..snd.target
  elseif table.contains(snd.target_has, "sight") then
 		string = "mesmerize "..snd.target
	else
    for i in pairs(snd.giving_whisper) do
      if not snd.checkAff(snd.giving_whisper[i]) then
        if not table.contains(touse, snd.giving_whisper[i]) then
      	  table.insert(touse, snd.giving_whisper[i])
        end
      end
    end
  
		string = "frenzy "..snd.target..snd.sep.."whisper "..touse[1].." "..touse[2].." "..snd.target
	end

  string = "contemplate "..snd.target..snd.sep..string
 
 if string ~= snd.last_attack and not snd.waiting.queue then
  snd.last_attack = string
  snd.attack(snd.last_attack)
  snd.waiting.queue = true
  tempTimer(snd.delay(), [[snd.waiting.queue = false]])
 end
end
snd.attack_function()
end</script>
									<command></command>
									<packageName></packageName>
									<regex>^mez$</regex>
								</Alias>
							</AliasGroup>
						</AliasGroup>
					</AliasGroup>
				</AliasGroup>
				<AliasGroup isActive="yes" isFolder="yes">
					<name>Ylem</name>
					<script></script>
					<command></command>
					<packageName></packageName>
					<regex></regex>
					<Alias isActive="yes" isFolder="no">
						<name>move on</name>
						<script>ylm.active = true
if ylm.next_zone == "none" then
 ylm.next_zone = "5730"
end
snd.moving_to = ylm.next_zone
send(" ")
if ylm.next_zone == "city" then
  ylm.active = false
end</script>
						<command></command>
						<packageName></packageName>
						<regex>^goylem$</regex>
					</Alias>
					<Alias isActive="yes" isFolder="no">
						<name>move to next</name>
						<script>ylm.active = true
if ylm.next_zone == "none" then
  ylm.next_zone = "5730"
end
ylm.next_zone = ylm.path["v" .. ylm.next_zone]
snd.moving_to = ylm.next_zone
send(" ")
if ylm.next_zone == "city" then
  ylm.active = false
end</script>
						<command></command>
						<packageName></packageName>
						<regex>^goylem next$</regex>
					</Alias>
					<Alias isActive="yes" isFolder="no">
						<name>move on start</name>
						<script>ylm.active = true
ylm.next_zone = "5730"
snd.moving_to = ylm.next_zone
send(" ")
</script>
						<command></command>
						<packageName></packageName>
						<regex>^goylem start$</regex>
					</Alias>
				</AliasGroup>
				<AliasGroup isActive="yes" isFolder="yes">
					<name>Utilities</name>
					<script></script>
					<command></command>
					<packageName></packageName>
					<regex></regex>
					<AliasGroup isActive="yes" isFolder="yes">
						<name>Toxicology</name>
						<script></script>
						<command></command>
						<packageName></packageName>
						<regex></regex>
						<Alias isActive="yes" isFolder="no">
							<name>sacs</name>
							<script>snd.send("harvest sac from "..matches[2]..snd.sep.."drop "..matches[2])</script>
							<command></command>
							<packageName></packageName>
							<regex>^sac (\w+)$</regex>
						</Alias>
						<Alias isActive="yes" isFolder="no">
							<name>milking</name>
							<script>snd.send("qeb milk "..matches[2].." into fluidcache")</script>
							<command></command>
							<packageName></packageName>
							<regex>^milk (\w+)$</regex>
						</Alias>
						<Alias isActive="yes" isFolder="no">
							<name>cask</name>
							<script>snd.send("qeb milk "..matches[2].." into cask")</script>
							<command></command>
							<packageName></packageName>
							<regex>^cask (\w+)$</regex>
						</Alias>
						<Alias isActive="yes" isFolder="no">
							<name>unvenom</name>
							<script>venoms = {
"epteth",
"gecko",
"epseth",
"prefarar",
"delphinium",
"digitalis",
"curare",
"darkshade",
"hepafarin",
"monkshood",
"oculus",
"selarnia",
"kalmia",
"xentio",
"eurypteria",
"aconite",
"vernalius",
"slike",
"euphorbia",
"larkspur",
"oleander",
"voyria",
}
for venom in pairs(venoms) do
 snd.send("fc consume "..venoms[venom])
end</script>
							<command></command>
							<packageName></packageName>
							<regex>^unvenom$</regex>
						</Alias>
						<Alias isActive="yes" isFolder="no">
							<name>venoms</name>
							<script>venoms = {
"epteth",
"gecko",
"epseth",
"prefarar",
"aconite",
"vernalius",
"slike",
"digitalis",
"curare",
"darkshade",
"oculus",
"selarnia",
"kalmia",
"xentio",
"hepafarin",
"monkshood",
"eurypteria",
"delphinium",
"euphorbia",
"larkspur",
"oleander",
"voyria",
}
for venom in pairs(venoms) do
 snd.send("fc fill "..venoms[venom])
end</script>
							<command></command>
							<packageName></packageName>
							<regex>^venoms$</regex>
						</Alias>
						<Alias isActive="yes" isFolder="no">
							<name>rag</name>
							<script>snd.send("qeb craft rag")</script>
							<command></command>
							<packageName></packageName>
							<regex>^rag$</regex>
						</Alias>
					</AliasGroup>
					<Alias isActive="yes" isFolder="no">
						<name>rockcrush</name>
						<script>snd.send("qeb rockcrush rock for ink")</script>
						<command></command>
						<packageName></packageName>
						<regex>^rc$</regex>
					</Alias>
					<Alias isActive="yes" isFolder="no">
						<name>harvest rock</name>
						<script>snd.send("qeb harvest rock")</script>
						<command></command>
						<packageName></packageName>
						<regex>^hr$</regex>
					</Alias>
					<Alias isActive="yes" isFolder="no">
						<name>priceall</name>
						<script>snd.shopitem = matches[2]
snd.shopprice = matches[3]
snd.shopshelf = matches[4]
snd.shopih = true
snd.send("ih "..snd.shopitem)</script>
						<command></command>
						<packageName></packageName>
						<regex>^priceall (\w+) (\d+) (\d+)$</regex>
					</Alias>
					<Alias isActive="yes" isFolder="no">
						<name>buy herbs</name>
						<script>pills = {
"waterbreathing",
"kawhepil",
"acuity",
"steroid",
"stimulant",
"coagulation",
"thanatonin",
"paste",
"somnium",
"ototoxin",
"decongestant",
"amaurosis",
"depressant",
"antipsychotic",
"panacea",
"euphoriant",
"anabiotic",
}
for pill in pairs(pills) do
 snd.send("buy "..matches[2].." "..pills[pill])
end</script>
						<command></command>
						<packageName></packageName>
						<regex>^bh (\d+)$</regex>
					</Alias>
					<Alias isActive="yes" isFolder="no">
						<name>OOC</name>
						<script></script>
						<command></command>
						<packageName></packageName>
						<regex>^ooc (\w+) (.+)$</regex>
					</Alias>
					<Alias isActive="yes" isFolder="no">
						<name>Check stuff</name>
						<script>send("pull "..matches[2])
send("look in "..matches[2])
send("push "..matches[2])
send("turn "..matches[2])
send("enter "..matches[2])
send("read "..matches[2])
send("touch "..matches[2])
send("ponder "..matches[2])
send("probe "..matches[2])</script>
						<command></command>
						<packageName></packageName>
						<regex>^check (\w+)$</regex>
					</Alias>
					<Alias isActive="yes" isFolder="no">
						<name>Separator changing</name>
						<script>enableTrigger("Separator Check/Update")
if matches[2]~= nil then send("config separator"..matches[2]) else send("config separator") end
</script>
						<command></command>
						<packageName></packageName>
						<regex>^config separator( (.+))?$</regex>
					</Alias>
					<Alias isActive="yes" isFolder="no">
						<name>Class check</name>
						<script>enableTrigger("Class check via score")
send("score")</script>
						<command></command>
						<packageName></packageName>
						<regex>^(sc|score)$</regex>
					</Alias>
					<Alias isActive="yes" isFolder="no">
						<name>Who Parsing</name>
						<script>snd.parse_who()</script>
						<command></command>
						<packageName></packageName>
						<regex>^who groups$</regex>
					</Alias>
				</AliasGroup>
				<AliasGroup isActive="yes" isFolder="yes">
					<name>Fishing</name>
					<script></script>
					<command></command>
					<packageName></packageName>
					<regex></regex>
					<Alias isActive="yes" isFolder="no">
						<name>FishingGo</name>
						<script>local results = get_fishing_holes(matches[2], true)
if #results == 1 then
	echo("Pathing to " .. results[1].name .. ".\n")
	results[1].rooms = results[1].rooms or {}
	if #results[1].rooms &lt;= 0 then
		echo("That fishing hole has no rooms saved. Aborting.\n")
		return
	else
		send("path find " .. results[1].rooms[1])
	end
	if gmcp.Char.Vitals.mounted == "0" then
		send("path go dash")
	else
		send("path go gallop")
	end
else
	echo("Please specify a unique fishing location.\n")
end</script>
						<command></command>
						<packageName></packageName>
						<regex>^fgo (.+)$</regex>
					</Alias>
					<Alias isActive="yes" isFolder="no">
						<name>FishingStart</name>
						<script></script>
						<command>queue bal fishing cast</command>
						<packageName></packageName>
						<regex>^fish$</regex>
					</Alias>
					<Alias isActive="yes" isFolder="no">
						<name>FishSearch</name>
						<script>get_fishing_holes(matches[3], true, (matches[2] ~= ""))
</script>
						<command></command>
						<packageName></packageName>
						<regex>^fishing search\s*(full|info)*\s*(.+)$</regex>
					</Alias>
					<Alias isActive="yes" isFolder="no">
						<name>ToggleAutoFish</name>
						<script>if auto_fish then
	echo("Autofishing disabled.\n")
	auto_fish = false
	if currently_fishing then send("qeb fishing cut") end
	currently_fishing = false
else
	echo("Autofishing enabled.\n")
	auto_fish = true
	if not currently_fishing then send("qeb fishing cast") end
end</script>
						<command></command>
						<packageName></packageName>
						<regex>^afish$</regex>
					</Alias>
				</AliasGroup>
			</AliasGroup>
		</AliasGroup>
	</AliasPackage>
	<ActionPackage />
	<ScriptPackage>
		<ScriptGroup isActive="yes" isFolder="yes">
			<name>mudlet-mapper</name>
			<packageName>mudlet-mapper</packageName>
			<script></script>
			<eventHandlerList />
			<ScriptGroup isActive="yes" isFolder="yes">
				<name>Mudlet Mapper</name>
				<packageName></packageName>
				<script>mudlet = mudlet or {}; mudlet.mapper_script = true</script>
				<eventHandlerList />
				<Script isActive="yes" isFolder="no">
					<name>Create Option Table</name>
					<packageName></packageName>
					<script>-------------------------------------------------
--         Put your Lua functions here.        --
--                                             --
-- Note that you can also use external Scripts --
-------------------------------------------------

function createOption(startingValue, onChangeFunc, allowedVarTypes, use, checkOption, games)
	if allowedVarTypes then -- make sure our starting Value follows type rules
		if not table.contains(allowedVarTypes, type(startingValue)) then
			echo("Starting type is not of allowed type!\n")
			display(allowedVarTypes)
			echo("type: " .. type(startingValue) .. "\n")
			return
		end
	end

	local option = {
		value = startingValue,
		onChange = onChangeFunc,
		allowedVarTypes = allowedVarTypes,
		use = use or "",
		games = games,
		checkOption = checkOption or function() return true end
      
	}

	return option
end

function createOptionsTable(defaultTable)
	local index = {} -- index to store the default table at in our proxy table


	local proxyTable = {} -- This is the table that is returned to the user

	proxyTable.disp = echo

	proxyTable.dispDefaultWriteError = function()
		echo("Can't overwrite default options. Please use the SetOption function to change the value\n")
	end

	proxyTable.dispOption = function(opt, val)
		if not opt or not val then return end
		echo("Name: " .. string.title(opt) .. string.rep(" ", 10 - string.len(opt)))
		echo("Val: " .. tostring(val.value))
		echo(string.rep(" ", 10 - string.len(tostring(val.value))) ..  "- " .. val.use .. "\n")
	end

	function proxyTable:showAllOptions(game)
		proxyTable.disp("Available options: \n")
		for k, v in pairs(self[index]) do
			if not game or not v.games or v.games[game] then
				self.dispOption(k, v)
			end
		end
		echo("\n")
		for k, v in pairs(self["_customOptions"]) do
			self.dispOption(k, v)
		end

	end

	function proxyTable:getAllOptions()
		local t = {}
		for k, v in pairs(self[index]) do
			t[k] = v.value
		end

		return t
	end

   function proxyTable:setOption(option, value, silent)
		if self[option] == nil then
			proxyTable.disp("No such option!\n")
			return
		end

		-- otherwise, set the option
		if self["_customOptions"][option] then
			if not (table.contains(self["_customOptions"][option].allowedVarTypes, type(value)) and self["_customOptions"][option].checkOption(value)) then
				proxyTable.disp("You can't set '" .. option .. "' to that!\n")
				return
			end
			self["_customOptions"][option].value = value
			if self["_customOptions"][option].onChange then
				self["_customOptions"][option].onChange(option, value)
			end
		else
			if not (table.contains(self[index][option].allowedVarTypes, type(value)) and self[index][option].checkOption(value)) then
				proxyTable.disp("You can't set '" .. option .. "' to that!\n")
				return
			end
			rawset(self[index][option], "value", value)
			local opt = rawget(self[index], option)
			if opt.onChange  and not silent then opt.onChange(option, value) end
		end
		if mmp and mmp.clearpathcache then mmp.clearpathcache() end
	end


	proxyTable._customOptions = {}

	local mt = {
		__index = function(t, k)
			local custOp = rawget(t, "_customOptions")
			if custOp[k] then
			 	local opt = custOp[k]
				if opt then return opt.value else return nil end
			else
				local opt = t[index][k]
				if opt then return opt.value else return nil end
			end
		end,

		__newindex = function (t, k, v)
			if t[index][k] then
				proxyTable.dispDefaultWriteError()
			else
				t["_customOptions"][k] = v
			end
		end
	}


	proxyTable[index] = defaultTable

	setmetatable(proxyTable, mt)

	return proxyTable

end</script>
					<eventHandlerList />
				</Script>
				<Script isActive="yes" isFolder="no">
					<name>Load settings</name>
					<packageName></packageName>
					<script>-- mmp = mudlet mapper namespace
mmp =
  mmp or
  {
    paused = false,
    autowalking = false,
    currentroom = 0,
    currentroomname = "(unknown)",
    firstRun = true,
    specials = {},
    ferry_rooms = {},
  }
speedWalkWatch = createStopWatch()
-- populated by Mudlet from getPath() and gotoRoom()
speedWalkPath = speedWalkPath or {}
speedWalkDir = speedWalkDir or {}
speedWalkCounter = 0
-- actually used by the mapper for walking
mmp.speedWalk = mmp.speedWalk or {}
mmp.speedWalkPath = mmp.speedWalkPath or {}
mmp.speedWalkDir = mmp.speedWalkDir or {}
local newversion = "20.4.1"
if mmp.version and mmp.version ~= newversion then
  if not mmp.game then
    mmp.echo(
      "Mapper script updated - Thanks! I don't know what game are you connected to, though - so please reconnect, if you could."
    )
  else
    mmp.echo("Mapper script updated - thanks! You don't need to restart.")
  end
end
mmp.version = newversion

function mmp.startup()
  if not mmp.firstRun then
    return
  end
  local private_settings = {}
  --General settings
  private_settings["echocolour"] =
    createOption(
      "cyan",
      mmp.changeEchoColour,
      {"string"},
      "Set the color for room number echos?",
      function(newSetting)
        return color_table[newSetting] ~= nil
      end
    )
  private_settings["crowdmap"] =
    createOption(
      false,
      mmp.chageMapSource,
      {"boolean"},
      "Use a crowd-sourced map instead of IREs default?",
      nil,
      {achaea = true, starmourn = true, lusternia = true}
    )
  private_settings["showcmds"] =
    createOption(true, mmp.changeBoolFunc, {"boolean"}, "Show walking commands?")
  private_settings["slowwalk"] =
    createOption(
      false, mmp.setSlowWalk, {"boolean"}, "Walk slowly instead of as quick as possible?"
    )
  private_settings["updatemap"] =
    createOption(true, mmp.changeUpdateMap, {"boolean"}, "Check for new maps from your MUD?")
  private_settings["waterwalk"] =
    createOption(
      true,
      mmp.setWaterWalk,
      {"boolean"},
      "Have waterwalk (don't avoid water)?",
      nil,
      {achaea = true}
    )
  --locking things
  private_settings["lockpathways"] =
    createOption(
      true, mmp.lockPathways, {"boolean"}, "Lock pathway exits?", nil, {lusternia = true}
    )
  private_settings["locksewers"] =
    createOption(false, mmp.lockSewers, {"boolean"}, "Lock all sewers?", nil, {achaea = true})
  private_settings["lockspecials"] =
    createOption(false, mmp.lockSpecials, {"boolean"}, "Lock all special exits?")
  private_settings["lockwormholes"] =
    createOption(
      true,
      mmp.lockWormholes,
      {"boolean"},
      "Lock all wormholes?",
      nil,
      {achaea = true, imperian = true, aetolia = true}
    )
  --Sprint movement
  private_settings["dash"] =
    createOption(
      false,
      mmp.changeBoolFunc,
      {"boolean"},
      "Use Dash?",
      nil,
      {achaea = true, imperian = true, aetolia = true}
    )
  private_settings["sprint"] = createOption(false, mmp.changeBoolFunc, {"boolean"}, "Use Sprint?")
  private_settings["gallop"] = createOption(false, mmp.changeBoolFunc, {"boolean"}, "Use Gallop?")
  private_settings["runaway"] =
    createOption(
      false, mmp.changeBoolFunc, {"boolean"}, "Use Jester Runaway?", nil, {achaea = true}
    )
  --Achaea wings and things
  private_settings["winglanguage"] =
    createOption(
      "",
      mmp.setWingsLanguage,
      {"string"},
      "Speak non-default language for wings:",
      nil,
      {achaea = true}
    )
  private_settings["pebble"] =
    createOption(
      false, mmp.lockPebble, {"boolean"}, "Make use of your enchanted pebble?", nil, {achaea = true}
    )
  private_settings["removewings"] =
    createOption(
      true,
      mmp.setWingsRemoval,
      {"boolean"},
      "Remove Wings after using them?",
      nil,
      {achaea = true, imperian = true}
    )
  private_settings["harness"] =
    createOption(
      false, mmp.setHarness, {"boolean"}, "Use Stratospheric Harness?", nil, {achaea = true}
    )
  --PapaGuacamole
  private_settings["duantahar"] =
    createOption(false, mmp.setDuantahar, {"boolean"}, "Use Chenubian Wings?", nil, {achaea = true})
  private_settings["duanatharan"] =
    createOption(false, mmp.setDuanatharan, {"boolean"}, "Use Atavian Wings?", nil, {achaea = true})
  private_settings["duanathar"] =
    createOption(false, mmp.setDuanathar, {"boolean"}, "Use Eagle Wings?", nil, {achaea = true})
  private_settings["duanatharic"] =
    createOption(false, mmp.setDuanatharic, {"boolean"}, "Use Island Wings?", nil, {achaea = true})
  private_settings["soar"] =
    createOption(false, mmp.setSoar, {"boolean"}, "Use Aero Soar?", nil, {achaea = true})
  private_settings["shackle"] =
    createOption(false, mmp.changeBoolFunc, {"boolean"}, "Take off shackle?", nil, {achaea = true})
  private_settings["universe"] =
    createOption(false, mmp.setUniverse, {"boolean"}, "Use Universe Tarot?", nil, {achaea = true})
  private_settings["gare"] =
    createOption(false, mmp.setGare, {"boolean"}, "Use Gare?", nil, {achaea = true})
  --Achaea Orb of Confinement
  private_settings["orbashtan"] =
    createOption(
      false,
      function()
        mmp.setOrb("ashtan")
      end,
      {"boolean"},
      "Orb of Confinement active in Ashtan?",
      nil,
      {achaea = true}
    )
  private_settings["orbcyrene"] =
    createOption(
      false,
      function()
        mmp.setOrb("cyrene")
      end,
      {"boolean"},
      "Orb of Confinement active in Cyrene?",
      nil,
      {achaea = true}
    )
  private_settings["orbeleusis"] =
    createOption(
      false,
      function()
        mmp.setOrb("eleusis")
      end,
      {"boolean"},
      "Orb of Confinement active in Eleusis?",
      nil,
      {achaea = true}
    )
  private_settings["orbhashan"] =
    createOption(
      false,
      function()
        mmp.setOrb("hashan")
      end,
      {"boolean"},
      "Orb of Confinement active in Hashan?",
      nil,
      {achaea = true}
    )
  private_settings["orbmhaldor"] =
    createOption(
      false,
      function()
        mmp.setOrb("mhaldor")
      end,
      {"boolean"},
      "Orb of Confinement active in Mhaldor?",
      nil,
      {achaea = true}
    )
  private_settings["orbtargossas"] =
    createOption(
      false,
      function()
        mmp.setOrb("targossas")
      end,
      {"boolean"},
      "Orb of Confinement active in Targossas?",
      nil,
      {achaea = true}
    )
  --Imperian wings
  private_settings["shekinah"] =
    createOption(false, mmp.setShekinah, {"boolean"}, "Use Seraphim Wings?", nil, {imperian = true})
  private_settings["suriel"] =
    createOption(false, mmp.setSuriel, {"boolean"}, "Use Orphanim Wings?", nil, {imperian = true})
  --Lusternia bixes
  private_settings["torus"] =
    createOption(
      false, mmp.setTorus, {"boolean"}, "Make use of your Torus?", nil, {lusternia = true}
    )
  private_settings["prism"] =
    createOption(
      false,
      mmp.setPrism,
      {"boolean"},
      "Make use of your transplanar prism?",
      nil,
      {lusternia = true}
    )
  private_settings["cubix"] =
    createOption(
      false, mmp.setCubix, {"boolean"}, "Make use of your Cubix?", nil, {lusternia = true}
    )
  private_settings["medallion"] =
    createOption(
      false, mmp.setMedallion, {"boolean"}, "Make use of your Medallion?", nil, {lusternia = true}
    )
  --Lusternia Bubblixes
  private_settings["tibia"] =
    createOption(
      false, mmp.setTibia, {"boolean"}, "Make use of your Tibia?", nil, {lusternia = true}
    )
  private_settings["mud"] =
    createOption(false, mmp.setMud, {"boolean"}, "Make use of your Mud?", nil, {lusternia = true})
  private_settings["cookie"] =
    createOption(
      false, mmp.setCookie, {"boolean"}, "Make use of your Cookie?", nil, {lusternia = true}
    )
  private_settings["icicle"] =
    createOption(
      false, mmp.setIcicle, {"boolean"}, "Make use of your Icicle?", nil, {lusternia = true}
    )
  private_settings["screwdriver"] =
    createOption(
      false,
      mmp.setScrewdriver,
      {"boolean"},
      "Make use of your Screwdriver?",
      nil,
      {lusternia = true}
    )
  private_settings["snowglobe"] =
    createOption(
      false, mmp.setSnowglobe, {"boolean"}, "Make use of your Snowglobe?", nil, {lusternia = true}
    )
  private_settings["head"] =
    createOption(
      false, mmp.setHead, {"boolean"}, "Make use of your Doll's Head?", nil, {lusternia = true}
    )
  private_settings["wheel"] =
    createOption(
      false, mmp.setWheel, {"boolean"}, "Make use of your Quartz Wheel?", nil, {lusternia = true}
    )
  --Lusternia Curio collections
  private_settings["bonecurio"] =
    createOption(
      false, mmp.setBonecurio, {"boolean"}, "Make use of your Bone curios?", nil, {lusternia = true}
    )
  private_settings["facecurio"] =
    createOption(
      false, mmp.setFacecurio, {"boolean"}, "Make use of your Face curios?", nil, {lusternia = true}
    )
  private_settings["feathercurio"] =
    createOption(
      false,
      mmp.setFeathercurio,
      {"boolean"},
      "Make use of your Feather curios?",
      nil,
      {lusternia = true}
    )
  private_settings["figurecurio"] =
    createOption(
      false,
      mmp.setFigurecurio,
      {"boolean"},
      "Make use of your Figure curios?",
      nil,
      {lusternia = true}
    )
  private_settings["flowercurio"] =
    createOption(
      false,
      mmp.setFlowercurio,
      {"boolean"},
      "Make use of your Flower curios?",
      nil,
      {lusternia = true}
    )
  private_settings["fluttercurio"] =
    createOption(
      false,
      mmp.setFluttercurio,
      {"boolean"},
      "Make use of your Flutter curios?",
      nil,
      {lusternia = true}
    )
  private_settings["toolcurio"] =
    createOption(
      false,
      mmp.setToolcurio,
      {"boolean"},
      "Make use of your Tool curios]?",
      nil,
      {lusternia = true}
    )
  private_settings["vernalcurio"] =
    createOption(
      false,
      mmp.setVernalcurio,
      {"boolean"},
      "Make use of your Vernal curios?",
      nil,
      {lusternia = true}
    )
  private_settings["utensilcurio"] =
    createOption(
      false,
      mmp.setUtensilcurio,
      {"boolean"},
      "Make use of your Utensil curios?",
      nil,
      {lusternia = true}
    )
  private_settings["toycurio"] =
    createOption(
      false, mmp.setToycurio, {"boolean"}, "Make use of your Toy curios?", nil, {lusternia = true}
    )
  private_settings["soullesscurio"] =
    createOption(
      false,
      mmp.setSoullesscurio,
      {"boolean"},
      "Make use of your Soulless curios?",
      nil,
      {lusternia = true}
    )
  --Lusternia epic
  private_settings["fingerblade"] =
    createOption(
      false,
      mmp.setFingerblade,
      {"boolean"},
      "Make use of your Fingerblade?",
      nil,
      {lusternia = true}
    )
  private_settings["blossom"] =
    createOption(
      false,
      mmp.setBlossom,
      {"boolean"},
      "Make use of your Flame of dae'Seren?",
      nil,
      {lusternia = true}
    )
  private_settings["belt"] =
    createOption(false, mmp.setBelt, {"boolean"}, "Make use of your Belt?", nil, {lusternia = true})
  private_settings["mandala"] =
    createOption(
      false, mmp.setMandala, {"boolean"}, "Make use of your Mandala?", nil, {lusternia = true}
    )
  private_settings["mantle"] =
    createOption(
      false, mmp.setMantle, {"boolean"}, "Make use of your Mantle?", nil, {lusternia = true}
    )
  private_settings["key"] =
    createOption(false, mmp.setKey, {"boolean"}, "Make use of your Key?", nil, {lusternia = true})
  --misc
  private_settings["caravan"] =
    createOption(false, mmp.changeBoolFunc, {"boolean"}, "Walk caravans?", nil, {imperian = true})
  mmp.settings = createOptionsTable(private_settings)
  mmp.settings.disp = mmp.echo
  mmp.game = false
  mmp.settings.dispOption =
    function(opt, val)
      cecho(
        "&lt;green&gt;" ..
        val.use ..
        "&lt;white&gt; (" ..
        opt ..
        ") " ..
        string.rep(" ", 50 - val.use:len() - opt:len()) ..
        tostring(val.value) ..
        "\n"
      )
    end
  mmp.settings.dispDefaultWriteError =
    function()
      mmp.echo("Please use the mconfig alias to set options!")
    end
  raiseEvent("mmp areas changed")
  mmp.firstRun = false
  mmp.echon("Mudlet Mapper script for IREs (" .. tostring(mmp.version) .. ") loaded! (")
  echoLink(
    "homepage",
    "(openUrl or openURL)'http://wiki.mudlet.org/w/IRE_mapping_script'",
    "Clicky clicky to read up on what's this about"
  )
  echo(")\n")
end</script>
					<eventHandlerList />
				</Script>
				<Script isActive="yes" isFolder="no">
					<name>speedwalking</name>
					<packageName></packageName>
					<script>function mmp.gotoRoom(where, dashtype, gotoType)
  mmp.speedWalk.type = gotoType or "room"
  if not where or not tonumber(where) then
    mmp.echo("Where do you want to go to?")
    return
  end
  if tonumber(where) == mmp.currentroom then
    mmp.echo("We're already at " .. where .. "!")
    raiseEvent("mmapper arrived")
    return
  end
  -- allow mapper 'addons' to link their own exits in
  raiseEvent("mmp link externals")
  -- if getPath worked, then the dirs and room #'s tables were populated for us
  if not mmp.getPath(mmp.currentroom, tonumber(where)) then
    mmp.echo("Don't know how to get there (" .. tostring(where) .. ") from here :(")
    mmp.speedWalkPath = {}
    mmp.speedWalkDir = {}
    speedWalkCounter = 0
    raiseEvent("mmapper failed path")
    if mmp.settings.shackle then
      expandAlias("wear shackle")
    end
    -- allow mapper 'addons' to unlink their special exits
    raiseEvent("mmp clear externals")
    return
  end
  doSpeedWalk(dashtype)
  -- allow mapper 'addons' to unlink their special exits
  raiseEvent("mmp clear externals")
end

function mmp.gotoArea(where, number, dashtype, exact)
  mmp.speedWalk.type = "area"
  if not where or type(where) ~= "string" then
    mmp.echo("Where do you want to go to?")
    return
  end
  local where = where:lower()
  number = tonumber(number)
  local tmp = getRoomUserData(1, "gotoMapping")
  if not tmp or tmp == '' then
    tmp = "[]"
  end
  local temp, maptable = yajl.to_value(tmp), {}
  for k, v in pairs(temp) do
    maptable[k:lower()] = v
  end
  local destinationRoom = maptable[where]
  if destinationRoom then
    mmp.gotoRoom(destinationRoom, dashtype)
    return
  end
  local areaid, msg, multiples = mmp.findAreaID(where, exact)
  if areaid then
    mmp.gotoAreaID(areaid)
  elseif not areaid and #multiples &gt; 0 then
    if number and number &lt;= #multiples then
      mmp.gotoArea(multiples[number], nil, dashtype, true)
      return
    end
    mmp.echo("Which area would you like to go to?")
    fg("DimGrey")
    for key, areaname in ipairs(multiples) do
      echo("  ")
      echoLink(
        key .. ") ",
        'mmp.gotoArea("' ..
        areaname ..
        '", nil, ' ..
        (dashtype and '"' .. dashtype .. '"' or "nil") ..
        ', true)',
        "Click to go to " .. areaname,
        true
      )
      setUnderline(true)
      echoLink(
        areaname,
        'mmp.gotoArea("' ..
        areaname ..
        '", nil, ' ..
        (dashtype and '"' .. dashtype .. '"' or "nil") ..
        ', true)',
        "Click to go to " .. areaname,
        true
      )
      setUnderline(false)
      echo("\n")
    end
    resetFormat()
    return
  else
    mmp.echo(string.format("Don't know of any area named '%s'.", where))
    return
  end
end

--- DOES NOT ACCOUNT FOR CHANGING THE MAP YET (within a profile load), because we don't know when it happens
local getpathcache = {}
--setmetatable(getpathcache, {__mode = "kv"}) -- weak keys/values = it'll periodically get cleaned up by gc

function mmp.getPath(from, to)
  assert(tonumber(from) and tonumber(to), "mmp.getPath: both from and to have to be room IDs")
  local key = string.format("%s_%s", from, to)
  local resulttbl = getpathcache[key]
  -- not in cache?
  if not resulttbl then
    mmp.computeGetPath = mmp.computeGetPath or createStopWatch()
    startStopWatch(mmp.computeGetPath)
    local boolean = getPath(from, to)
    if mmp.debug then
      mmp.echo(
        "a new getPath() from " ..
        from ..
        " to " ..
        to ..
        " took " ..
        stopStopWatch(mmp.computeGetPath) ..
        "s."
      )
    end
    -- save it into the cache &amp; send away
    getpathcache[key] = {boolean, speedWalkDir, speedWalkPath}
    return boolean
  end
  -- or if it is, retrieve &amp; send away
  speedWalkDir = resulttbl[2]
  speedWalkPath = resulttbl[3]
  return resulttbl[1]
end

function mmp.clearpathcache()
  if mmp.debug then
    mmp.echo("path cache cleared")
  end
  getpathcache = {}
end

function mmp.showpathcache()
  return getpathcache
end

function mmp.setmovetimer(time)
  if mmp.movetimer then
    killTimer(mmp.movetimer)
  end
  if mmp.settings.slowwalk then
    return
  end
  mmp.movetimer =
    tempTimer(
      getNetworkLatency() + (time or 0.5),
      function()
        mmp.movetimer = false
        mmp.move()
      end
    )
end

-- moves to the next room we need to.

function mmp.move()
  if mmp.paused or not mmp.autowalking or mmp.movetimer or not mmp.canmove() then
    return
  end
  -- sometimes it's 0 - default to 1
  if speedWalkCounter == 0 then
    speedWalkCounter = 1
  end
  local cmd
  if mmp.settings["caravan"] then
    cmd = "lead caravan " .. mmp.speedWalkDir[speedWalkCounter]
  else
    cmd = mmp.speedWalkDir[speedWalkCounter]
  end
  cmd = cmd or ''
  -- timeout before loadstring, so it can set its own if it would like to.
  mmp.setmovetimer()
  if string.starts(cmd, "script:") then
    cmd = string.gsub(cmd, "script:", "")
    loadstring(cmd)()
    if mmp.settings.showcmds then
      cecho(
        string.format(
          "&lt;red&gt;(&lt;maroon&gt;%d - &lt;dark_slate_grey&gt;%s&lt;red&gt;)",
          #mmp.speedWalkDir - speedWalkCounter + 1,
          "&lt;script&gt;"
        )
      )
    end
  else
    send(cmd, false)
    if mmp.settings.showcmds then
      cecho(
        string.format(
          "&lt;red&gt;(&lt;maroon&gt;%d - &lt;dark_slate_grey&gt;%s&lt;red&gt;)",
          #mmp.speedWalkDir - speedWalkCounter + 1,
          cmd
        )
      )
    end
  end
end

function mmp.swim()
  -- not going anywhere? don't do anything
  if not mmp.speedWalkDir[speedWalkCounter] then
    return
  end
  send(
    "swim " ..
    mmp.speedWalkDir[speedWalkCounter]:gsub("sprint ", ""):gsub("dash ", ""):gsub("gallop ", ""):gsub(
      "runaway ", ""
    ),
    false
  )
  if mmp.settings.showcmds then
    cecho(
      string.format(
        "&lt;red&gt;(&lt;maroon&gt;%d - &lt;dark_slate_grey&gt;swim %s&lt;red&gt;)",
        #mmp.speedWalkDir - speedWalkCounter + 1,
        mmp.speedWalkDir[speedWalkCounter]:gsub("sprint ", ""):gsub("dash ", ""):gsub("gallop ", ""):gsub(
          "runaway ", ""
        )
      )
    )
  end
  mmp.setmovetimer(2.5)
end

function mmp.enterGrate()
  -- not going anywhere? don't do anything
  if not mmp.speedWalkDir[speedWalkCounter] then
    return
  end
  send("enter grate " .. mmp.speedWalkDir[speedWalkCounter], false)
  if mmp.settings.showcmds then
    cecho(
      string.format(
        "&lt;red&gt;(&lt;maroon&gt;%d - &lt;dark_slate_grey&gt;enter grate %s&lt;red&gt;)",
        #mmp.speedWalkDir - speedWalkCounter + 1,
        mmp.speedWalkDir[speedWalkCounter]
      )
    )
  end
  mmp.setmovetimer(2.5)
end

function mmp.openDoor()
  -- not going anywhere? don't do anything
  if not mmp.speedWalkDir[speedWalkCounter] then
    return
  end
  send(
    "open door " ..
    mmp.speedWalkDir[speedWalkCounter]:gsub("sprint ", ""):gsub("dash ", ""):gsub("gallop ", ""):gsub(
      "runaway ", ""
    ),
    false
  )
  if mmp.settings.showcmds then
    cecho(
      string.format(
        "&lt;red&gt;(&lt;maroon&gt;%d - &lt;dark_slate_grey&gt;open door %s&lt;red&gt;)",
        #mmp.speedWalkDir - speedWalkCounter + 1,
        mmp.speedWalkDir[speedWalkCounter]:gsub("sprint ", ""):gsub("dash ", ""):gsub("gallop ", ""):gsub(
          "runaway ", ""
        )
      )
    )
  end
  mmp.setmovetimer(getNetworkLatency())
end

function mmp.unlockDoor()
  -- not going anywhere? don't do anything
  if not mmp.speedWalkDir[speedWalkCounter] then
    return
  end
  send(
    "unlock door " ..
    mmp.speedWalkDir[speedWalkCounter]:gsub("sprint ", ""):gsub("dash ", ""):gsub("gallop ", ""):gsub(
      "runaway ", ""
    ),
    false
  )
  if mmp.settings.showcmds then
    cecho(
      string.format(
        "&lt;red&gt;(&lt;maroon&gt;%d - &lt;dark_slate_grey&gt;unlock door %s&lt;red&gt;)",
        #mmp.speedWalkDir - speedWalkCounter,
        mmp.speedWalkDir[speedWalkCounter]:gsub("sprint ", ""):gsub("dash ", ""):gsub("gallop ", ""):gsub(
          "runaway ", ""
        )
      )
    )
  end
  mmp.setmovetimer(getNetworkLatency())
end

function mmp.customwalkdelay(delay)
  mmp.setmovetimer(getNetworkLatency() + delay)
end

function mmp.stop()
  mmp.speedWalkPath = {}
  mmp.speedWalkDir = {}
  speedWalkCounter = 0
  stopStopWatch(speedWalkWatch)
  --if mmp.movetimer then killTimer( mmp.movetimer ) end
  mmp.autowalking = false
  -- clear all the temps we've got
  for trigger, ID in pairs(mmp.specials) do
    killTrigger(ID)
  end
  mmp.specials = {}
  mmp.echo("Stopped walking.")
  raiseEvent("mmapper stopped")
  if mmp.settings.shackle then
    expandAlias("wear shackle")
  end
end

-- Aetolia and Lusternia support showing balances in GMCP. This is easy to support, so we do!
-- if we can't move, setup a polling timer to prompt walking when we can again.
-- popular systems that expose balance &amp; equilibrium values can be added here as well, perhaps though a similarly-named function.

function mmp.canmove(fromtimer)
  if mapper_can_move and mapper_can_move() then
    if fromtimer then
      mmp.move()
    else
      return true
    end
  elseif mapper_can_move then
    tempTimer(0.2, [[mmp.canmove(true)]])
    return false
  end
  if not gmcp.Char then
    return true
  end
  -- Achaea
  -- Lusternia
  if
    (
      gmcp.Char and
      (not gmcp.Char.Vitals.bal or gmcp.Char.Vitals.bal == "1") and
      (not gmcp.Char.Vitals.eq or gmcp.Char.Vitals.eq == "1") and
      (not gmcp.Char.Vitals.balance or gmcp.Char.Vitals.balance == "1") and
      (not gmcp.Char.Vitals.equilibrium or gmcp.Char.Vitals.equilibrium == "1") and
      (not gmcp.Char.Vitals.right_arm or gmcp.Char.Vitals.right_arm == "1") and
      (not gmcp.Char.Vitals.left_arm or gmcp.Char.Vitals.left_arm == "1") and
      (not gmcp.Char.Vitals.right_leg or gmcp.Char.Vitals.right_leg == "1") and
      (not gmcp.Char.Vitals.left_leg or gmcp.Char.Vitals.left_leg == "1") and
      (not gmcp.Char.Vitals.psisuper or gmcp.Char.Vitals.psisuper ~= "0") and
      (not gmcp.Char.Vitals.psisub or gmcp.Char.Vitals.psisub ~= "0") and
      (not gmcp.Char.Vitals.psiid or gmcp.Char.Vitals.psiid ~= "0") and
      (not gmcp.Char.Balance or gmcp.Char.Balance.List.balance == "1") and
      (not gmcp.Char.Balance or gmcp.Char.Balance.List.equilibrium == "1") and
      (not gmcp.Char.Balance or gmcp.Char.Balance.List.rarm == "1") and
      (not gmcp.Char.Balance or gmcp.Char.Balance.List.larm == "1") and
      (not gmcp.Char.Balance or gmcp.Char.Balance.List.legs == "1") and
      (not gmcp.Char.Vitals.prone or (gmcp.Char.Vitals.prone == "0" or gmcp.Char.Vitals.prone == 0))
    )
  then
    if fromtimer then
      mmp.move()
    else
      return true
    end
  else
    tempTimer(0.2, [[mmp.canmove(true)]])
    return false
  end
end

local oldnum

function speedwalking(event, num)
  local num = tonumber(num) or tonumber(gmcp.Room.Info.num)
  if num ~= mmp.currentroom then
    mmp.previousroom = mmp.currentroom
  end
  mmp.currentroom = num
  mmp.currentroomname = getRoomName(num)
  -- Try to track if we're flying or not, for Imperian wings
  -- This is to avoid being "off path" if we FLY due to wings.
  local madeflight = false
  if gmcp.Room then
    local flying = false
    if string.find(gmcp.Room.Info.name, "^flying above") then
      flying = true
    end
    if mmp.flying and not flying then
      -- We were flying, and now we are not. Gravity!
      mmp.flying = false
    elseif not mmp.flying and flying then
      -- We were not flying and now we are.
      madeflight = true
      mmp.flying = true
    elseif not flying then
      mmp.flying = false
    end
  else
    mmp.flying = false
  end
  -- track if we're inside or outside, if possible
  if gmcp.Room then
    local areaID = getRoomArea(mmp.currentroom)
    if
      mmp.inside and
      not (
        table.contains(gmcp.Room.Info.details, "indoors") or
        table.contains(gmcp.Room.Info.details, "considered indoors")
      ) and
      not mmp.orbed()
    then
      mmp.inside = false
      raiseEvent("mmapper went outside")
    elseif
      not mmp.inside and
      (
        table.contains(gmcp.Room.Info.details, "indoors") or
        table.contains(gmcp.Room.Info.details, "considered indoors") or
        mmp.orbed()
      )
    then
      mmp.inside = true
      raiseEvent("mmapper went inside")
    end
    if
      #table.n_union(
        mmp.getareacontinents(getRoomArea(mmp.previousroom)),
        mmp.getareacontinents(getRoomArea(num))
      ) ~= #mmp.getareacontinents(getRoomArea(num))
    then
      raiseEvent("mmapper changed continent")
    end
    -- the event could cancel speedwalking - in this case quit
    if mmp.ignore_speedwalking then
      mmp.ignore_speedwalking = nil
      return
    end
  end
  if oldnum == num then
    return
  else
    oldnum = num
  end
  if not mmp.autowalking then
    return
  end
  if mmp.movetimer then
    killTimer(mmp.movetimer)
    mmp.movetimer = false
  end
  if num == mmp.speedWalkPath[#mmp.speedWalkPath] then
    local walktime = stopStopWatch(speedWalkWatch)
    mmp.echo(string.format("We've arrived! Took us %.1fs.\n", walktime))
    raiseEvent("mmapper arrived")
    if mmp.settings.shackle then
      expandAlias("wear shackle")
    end
    mmp.speedWalkPath = {}
    mmp.speedWalkDir = {}
    speedWalkCounter = 0
    mmp.autowalking = false
  elseif mmp.speedWalkPath[speedWalkCounter] == num then
    speedWalkCounter = speedWalkCounter + 1
    mmp.move()
  elseif mmp.game == "imperian" and madeflight then
    mmp.echo("We began flying!")
    mmp.move()
  elseif
    #mmp.speedWalkPath &gt; 0 and
    not mmp.ferry_rooms[num] and
    not (gmcp.Room.Info.details and table.contains(gmcp.Room.Info.details, "ferry"))
  then
    -- ended up somewhere we didn't want to be, and this isn't a ferry room?
    speedWalkMoved = false
    -- re-calculate path then
    mmp.echo("Ended up off the path, recalculating a new path...")
    local destination = mmp.speedWalkPath[#mmp.speedWalkPath]
    if not mmp.getPath(num, destination) then
      mmp.echo(
        string.format(
          "Don't know how to get to %d (%s) anymore :( Move into a room we know of to continue",
          destination,
          getRoomName(destination)
        )
      )
    else
      mmp.gotoRoom(destination)
    end
  end
end

function doSpeedWalk(dashtype)
  mmp.speedWalkDir = mmp.deepcopy(speedWalkDir)
  mmp.speedWalkPath = mmp.deepcopy(speedWalkPath)
  speedWalkDir, speedWalkPath = {}, {}
  resetStopWatch(speedWalkWatch)
  startStopWatch(speedWalkWatch)
  if
    mmp.settings["gallop"] or
    mmp.settings["dash"] or
    mmp.settings.sprint or
    mmp.settings.runaway or
    dashtype
  then
    mmp.fixPath(
      mmp.currentroom,
      mmp.speedWalkPath[#mmp.speedWalkPath],
      (mmp.settings["gallop"] and "gallop") or
      (mmp.settings["dash"] and "dash") or
      (mmp.settings.sprint and "sprint") or
      (mmp.settings.runaway and "runaway") or
      dashtype
    )
  end
  mmp.fixSpecialExits(mmp.speedWalkDir)
  if #mmp.speedWalkPath == 0 then
    mmp.autowalking = false
    mmp.echo("Couldn't find a path to the destination :(")
    raiseEvent("mmapper failed path")
    if mmp.settings.shackle then
      expandAlias("wear shackle")
    end
    return
  end
  -- this is a fix: convert nums to actual numbers
  for i = 1, #mmp.speedWalkPath do
    mmp.speedWalkPath[i] = tonumber(mmp.speedWalkPath[i])
  end
  mmp.autowalking = true
  raiseEvent("s")
  if mmp.settings.shackle then
    expandAlias("remove shackle")
  end
  if not mmp.paused then
    mmp.echon("Starting speedwalk from " .. (atcp.RoomNum or gmcp.Room.Info.num) .. " to ")
    cechoLink(
      "&lt;" .. mmp.settings.echocolour .. "&gt;" .. mmp.speedWalkPath[#mmp.speedWalkPath],
      'mmp.gotoRoom "' .. mmp.speedWalkPath[#mmp.speedWalkPath] .. '"',
      'Go to ' .. mmp.speedWalkPath[#mmp.speedWalkPath],
      true
    )
    echo(": ")
    speedWalkCounter = 1
    if mmp.canmove() then
      mmp.move()
    else
      echo("(when we get balance back / aren't hindered)")
    end
  else
    mmp.echo(
      "Will go to " ..
      mmp.speedWalkPath[#mmp.speedWalkPath] ..
      " as soon as the mapper is unpaused."
    )
  end
end

function mmp.failpath()
  if mmp.movetimer then
    local walktime = stopStopWatch(speedWalkWatch)
    mmp.echo(string.format("Can't continue further! Took us %.1fs to get here.\n", walktime))
  end
  mmp.autowalking = false
  if mmp.settings.shackle then
    expandAlias("wear shackle")
  end
  mmp.speedWalkPath = {}
  mmp.speedWalkDir = {}
  speedWalkCounter = 0
  if mmp.movetimer then
    killTimer(mmp.movetimer)
    mmp.movetimer = nil
  end
  raiseEvent("mmapper failed path")
end

function mmp.changeBoolFunc(name, option)
  local en
  en = option and "will now use" or "will no longer use"
  mmp.echo("&lt;green&gt;Okay, the mapper " .. en .. " &lt;white&gt;" .. name .. "&lt;green&gt;!")
end

function mmp.fixPath(rFrom, rTo, dashtype)
  local currentPath, currentIds = {}, {}
  local dRef = {["n"] = "north", ["e"] = "east", ["s"] = "south", ["w"] = "west"}
  if not getPath(rFrom, rTo) then
    return false
  end
  -- Logic: Look for a direction repeated at least two times.
  -- count the number of times it repeats, then look that many rooms ahead.
  -- if that room also contains the direction we're headed, just travel that many directions.
  -- otherwise, dash.
  local repCount = 1
  local index = 1
  local dashExaust = false
  while mmp.speedWalkDir[index] do
    if not table.contains(getSpecialExits(mmp.speedWalkPath[index]), mmp.speedWalkDir[index]) then
      dashExaust = false
      repCount = 1
      while mmp.speedWalkDir[index + repCount] == mmp.speedWalkDir[index] do
        repCount = repCount + 1
        if repCount == 11 then
          dashExaust = true
          break
        end
      end
      if repCount &gt; 1 then
        -- Found direction repitition. Calculate dash path.
        local exits = getRoomExits(mmp.speedWalkPath[index + (repCount - 1)])
        local pname = ""
        for word in mmp.speedWalkDir[index]:gmatch("%w") do
          pname = pname .. (dRef[word] or word)
        end
        if not exits[pname] or dashExaust then
          -- Final room in this direction does not continue, dash!
          table.insert(currentPath, string.format("%s %s", dashtype, mmp.speedWalkDir[index]))
          currentIds[#currentIds + 1] = mmp.speedWalkPath[index + repCount - 1]
        else
          -- Final room in this direction continues onwards, don't dash unless on achaea
          if mmp.game == "achaea" then
            table.insert(
              currentPath, string.format("%s %s %s", dashtype, mmp.speedWalkDir[index], repCount)
            )
            currentIds[#currentIds + 1] = mmp.speedWalkPath[index + repCount - 1]
          else
            for i = 1, repCount do
              table.insert(currentPath, mmp.speedWalkDir[index])
              currentIds[#currentIds + 1] = mmp.speedWalkPath[index + i - 1]
            end
          end
        end
        index = index + repCount
      else
        -- No repetition, just add the direction.
        table.insert(currentPath, mmp.speedWalkDir[index])
        currentIds[#currentIds + 1] = mmp.speedWalkPath[index]
        index = index + 1
      end
    else
      -- Special exit, skip over this step
      table.insert(currentPath, mmp.speedWalkDir[index])
      currentIds[#currentIds + 1] = mmp.speedWalkPath[index]
      index = index + 1
    end
  end
  mmp.speedWalkDir = currentPath
  mmp.speedWalkPath = currentIds
  return true
end

-- a certain version of the mapper gave us special exits prepended with 0 or 1 in the command
-- depending on if it was locked. Need to remove these before we can use them

function mmp.fixSpecialExits(directions)
  for i = 1, #directions do
    if directions[i]:match("^%d") then
      directions[i] = directions[i]:sub(2)
    end
  end
end

-- cleanup function to remove the temp special exit we made

function mmp.clearspecials(deleterooms)
  local t = getSpecialExits(mmp.currentroom)
  for connectingroom, exits in pairs(t) do
    if table.contains(deleterooms, connectingroom) then
      -- delete the special exits linking to this room
      for command, locked in pairs(exits) do
        removeSpecialExit(mmp.currentroom, command)
      end
    end
  end
end

local function getShortestOfMultipleRooms(possibleRooms)
  local shortestPath, closestRoom = {}, 0
  mmp.computeShortestWatch = mmp.computeShortestWatch or createStopWatch()
  startStopWatch(mmp.computeShortestWatch)
  raiseEvent("mmp link externals")
  local getStopWatchTime, tonumber, getPath = getStopWatchTime, tonumber, mmp.getPath
  --mmp.echo(string.format("Have %s rooms nodes, %ss taken so far...", table.size(possibleRooms), getStopWatchTime(mmp.computeShortestWatch)))
  -- allocate only 500ms to finding the shortest path, or more if we failed to find anything
  local checkedsofar, outoftime = 0
  for id, _ in pairs(possibleRooms) do
    if mmp.getPath(mmp.currentroom, tonumber(id)) then
      if closestRoom == 0 or #shortestPath &gt; #speedWalkPath then
        shortestPath = speedWalkPath
        closestRoom = tonumber(id)
      end
    end
    checkedsofar = checkedsofar + 1
    if (getStopWatchTime(mmp.computeShortestWatch) &gt;= .5) then
      outoftime = true
      break
    end
    -- mmp.echo(string.format("pathed from %s to %s, running time so far: %s", mmp.currentroom, id, getStopWatchTime(mmp.computeShortestWatch)))
  end
  --mmp.echo(string.format("total time took: %s", getStopWatchTime(mmp.computeShortestWatch)))
  stopStopWatch(mmp.computeShortestWatch)
  return closestRoom, outoftime, checkedsofar
end

function mmp.gotoAreaID(areaid, number, dashtype)
  if not areaid or not tonumber(areaid) then
    mmp.echo("To where do you want to go?")
    return
  end
  areaid = tonumber(areaid)
  if not mmp.areatabler[areaid] then
    mmp.echo("Invalid area ID selected")
    return
  end
  local possibleRooms, shortestBorder = {}, 0
  possibleRooms = mmp.getAreaBorders(areaid)
  shortestBorder, outoftime, checkedsofar = getShortestOfMultipleRooms(possibleRooms)
  if shortestBorder == 0 then
    if outoftime then
      mmp.echo(
        string.format(
          "I checked %d of the %d possible exits \"%s\" has, but none of the ways there worked and it was taking too long :( try doing this again?",
          checkedsofar,
          table.size(possibleRooms),
          getRoomAreaName(areaid)
        )
      )
    else
      mmp.echo(
        "Checked " ..
        table.size(possibleRooms) ..
        " exits in that area, and none of them worked :( I Don't know how to get you there."
      )
    end
    mmp.speedWalkPath = {}
    mmp.speedWalkDir = {}
    speedWalkCounter = 0
    raiseEvent("mmapper failed path")
    raiseEvent("mmp clear externals")
    return
  end
  raiseEvent("mmp clear externals")
  mmp.gotoRoom(shortestBorder, dashtype, "area")
end

function mmp.gotoFeature(partialFeatureName, dashtype)
  local mapFeatures = mmp.getMapFeatures()
  local feature
  if mapFeatures[partialFeatureName:lower()] then
    feature = partialFeatureName:lower()
  else
    for key in pairs(mapFeatures) do
      if key:find(partialFeatureName:lower()) then
        feature = key
        break
      end
    end
  end
  if not feature then
    mmp.echo("No feature like " .. partialFeatureName .. " found.")
    return
  end
  local rooms = searchRoomUserData("feature-" .. feature, "true")
  -- change the structure of the table so it fits getShortestOfMultipleRooms
  local possibleRooms = {}
  for _, room in pairs(rooms) do
    possibleRooms[room] = true
  end
  closestFeature, outoftime, checkedsofar = getShortestOfMultipleRooms(possibleRooms)
  if closestFeature == 0 then
    if outoftime then
      mmp.echo(
        string.format(
          "I checked %d of the %d possible features \"%s\" has, but none of the ways there worked and it was taking too long :( try doing this again?",
          checkedsofar,
          table.size(possibleRooms),
          partialFeatureName
        )
      )
    else
      mmp.echo(
        "Checked " ..
        table.size(possibleRooms) ..
        " rooms with that feature, and none of them worked :( I Don't know how to get you there."
      )
    end
    mmp.speedWalkPath = {}
    mmp.speedWalkDir = {}
    speedWalkCounter = 0
    raiseEvent("mmapper failed path")
    raiseEvent("mmp clear externals")
    return
  end
  raiseEvent("mmp clear externals")
  mmp.gotoRoom(closestFeature, dashtype, "area")
end</script>
					<eventHandlerList>
						<string>RoomNum</string>
						<string>gmcp.Room.Info</string>
					</eventHandlerList>
				</Script>
				<ScriptGroup isActive="yes" isFolder="yes">
					<name>Wings and other fast travel</name>
					<packageName></packageName>
					<script>-------------------------------------------------
--         Put your Lua functions here.        --
--                                             --
-- Note that you can also use external Scripts --
-------------------------------------------------
</script>
					<eventHandlerList />
					<Script isActive="yes" isFolder="no">
						<name>Wings functions</name>
						<packageName></packageName>
						<script>local exitsCreated = exitsCreated or {}

function mmp.tempSpecialExit(start, destination, command, weight)
  if type(destination) == "string" then
    -- no start room given, so shift all arguments one to the right
    start, destination, command, weight = mmp.currentroom, start, destination, command
  end
  table.insert(exitsCreated, {room = start, command = command})
  addSpecialExit(start, destination, command)
  if weight then
    setExitWeight(start, command, weight)
  end
end

function mmp.removeWings()
  --remove all special exits that were created by addWings, then resets the table.
  for _, exit in ipairs(exitsCreated) do
    removeSpecialExit(exit.room, exit.command)
  end
  exitsCreated = {}
end

registerAnonymousEventHandler("mmp clear externals", "mmp.removeWings")</script>
						<eventHandlerList />
					</Script>
					<Script isActive="yes" isFolder="no">
						<name>Achaea</name>
						<packageName></packageName>
						<script>registerAnonymousEventHandler("mmp link externals", "mmp.addWingsAchaea")

function mmp.orbed()
	-- orb of confinement - PapaGuacamole
  local areaID = getRoomArea(mmp.currentroom)
  return
		(mmp.game == "achaea" and
  		(
    		(mmp.settings.orbashtan and areaID == 49) or
    		(mmp.settings.orbcyrene and areaID == 57) or
    		(mmp.settings.orbeleusis and areaID == 51) or
    		(mmp.settings.orbhashan and areaID == 55) or
    		(mmp.settings.orbmhaldor and areaID == 44) or
    		(
    			mmp.settings.orbtargossas and
    			((mmp.settings.crowdmap and areaID == 368) or (not mmp.settings.crowdmap and areaID == 271))
    		)
  		)
		)
end

function mmp.addWingsAchaea()
  --Trimmed down version of the original function, meant to only be used for wings. (Where the command varies based on several MCONFIGS)

  local function getcmd(word)
    return
      mmp.settings.removewings and
      string.format(
        [[script:sendAll("wear wings", "say *%s %s", "remove wings", false)]],
        (mmp.settings.winglanguage and mmp.settings.winglanguage or ""),
        word
      ) or
      string.format(
        [[script:send("say *%s %s", false)]],
        (mmp.settings.winglanguage and mmp.settings.winglanguage or ""),
        word
      )
  end
  --creates a special exit from your current room to a destination, and adds it to a table so it can be easily cleared later.
  --Achaea stuff!
  if mmp.game ~= "achaea" then
    return
  end
  --WINGS!
  if
    (mmp.settings.duanathar or mmp.settings.duanatharan or mmp.settings.duantahar) and
    gmcp.Room and
    not table.contains(gmcp.Room.Info.details, "indoors") and
    not mmp.orbed()
  then
    --Sarapis wings.
    if mmp.oncontinent(getRoomArea(mmp.currentroom), "Main") then
      if mmp.settings.duanatharan then
        mmp.tempSpecialExit(4882, getcmd("duanatharan"))
        mmp.tempSpecialExit(3885, getcmd("duanathar"))
      elseif mmp.settings.duantahar then
        mmp.tempSpecialExit(42319, getcmd("duanathar"))
        mmp.tempSpecialExit(4882, getcmd("duanatharan"))
      else
        mmp.tempSpecialExit(3885, getcmd("duanathar"))
      end
      --Meropis Wings
    elseif mmp.oncontinent(getRoomArea(mmp.currentroom), "Meropis") then
      if mmp.settings.duanatharan then
        mmp.tempSpecialExit(51603, getcmd("duanatharan"))
        mmp.tempSpecialExit(51188, getcmd("duanathar"))
      elseif mmp.settings.duantahar then
        mmp.tempSpecialExit(42319, getcmd("duanathar"))
        mmp.tempSpecialExit(51603, getcmd("duanatharan"))
      else
        mmp.tempSpecialExit(51188, getcmd("duanathar"))
      end
    end
    if
      mmp.settings.duanatharic and
      gmcp.Room and
      not table.contains(gmcp.Room.Info.details, "indoors") and
      not mmp.orbed()
    then
      --Island wings.
      if
        mmp.oncontinent(getRoomArea(mmp.currentroom), "Main") or
        mmp.oncontinent(getRoomArea(mmp.currentroom), "Arcadia") or
        mmp.oncontinent(getRoomArea(mmp.currentroom), "Outer") or
        mmp.oncontinent(getRoomArea(mmp.currentroom), "Meropis") or
        mmp.oncontinent(getRoomArea(mmp.currentroom), "Island") or
        mmp.oncontinent(getRoomArea(mmp.currentroom), "North")
      then
        mmp.tempSpecialExit(47571, getcmd("duanatharic"))
      end
    end
  end
  -- Stratospheric Harness support -- PapaGuacamole
  if
    mmp.settings.harness and gmcp.Room and not table.contains(gmcp.Room.Info.details, "indoors")
  then
    -- eastern isles
    if mmp.oncontinent(getRoomArea(mmp.currentroom), "Eastern_Isles") then
      mmp.tempSpecialExit(54231, "Shake Harness")
      -- northern isles
    elseif mmp.oncontinent(getRoomArea(mmp.currentroom), "Northen_Isles") then
      mmp.tempSpecialExit(48719, "Shake Harness")
      -- western isles
    elseif mmp.oncontinent(getRoomArea(mmp.currentroom), "Western_Isles") then
      mmp.tempSpecialExit(54632, "Shake Harness")
    end
  end
  -- Air Elemental Aero Soar
  if
    mmp.settings.soar and
    gmcp.Room and
    not table.contains(gmcp.Room.Info.details, "indoors") and
    not mmp.orbed()
  then
    --Sarapis soar.
    if mmp.oncontinent(getRoomArea(mmp.currentroom), "Main") then
      if
        gmcp.Char.Status.class == "air Elemental Lord" or
        gmcp.Char.Status.class == "air Elemental Lady"
      then
        mmp.tempSpecialExit(4882, "aero soar high", 10)
        -- duanatharan
        mmp.tempSpecialExit(3885, "aero soar low", 10)
        -- duanathar
        mmp.tempSpecialExit(54173, "aero soar stratosphere", 10)
        -- Stratosphere!
      end
      --Meropis soar
    elseif mmp.oncontinent(getRoomArea(mmp.currentroom), "Meropis") then
      if
        gmcp.Char.Status.class == "air Elemental Lord" or
        gmcp.Char.Status.class == "air Elemental Lady"
      then
        mmp.tempSpecialExit(51603, "aero soar high", 10)
        -- duanatharan
        mmp.tempSpecialExit(51188, "aero soar low", 10)
        -- duanathar
        mmp.tempSpecialExit(54173, "aero soar stratosphere", 10)
        -- Stratosphere!
      end
    end
  end
  --universe tarot
  if mmp.settings.universe and mmp.oncontinent(getRoomArea(mmp.currentroom), "Main") then
    local tarotLocations =
      {
        azdun = 1772,
        blackrock = 10573,
        bitterfork = 25093,
        genji = 10091,
        manusha = 8730,
        newthera = 20386,
        caerwitrin = 17678,
        shastaan = 2855,
        mannaseh = 1745,
        manara = 9124,
        brasslantern = 30383,
        mhojave = 39103,
        thraasi = 35703,
        newhope = 25581,
      }
    for village, roomnum in pairs(tarotLocations) do
      mmp.tempSpecialExit(
        roomnum,
        [=[script:
        mmp.customwalkdelay(4.5)
        send("fling universe at ground",false)
        tempTimer(4,[[send("touch ]=] ..
        village ..
        [=[",false)]])
        ]=],
        10
      )
    end
  end
  --gare
  if mmp.settings.gare and gmcp.Char and string.match(gmcp.Char.Status.race, "Dragon") then
    if
      mmp.oncontinent(getRoomArea(mmp.currentroom), "Main") or
      mmp.oncontinent(getRoomArea(mmp.currentroom), "Meropis") or
      mmp.oncontinent(getRoomArea(mmp.currentroom), "Island") or
      mmp.oncontinent(getRoomArea(mmp.currentroom), "North") or
      mmp.oncontinent(getRoomArea(mmp.currentroom), "Arcadia")
    then
      mmp.tempSpecialExit(
        12695,
        [=[script:
        mmp.customwalkdelay(4.5)
        send("pierce the veil",false)
        ]=],
        20
      )
    end
  end
  --clears the path cache so it calculates a new route.
  mmp.clearpathcache()
end</script>
						<eventHandlerList />
					</Script>
					<Script isActive="yes" isFolder="no">
						<name>Lusternia</name>
						<packageName></packageName>
						<script>registerAnonymousEventHandler("mmp link externals", "mmp.addWingsLusternia")

local function linkBubblix(area, entranceRoom, command)
  -- always add this link to allow pathfinding to the bubble regardless of indoor/outdoor
  mmp.tempSpecialExit(148, entranceRoom, command)
  -- always add this link to allow pathfinding from the bubbe regardless of indoor/outdoor
  mmp.tempSpecialExit(entranceRoom, 6831, command)
  if mmp.usebubblix() then
    if not table.contains(gmcp.Room.Info.details, "an Aetherbubble") then
      -- we are not in an Aetherbubble and could use a bubblix, so allow its use from here
      mmp.tempSpecialExit(entranceRoom, command)
    elseif gmcp.Room.Info.area == area then
      -- we are in an Aetherbubble and it's the one the bubblix belongs to and we could use a bubblix, so allow its use from here
      mmp.tempSpecialExit(6831, command)
    end
  end
end

function mmp.addWingsLusternia()
  if mmp.game ~= "lusternia" then
    return
  end
  --that dorky prism
  if mmp.useprism() then
    if mmp.settings.prism then
      mmp.tempSpecialExit(6182, "touch prism")
    end
  end
  --items that use standard bix rules
  if mmp.usebix() then
    --cubix and things
    if mmp.settings.medallion then
      mmp.tempSpecialExit(13367, "touch medallion")
    end
    if mmp.settings.cubix then
      mmp.tempSpecialExit(6184, "touch cubix")
    end
    if mmp.settings.torus and mmp.usebix() then
      mmp.tempSpecialExit(28548, "touch torus")
    end
    --epic quest items
    if mmp.settings.fingerblade then
      mmp.tempSpecialExit(18777, "touch fingerblade")
    end
    if mmp.settings.blossom then
      mmp.tempSpecialExit(18730, "touch blossom")
    end
    if mmp.settings.mandala then
      mmp.tempSpecialExit(19563, "touch mandala")
    end
    if mmp.settings.belt then
      mmp.tempSpecialExit(19627, "touch enlightened")
    end
    if mmp.settings.mantle then
      mmp.tempSpecialExit(18762, "touch starlight")
    end
    if mmp.settings.key then
      mmp.tempSpecialExit(18732, "touch key")
    end
    --curio collections!
    if mmp.settings.bonecurio then
      mmp.tempSpecialExit(28613, "curio collection activate bone")
    end
    if mmp.settings.flowercurio then
      mmp.tempSpecialExit(28624, "curio collection activate flower")
    end
    if mmp.settings.utensilcurio then
      mmp.tempSpecialExit(28617, "curio collection activate utensil")
    end
    if mmp.settings.fluttercurio then
      mmp.tempSpecialExit(28622, "curio collection activate flutter")
    end
    if mmp.settings.toolcurio then
      mmp.tempSpecialExit(28586, "curio collection activate tool")
    end
    if mmp.settings.facecurio then
      mmp.tempSpecialExit(28433, "curio collection activate face")
    end
    if mmp.settings.toycurio then
      mmp.tempSpecialExit(21548, "curio collection activate toy")
    end
    if mmp.settings.feathercurio then
      mmp.tempSpecialExit(28591, "curio collection activate feather")
    end
    if mmp.settings.figurecurio then
      mmp.tempSpecialExit(28312, "curio collection activate figure")
    end
    if mmp.settings.vernalcurio then
      mmp.tempSpecialExit(29908, "curio collection activate vernal")
    end
    if mmp.settings.soullesscurio then
      mmp.tempSpecialExit(29909, "curio collection activate soulless")
    end
  end
  --all the bubblixes!
  if mmp.settings.screwdriver then
    linkBubblix("the Facility", 10185, "touch screwdriver")
  end
  if mmp.settings.wheel then
    linkBubblix("the Dramube Triangle", 10509, "touch wheel")
  end
  if mmp.settings.mud then
    linkBubblix("Mucklemarsh", 9985, "touch mud")
  end
  if mmp.settings.snowglobe then
    linkBubblix("the Great Spirit Tree", 10992, "shake snowglobe")
  end
  if mmp.settings.cookie then
    linkBubblix("Crumkindivia", 9888, "touch cookie")
  end
  if mmp.settings.head then
    linkBubblix("the Bubble of Bottledowns", 11811, "touch doll")
  end
  if mmp.settings.icicle then
    linkBubblix("Frosticia", 10457, "touch icicle")
  end
  if mmp.settings.tibia then
    linkBubblix("the Cankermore Battlegrounds", 11600, "touch tibia")
  end
  mmp.clearpathcache()
end</script>
						<eventHandlerList />
					</Script>
					<Script isActive="yes" isFolder="no">
						<name>Imperian</name>
						<packageName></packageName>
						<script>registerAnonymousEventHandler("mmp link externals", "mmp.addWingsImperian")
mmp.imperian = mmp.imperian or {}

function mmp.addWingsImperian()
  local function getcmd(word)
    return
      mmp.settings.removewings and
      [[script:if mmp.flying then sendAll("queue eqbal wear wings","queue eqbal say ]] ..
      word ..
      [[","queue eqbal remove wings",false) else sendAll("wear wings","fly",false) end]] or
      [[script:if mmp.flying then sendAll("queue eqbal say ]] ..
      word ..
      [[",false) else sendAll("fly",false) end]]
  end

  if
    (mmp.settings.shekinah or mmp.settings.suriel) and
    gmcp.Room and
    not table.contains(gmcp.Room.Info.details, "indoors") and
    not table.contains(gmcp.Room.Info.details, "considered indoors") and
    table.contains(mmp.imperian.wingAbleAreas, getRoomArea(mmp.currentroom))
  then
    if mmp.settings.shekinah then
      -- Seraphim wings - "Say shekinah"
      local weight = 15
      if mmp.flying then
        weight = 1
      end
      mmp.tempSpecialExit(4882, getcmd("shekinah"), weight)
    elseif mmp.settings.suriel then
      -- Using Orphanim wings, SURIEL works, takes you to 3885
      local weight = 15
      if mmp.flying == "1" then
        weight = 1
      end
      mmp.tempSpecialExit(3885, getcmd("suriel"), weight)
      -- clear cache so mmp.getPath accounts for the new way
    end
  end
  mmp.clearpathcache()
end

mmp.imperian.wingAbleAreas =
  {
    45,
    35,
    15,
    56,
    101,
    123,
    36,
    110,
    18,
    75,
    172,
    9,
    66,
    148,
    113,
    175,
    188,
    244,
    88,
    171,
    118,
    295,
    167,
    25,
    139,
    70,
    132,
    28,
    135,
    174,
    8,
    275,
    107,
    53,
    112,
    185,
    158,
    164,
    299,
    74,
    351,
    16,
    63,
    269,
    77,
    85,
    142,
    328,
    318,
    46,
    95,
    17,
    329,
    33,
    96,
    82,
    47,
    144,
    121,
    3,
    68,
    51,
    134,
    1,
    319,
    11,
    19,
    129,
    146,
    65,
    324,
    325,
    125,
    191,
    163,
    30,
    54,
    292,
    290,
    7,
    136,
    267,
    335,
    102,
    43,
    89,
    20,
    169,
    49,
    147,
    196,
    301,
    252,
    99,
    145,
    195,
    130,
    42,
    270,
    166,
    128,
    168,
    34,
    223,
    170,
    22,
    27,
    138,
    115,
    337,
    44,
    6,
    161,
    32,
    92,
    83,
    294,
    104,
    69,
    23,
    155,
    350,
    48,
    57,
    150,
    97,
    341,
    105,
    340,
    5,
    194,
    338,
    327,
    271,
    323,
    322,
    79,
    122,
    62,
    131,
    176,
    133,
    310,
    307,
    120,
    137,
    13,
    76,
    160,
    60,
    304,
    94,
    306,
    303,
    81,
    291,
    276,
    302,
    149,
    297,
    179,
    272,
    41,
    293,
    289,
    91,
    159,
    71,
    157,
    298,
    266,
    208,
    109,
    80,
    14,
    2,
    186,
    12,
    178,
    52,
    124,
    274,
    141,
    343,
    177,
    67,
    103,
    111,
    72,
    268,
    87,
    117,
    21,
    353,
    253,
    93,
    308,
    40,
    248,
    243,
    4,
    153,
    212,
    116,
    84,
    197,
    61,
    78,
    184,
    173,
    31,
    98,
    114,
    162,
    50,
    37,
    140,
    73,
    127,
    156,
    90,
    100,
    143,
    309,
    126,
  }</script>
						<eventHandlerList />
					</Script>
				</ScriptGroup>
				<Script isActive="yes" isFolder="no">
					<name>Utilities</name>
					<packageName></packageName>
					<script>-- functions internal to the mapper

function mmp.highlight_unfinished_rooms()
	if not mmp.areatable then return end
	for a,b in pairs (mmp.areatable) do
		local roomList = getAreaRooms(b) or {}
		for c,d in pairs (roomList) do
			if (getRoomName(d) == "") then
				local fgr,fgg,fgb = unpack(color_table.red)
				local bgr,bgg,bgb = unpack(color_table.blue)
				highlightRoom(d, fgr,fgg,fgb,bgr,bgg,bgb, 1, 100, 100)
			end
		end
	end
end

function mmp.usebix()
	if mmp.game ~= "lusternia" then return end

	if (table.contains(gmcp.Room.Info.details, "the Prime Material Plane") or
		table.contains(gmcp.Room.Info.details, "the Ethereal Plane") or
		table.contains(gmcp.Room.Info.details, "the Water Elemental Plane") or
		table.contains(gmcp.Room.Info.details, "the Air Elemental Plane") or
		table.contains(gmcp.Room.Info.details, "the Fire Elemental Plane") or
		table.contains(gmcp.Room.Info.details, "the Earth Elemental Plane") or
		table.contains(gmcp.Room.Info.details, "Celestia, Plane of Light") or
		table.contains(gmcp.Room.Info.details, "the Tainted Plane of Nil") or
		table.contains(gmcp.Room.Info.details, "the Cosmic Plane of Continuum") or
		table.contains(gmcp.Room.Info.details, "the Cosmic Plane of Vortex") or
		table.contains(gmcp.Room.Info.details, "the Astral Plane")) and
        gmcp.Room.Info.area ~= "the City of Climanti" and
		table.contains(gmcp.Room.Info.details, "outdoors") then
		return true
	end
	return false
end

function mmp.useprism()
	if mmp.game ~= "lusternia" then return end
	if (table.contains(gmcp.Room.Info.details, "the Prime Material Plane") or
	table.contains(gmcp.Room.Info.details, "the Ethereal Plane") or
	table.contains(gmcp.Room.Info.details, "the Water Elemental Plane") or
	table.contains(gmcp.Room.Info.details, "the Air Elemental Plane") or
	table.contains(gmcp.Room.Info.details, "the Fire Elemental Plane") or
	table.contains(gmcp.Room.Info.details, "the Earth Elemental Plane")) and
    gmcp.Room.Info.area ~= "the City of Climanti" and
	table.contains(gmcp.Room.Info.details, "outdoors") then
		return true
	end
	return false
end
function mmp.usebubblix()
	if mmp.game ~= "lusternia" then return end

	if ((table.contains(gmcp.Room.Info.details, "the Prime Material Plane") or
		table.contains(gmcp.Room.Info.details, "the Ethereal Plane") or
		table.contains(gmcp.Room.Info.details, "the Water Elemental Plane") or
		table.contains(gmcp.Room.Info.details, "the Air Elemental Plane") or
		table.contains(gmcp.Room.Info.details, "the Fire Elemental Plane") or
		table.contains(gmcp.Room.Info.details, "the Earth Elemental Plane")) and
        gmcp.Room.Info.area ~= "the City of Climanti" and
		table.contains(gmcp.Room.Info.details, "outdoors")) or
		table.contains(gmcp.Room.Info.details, "an Aetherbubble") then
		return true
	end
	return false
end</script>
					<eventHandlerList />
					<Script isActive="yes" isFolder="no">
						<name>Locating &amp; echoing functions</name>
						<packageName></packageName>
						<script>local function filterRooms(rooms, area)
  local unassignedRooms = {}
  local areaRooms = {}
  for roomnum, roomname in pairs(rooms) do
    local roomarea = getRoomUserData(roomnum, "Game Area")
    if roomarea == "" then
      unassignedRooms[roomnum] = roomname
    elseif roomarea == area then
      areaRooms[roomnum] = roomname
    end
  end
  return next(areaRooms) and areaRooms or unassignedRooms
end

-- for a given room name, we'll echo all the vnums

function mmp.echonums(roomname, area)
  local t = mmp.searchRoomExact(roomname)
  if area then
    t = filterRooms(t, area)
  end
  if not next(t) then
    echo("?")
    return nil
  end
  -- transform the kv table into a table of tables for cleaner code.
  -- + perhaps Mudlet in future will give this us anyway, sorted by relevancy
  local dt = {}
  for roomid, room in pairs(t) do
    dt[#dt + 1] = {name = room, id = roomid}
  end
  -- we can have nothing if we asked for exact match
  if not dt[1] then
    echo("?---")
    return
  end
  -- display first three ids. Can't really nicely table.concat them.
  cechoLink(
    "&lt;" .. mmp.settings.echocolour .. "&gt;" .. dt[1].id,
    'mmp.gotoRoom(' .. dt[1].id .. ')',
    string.format("Go to %s (%s)", dt[1].id, dt[1].name),
    true
  )
  if not dt[2] then
    return
  end
  echo(", ")
  cechoLink(
    "&lt;" .. mmp.settings.echocolour .. "&gt;" .. dt[2].id,
    'mmp.gotoRoom(' .. dt[2].id .. ')',
    string.format("Go to %s (%s)", dt[2].id, dt[2].name),
    true
  )
  if not dt[3] then
    return
  end
  echo(", ")
  cechoLink(
    "&lt;" .. mmp.settings.echocolour .. "&gt;" .. dt[3].id,
    'mmp.gotoRoom(' .. dt[3].id .. ')',
    string.format("Go to %s (%s)", dt[3].id, dt[3].name),
    true
  )
  if not dt[4] then
    return
  end
  echo(", ...")
end

function mmp.roomEcho(query)
  local result = mmp.searchRoom(query)
  if not tonumber(select(2, next(result))) then
    for roomid, roomname in pairs(result) do
      roomid = tonumber(roomid)
      cecho("&lt;DarkSlateGrey&gt; (")
      cechoLink(
        "&lt;" .. mmp.settings.echocolour .. "&gt;" .. roomid,
        'mmp.gotoRoom(' .. roomid .. ')',
        string.format("Go to %s (%s)", roomid, tostring(roomname)),
        true
      )
      cecho("&lt;DarkSlateGrey&gt;)")
    end
  else
    for roomname, roomid in pairs(result) do
      roomid = tonumber(roomid)
      cecho("&lt;DarkSlateGrey&gt; (")
      cechoLink(
        "&lt;" .. mmp.settings.echocolour .. "&gt;" .. roomid,
        'mmp.gotoRoom(' .. roomid .. ')',
        string.format("Go to %s (%s)", roomid, tostring(roomname)),
        true
      )
      cecho("&lt;DarkSlateGrey&gt;)")
    end
  end
end

function mmp.locateAndEcho(room, person, area)
  local t = mmp.searchRoomExact(room)
  if area then
    t = filterRooms(t, area)
  end
  echo("  (")
  mmp.echonums(room, area)
  echo(")")
  -- lowercase results
  for k, v in pairs(t) do
    if tonumber(k) then
      t[k] = v:lower()
    else
      t[k:lower()] = v
    end
  end
  if not (t[room:lower()] or table.contains(t, room:lower())) then
    return
  end
  echo("\n")
  if table.size(t) == 1 then
    local k, v = next(t)
    cecho(
      "&lt;red&gt;From your knowledge, that room is in &lt;orange_red&gt;" ..
      mmp.cleanAreaName(mmp.areatabler[getRoomArea(type(k) == "number" and k or v)] or "?") ..
      "&lt;red&gt;."
    )
  else
    local k, v = next(t)
    local areas = {}
    if type(k) == "number" then
      for k, _ in pairs(t) do
        areas[mmp.areatabler[getRoomArea(k)] or "?"] = true
      end
    else
      for _, k in pairs(t) do
        areas[mmp.areatabler[getRoomArea(k)] or "?"] = true
      end
    end
    local flattened_areas = {}
    for k, _ in pairs(areas) do
      if k ~= "" then
        flattened_areas[#flattened_areas + 1] = mmp.cleanAreaName(k)
      end
    end
    cecho(
      "&lt;red&gt;From your knowledge, that room might be in &lt;orange_red&gt;" ..
      table.concat(flattened_areas, ", or ") ..
      "&lt;red&gt;."
    )
  end
  if person then
    mmp.pdb[person] = room
    mmp.pdb_lastupdate[person] = true
    raiseEvent("mmapper updated pdb")
  end
end

function mmp.locateAndEchoSide(room, person)
  local t = mmp.searchRoomExact(room)
  echo("  (")
  mmp.echonums(room)
  echo(")")
  -- lowercase results
  for k, v in pairs(t) do
    if tonumber(k) then
      t[k] = v:lower()
    else
      t[k:lower()] = v
    end
  end
  if not (t[room:lower()] or table.contains(t, room:lower())) then
    return
  end
  --echo"\n"
  if table.size(t) == 1 then
    local k, v = next(t)
    cecho(
      "&lt;red&gt;  (" ..
      mmp.cleanAreaName(mmp.areatabler[getRoomArea(type(k) == "number" and k or v)] or "?") ..
      ")"
    )
  else
    local k, v = next(t)
    local areas = {}
    if type(k) == "number" then
      for k, _ in pairs(t) do
        areas[mmp.areatabler[getRoomArea(k)] or "?"] = true
      end
    else
      for _, k in pairs(t) do
        areas[mmp.areatabler[getRoomArea(k)] or "?"] = true
      end
    end
    local flattened_areas = {}
    for k, _ in pairs(areas) do
      if k ~= "" then
        flattened_areas[#flattened_areas + 1] = mmp.cleanAreaName(k)
      end
    end
    cecho("&lt;red&gt; (" .. table.concat(flattened_areas, ", ") .. ")")
  end
  if person then
    mmp.pdb[person] = room
    mmp.pdb_lastupdate[person] = true
    raiseEvent("mmapper updated pdb")
  end
end

function mmp.locateAndEchoInternal(room, person)
  local t = mmp.searchRoomExact(room)
  -- lowercase results
  for k, v in pairs(t) do
    if tonumber(k) then
      t[k] = v:lower()
    else
      t[k:lower()] = v
    end
  end
  if not (t[room:lower()] or table.contains(t, room:lower())) then
    return
  end
  --echo"\n"
  if table.size(t) == 1 then
    local k, v = next(t)
    cecho(
      "&lt;red&gt; in " ..
      mmp.cleanAreaName(mmp.areatabler[getRoomArea(type(k) == "number" and k or v)] or "?") ..
      "."
    )
  else
    local k, v = next(t)
    local areas = {}
    if type(k) == "number" then
      for k, _ in pairs(t) do
        areas[mmp.areatabler[getRoomArea(k)] or "?"] = true
      end
    else
      for _, k in pairs(t) do
        areas[mmp.areatabler[getRoomArea(k)] or "?"] = true
      end
    end
    local flattened_areas = {}
    for k, _ in pairs(areas) do
      if k ~= "" then
        flattened_areas[#flattened_areas + 1] = mmp.cleanAreaName(k)
      end
    end
    cecho("&lt;red&gt; in " .. table.concat(flattened_areas, ", ") .. ".")
  end
  echo("  (")
  mmp.echonums(room, true)
  echo(")")
  if person then
    mmp.pdb[person] = room
    mmp.pdb_lastupdate[person] = true
    raiseEvent("mmapper updated pdb")
  end
end</script>
						<eventHandlerList />
					</Script>
					<Script isActive="yes" isFolder="no">
						<name>Aliases</name>
						<packageName></packageName>
						<script>function mmp.roomWhoFind(query)
  if query:ends('.') then
    query = query:sub(1, -2)
  end
  local result = mmp.searchRoomExact(query)
  if type(result) == "string" or not next(result) then
    cecho("&lt;CadetBlue&gt;  You have no recollection of any room with that name.")
    return
  end
  if not tonumber(select(2, next(result))) then
    -- old style
    for roomid, roomname in pairs(result) do
      roomid = tonumber(roomid)
      cecho(string.format("  &lt;LightSlateGray&gt;%s&lt;DarkSlateGrey&gt; (", tostring(roomname)))
      cechoLink(
        "&lt;" .. mmp.settings.echocolour .. "&gt;" .. roomid,
        'mmp.gotoRoom(' .. roomid .. ')',
        string.format("Go to %s (%s)", roomid, tostring(roomname)),
        true
      )
      cecho(
        string.format(
          "&lt;DarkSlateGrey&gt;) &lt;white&gt;%s&lt;DarkSlateGrey&gt;.\n",
          tostring(mmp.areatabler[getRoomArea(roomid)])
        )
      )
    end
  else
    -- new style
    for roomname, roomid in pairs(result) do
      roomid = tonumber(roomid)
      cecho(string.format("  &lt;LightSlateGray&gt;%s&lt;DarkSlateGrey&gt; (", tostring(roomname)))
      cechoLink(
        "&lt;" .. mmp.settings.echocolour .. "&gt;" .. roomid,
        'mmp.gotoRoom(' .. roomid .. ')',
        string.format("Go to %s (%s)", roomid, tostring(roomname)),
        true
      )
      cecho(
        string.format(
          "&lt;DarkSlateGrey&gt;) &lt;white&gt;%s&lt;DarkSlateGrey&gt;.\n",
          tostring(mmp.areatabler[getRoomArea(roomid)])
        )
      )
    end
  end
end

function mmp.roomFind(query)
  if query:ends('.') then
    query = query:sub(1, -2)
  end
  local result = mmp.searchRoom(query)
  if type(result) == "string" or not next(result) then
    cecho("&lt;grey&gt;You have no recollection of any room with that name.")
    return
  end
  cecho("&lt;DarkSlateGrey&gt;You know the following relevant rooms:\n")

  local function showmeropis(roomid)
    if mmp.game ~= "achaea" then
      return ''
    end
    return mmp.oncontinent(getRoomArea(roomid), "Main") and '' or ' (Meropis)'
  end

  if not tonumber(select(2, next(result))) then
    -- old style
    for roomid, roomname in pairs(result) do
      roomid = tonumber(roomid)
      cecho(string.format("  &lt;LightSlateGray&gt;%s&lt;DarkSlateGrey&gt; (", tostring(roomname)))
      cechoLink(
        "&lt;" .. mmp.settings.echocolour .. "&gt;" .. roomid,
        'mmp.gotoRoom(' .. roomid .. ')',
        string.format("Go to %s (%s)", roomid, tostring(roomname)),
        true
      )
      cecho(
        string.format(
          "&lt;DarkSlateGrey&gt;) in &lt;LightSlateGray&gt;%s%s&lt;DarkSlateGrey&gt;.",
          mmp.cleanAreaName(tostring(mmp.areatabler[getRoomArea(roomid)])),
          showmeropis(roomid)
        )
      )
      fg("DarkSlateGrey")
      echoLink(
        " &gt; Show path\n",
        [[mmp.echoPath(mmp.currentroom, ]] .. roomid .. [[)]],
        "Display directions from here to " .. roomname,
        true
      )
      resetFormat()
    end
  else
    -- new style
    for roomname, roomid in pairs(result) do
      roomid = tonumber(roomid)
      cecho(string.format("  &lt;LightSlateGray&gt;%s&lt;DarkSlateGrey&gt; (", tostring(roomname)))
      cechoLink(
        "&lt;" .. mmp.settings.echocolour .. "&gt;" .. roomid,
        'mmp.gotoRoom(' .. roomid .. ')',
        string.format("Go to %s (%s)", roomid, tostring(roomname)),
        true
      )
      cecho(
        string.format(
          "&lt;DarkSlateGrey&gt;) in &lt;LightSlateGray&gt;%s%s&lt;DarkSlateGrey&gt;.",
          mmp.cleanAreaName(tostring(mmp.areatabler[getRoomArea(roomid)])),
          showmeropis(roomid)
        )
      )
      fg("DarkSlateGrey")
      echoLink(
        " &gt; Show path\n",
        [[mmp.echoPath(mmp.currentroom, ]] .. roomid .. [[)]],
        "Display directions from here to " .. roomname,
        true
      )
      resetFormat()
    end
  end
  cecho(string.format("  &lt;DarkSlateGrey&gt;%d rooms found.\n", table.size(result)))
end

function mmp.echoRoomList(areaname, exact)
  local areaid, msg, multiples = mmp.findAreaID(areaname, exact)
  if areaid then
    local roomlist, endresult = getAreaRooms(areaid) or {}, {}
    -- obtain a room list for each of the room IDs we got
    local getRoomName = getRoomName
    for _, id in pairs(roomlist) do
      endresult[id] = getRoomName(id)
    end
    -- sort room IDs so we can display them in order
    table.sort(roomlist)
    -- now display something half-decent looking
    cecho(
      string.format(
        "&lt;DarkSlateGrey&gt;List of all rooms in &lt;grey&gt;%s&lt;DarkSlateGrey&gt; (areaid &lt;grey&gt;%s&lt;DarkSlateGrey&gt; - &lt;grey&gt;%d&lt;DarkSlateGrey&gt; rooms):\n",
        msg,
        areaid,
        table.size(endresult)
      )
    )
    local echoLink, sformat, fg, echo = echoLink, string.format, fg, cecho
    -- use pairs, as we can have gaps between room IDs
    for _, roomid in pairs(roomlist) do
      local roomname = endresult[roomid]
      fg("blue")
      cechoLink(
        "&lt;" .. mmp.settings.echocolour .. "&gt;" .. sformat("%6s", roomid),
        'mmp.gotoRoom(' .. roomid .. ')',
        string.format("Go to %s (%s)", roomid, tostring(roomname)),
        true
      )
      cecho(string.format("&lt;DarkSlateGrey&gt;: &lt;LightSlateGray&gt;%s&lt;DarkSlateGrey&gt;.\n", roomname))
    end
  elseif not id and #multiples &gt; 0 then
    mmp.echo("For which area would you want to list rooms for?")
    fg("DimGrey")
    for _, areaname in ipairs(multiples) do
      echo("  ");
      setUnderline(true)
      echoLink(
        areaname,
        'mmp.echoRoomList("' .. areaname .. '", true)',
        "Click to view the room list for " .. areaname,
        true
      )
      setUnderline(false)
      echo("\n")
    end
    resetFormat()
  else
    mmp.echo(string.format("Don't know of any area named '%s'.", areaname))
  end
end

function mmp.echoAreaList()
  local list = getAreaTable()
  local ids, rlist = {}, {}
  local totalroomcount = 0
  for area, id in pairs(list) do
    if id ~= 0 then
      ids[#ids + 1] = id;
      rlist[id] = area
    end
  end
  table.sort(ids)
  -- count the amount of rooms in an area, taking care to count the room in the 0th
  -- index as well if there is one
  -- saves the total room count on the side as well

  local function countrooms(areaid)
    local allrooms = getAreaRooms(areaid) or {}
    local areac = (#allrooms or 0) + (allrooms[0] and 1 or 0)
    totalroomcount = totalroomcount + areac
    return areac
  end

  cecho(string.format("&lt;DarkSlateGrey&gt;List of all areas we know of (click to view room list):\n"))
  local getAreaRooms, cecho, fg, echoLink, format, rep =
    getAreaRooms, cecho, fg, echoLink, string.format, string.rep
  for _, id in pairs(ids) do
    cecho(format("&lt;" .. mmp.settings.echocolour .. "&gt;%s%d ", rep(" ", (7 - #tostring(id))), id))
    -- +1 because getAreaRooms starts counting at 0
    fg("DarkSlateGrey")
    echoLink(
      rlist[id] .. (" "):rep(40 - #rlist[id]) .. "(" .. mmp.comma_value(countrooms(id)) .. " rooms)",
      'mmp.echoRoomList("' .. rlist[id] .. '", true)',
      "View the room list for " .. rlist[id],
      true
    )
    echo("\n")
  end
  cecho(
    string.format(
      "&lt;DarkSlateGrey&gt;Total amount of rooms in this map: %s\n", mmp.comma_value(totalroomcount)
    )
  )
end

function mmp.clearLabels(areaid)
  local function clearlabels(areaid)
    local t = getMapLabels(areaid)
    if type(t) ~= "table" then
      return
    end
    for labelid, _ in pairs(t) do
      deleteMapLabel(areaid, labelid)
    end
  end

  if areaid == "map" then
    for areaid in pairs(mmp.areatabler) do
      clearlabels(areaid)
    end
    mmp.echo("Cleared labels in all of the map.")
    return
  end
  clearlabels(areaid)
  mmp.echo(string.format("Cleared all labels in '%s'.", mmp.areatabler[areaid]))
end

function mmp.deleteArea(name, exact)
  local id, fname, ma = mmp.findAreaID(name, exact)
  if id then
    mmp.doareadelete(id)
  elseif next(ma) then
    mmp.echo("Which one of these specifically would you like to delete?")
    fg("DimGrey")
    for _, name in ipairs(ma) do
      echo("  ")
      setUnderline(true)
      echoLink(name, [[mmp.deleteArea("]] .. name .. [[", true)]], "Delete " .. name, true)
      setUnderline(false)
      echo("\n")
    end
    resetFormat()
  else
    mmp.echo("Don't know of that area.")
  end
  raiseEvent("mmp areas changed")
end

-- the function actually doing area deletion

function mmp.doareadelete(areaid)
  mmp.deletingarea = {}
  local t = mmp.deletingarea
  local rooms = getAreaRooms(areaid)
  t.roomcount = table.size(rooms)
  t.roombatches = {}
  t.currentbatch = 1
  t.areaid = areaid
  t.areaname = getAreaTableSwap()[areaid]
  -- delete the area right away if there's nothing in it
  if t.roomcount == 0 then
    deleteArea(t.areaid)
    mmp.echo("All done! The area was already gone/empty.")
  end
  local rooms_per_batch = 100
  -- split up rooms into tables of tables, to be deleted in batches so
  -- that our print statements in between get a chance to be processed
  for batch = 1, t.roomcount, 100 do
    t.roombatches[#t.roombatches + 1] = {}
    local onebatch = t.roombatches[#t.roombatches]
    for inbatch = 1, 100 do
      onebatch[#onebatch + 1] = rooms[batch + inbatch]
    end
  end

  function mmp.deletenextbatch()
    local t = mmp.deletingarea
    if not t then
      return
    end
    local currentbatch = t.roombatches[t.currentbatchi]
    if currentbatch == nil then
      deleteArea(t.areaid)
      mmp.echo("All done! Deleted the '" .. t.areaname .. "' area.")
      mmp.deletingarea = nil
      centerview(mmp.currentroom)
      return
    end
    local deleteRoom = deleteRoom
    for i = 1, #currentbatch do
      deleteRoom(currentbatch[i])
    end
    mmp.echo(
      string.format(
        "Deleted %d batch%s so far, %d left to go - %.2f%% done out of %d needed",
        t.currentbatchi,
        (t.currentbatchi == 1 and '' or 'es'),
        #t.roombatches - t.currentbatchi,
        (100 / #t.roombatches) * t.currentbatchi,
        #t.roombatches
      )
    )
    t.currentbatchi = t.currentbatchi + 1
    tempTimer(0.010, mmp.deletenextbatch)
  end

  t.currentbatchi = 1
  mmp.echo("Prepped room batches, starting deletion...")
  tempTimer(0.010, mmp.deletenextbatch)
end

function mmp.renameArea(name, exact)
  if not (mmp.currentroom or getRoomArea(mmp.currentroom)) then
    mmp.echo("Don't know what area are we in at the moment, to rename it.")
  else
    setAreaName(getRoomArea(mmp.currentroom), name)
    mmp.echo(
      string.format(
        "Renamed %s to %s (%d).",
        mmp.areatabler[getRoomArea(mmp.currentroom)],
        name,
        getRoomArea(mmp.currentroom)
      )
    )
    centerview(mmp.currentroom)
  end
  raiseEvent("mmp areas changed")
end

function mmp.roomArea(otherroom, name, exact)
  local id, fname, ma
  if tonumber(name) then
    id = tonumber(name);
    fname = mmp.areatabler[id]
  else
    id, fname, ma = mmp.findAreaID(name, exact)
  end
  if otherroom ~= "" and not mmp.roomexists(otherroom) then
    mmp.echo("Room id " .. otherroom .. " doesn't seem to exist.")
    return
  elseif otherroom == "" and not mmp.roomexists(mmp.currentroom) then
    mmp.echo("Don't know where we are at the moment.")
    return
  end
  otherroom = otherroom ~= "" and otherroom or mmp.currentroom
  if id then
    setRoomArea(otherroom, id)
    mmp.echo(
      string.format(
        "Moved %s to %s (%d).",
        (getRoomName(otherroom) ~= "" and getRoomName(otherroom) or "''"),
        fname,
        id
      )
    )
    centerview(otherroom)
  elseif next(ma) then
    mmp.echo("Into which area exactly would you like to move the room?")
    fg("DimGrey")
    for _, name in ipairs(ma) do
      echo("  ")
      setUnderline(true)
      echoLink(
        name, [[mmp.roomArea('', "]] .. name .. [[", true)]], "Move the room to " .. name, true
      )
      setUnderline(false)
      echo("\n")
    end
    resetFormat()
  else
    mmp.echo("Don't know of that area.")
  end
end

function mmp.getAreaBorders(areaid)
  if mmp.debug then
    mmp.getAreaBordersTimer = mmp.getAreaBordersTimer or createStopWatch()
    startStopWatch(mmp.getAreaBordersTimer)
  end
  -- make sure we have all exits into the area.
  raiseEvent("mmp link externals")
  local roomlist, endresult = getAreaRooms(areaid), {}
  -- sometimes getAreaRooms can give us no result :(
  if not roomlist then
    mmp.echo(
      "Sorry, seems we can't go there - getAreaRooms(" ..
      areaid ..
      ") didn't give us any results (Mudlet problem - redownloading the map might help fix it)"
    )
    return
  end
  if table.is_empty(roomlist) then
    mmp.echo(
      "Sorry, seems we can't go there - " .. getRoomAreaName(areaid) .. " has no rooms in it."
    )
    return
  end
  -- make a key-value list of room IDs
  local reverselist = {}
  for i = 0, #roomlist do
    reverselist[roomlist[i]] = true
  end
  local getRoomName, contains, pairs = getRoomName, table.contains, pairs
  if getAllRoomEntrances then
    for i = 0, #roomlist do
      local id = roomlist[i]
      local entrancesFrom = getAllRoomEntrances(id)
      for remoteRoomIndex = 1, #entrancesFrom do
        if not reverselist[entrancesFrom[remoteRoomIndex]] then
          endresult[id] = getRoomName(id)
        end
      end
    end
  else
    local getRoomExits, getSpecialExitsSwap = getRoomExits, getSpecialExitsSwap
    -- obtain a room list for each of the room IDs we got
    --for _, id in pairs(roomlist) do
    for i = 0, #roomlist do
      local id = roomlist[i]
      local exits = getRoomExits(id)
      for _, to in pairs(exits) do
        if not reverselist[to] then
          endresult[id] = getRoomName(id)
        end
      end
      local specialexits = getSpecialExitsSwap(id)
      for _, to in pairs(specialexits) do
        if not reverselist[to] then
          endresult[id] = getRoomName(id)
        end
      end
    end
  end
  if mmp.debug then
    mmp.echo(
      "mmp.getAreaBordersTimer() on areaid " ..
      areaid ..
      " took " ..
      stopStopWatch(mmp.getAreaBordersTimer) ..
      "s to run. Returned " ..
      table.size(endresult) ..
      " results."
    )
  end
  -- clean up external exits
  raiseEvent("mmp clear externals")
  return endresult
end

function mmp.viewArea(where, exact)
  if not where or not type(where) == "string" then
    mmp.echo("Which area would you like to view?")
    return
  end
  local areaid, msg, multiples = mmp.findAreaID(where, exact)
  if areaid then
    -- center on the first room ID, which typically is the start of an area
    local rooms = getAreaRooms(areaid) or {}
    if not rooms[1] then
      mmp.echo("The area has no rooms in it.")
    else
      centerview(rooms[1])
    end
  elseif not areaid and #multiples &gt; 0 then
    mmp.echo("Which area would you like to view exactly?")
    fg("DimGrey")
    for _, areaname in ipairs(multiples) do
      echo("  ");
      setUnderline(true)
      echoLink(
        areaname, 'mmp.viewArea("' .. areaname .. '", true)', "Click to view " .. areaname, true
      )
      setUnderline(false)
      echo("\n")
    end
    resetFormat()
    return
  else
    mmp.echo(string.format("Don't know of any area named '%s'.", where))
    return
  end
end

-- room label the room I'm in
-- room label 342 this is a label in room 342
-- room label green this is a green label where I'm at
-- room label green black this is a green to black label where I'm at
-- room label 34 green black this is a green to black label at room 34
-- how it works: split input string into tokens by space, then determine
-- what to do by checking first few tokens, and finally call the local
-- function with the proper arguments

function mmp.roomLabel(input)
  if not createMapLabel then
    mmp.echo(
      "Your Mudlet doesn't support createMapLabel() yet - please update to 2.0-test3 or better."
    )
    return
  end
  local tk = input:split(" ")
  local room, fg, bg, message = mmp.currentroom, "yellow", "red", "Some room label"
  -- input always have to be something, so tk[1] at least always exists
  if tonumber(tk[1]) then
    room = tonumber(table.remove(tk, 1))
    -- remove the number, so we're left with the colors or msg
  end
  -- next: is this a foreground color?
  if tk[1] and color_table[tk[1]] then
    fg = table.remove(tk, 1)
  end
  -- next: is this a backround color?
  if tk[1] and color_table[tk[1]] then
    bg = table.remove(tk, 1)
  end
  -- the rest would be our message
  if tk[1] then
    message = table.concat(tk, " ")
  end
  -- if we haven't provided a room ID and we don't know where we are yet, we can't make a label
  if not room then
    mmp.echo("We don't know where we are to make a label here.")
    return
  end
  local x, y = getRoomCoordinates(room)
  local f1, f2, f3 = unpack(color_table[fg])
  local b1, b2, b3 = unpack(color_table[bg])
  -- finally: do it :)
  local lid = createMapLabel(getRoomArea(room), message, x, y, f1, f2, f3, b1, b2, b3)
  mmp.echo(
    string.format(
      "Created new label #%d '%s' in %s.", lid, message, getRoomAreaName(getRoomArea(room))
    )
  )
end

function mmp.areaLabels(where, exact)
  if not getMapLabels then
    mmp.echo(
      "Your Mudlet doesn't support getMapLabels() yet - please update to 2.0-test3 or better."
    )
    return
  end
  if (not where or not type(where) == "string") and not mmp.currentroom then
    mmp.echo("For which area would you like to view labels?")
    return
  end
  if not where then
    exact = true
    where = getRoomAreaName(getRoomArea(mmp.currentroom))
  end
  local areaid, msg, multiples = mmp.findAreaID(where, exact)
  if areaid then
    local t = getMapLabels(areaid)
    if type(t) ~= "table" or not next(t) then
      mmp.echo(string.format("'%s' doesn't seem to have any labels.", getRoomAreaName(areaid)))
      return
    end
    mmp.echo(string.format("Area labels for '%s'", getRoomAreaName(areaid)))
    for labelid, labeltext in pairs(t) do
      fg("DimGrey")
      echo(string.format("  %d) %s (", labelid, labeltext))
      fg("orange_red")
      setUnderline(true)
      echoLink(
        'delete',
        string.format(
          'deleteMapLabel(%d, %d); mmp.echo("Deleted label #' .. labelid .. '")', areaid, labelid
        ),
        "Delete label #" .. labelid .. " from " .. getRoomAreaName(areaid)
      )
      setUnderline(false)
      echo(")\n")
    end
    resetFormat()
  elseif not areaid and #multiples &gt; 0 then
    mmp.echo("Which area would you like to view exactly?")
    fg("DimGrey")
    for _, areaname in ipairs(multiples) do
      echo("  ");
      setUnderline(true)
      echoLink(
        areaname,
        'mmp.areaLabels("' .. areaname .. '", true)',
        "Click to view labels in " .. areaname,
        true
      )
      setUnderline(false)
      echo("\n")
    end
    resetFormat()
    return
  else
    mmp.echo(string.format("Don't know of any area named '%s'.", where))
    return
  end
end

function mmp.echoPath(from, to)
  assert(tonumber(from) and tonumber(to), "mmp.getPath: both from and to have to be room IDs")
  if mmp.getPath(from, to) then
    mmp.echo(
      "&lt;white&gt;Directions from &lt;yellow&gt;" ..
      string.upper(searchRoom(from)) ..
      " &lt;white&gt;to &lt;yellow&gt;" ..
      string.upper(searchRoom(to)) ..
      "&lt;white&gt;:"
    )
    mmp.echo(table.concat(speedWalkDir, ", "))
    return mmp.speedWalkDir
  else
    mmp.echo(
      "&lt;white&gt;I can't find a way from &lt;yellow&gt;" ..
      string.upper(searchRoom(from)) ..
      " &lt;white&gt;to &lt;yellow&gt;" ..
      string.upper(searchRoom(to)) ..
      "&lt;white&gt;"
    )
  end
end

function mmp.listSpecialExits(filter)
  local c = 0
  mmp.echo("Listing special exits...")
  for area, areaname in pairs(mmp.areatabler) do
    local rooms = getAreaRooms(area) or {}
    for i = 0, #rooms do
      local exits = getSpecialExits(rooms[i] or 0)
      if exits and next(exits) then
        for exit, cmd in pairs(exits) do
          if type(cmd) == "table" then
            cmd = next(cmd)
          end
          if cmd:match("^%d") then
            cmd = cmd:sub(2)
          end
          if not filter or cmd:lower():find(filter, 1, true) then
            if getRoomArea(exit) ~= area then
              cecho(
                string.format(
                  "&lt;dark_slate_grey&gt;%s &lt;LightSlateGray&gt;(%d, in %s)&lt;dark_slate_grey&gt; &lt;MediumSlateBlue&gt;-&gt; &lt;coral&gt;%s -&lt;MediumSlateBlue&gt;&gt;&lt;dark_slate_grey&gt; %s &lt;LightSlateGray&gt;(%d, in %s)\n",
                  getRoomName(rooms[i]),
                  rooms[i],
                  areaname,
                  cmd,
                  getRoomName(exit),
                  exit,
                  mmp.areatabler[getRoomArea(exit)] or '?'
                )
              )
            else
              cecho(
                string.format(
                  "&lt;dark_slate_grey&gt;%s &lt;LightSlateGray&gt;(%d)&lt;dark_slate_grey&gt; &lt;MediumSlateBlue&gt;-&gt; &lt;coral&gt;%s &lt;MediumSlateBlue&gt;-&gt;&lt;dark_slate_grey&gt; %s &lt;LightSlateGray&gt;(%d)&lt;dark_slate_grey&gt; in %s\n",
                  getRoomName(rooms[i]),
                  rooms[i],
                  cmd,
                  getRoomName(exit),
                  exit,
                  areaname
                )
              )
            end
            c = c + 1
          end
        end
      end
    end
  end
  mmp.echo(
    string.format(
      "%d exits listed%s.", c, (not filter and '' or ", with for the filter '" .. filter .. "'")
    )
  )
end

function mmp.delSpecialExits(filter)
  local c = 0
  for area, areaname in pairs(mmp.areatabler) do
    local rooms = getAreaRooms(area) or {}
    for i = 0, #rooms do
      local exits = getSpecialExits(rooms[i] or 0)
      if exits and next(exits) then
        for exit, cmd in pairs(exits) do
          if type(cmd) == "table" then
            cmd = next(cmd)
          end
          if cmd:match("^%d") then
            cmd = cmd:sub(2)
          end
          if not filter or cmd:lower():find(filter, 1, true) then
            local rid, action
            local originalExits = {}
            local e = getSpecialExits(rooms[i])
            for t, n in pairs(e) do
              rid = tonumber(t)
              for a, l in pairs(n) do
                action = tostring(a)
              end
              if not action:find(filter, 1, true) then
                originalExits[rid] = action
              end
            end
            clearSpecialExits(rooms[i])
            for rid, act in pairs(originalExits) do
              addSpecialExit(rooms[i], tonumber(rid), tostring(act))
            end
            c = c + 1
          end
        end
      end
    end
  end
  mmp.echo(
    string.format(
      "%d exits deleted%s.", c, (not filter and '' or ", with for the filter '" .. filter .. "'")
    )
  )
end</script>
						<eventHandlerList />
					</Script>
					<Script isActive="yes" isFolder="no">
						<name>Directions-translating functions</name>
						<packageName></packageName>
						<script>-- translates n to north and so forth
local temp = {
    n = "north",
    e = "east",
    s = "south",
    w = "west",
    ne = "northeast",
    se = "southeast",
    sw = "southwest",
    nw = "northwest",
    u = "up",
    d = "down",
    i = "in",
    o = "out",
    ["in"] = "in"
}
local anytolongmap = {}
for s, l in pairs(temp) do anytolongmap[l] = l; anytolongmap[s] = l end
function mmp.anytolong(exit)

  return anytolongmap[exit]
end

function mmp.anytoshort(exit)
  local t = {
    n = "north",
    e = "east",
    s = "south",
    w = "west",
    ne = "northeast",
    se = "southeast",
    sw = "southwest",
    nw = "northwest",
    u = "up",
    d = "down",
    ["in"] = "in",
    out = "out"
  }
  local rt = {}
  for s,l in pairs(t) do
    rt[l] = s; rt[s] = s
  end

  return rt[exit]
end


function mmp.ranytolong(exit)
  local t = {
    n = "south",
    north = "south",
    e = "west",
    east = "west",
    s = "north",
    south = "north",
    w = "east",
    west = "east",
    ne = "southwest",
    northeast = "southwest",
    se = "northwest",
    southeast = "northwest",
    sw = "northeast",
    southwest = "northeast",
    nw = "southeast",
    northwest = "southeast",
    u = "down",
    up = "down",
    d = "up",
    down = "up",
    i = "out",
    ["in"] = "out",
    o = "in",
    out = "in"
  }

  return t[exit]
end

-- returns nil or the room number relative to this one
function mmp.relativeroom(from, dir)
  if not mmp.roomexists(from) then return end

  local exits = getRoomExits(tonumber(from))
  return exits[mmp.anytolong(dir)]
end
</script>
						<eventHandlerList />
					</Script>
					<Script isActive="yes" isFolder="no">
						<name>mconfig settings functions</name>
						<packageName></packageName>
						<script>function mmp.doLock(what, lock, filter)
  if what then mmp.echo(string.format("%s all %s...", (lock and "Locking" or "Unlocking"), what)) end
  local c = 0

  local getAreaRooms, getSpecialExits, lockSpecialExit, next = getAreaRooms, getSpecialExits, lockSpecialExit, next
  for _, area in pairs(getAreaTable()) do
    local rooms = getAreaRooms(area) or {}
    for i = 0, #rooms do
      local exits = getSpecialExits(rooms[i] or 0)

       if exits and next(exits) then
         for exit, cmd in pairs(exits) do
           if type(cmd) == "table" then cmd = next(cmd) end

           if (not filter and not (cmd:lower():find("pathfind", 1, true) or cmd:lower():find("worm warp", 1, true) or cmd:lower():find("enter grate", 1, true))) or (filter and cmd:lower():find(filter, 1, true)) then
             lockSpecialExit(rooms[i], exit, cmd, lock)
             c = c + 1
           end
         end
       end
    end
  end

  if what then mmp.echo(string.format("%s %s known %s.", (lock and "Locked" or "Unlocked"), c, what)) end
  return c
end

function mmp.changeEchoColour()
    mmp.echo("Now displaying echos in &lt;"..mmp.settings.echocolour.."&gt;"..mmp.settings.echocolour )
end

function mmp.lockPathways()
  local lock = mmp.settings.lockpathways and true or false
  mmp.doLock("pathways", lock, "pathfind")
end

function mmp.lockSewers()
  local lock = mmp.settings.locksewers and true or false
  return mmp.doLock("sewer grates", lock, "enter grate")
end

function mmp.lockWormholes()
  local lock = mmp.settings.lockwormholes and true or false
  return mmp.doLock("wormholes", lock, "worm warp")
end
tempTimer(0, function() if mmp.firstRun then mmp.lockWormholes() end end)

function mmp.lockPebble()
  local disabled = (not mmp.settings.pebble) and true or false
  mmp.doLock(nil, disabled, "touch 116998")
  mmp.doLock(nil, disabled, "touch 277930")

  mmp.echo(string.format("Use of pebble %s.", disabled and "disabled" or "enabled"))
end

function mmp.lockSpecials()
  local lock = mmp.settings.lockspecials and true or false
  mmp.doLock("special exits", lock)
end

function mmp.setDuanathar()
  mmp.clearpathcache() -- clear the cache so it'll use wings or will stop using wings

  if mmp.settings.duanathar then mmp.echo("Okay, will see about using Eagle wings when you goto somewhere while outside!")
  else mmp.echo("Won't use Eagle wings anymore.") end
end

function mmp.setDuanatharan()
  mmp.clearpathcache() -- clear the cache so it'll use wings or will stop using wings

  if mmp.settings.duanatharan then mmp.echo("Okay, will see about using Atavian wings (both duanathar and duanatharan) when you goto somewhere while outside!")
  else mmp.echo("Won't use Atavian wings anymore.") end
end

function mmp.setDuanatharic()
  mmp.clearpathcache() -- clear the cache so it'll use wings or will stop using wings

  if mmp.settings.duanatharic then mmp.echo("Okay, will see about using Island wings when you goto somewhere while outside!")
  else mmp.echo("Won't use Island wings anymore.") end
end

function mmp.setDuantahar()
  mmp.clearpathcache() -- clear the cache so it'll use wings or will stop using wings

  if mmp.settings.duantahar then mmp.echo("Okay, will see about using Chenubian wings (duanathar, duanatharan, and duantahar) when you goto somewhere while outside!")
  else mmp.echo("Won't use Chenubian wings anymore.") end
end

function mmp.setSoar()
  mmp.clearpathcache() -- clear the cache so it'll use soar or will stop using soar

  if mmp.settings.soar then mmp.echo("Okay, will see about using Aero Soar when you goto somewhere while outside!")
  else mmp.echo("Won't use Aero Soar anymore.") end
end

function mmp.setUniverse()
  mmp.clearpathcache()
	
	if mmp.settings.universe then mmp.echo("Okay, will see about using the Universe tarot whenever it's faster.")
	else mmp.echo("Won't use Universe tarot anymore.") end

end

function mmp.setGare()
  mmp.clearpathcache() -- clear the cache so it'll use gare or stop using gare

  if mmp.settings.gare then mmp.echo("Okay, will see about using Gare when in Dragon form!")
  else mmp.echo("Won't use Gare anymore.") end
end

function mmp.chageMapSource()
  local use = mmp.settings.crowdmap and true or false
  if use and not (mmp.game == "achaea" or mmp.game == "starmourn" or mmp.game == "lusternia") then
    mmp.echo("Sorry - the crowdsourced map is only available for use in Achaea or Starmourn. If you'd like to help start one for your game, please post at http://forums.mudlet.org/viewtopic.php?f=13&amp;t=1696. If you are playing one of the games, then it is likely that you just downloaded the script - and it doesn't know what you are playing. Reconnect and it'll know.")
    mmp.settings.crowdmap = false
  elseif use and not loadMap then
   mmp.echo("Sorry - your Mudlet is too old and can't load maps. Please update: http://forums.mudlet.org/viewtopic.php?f=5&amp;t=1874")
   mmp.settings.crowdmap = false
  elseif use then
    mmp.echo("Will use the crowdsourced map for updates instead!")
    mmp.checkforupdate()
  else
    mmp.echo("Will use the default game map for updates.")
  end
end

function mmp.setWingsLanguage()
  mmp.echo("Alright, will say Duanathar and Duanathar in "..mmp.settings.winglanguage:title()..".")
end

function mmp.setWingsRemoval()
  mmp.echo("Okay - "..(mmp.settings.removewings and "will" or "won't").." remove wings after using them.")
end

function mmp.setSlowWalk()
  if mmp.settings.slowwalk then
    mmp.echo("Will walk 'slowly' - that is, only try to move in a direction once per room, and move again once we've arrived. This will make us better walkers when it's very laggy, as we won't spam directions unnecessarily and miss certain turns - but it does mean that if we fail to move for some reason, we won't retry again either at all.")
  else
    mmp.echo("Will walk as quick as we can!")
  end
end

function mmp.disableWaterWalk()
  local c = 0
  local getRoomEnv, setRoomWeight = getRoomEnv, setRoomWeight
  for roomid, roomname in pairs(getRooms()) do
    if mmp.waterenvs[getRoomEnv(roomid)] then
      setRoomWeight(roomid, 3)
      c = c + 1
    end
  end

  return c
end

function mmp.enableWaterWalk()
  local c = 0
  local getRoomEnv, setRoomWeight = getRoomEnv, setRoomWeight
  for roomid, roomname in pairs(getRooms()) do
    if mmp.waterenvs[getRoomEnv(roomid)] then
      setRoomWeight(roomid, 1)
      c = c + 1
    end
  end

  return c
end

function mmp.setWaterWalk()
  if mmp.settings.waterwalk then
    mmp.echo("Enabled waterwalk for "..mmp.enableWaterWalk().." rooms - so we'll be treating land and water rooms the same now in terms of traverse speed over them.")
  else
    mmp.echo("Disabled waterwalk for "..mmp.disableWaterWalk().." rooms - so we'll be preferring land rooms over water ones wherever it's quicker.")
  end
end

function mmp.setMedallion()
  mmp.clearpathcache() -- clear the cache so it'll use wings or will stop using wings

  if mmp.settings.medallion then mmp.echo("Okay, will see about using Medallion whenever it's quicker")
  else mmp.echo("Won't use Medallion anymore.") end
end

function mmp.setFingerblade()
  mmp.clearpathcache() -- clear the cache so it'll use wings or will stop using wings

  if mmp.settings.fingerblade then mmp.echo("Okay, will see about using Fingerblade whenever it's quicker")
  else mmp.echo("Won't use Fingerblade anymore.") end
end

function mmp.setBlossom()
  mmp.clearpathcache() -- clear the cache so it'll use wings or will stop using wings

  if mmp.settings.blossom then mmp.echo("Okay, will see about using the Flame whenever it's quicker")
  else mmp.echo("Won't use the Flame anymore.") end
end

function mmp.setMandala()
  mmp.clearpathcache() -- clear the cache so it'll use wings or will stop using wings

  if mmp.settings.mandala then mmp.echo("Okay, will see about using Mandala whenever it's quicker")
  else mmp.echo("Won't use Mandala anymore.") end
end

function mmp.setBelt()
  mmp.clearpathcache() -- clear the cache so it'll use wings or will stop using wings

  if mmp.settings.belt then mmp.echo("Okay, will see about using Belt whenever it's quicker")
  else mmp.echo("Won't use Belt anymore.") end
end

function mmp.setCubix()
  mmp.clearpathcache() -- clear the cache so it'll use wings or will stop using wings

  if mmp.settings.cubix then mmp.echo("Okay, will see about using Cubix whenever it's quicker")
  else mmp.echo("Won't use Cubix anymore.") end
end

function mmp.setPrism()
	mmp.clearpathcache()
	if mmp.settings.prism then mmp.echo("Okay, will see about using Prism whenever it's quicker")
	else mmp.echo("Won't use Prism anymore.") end
end

function mmp.setScrewdriver()
  mmp.clearpathcache() -- clear the cache so it'll use wings or will stop using wings

  if mmp.settings.screwdriver then mmp.echo("Okay, will see about using Screwdriver whenever it's quicker")
  else mmp.echo("Won't use Screwdriver anymore.") end
end

function mmp.setWheel()
  mmp.clearpathcache() -- clear the cache so it'll use wings or will stop using wings

  if mmp.settings.wheel then mmp.echo("Okay, will see about using Wheel whenever it's quicker")
  else mmp.echo("Won't use Wheel anymore.") end
end

function mmp.setMud()
  mmp.clearpathcache() -- clear the cache so it'll use wings or will stop using wings

  if mmp.settings.mud then mmp.echo("Okay, will see about using Mud whenever it's quicker")
  else mmp.echo("Won't use Mud anymore.") end
end
function mmp.setSnowglobe()
  mmp.clearpathcache() -- clear the cache so it'll use wings or will stop using wings

  if mmp.settings.snowglobe then mmp.echo("Okay, will see about using Snowglobe whenever it's quicker")
  else mmp.echo("Won't use Snowglobe anymore.") end
end

function mmp.setCookie()
  mmp.clearpathcache() -- clear the cache so it'll use wings or will stop using wings

  if mmp.settings.cookie then mmp.echo("Okay, will see about using Cookie whenever it's quicker")
  else mmp.echo("Won't use Cookie anymore.") end
end

function mmp.setHead()
  mmp.clearpathcache() -- clear the cache so it'll use wings or will stop using wings

  if mmp.settings.head then mmp.echo("Okay, will see about using Doll's Head whenever it's quicker")
  else mmp.echo("Won't use Doll's Head anymore.") end
end

function mmp.setIcicle()
  mmp.clearpathcache() -- clear the cache so it'll use wings or will stop using wings

  if mmp.settings.icicle then mmp.echo("Okay, will see about using Icicle whenever it's quicker")
  else mmp.echo("Won't use Icicle anymore.") end
end

function mmp.setTibia()
  mmp.clearpathcache() -- clear the cache so it'll use wings or will stop using wings

  if mmp.settings.tibia then mmp.echo("Okay, will see about using Tibia whenever it's quicker")
  else mmp.echo("Won't use Tibia anymore.") end
end

function mmp.setBonecurio()
  mmp.clearpathcache() -- clear the cache so it'll use wings or will stop using wings

  if mmp.settings.bonecurio then mmp.echo("Okay, will see about using Bone Curio collection whenever it's quicker")
  else mmp.echo("Won't use Bone Curio collection anymore.") end
end

function mmp.setFlowercurio()
  mmp.clearpathcache() -- clear the cache so it'll use wings or will stop using wings

  if mmp.settings.flowercurio then mmp.echo("Okay, will see about using Flower Curio collection whenever it's quicker")
  else mmp.echo("Won't use Flower Curio collection anymore.") end
end

function mmp.setTorus()
  mmp.clearpathcache() -- clear the cache so it'll use wings or will stop using wings

  if mmp.settings.torus then mmp.echo("Okay, will see about using your Torus whenever it's quicker")
  else mmp.echo("Won't use your Torus anymore.") end
end

function mmp.setUtensilcurio()
  mmp.clearpathcache() -- clear the cache so it'll use wings or will stop using wings

  if mmp.settings.utensilcurio then mmp.echo("Okay, will see about using Utensil Curio collection whenever it's quicker")
  else mmp.echo("Won't use Utensil Curio collection anymore.") end
end

function mmp.setFluttercurio()
  mmp.clearpathcache() -- clear the cache so it'll use wings or will stop using wings

  if mmp.settings.fluttercurio then mmp.echo("Okay, will see about using Flutter Curio collection whenever it's quicker")
  else mmp.echo("Won't use Flutter Curio collection anymore.") end
end

function mmp.setToolcurio()
  mmp.clearpathcache() -- clear the cache so it'll use wings or will stop using wings

  if mmp.settings.toolcurio then mmp.echo("Okay, will see about using Tool Curio collection whenever it's quicker")
  else mmp.echo("Won't use Tool Curio collection anymore.") end
end

function mmp.setFacecurio()
  mmp.clearpathcache() -- clear the cache so it'll use wings or will stop using wings

  if mmp.settings.facecurio then mmp.echo("Okay, will see about using Face Curio collection whenever it's quicker")
  else mmp.echo("Won't use Face Curio collection anymore.") end
end

function mmp.setToycurio()
  mmp.clearpathcache() -- clear the cache so it'll use wings or will stop using wings

  if mmp.settings.toycurio then mmp.echo("Okay, will see about using Toy Curio collection whenever it's quicker")
  else mmp.echo("Won't use Toy Curio collection anymore.") end
end

function mmp.setFeathercurio()
  mmp.clearpathcache() -- clear the cache so it'll use wings or will stop using wings

  if mmp.settings.feathercurio then mmp.echo("Okay, will see about using Feather Curio collection whenever it's quicker")
  else mmp.echo("Won't use Feather Curio collection anymore.") end
end

function mmp.setFigurecurio()
  mmp.clearpathcache() -- clear the cache so it'll use wings or will stop using wings

  if mmp.settings.figurecurio then mmp.echo("Okay, will see about using Figure Curio collection whenever it's quicker")
  else mmp.echo("Won't use Figure Curio collection anymore.") end
end

function mmp.setVernalcurio()
  mmp.clearpathcache() -- clear the cache so it'll use wings or will stop using wings

  if mmp.settings.vernalcurio then mmp.echo("Okay, will see about using Vernal Curio collection whenever it's quicker")
  else mmp.echo("Won't use Vernal Curio collection anymore.") end
end
function mmp.setSoullesscurio()
  mmp.clearpathcache() -- clear the cache so it'll use wings or will stop using wings

  if mmp.settings.soullesscurio then mmp.echo("Okay, will see about using Soulless Curio collection whenever it's quicker")
  else mmp.echo("Won't use Soulless Curio collection anymore.") end
end

function mmp.setHarness() --PapaGuacamole
  mmp.clearpathcache() -- clear the cache so it'll use harness or will stop using harness

  if mmp.settings.harness then mmp.echo("Okay, will use Stratospheric Harness when on appropriate islands")
  else mmp.echo("Won't use Stratospheric Harness anymore.") end
end

function mmp.setMantle()
  mmp.clearpathcache() -- clear the cache so it'll use wings or will stop using wings

  if mmp.settings.mantle then mmp.echo("Okay, will see about using Mantle of Starlight whenever it's quicker")
  else mmp.echo("Won't use Mantle of Starlight anymore.") end
end

function mmp.setKey()
  mmp.clearpathcache() -- clear the cache so it'll use wings or will stop using wings

  if mmp.settings.key then mmp.echo("Okay, will see about using your Infernal Key whenever it's quicker")
  else mmp.echo("Won't use the Infernal Key anymore.") end
end</script>
						<eventHandlerList />
					</Script>
					<Script isActive="yes" isFolder="no">
						<name>API</name>
						<packageName></packageName>
						<script>-------------------------------------------------
-- This script lists some of the API functions available from the IRE mudlet-mapper
-- not all functions that are available are included here, however.

function mmp.echo(what)
  what = what or ""
  moveCursorEnd("main") if getCurrentLine() ~= "" then echo"\n" end
  decho("&lt;112,229,0&gt;(&lt;73,149,0&gt;mapper&lt;112,229,0&gt;): &lt;255,255,255&gt;")
  cecho(tostring(what))
  echo("\n")
end

function mmp.echon(what)
  moveCursorEnd("main") if getCurrentLine() ~= "" then echo"\n" end
  decho("&lt;112,229,0&gt;(&lt;73,149,0&gt;mapper&lt;112,229,0&gt;): &lt;255,255,255&gt;")
  cecho(tostring(what))
end

function mmp.deleteLineP()
  deleteLine()
  tempLineTrigger(1,1,[[
    if isPrompt() then deleteLine() end
  ]])
end

function mmp.pause(what)
  assert(what == nil or what == "on" or what == "off", "mmp.pause wants 'on', 'off' or nothing as an argument")

  if what == "on" or (what == nil and not mmp.paused) then
    mmp.paused = true
  elseif  what == "off" or (what == nil and mmp.paused) then
    mmp.paused = false
  end

  mmp.echo("Speedwalking " .. (mmp.paused and "paused" or "unpaused") .. ".")
  if not mmp.paused then mmp.move() end
end

function mmp.mapLook(roomid, delay)
  centerview(roomid)
  if mmp.maplooktimer then killTimer(mmp.maplooktimer) end
  mmp.maplooktimer = tempTimer(tonumber(delay) or 4, [[centerview(mmp.currentroom); mmp.maplooktimer = nil]])
end

function mmp.getnums(roomname, exact)
  if tonumber(roomname) then return {roomname} end

  local t = (not exact and mmp.searchRoom or mmp.searchRoomExact)(roomname)

  if not t or not next(t) then
    return nil end

  local result = {}

  if not tonumber(select(2, next(t))) then
    for roomid,_ in pairs(t) do
      if roomid ~= 0 then result[#result+1] = tonumber(roomid) end
    end
  else
    for _,roomid in pairs(t) do
      if roomid ~= 0 then result[#result+1] = tonumber(roomid) end
    end
  end

  return result
end

-- searchRoom with a cache!
local cache = {}
setmetatable(cache, {__mode = "kv"}) -- weak keys/values = it'll periodically get cleaned up by gc

function mmp.searchRoom(what)
  local result = cache[what]
  if not result then
    result = searchRoom(what)
    local realResult = {}
    for key, value in pairs(type(result) == "table" and result or {}) do
        -- both ways, because searchRoom can return either id-room name or the reverse
        if type(key) == "string" then
          realResult[key:ends(" (road)") and key:sub(1, -8) or key] = value
        else
          realResult[key] = value:ends(" (road)") and value:sub(1, -8) or value
        end
    end
    cache[what] = realResult
    result = realResult
  end
  return result
end

local function endswith(s, suffix)
    return s:sub(#s - #suffix + 1) == suffix
end

function mmp.searchRoomExact(what)
  if type(what) ~= 'string' then return end

  local roomTable = mmp.searchRoom(what)
  local realResult = {}
  what = what:lower()
  for key, value in pairs (roomTable) do
    if type(key) == "string" and (key:lower() == what or (endswith(key, '.') and key:sub(1, -2) == what)) then
        realResult[key:ends(" (road)") and key:sub(1, -8) or key] = value
    elseif type(value) == "string" and (value:lower() == what or (endswith(value, '.') and value:sub(1, -2) == what)) then
        realResult[key] = value:ends(" (road)") and value:sub(1, -8) or value
    end
  end
  if (table.is_empty(realResult)) then
    return roomTable
  else
    return realResult
  end
end

function mmp.findAreaID(areaname, exact)
  local areaname = areaname:lower()
  local list = getAreaTable()

  -- iterate over the list of areas, matching them with substring match.
  -- if we get match a single area, then return it's ID, otherwise return
  -- 'false' and a message that there are than one are matches
  local returnid, fullareaname, multipleareas = nil, nil, {}
  for area, id in pairs(list) do
    if (not exact and area:lower():find(areaname, 1, true)) or (exact and areaname == area:lower()) then
      returnid = id; fullareaname = area; multipleareas[#multipleareas+1] = area
    end
  end

  if #multipleareas == 1 then
    return returnid, fullareaname
  else
    return nil, nil, multipleareas
  end
end

function mmp.roomexists(num)
  if not num then return false end
  if roomExists then return roomExists(num) end

  local s,m = pcall(getRoomArea, tonumber(num))
  return (s and true or false)
end

function mmp.getcontinents()
  local tmp = getRoomUserData(1, "areaContinents")
  if tmp == "" then return {} end

  return yajl.to_value(tmp)
end

-- patches welcome to finish this function.
function mmp.removecontinent(area, continent)
  local continents = mmp.getcontinents()

  if not next(continents) then return nil, "no continents are known" end
  if not continents[continent] then return nil, "no such continent is recorded" end

  local index = mmp.indexof_valueonly(continents[continent], area)
  if not index then return nil, "this area is not on that continent" end
  table.remove(continents[continent], index)
  local tmp = yajl.to_string(continents)
  setRoomUserData(1, "areaContinents", tmp)
  return true
end

function mmp.addcontinent(areaid, continent)
  local continents = mmp.getcontinents()

  if not next(continents) then return nil, "no continents are known" end
  if not continents[continent] then continents[continent] = {} end

  local index = mmp.indexof_valueonly(continents[continent], areaid)
  if index then return nil, "this area is already on that continent" end
  continents[continent][#continents[continent] + 1] = areaid
  local tmp = yajl.to_string(continents)
  setRoomUserData(1, "areaContinents", tmp)
  return true
end

function mmp.indexof_valueonly(data, value)
  for i = 1, #data do
    if data[i] == value then return i end
  end

  return false
end

-- checks if given area ID is on the given continent. Returns true only if certainly knows
function mmp.oncontinent(areaid, continent)
  local continents = mmp.getcontinents()
  if not continents[continent] then return nil, "no such continent is recorded" end

  return mmp.indexof_valueonly(continents[continent], areaid)
end

function mmp.getareacontinents(areaid)
  local areaContinents = {}
  for continentName, areas in pairs(mmp.getcontinents()) do
    if mmp.indexof_valueonly(areas, areaid) then
      areaContinents[#areaContinents + 1] = continentName
    end
  end
  return areaContinents
end

-- accepts areaname or ID
function mmp.cleanAreaName(area)
  local areaname = type(area) == "number" and mmp.areatabler[area] or area
  if not areaname then return area end

  -- strip , the
  areaname = areaname:gsub(", the$", '')

  -- strip , the Type of
  areaname = areaname:gsub(", the %w+ of$", '')

  -- strip , the Type of (important)
  areaname = areaname:gsub(", the %w+ of %((.+)%)$", " (%1)")

  -- strip , the (important)
  areaname = areaname:gsub(", the %((.+)%)$", " (%1)")

  return areaname
end

-- if this room is in a unique area, report it. Otherwise gives nil
function mmp.getexactarea(roomname)
  local rooms = mmp.searchRoomExact(roomname)

  if not rooms or not next(rooms) then return nil end

  local areaid
  for roomid, roomname in pairs(rooms) do

    local caid = getRoomArea(roomid)
    if areaid and areaid ~= caid then return nil end
    areaid = caid
  end

  if areaid then return mmp.areatabler[areaid] end
end

-- returns the area name of a room or ?
function mmp.getAreaName(roomid)
   return mmp.areatabler[getRoomArea(roomid)] or '?'
end

-- removes extra prefixes and suffixes that are not part of the actual room name
function mmp.cleanroomname(roomname)
  local starts, ends = string.starts, string.ends

  if starts(roomname, "Flying above ") then
    roomname = string.sub(roomname, -(#roomname-13))
  end
  if starts(roomname, "In the trees above ") then
    roomname = string.sub(roomname, -(#roomname-19))
  end
  if starts(roomname, "The ruins of ") then
    roomname = string.sub(roomname, -(#roomname-13))
  end
  if ends(roomname, ".") then
    roomname = string.sub(roomname, 1, (#roomname-1))
  end
  if ends(roomname, " (road)") then
    roomname = string.sub(roomname, 1, (#roomname-7))
  end
  if ends(roomname, " (indoors)") then
    roomname = string.sub(roomname, 1, (#roomname-10))
  end
  if ends(roomname, " (indoor road)") then
    roomname = string.sub(roomname, 1, (#roomname-14))
  end

  return roomname
end</script>
						<eventHandlerList />
					</Script>
					<Script isActive="yes" isFolder="no">
						<name>mmp.roomLook</name>
						<packageName></packageName>
						<script>function mmp.roomLook(input)
  -- we can do a report with a number

  local function handle_number(num)
    -- compile all available data
    if not mmp.roomexists(num) then
      mmp.echo(num .. " doesn't seem to exist.")
      return
    end
    local s, areanum = pcall(getRoomArea, num)
    if not s then
      mmp.echo(areanum);
      return ;
    end
    local exits = getRoomExits(num)
    local name = getRoomName(num)
    local islocked = roomLocked(num)
    local weight = (getRoomWeight(num) and getRoomWeight(num) or "?")
    -- getRoomWeight is buggy in one of the versions, is actually linked to setRoomWeight and thus returns nil
    local exitweights = (getExitWeights and getExitWeights(num) or {})
    local coords = {getRoomCoordinates(num)}
    local specexits = getSpecialExits(num)
    local env = getRoomEnv(num)
    local envname = (mmp.envidsr and mmp.envidsr[env]) or "?"
    -- generate a report
    mmp.echo(
      string.format(
        "Room: %s #: %d area: %s (%d)", name, num, tostring(mmp.areatabler[areanum]), areanum
      )
    )
    mmp.echo(
      string.format(
        "Coordinates: x:%d, y:%d, z:%d, locked: %s, weight: %s",
        coords[1],
        coords[2],
        coords[3],
        (islocked and "yep" or "nope"),
        tostring(weight)
      )
    )
    mmp.echo(
      string.format(
        "Environment: %s (%d)%s",
        tostring(envname),
        env,
        (getRoomUserData(num, "indoors") ~= '' and ", indoors" or '')
      )
    )
    mmp.echo(string.format("Exits (%d):", table.size(exits)))
    for exit, leadsto in pairs(exits) do
      echo(
        string.format(
          "  %s -&gt; %s (%d)%s%s\n",
          exit,
          getRoomName(leadsto),
          leadsto,
          (
            (getRoomArea(leadsto) or "?") == areanum and
            "" or
            " (in " ..
            (mmp.areatabler[getRoomArea(leadsto)] or "?") ..
            ")"
          ),
          (
            (not exitweights[mmp.anytoshort(exit)] or exitweights[mmp.anytoshort(exit)] == 0) and
            "" or
            " (weight: " ..
            exitweights[mmp.anytoshort(exit)] ..
            ")"
          )
        )
      )
    end
    -- display special exits if we got any
    if next(specexits) then
      mmp.echo(string.format("Special exits (%d):", table.size(specexits)))
      for leadsto, command in pairs(specexits) do
        if type(command) == "string" then
          echo(string.format("  %s -&gt; %s (%d)\n", command, getRoomName(leadsto), leadsto))
        else
          -- new format - exit name, command
          for cmd, locked in pairs(command) do
            if locked == '1' then
              cecho(
                string.format(
                  "&lt;DarkSlateGrey&gt;  %s -&gt; %s (%d) (locked)\n", cmd, getRoomName(leadsto), leadsto
                )
              )
            else
              echo(string.format("  %s -&gt; %s (%d)\n", cmd, getRoomName(leadsto), leadsto))
            end
          end
        end
      end
    end
    local message = "This room has the feature '%s'."
    for _, mapFeature in pairs(mmp.getRoomMapFeatures(num)) do
      mmp.echo(string.format(message, mapFeature))
    end
    -- actions we can do. This will be a short menu of sorts for actions
    mmp.echo("Stuff you can do:")
    echo("  ")
    echo("Clear all labels ")
    setUnderline(true)
    echoLink("(in area)", 'mmp.clearLabels(' .. areanum .. ')', '', true)
    setUnderline(false)
    echo(" ")
    setUnderline(true)
    echoLink(
      "(whole map)",
      [[
    if not mmp.clearinglabels then
      mmp.echo("Are you sure you want to clear all of your labels on this map? If yes, click the link again.")
      mmp.clearinglabels = true
    else
      mmp.clearLabels("map")
      mmp.clearinglabels = nil
    end
    ]],
      '',
      true
    )
    setUnderline(false)
    echo("\n")
    echo("  ")
    setUnderline(true)
    echoLink(
      "Check for mapper &amp; map updates", 'mmp.echo("Checking...") mmp.checkforupdate()', '', true
    )
    setUnderline(false)
    echo(" ")
    setUnderline(true)
    echoLink(
      "(force map)",
      [[
      if io.exists(getMudletHomeDir().."/map downloads/current") then
        local s,m = os.remove(getMudletHomeDir().."/map downloads/current")
        if not s then mmp.echo("Couldn't delete '"..getMudletHomeDir().."/map downloads/current' file: "..tostring(m)..".") end
      end
      mmp.echo("Re-downloading the latest crowdmap...")
      mmp.checkforupdate()
    ]],
      "Re-download the map regardless if you have latest",
      true
    )
    setUnderline(false)
    echo("\n")
  end

  -- see if we can do anything with the name

  local function handle_name(name)
    local result = mmp.searchRoom(name)
    if type(result) == "string" then
      cecho("&lt;grey&gt;You have no recollection of any room with that name.")
      return
    end
    -- if we got one result, then act on it
    if table.size(result) == 1 then
      if type(next(result)) == "number" then
        handle_number(next(result))
      else
        handle_number(select(2, next(result)))
      end
      return
    end
    -- if not, then ask the user to clarify which one would they want
    mmp.echo("Which room specifically would you like to look up?")
    if not select(2, next(result)) or not tonumber(select(2, next(result))) then
      for roomid, roomname in pairs(result) do
        roomid = tonumber(roomid)
        cecho(string.format("  &lt;LightSlateGray&gt;%s&lt;DarkSlateGrey&gt; (", tostring(roomname)))
        cechoLink(
          "&lt;" .. mmp.settings.echocolour .. "&gt;" .. roomid,
          'mmp.roomLook(' .. roomid .. ')',
          string.format("View room details for %s (%s)", roomid, tostring(roomname)),
          true
        )
        cecho(
          string.format(
            "&lt;DarkSlateGrey&gt;) in the &lt;LightSlateGray&gt;%s&lt;DarkSlateGrey&gt;.\n",
            tostring(mmp.areatabler[getRoomArea(roomid)])
          )
        )
      end
    else
      for roomname, roomid in pairs(result) do
        roomid = tonumber(roomid)
        cecho(string.format("  &lt;LightSlateGray&gt;%s&lt;DarkSlateGrey&gt; (", tostring(roomname)))
        cechoLink(
          "&lt;" .. mmp.settings.echocolour .. "&gt;" .. roomid,
          'mmp.roomLook(' .. roomid .. ')',
          string.format("View room details for %s (%s)", roomid, tostring(roomname)),
          true
        )
        cecho(
          string.format(
            "&lt;DarkSlateGrey&gt;) in the &lt;LightSlateGray&gt;%s&lt;DarkSlateGrey&gt;.\n",
            tostring(mmp.areatabler[getRoomArea(roomid)])
          )
        )
      end
    end
  end

  if not input then
    if not mmp.roomexists(mmp.currentroom) then
      mmp.echo(mmp.currentroom .. " doesn't seem to be mapped yet.")
      mmp.echo("Stuff you can do:")
      echo("  ")
      echoLink("Check for all updates", 'mmp.echo("Checking...") mmp.checkforupdate()', '')
      echo(" ")
      echoLink(
        "(force map)",
        [[
      local s,m = os.remove(getMudletHomeDir().."/map downloads/current")
        if io.exists(getMudletHomeDir().."/map downloads/current") then
          local s,m = os.remove(getMudletHomeDir().."/map downloads/current")
          if not s then mmp.echo("Couldn't delete '"..getMudletHomeDir().."/map downloads/current' file: "..tostring(m)..".") end
        end
        mmp.echo("Re-downloading the latest map...")
        mmp.checkforupdate()
      ]],
        "Re-download the map regardless if you have latest"
      )
      echo("\n")
      mmp.echo(string.format("version %s.", tostring(mmp.version)))
      return
    else
      input = mmp.currentroom
    end
  end
  if tonumber(input) then
    handle_number(tonumber(input))
  else
    handle_name(input)
  end
  mmp.echo(string.format("version %s.", tostring(mmp.version)))
end</script>
						<eventHandlerList />
					</Script>
					<Script isActive="yes" isFolder="no">
						<name>mmp.ferriesfix</name>
						<packageName></packageName>
						<script>function mmp.ferriesfix()
  if table.is_empty(mmp.ferry_rooms) then
    local tmp = getRoomUserData(1, "ferry rooms")
    if tmp ~= "" then
      for _, i in ipairs(yajl.to_value(tmp)) do
        mmp.ferry_rooms[i] = true
      end
    end
  end
end</script>
						<eventHandlerList>
							<string>mmapper updated map</string>
							<string>sysConnectionEvent</string>
						</eventHandlerList>
					</Script>
					<Script isActive="yes" isFolder="no">
						<name>mmp.wormholesfix</name>
						<packageName></packageName>
						<script>function mmp.wormholesfix()
  local c = 0
  local weight = 10
  for _, area in pairs(getAreaTable()) do
    local rooms = getAreaRooms(area) or {}
    for i = 0, #rooms do
      local exits = getSpecialExits(rooms[i] or 0)

       if exits and next(exits) then
         for exit, cmd in pairs(exits) do
           if type(cmd) == "table" then cmd = next(cmd) end

           if (cmd:lower():find("worm warp", 1, true)) then
				setExitWeight(rooms[i], cmd, weight)
             c = c + 1
           end
         end
       end
    end
  end

  if c &gt; 0 then mmp.echo(string.format("%s wormholes weighted to %s (so we don't take them over too short distances).", c, weight)) end
end</script>
						<eventHandlerList>
							<string>mmapper updated map</string>
							<string>sysMapDownloadEvent</string>
						</eventHandlerList>
					</Script>
					<Script isActive="yes" isFolder="no">
						<name>mmp.clearlastupdate</name>
						<packageName></packageName>
						<script>function mmp.clearlastupdate()
  -- reset mmp.pdb_lastupdate on the prompt
  enableTrigger"Mudlet Mapper prompt trigger"
end</script>
						<eventHandlerList>
							<string>mmapper updated pdb</string>
						</eventHandlerList>
					</Script>
					<Script isActive="yes" isFolder="no">
						<name>Third-party functions</name>
						<packageName></packageName>
						<script>-- from: http://lua-users.org/wiki/CopyTable
local function deepcopy(orig)
    local orig_type = type(orig)
    local copy
    if orig_type == 'table' then
        copy = {}
        for orig_key, orig_value in next, orig, nil do
            copy[deepcopy(orig_key)] = deepcopy(orig_value)
        end
        setmetatable(copy, deepcopy(getmetatable(orig)))
    else -- number, string, boolean, etc
        copy = orig
    end
    return copy
end

mmp.deepcopy = deepcopy</script>
						<eventHandlerList />
					</Script>
					<Script isActive="yes" isFolder="no">
						<name>mmp_regenerate_areas</name>
						<packageName></packageName>
						<script>function mmp_regenerate_areas()
  -- cached data
  mmp.areatable = getAreaTable() -- this translates an area name to an ID
  mmp.areatabler = {} -- this translates an ID to an area name

  local t = getAreaTable()
  for k,v in pairs(t) do
    mmp.areatabler[tonumber(v)] = k
  end

  mmp.clearpathcache()
end</script>
						<eventHandlerList>
							<string>mmp areas changed</string>
							<string>mmapper map reloaded</string>
						</eventHandlerList>
					</Script>
					<Script isActive="yes" isFolder="no">
						<name>mmp_relock_areas</name>
						<packageName></packageName>
						<script>function mmp_relock_areas()
	local getAreaRooms, lockRoom, lockedareas = getAreaRooms, lockRoom, mmp.locked

	for areaid, areaname in pairs(getAreaTableSwap()) do
		if lockedareas[areaid] then
			local rooms = getAreaRooms(areaid) or {}
			for _, roomid in pairs(rooms) do
				lockRoom(roomid, true)
			end
		else
			local rooms = getAreaRooms(areaid) or {}
			for _, roomid in pairs(rooms) do
				lockRoom(roomid, false)
			end
		end
	end

	-- make sure area with ID 0 is locked - this was causing crashing issues
	local rooms = getAreaRooms(0) or {}
	for _, roomid in pairs(rooms) do
		lockRoom(roomid, true)
	end
end</script>
						<eventHandlerList>
							<string>mmapper map reloaded</string>
						</eventHandlerList>
					</Script>
					<Script isActive="yes" isFolder="no">
						<name>Fix setExit</name>
						<packageName></packageName>
						<script>do
local oldsetExit = setExit

local exitmap = {
  n = 1,
  north = 1,
  ne = 2,
  northeast = 2,
  nw = 3,
  northwest = 3,
  e = 4,
  east = 4,
  w = 5,
  west = 5,
  s = 6,
  south = 6,
  se = 7,
  southeast = 7,
  sw = 8,
  southwest = 8,
  u = 9,
  up = 9,
  d = 10,
  down = 10,
  ["in"] = 11,
  out = 12
}

function setExit(from, to, direction)
  if type(direction) == "string" and not exitmap[direction] then return false end

  return oldsetExit(from, to, type(direction) == "string" and exitmap[direction] or direction)
end
end</script>
						<eventHandlerList />
					</Script>
					<Script isActive="yes" isFolder="no">
						<name>Fix exit locking funcs</name>
						<packageName></packageName>
						<script>do
local oldlockExit = lockExit
local oldhasExitLock = hasExitLock

local exitmap = {
  n = 1,
  north = 1,
  ne = 2,
  northeast = 2,
  nw = 3,
  northwest = 3,
  e = 4,
  east = 4,
  w = 5,
  west = 5,
  s = 6,
  south = 6,
  se = 7,
  southeast = 7,
  sw = 8,
  southwest = 8,
  u = 9,
  up = 9,
  d = 10,
  down = 10,
  ["in"] = 11,
  out = 12
}

function lockExit(from, direction, status)
  if type(direction) == "string" and not exitmap[direction] then return false end

  return oldlockExit(from, type(direction) == "string" and exitmap[direction] or direction, status)
end

function hasExitLock(from, direction)
  if type(direction) == "string" and not exitmap[direction] then return false end

  return oldhasExitLock(from, type(direction) == "string" and exitmap[direction] or direction)
end
end</script>
						<eventHandlerList />
					</Script>
					<Script isActive="yes" isFolder="no">
						<name>Assorted small utilities</name>
						<packageName></packageName>
						<script>function mmp.comma_value(n) -- credit http://richard.warburton.it
	local left,num,right = string.match(n,'^([^%d]*%d)(%d*)(.-)$')
	return left..(num:reverse():gsub('(%d%d%d)','%1,'):reverse())..right
end</script>
						<eventHandlerList />
					</Script>
					<Script isActive="yes" isFolder="no">
						<name>Defense tracking</name>
						<packageName></packageName>
						<script>mmp.defs = {current = {}}
mmp.defs.add =
  function()
    local def = gmcp.Char.Defences.Add.name
    if not mmp.defs.current[def] then
      mmp.defs.current[def] = true
      raiseEvent("mmp got def", def)
    end
  end
mmp.defs.remove =
  function()
    for _, def in ipairs(gmcp.Char.Defences.Remove) do
      mmp.defs.current[def] = nil
      raiseEvent("mmp lost def", def)
    end
  end
mmp.defs.list =
  function()
    local newDefs = {}
    local addedDefs, lostDefs = {}, {}
    for _, v in ipairs(gmcp.Char.Defences.List) do
      newDefs[v.name] = true
      if not mmp.defs.current[v.name] then
        addedDefs[#addedDefs + 1] = v.name
      end
    end
    for def in pairs(mmp.defs.current) do
      if not newDefs[def] then
        lostDefs[#lostDefs + 1] = def
      end
    end
    mmp.defs.current = newDefs
    for _, def in pairs(lostDefs) do
      raiseEvent("mmp lost def", def)
    end
    for _, def in ipairs(addedDefs) do
      raiseEvent("mmp got def", def)
    end
  end
-- EVENT HANDLERS
registerAnonymousEventHandler("gmcp.Char.Defences.Add", "mmp.defs.add")
registerAnonymousEventHandler("gmcp.Char.Defences.Remove", "mmp.defs.remove")
registerAnonymousEventHandler("gmcp.Char.Defences.List", "mmp.defs.list")</script>
						<eventHandlerList />
					</Script>
				</Script>
				<Script isActive="yes" isFolder="no">
					<name>Person tracking</name>
					<packageName></packageName>
					<script>--[[
mmp will have 2 person tracking databases:
- mmp.pdb  =  used to store the last known location of a person
- mmp.pdb_lastupdate  =  used to store the output of the last locating command

Both databases work with the person's name as key and the location name as value.

]]
mmp.pdb = mmp.pdb or {}
mmp.pdb_lastupdate = mmp.pdb_lastupdate or {}

function mmp.is_here(who)
  return (mmp.pdb[who] and mmp.pdb[who] == mmp.currentroomname) and true or false
end</script>
					<eventHandlerList />
				</Script>
				<Script isActive="yes" isFolder="no">
					<name>Lock Area</name>
					<packageName></packageName>
					<script>-- Lock Area

mmp.locked = mmp.locked or {}
mmp.lastLockSearch = mmp.lastLockSearch or nil

function mmp.doLockArea(search)
	local areaList
	if search ~= nil then
		local r = rex.new(string.lower(search))
		mmp.lastLockSearch = search
		for name, id in pairs(getAreaTable()) do
			if r:match(string.lower(name)) then
				areaList = areaList or {}
				areaList[name] = id
			end
		end
		if areaList == nil then
			mmp.echo("'" .. search .. "' did not match any known areas!")
			return
		end
	else
		mmp.lastLockSearch = nil
		areaList = getAreaTable()
	end

	for name, id in pairs(areaList) do
		mmp.echon(name .. string.rep(" ", 40 - string.len(name)))
		if not mmp.locked[id] then
			setFgColor(0, 200, 0)
			setUnderline(true)
			echoLink("Lock!", [[mmp.lockArea( ']] .. name:gsub("'", [[\']]) .. [[', true )]], "Click to lock area '" .. name .. "'", true)
		else
			setFgColor(200, 0, 0)
			setUnderline(true)
			echoLink("Unlock!", [[mmp.lockArea( ']] .. name:gsub("'", [[\']]) .. [[', false )]], "Click to unlock area '" .. name .. "'", true)
		end
	end

	if not search then
		echo"\n\n" mmp.echo("Use &lt;green&gt;arealock &lt;area&gt;&lt;white&gt; to filter areas.")
	end
end

function mmp.lockArea(name, lock, dontreshow)
	local areas = getAreaTable()
	local rooms = getAreaRooms(areas[name]) or {}
    local lockRoom = lockRoom
    local count = 0
	for _, room in pairs(rooms) do
		lockRoom(room, lock)
        count = count + 1
	end

	mmp.locked[areas[name]] = lock and true or nil
	mmp.echo(string.format("Area '%s' %slocked! All %s room%s within it.", name, (lock and '' or 'un'), count, (count == 1 and '' or 's')))

	if not dontreshow then mmp.doLockArea(mmp.lastLockSearch) end
end


</script>
					<eventHandlerList />
				</Script>
				<Script isActive="yes" isFolder="no">
					<name>Center view via GMCP</name>
					<packageName></packageName>
					<script></script>
					<eventHandlerList />
					<Script isActive="yes" isFolder="no">
						<name>mmp_center_roominfo</name>
						<packageName></packageName>
						<script>function mmp_center_roominfo()
  -- lusternia has gmcp.Room.Players before gmcp.Room.Info is created
  if gmcp.Room.Info then centerview(gmcp.Room.Info.num) end
end</script>
						<eventHandlerList>
							<string>gmcp.Room</string>
						</eventHandlerList>
					</Script>
				</Script>
				<ScriptGroup isActive="yes" isFolder="yes">
					<name>mm Mapping</name>
					<packageName></packageName>
					<script>-------------------------------------------------
--         Put your Lua functions here.        --
--                                             --
-- Note that you can also use external Scripts --
-------------------------------------------------
</script>
					<eventHandlerList />
					<Script isActive="yes" isFolder="no">
						<name>mmp_mapping_newroom</name>
						<packageName></packageName>
						<script>--mmp_mapping_newroom

local function makeroom(oldid, newid, x, y, z)
  assert(x and y and z, "makeroom: need all 3 coordinates")
  addRoom(newid)
  setRoomCoordinates(newid, x, y, z)
  setRoomArea(newid, getRoomArea(oldid))
  local fgr, fgg, fgb = unpack(color_table.red)
  local bgr, bgg, bgb = unpack(color_table.blue)
  highlightRoom(newid, fgr, fgg, fgb, bgr, bgg, bgb, 1, 100, 100)
  if mmp.envids[gmcp.Room.Info.environment] then
    setRoomEnv(newid, mmp.envids[gmcp.Room.Info.environment])
  else
    setRoomEnv(newid, getRoomEnv(oldid))
  end
  return string.format("Created new room %d at %dx,%dy,%dz.", newid, x, y, z)
end

-- gives the reverse shifted coordinates, ie asking for the sw exit + coords will give the coords at ne

local function getshiftedcoords(original, ox, oy, oz)
  local x, y, z
  local has = table.contains
  -- reverse the exit
  w = mmp.ranytolong(original)
  if has({"west", "left", "w", "l"}, w) then
    x = (x or ox) - 1
    y = (y or oy)
    z = (z or oz)
  elseif has({"east", "right", "e", "r"}, w) then
    x = (x or ox) + 1
    y = (y or oy)
    z = (z or oz)
  elseif has({"north", "top", "n", "t"}, w) then
    x = (x or ox)
    y = (y or oy) + 1
    z = (z or oz)
  elseif has({"south", "bottom", "s", "b"}, w) then
    x = (x or ox)
    y = (y or oy) - 1
    z = (z or oz)
  elseif has({"northwest", "topleft", "nw", "tl"}, w) then
    x = (x or ox) - 1
    y = (y or oy) + 1
    z = (z or oz)
  elseif has({"northeast", "topright", "ne", "tr"}, w) then
    x = (x or ox) + 1
    y = (y or oy) + 1
    z = (z or oz)
  elseif has({"southeast", "bottomright", "se", "br"}, w) then
    x = (x or ox) + 1
    y = (y or oy) - 1
    z = (z or oz)
  elseif has({"southwest", "bottomleft", "sw", "bl"}, w) then
    x = (x or ox) - 1
    y = (y or oy) - 1
    z = (z or oz)
  elseif has({"up", "u"}, w) then
    x = (x or ox)
    y = (y or oy)
    z = (z or oz) + 1
  elseif has({"down", "d"}, w) then
    x = (x or ox)
    y = (y or oy)
    z = (z or oz) - 1
  elseif has({"in", "i"}, w) then
    x = (x or ox)
    y = (y or oy)
    z = (z or oz) - 1
  elseif has({"out", "o"}, w) then
    x = (x or ox)
    y = (y or oy)
    z = (z or oz) + 1
  else
    mmp.echo(
      "Don't know where to shift the coordinates for a " ..
      tostring(w) ..
      " (" ..
      tostring(original) ..
      ") exit."
    )
  end
  return x, y, z
end

function mmp_mapping_newroom(_, num)
  local s, m =
    xpcall(
      function()
        if not mmp.editing then
          return
        end
        if not gmcp.Room then
          mmp.echo(
            "You need to have GMCP turned on (see preferences on a recent Mudlet) for mapping stuff."
          )
          return
        end
        -- wilderness mapping right now is UNFINISHED! It does not handle the grid breakup. So, please don't try it, and please won't whine about it.

        local function inwilderness()
          return (gmcp.Room.Info.coords == "" and gmcp.Room.Info.area == "")
        end

        local getRoomName, getRoomCoordinates, getRoomsByPosition =
          getRoomName, getRoomCoordinates, getRoomsByPosition
        local num = tonumber(num) or tonumber(gmcp.Room.Info.num)
        local currentexits = gmcp.Room.Info.exits
        local s = ""
        if not mmp.roomexists(num) then
          -- see if we can create and link this room with an existing one
          -- wilderness and non-wilderness rooms require different methods of calculating relative coordinates
          if not inwilderness() then
            for exit, id in pairs(currentexits) do
              if mmp.roomexists(id) then
                s = makeroom(id, num, getshiftedcoords(exit, getRoomCoordinates(id)))
              end
            end
          else
            local x, y = tostring(num):match(".-(%d%d%d)(%d%d%d)$")
            -- Achaea's coordinates seem to be in the 4th quadrant, while Mudlets 0,0 is in the middle of the map. Invert y so going north-south looks alright
            s = makeroom(mmp.previousroom, num, x, y * -1, 0)
          end
        end
        -- if we created it, and some data could be filled in
        if mmp.roomexists(num) then
          -- cleanup the room name
          local rootroomname = mmp.cleanroomname(gmcp.Room.Info.name)
          -- match exact case, so mappers alertness' works properly
          if getRoomName(num) ~= rootroomname then
            setRoomName(num, rootroomname)
            unHighlightRoom(num)
            s = s .. (#s &gt; 0 and " " or "") .. "Updated room name to '" .. rootroomname .. "'."
          end
          -- autolink exits
          if not inwilderness() then
            local x = getRoomExits(num) or {}
            -- check for missing exits
            for exit, id in pairs(currentexits) do
              if id == 0 then
                s =
                  s ..
                  (#s &gt; 0 and " " or "") ..
                  "Can't link to the " ..
                  exit ..
                  ", it leads to a room with ID 0 (and that's not supported yet)."
              else
                if not x[mmp.anytolong(exit)] then
                  if not mmp.roomexists(id) then
                    s =
                      makeroom(
                        num, id, getshiftedcoords(mmp.ranytolong(exit), getRoomCoordinates(num))
                      )
                  end
                  if setExit(num, id, exit) then
                    s =
                      s ..
                      (#s &gt; 0 and " " or "") ..
                      "Added missing exit " ..
                      exit ..
                      " to " ..
                      (getRoomName(id) ~= "" and getRoomName(id) or "''") ..
                      " (" ..
                      id ..
                      ")."
                  else
                    s =
                      s ..
                      (#s &gt; 0 and " " or "") ..
                      string.format(
                        "Failed to link %d withh %d via %s exit for some reason :/", num, id, exit
                      )
                  end
                end
              end
            end
          else
            local function getshiftedcoords(direction, ox, oy, oz)
              if direction == 'n' then
                return ox, oy + 1, oz
              elseif direction == 'e' then
                return ox + 1, oy, oz
              elseif direction == 's' then
                return ox, oy - 1, oz
              elseif direction == 'w' then
                return ox - 1, oy, oz
              elseif direction == 'ne' then
                return ox + 1, oy + 1, oz
              elseif direction == 'se' then
                return ox + 1, oy - 1, oz
              elseif direction == 'sw' then
                return ox - 1, oy - 1, oz
              elseif direction == 'nw' then
                return ox - 1, oy + 1, oz
              else
                error("getshiftedcoords: direction " .. direction .. " isn't supported yet.")
              end
            end

            local x, y, z = getRoomCoordinates(num)
            local currentexits = getRoomExits(num) or {}
            for _, exit in ipairs({'n', 'e', 's', 'w', 'ne', 'se', 'sw', 'nw'}) do
              local roomatdir =
                getRoomsByPosition(getRoomArea(num), getshiftedcoords(exit, x, y, z))
              if roomatdir[0] then
                local id = roomatdir[0]
                if not currentexits[mmp.anytolong(exit)] then
                  if setExit(num, id, exit) then
                    s =
                      s ..
                      (#s &gt; 0 and " " or "") ..
                      "Added missing exit " ..
                      exit ..
                      " to " ..
                      (getRoomName(id) ~= "" and getRoomName(id) or "''") ..
                      " (" ..
                      id ..
                      ")."
                  else
                    s =
                      s ..
                      (#s &gt; 0 and " " or "") ..
                      string.format(
                        "Failed to link %d withh %d via %s exit for some reason :/", num, id, exit
                      )
                  end
                  local exit = mmp.anytoshort(mmp.ranytolong(exit))
                  if setExit(id, num, exit) then
                    s =
                      s ..
                      (#s &gt; 0 and " " or "") ..
                      "Added missing exit " ..
                      exit ..
                      " to " ..
                      (getRoomName(id) ~= "" and getRoomName(id) or "''") ..
                      " (" ..
                      id ..
                      ")."
                  else
                    s =
                      s ..
                      (#s &gt; 0 and " " or "") ..
                      string.format(
                        "Failed to link %d withh %d via %s exit for some reason :/", num, id, exit
                      )
                  end
                end
              end
            end
          end
          -- check for unexisting exits
          if mmp.settings["autoclear"] then
            for exit, id in pairs(getRoomExits(num)) do
              if not currentexits[mmp.anytoshort(exit)] then
                setExit(num, -1, exit)
                s =
                  s ..
                  (#s &gt; 0 and " " or "") ..
                  exit ..
                  " exit to " ..
                  id ..
                  " doesn't actually exist, removed it."
              end
            end
          end
          -- check for environment update, if we have environments mapped out
          if
            mmp.envids[gmcp.Room.Info.environment] and
            mmp.envids[gmcp.Room.Info.environment] ~= getRoomEnv(num)
          then
            setRoomEnv(num, mmp.envids[gmcp.Room.Info.environment])
            s =
              s ..
              (#s &gt; 0 and " " or "") ..
              "Updated environment name to " ..
              gmcp.Room.Info.environment ..
              "."
          end
          -- check indoors status
          local indoors = table.contains(gmcp.Room.Info.details, "indoors")
          if indoors and getRoomUserData(num, "indoors") == '' then
            setRoomUserData(num, "indoors", "y")
            s = s .. (#s &gt; 0 and " " or "") .. "Updated room to be indoors."
          elseif not indoors and getRoomUserData(num, "indoors") ~= '' then
            setRoomUserData(num, "indoors", "")
            s = s .. (#s &gt; 0 and " " or "") .. "Updated room to be outdoors."
          end
          -- check server area name (Achaea only for now)
          if mmp.game == "achaea" then
            local serverArea = gmcp.Room.Info.area
            if serverArea ~= getRoomUserData(num, "Game Area") then
              setRoomUserData(num, "Game Area", serverArea)
              s = s .. (#s &gt; 0 and " " or "") .. "Updated game area to " .. serverArea .. "."
            end
          end
          -- check for wilderness exits
          if getRoomChar(num) ~= "W" and table.contains(gmcp.Room.Info.details, "wilderness") then
            setRoomChar(num, "W")
            s = s .. (#s &gt; 0 and " " or "") .. "Added the wilderness mark."
          end
        end
        if #s &gt; 0 then
          mmp.echo(s)
          centerview(mmp.currentroom)
        end
      end,
      function(error)
        mmp.echo("Oops! Has a small problem (" .. error .. ").")
        echo("  ")
        echoLink(
          "view steps",
          'echo[[' .. debug.traceback() .. ']]',
          "View steps of code that led up to it"
        )
      end
    )
  if not s then
    mmp.echo(m)
  end
end</script>
						<eventHandlerList>
							<string>gmcp.Room.Info</string>
							<string>RoomNum</string>
						</eventHandlerList>
					</Script>
					<Script isActive="yes" isFolder="no">
						<name>mmp_save_options</name>
						<packageName></packageName>
						<script>function mmp_save_options()
	local saveTable = {
		locked_areas = mmp.locked,
		options = mmp.settings:getAllOptions()
	}

	if string.char(getMudletHomeDir():byte()) == "/" then _sep = "/" else  _sep = "\\" end
	local saveFile = getMudletHomeDir() ..  _sep .. "mapper.options.lua"

	table.save(saveFile, saveTable)
end</script>
						<eventHandlerList>
							<string>sysExitEvent</string>
						</eventHandlerList>
					</Script>
					<Script isActive="yes" isFolder="no">
						<name>mmp_load_options</name>
						<packageName></packageName>
						<script>function mmp_load_options()
	local loadTable = mmp_load_locks()

	if loadTable.options then
		for k, v in pairs(loadTable.options) do
			mmp.settings:setOption(k, v, true)
		end
	end
end

function mmp_load_locks()
	local loadTable = {}

	if string.char(getMudletHomeDir():byte()) == "/" then _sep = "/" else  _sep = "\\" end
	local loadFile = getMudletHomeDir() ..  _sep .. "mapper.options.lua"

    if io.exists(loadFile) then table.load(loadFile, loadTable) end

	if loadTable.locked_areas then
		mmp.locked = loadTable.locked_areas
	end

    local lockRoom, getAreaRooms = lockRoom, getAreaRooms
	for area in pairs(mmp.locked) do
		local rooms = getAreaRooms(area)
		for _, roomid in pairs(rooms or {}) do
			lockRoom(roomid, true)
		end
	end

	return loadTable
end</script>
						<eventHandlerList>
							<string>sysLoadEvent</string>
						</eventHandlerList>
					</Script>
				</ScriptGroup>
				<ScriptGroup isActive="yes" isFolder="yes">
					<name>Game-specific</name>
					<packageName></packageName>
					<script>-------------------------------------------------
--         Put your Lua functions here.        --
--                                             --
-- Note that you can also use external Scripts --
-------------------------------------------------
</script>
					<eventHandlerList />
					<Script isActive="yes" isFolder="no">
						<name>Achaea</name>
						<packageName></packageName>
						<script></script>
						<eventHandlerList />
						<Script isActive="yes" isFolder="no">
							<name>register_achaeas_envdata</name>
							<packageName></packageName>
							<script>function register_achaeas_envdata(_, game)
  if game ~= "Achaea" then
    return
  end
  mmp.envids =
    {
      ["Constructed underground"] = 2,
      ["Crimson Sea"] = 45,
      ["Deep Ocean"] = 24,
      ["Deep Ocean floor"] = 30,
      ["Dwarven city"] = 18,
      ["Lava Fields"] = 39,
      ["Magma Caves"] = 31,
      ["Natural underground"] = 3,
      ["Ocean floor"] = 34,
      ["Planar Highway"] = 42,
      ["Sanguine River"] = 44,
      ["Tsol'aa city"] = 19,
      ["Vast Ocean"] = 40,
      Abstract = 37,
      Agrarian = 48,
      Ausafoss = 47,
      Beach = 5,
      Blighted = 29,
      Catacombs = 14,
      Chaos = 38,
      Desert = 6,
      Earthen = 43,
      Flames = 49,
      Forest = 4,
      Freshwater = 22,
      Garden = 21,
      Grasslands = 7,
      Hills = 9,
      Jungle = 17,
      Mountains = 14,
      Nothing = 0,
      Ocean = 20,
      Path = 11,
      Polar = 27,
      Reef = 25,
      River = 10,
      Road = 12,
      Ruins = 32,
      Sewer = 23,
      Skies = 10,
      Storm = 50,
      Swamp = 15,
      Trees = 28,
      Tundra = 16,
      Urban = 8,
      Valley = 13,
      Vessel = 36,
      Viscera = 46,
      Wastelands = 41,
      Water = 30,
    }
  mmp.waterenvs = {}
  local waterids =
    {"Freshwater", "Ocean", "River", "Deep Ocean", "Water", "Reef", "Ocean floor", "Vast Ocean"}
  for i = 1, #waterids do
    mmp.waterenvs[mmp.envids[waterids[i]]] = true
  end
  mmp.envidsr = {}
  for name, id in pairs(mmp.envids) do
    mmp.envidsr[id] = name
  end
end</script>
							<eventHandlerList>
								<string>mmp logged in</string>
							</eventHandlerList>
						</Script>
						<Script isActive="yes" isFolder="no">
							<name>mmapper_achaea_went_outside</name>
							<packageName></packageName>
							<script>-- track whenever we need to use wings or aero soar when we get outside!
function mmapper_achaea_went_outside()
  if not mmp.autowalking or not (mmp.settings.duanathar or mmp.settings.duanatharan or mmp.settings.duantahar or mmp.settings.duanatharic or mmp.settings.soar) or mmp.game ~= "achaea" or
    (mmp.currentroom == mmp.speedWalkPath[#mmp.speedWalkPath]) or
    table.contains(gmcp.Room.Info.details, "indoors")
  then return end

  -- repath, maybe that'll allow us to use wings now.
  raiseEvent("mmp link externals")
	local previousDirection = mmp.speedWalkDir[speedWalkCounter]
	if mmp.speedWalk.type == "room" then
	  mmp.getPath(mmp.currentroom, mmp.speedWalkPath[#mmp.speedWalkPath]) -- don't need to check return value since that fact shouldnt've changed
	else
		mmp.gotoAreaID(getRoomArea(mmp.speedWalkPath[#mmp.speedWalkPath]))
	end

  -- if our path didn't change, re-instate it as it was (since the new path starts from this room that we checked at)
  if speedWalkDir[1]~=previousDirection then
    speedWalkCounter = 0
    mmp.echo("We got outside - going to shortcut with wings.")
		if mmp.speedWalk.type == "room" then
			mmp.gotoRoom(mmp.speedWalkPath[#mmp.speedWalkPath])
		else
			mmp.gotoAreaID(getRoomArea(mmp.speedWalkPath[#mmp.speedWalkPath]))
		end
    mmp.ignore_speedwalking = true
  end
	raiseEvent("mmp clear externals")
end</script>
							<eventHandlerList>
								<string>mmapper went outside</string>
								<string>mmapper changed continent</string>
							</eventHandlerList>
						</Script>
						<Script isActive="yes" isFolder="no">
							<name>achaea_gaia_whirlpool_reset</name>
							<packageName></packageName>
							<script>function achaea_gaia_whirlpool_reset(event, game)
	if game == "Achaea" then
		mmp.whirlString = 'script: send("enter whirlpool") if tempWhirlTrigger then killTrigger(tempWhirlTrigger) tempWhirlTrigger = nil end if tempWhirlTimer then killTimer(killWhirlTimer) tempWhirlTimer = nil end tempWhirlTrigger = tempTrigger("What do you wish to enter?", [[if tempWhirlTimer then killTimer(tempWhirlTimer) tempWhirlTimer = nil end mmp.echo("Whirlpool not found here. Trying another room.") local x = {45817, 45780, 45903, 45868, 46254, 45866} if tempWhirlTrigger then killTrigger(tempWhirlTrigger) tempWhirlTrigger = nil end clearSpecialExits(]]..mmp.currentroom..[[) local y = table.index_of(x, ]]..mmp.currentroom..[[) + 1 if y &gt; #x then y = 1 end addSpecialExit(x[y], 793, mmp.whirlString) mmp.clearpathcache() mmp.gotoRoom(mmp.speedWalkPath[#mmp.speedWalkPath]) mmp.echo("Moved whirlpool to "..x[y]..".")]]) tempWhirlTimer = tempTimer(1, [[if tempWhirlTrigger then killTrigger(tempWhirlTrigger) tempWhirlTrigger = nil end if tempWhirlTimer then killTimer(tempWhirlTimer) tempWhirlTimer = nil end]])'
		local x = {45817, 45780, 45903, 45868, 46254, 45866}
		for i, v in ipairs(x) do clearSpecialExits(v) end
		addSpecialExit(45868, 793, mmp.whirlString)
	end
end</script>
							<eventHandlerList>
								<string>mmp logged in</string>
							</eventHandlerList>
						</Script>
						<Script isActive="yes" isFolder="no">
							<name>mmapper_achaea_went_outside_harness</name>
							<packageName></packageName>
							<script>-- use Stratospheric Harness in Achaea -- PapaGuacamole
	
function mmapper_achaea_went_outside_harness()

	local area = mmp.getAreaName(mmp.currentroom)
	local areaid = getRoomArea(mmp.currentroom)
  if not mmp.autowalking or not mmp.settings.harness or not (mmp.game == "achaea") or
    (mmp.currentroom == mmp.speedWalkPath[#mmp.speedWalkPath]) or
    table.contains(gmcp.Room.Info.details, "indoors") or
    (not mmp.oncontinent(areaid, "Eastern_Isles") and not mmp.oncontinent(areaid, "Northern_Isles") and not mmp.oncontinent(areaid, "Western_Isles"))
		then return end

	local madeEast, madeNorth, madeWest

 	-- eastern isles
 	if mmp.oncontinent(areaid, "Eastern_Isles") then
 		addSpecialExit(mmp.currentroom, 54231, [[script:send("shake harness")]])
 		mmp.clearpathcache() -- clear cache so mmp.getPath accounts for the new way
 		madeEast = true
 	-- northern isles
 	elseif mmp.oncontinent(areaid, "Northern_Isles") then
 		addSpecialExit(mmp.currentroom, 48719, [[script:send("shake harness")]])
 		mmp.clearpathcache() -- clear cache so mmp.getPath accounts for the new way
 		madeNorth = true
 	-- western isles
 	elseif mmp.oncontinent(areaid, "Western_Isles") then
 		addSpecialExit(mmp.currentroom, 54632, [[script:send("shake harness")]])
 		mmp.clearpathcache() -- clear cache so mmp.getPath accounts for the new way
 		madeWest = true
 	end

	mmp.getPath(mmp.currentroom, mmp.speedWalkPath[#mmp.speedWalkPath]) -- don't need to check return value since that fact shouldnt've changed
	-- if our path didn't change, re-instate it as it was (since the new path starts from this room that we checked at)
	if speedWalkDir[1]:find("harness", 1, true) then
	speedWalkCounter = 0
		mmp.echo("We got outside - going to shortcut with harness.")
		if mmp.speedWalk.type == "room" then
			mmp.gotoRoom(mmp.speedWalkPath[#mmp.speedWalkPath])
		else
			mmp.gotoAreaID(getRoomArea(mmp.speedWalkPath[#mmp.speedWalkPath]))
		end
		mmp.ignore_speedwalking = true
 	end
	
  if madeEast then mmp.clearspecials{54231}
  elseif madeNorth then mmp.clearspecials{48719}
  elseif madeWest then mmp.clearspecials{54632} end

end</script>
							<eventHandlerList>
								<string>mmapper went outside</string>
								<string>mmapper changed continent</string>
							</eventHandlerList>
						</Script>
						<Script isActive="yes" isFolder="no">
							<name>Shackle handling</name>
							<packageName></packageName>
							<script>local density = false
--Wear shackle function

function mmp.WearShackle()
  if mmp.settings.shackle and density then
    send("wear shackle")
  end
end

function mmp.UnwearShackle()
  if mmp.settings.shackle and mmp.defs.current.density then
    density = true
    send("remove shackle")
  elseif not mmp.defs.current.density then
    density = false
  end
end

--Event Handlers
registerAnonymousEventHandler("mmapper failed path", "mmp.WearShackle")
registerAnonymousEventHandler("mmapper stopped", "mmp.WearShackle")
registerAnonymousEventHandler("mmapper arrived", "mmp.WearShackle")
registerAnonymousEventHandler("started speedwalk", "mmp.UnwearShackle")</script>
							<eventHandlerList />
						</Script>
						<Script isActive="yes" isFolder="no">
							<name>mmapper_achaea_orb_of_confinement</name>
							<packageName></packageName>
							<script>function mmp.setOrb(city)
  mmp.clearpathcache()
  if mmp.settings["orb"..city:lower()] then
    mmp.echo("Orb of Confinement set as &lt;green&gt;ACTIVE&lt;reset&gt; for " .. city:title())
  else
    mmp.echo("Orb of Confinement set as &lt;red&gt;INACTIVE&lt;reset&gt; for " .. city:title())
  end
end

function mmapper_achaea_orb_of_confinement()

  if
    not mmp.autowalking or
    not (
      mmp.settings.duanathar or
      mmp.settings.duanatharan or
      mmp.settings.duantahar or
      mmp.settings.duanatharic or
      mmp.settings.soar
    ) or
    not (mmp.game == "achaea") or
    (mmp.currentroom == mmp.speedWalkPath[#mmp.speedWalkPath]) or
    table.contains(gmcp.Room.Info.details, "indoors") or
    not mmp.orbed()
  then
    return
  end
  -- repath, just in case we were going to use wings here
  raiseEvent("mmp link externals")
  local previousDirection = mmp.speedWalkDir[speedWalkCounter+1]
  if mmp.speedWalk.type == "room" then
    mmp.getPath(mmp.currentroom, mmp.speedWalkPath[#mmp.speedWalkPath])
    -- don't need to check return value since that fact shouldnt've changed
  else
    mmp.gotoAreaID(getRoomArea(mmp.speedWalkPath[#mmp.speedWalkPath]))
  end
  -- if our path didn't change, re-instate it as it was (since the new path starts from this room that we checked at)
  if speedWalkDir[1] ~= previousDirection then
    speedWalkCounter = 0
    mmp.echo("We're inside, remapping path to not use wings here.")
    if mmp.speedWalk.type == "room" then
      mmp.gotoRoom(mmp.speedWalkPath[#mmp.speedWalkPath])
    else
      mmp.gotoAreaID(getRoomArea(mmp.speedWalkPath[#mmp.speedWalkPath]))
    end
    mmp.ignore_speedwalking = true
  end
  raiseEvent("mmp clear externals")
end</script>
							<eventHandlerList>
								<string>mmapper went inside</string>
							</eventHandlerList>
						</Script>
						<Script isActive="yes" isFolder="no">
							<name>mmapper_achaea_harness_add_exits</name>
							<packageName></packageName>
							<script>function mmapper_achaea_harness_add_exits()
  if not (mmp.game == "achaea" and mmp.settings.harness) then
    return
  end
	local cmd = [[script:send("shake harness",false)]]
  local areaID = getRoomArea(mmp.currentroom) or 0
  if mmp.oncontinent(areaID, "Eastern_Isles") then
    if not mmp.inside then
      -- make it here
      addSpecialExit(mmp.currentroom, 54231, cmd)
    elseif areaID == 192 then
      -- Zanzibaar
      addSpecialExit(31215, 54231, cmd)
    elseif areaID == 191 then
      -- Clockwork Isle
      addSpecialExit(23351, 54231, cmd)
    elseif areaID == 180 then
      -- Colchis, the Isle of
      addSpecialExit(19786, 54231, cmd)
    else
      --if areaID == 181 then -- Umbrin, the Port of
      addSpecialExit(18443, 54231, cmd)
    end
    --madeEast = true
  elseif mmp.oncontinent(areaID, "Northern_Isles") then
    if not mmp.inside then
      -- make it here
      addSpecialExit(mmp.currentroom, 48719, cmd)
    elseif areaID == 194 then
      -- Ilyrean
      addSpecialExit(13373, 48719, cmd)
    elseif areaID == 351 then
      -- Karbaz
      addSpecialExit(19740, 48719, cmd)
    else
      --if areaID == 206 or getRoomArea(mmp.currentroom) = 294 then -- Suliel Island / Suliel Island (Barricades)
      addSpecialExit(17768, 48719, cmd)
    end
  elseif mmp.oncontinent(areaID, "Western_Isles") then
    if not mmp.inside then
      -- make it here
      addSpecialExit(mmp.currentroom, 54632, cmd)
    elseif areaID == 162 then
      --Tapoa
      addSpecialExit(21184, 54632, cmd)
    elseif areaID == 207 then
      --Tuar
      addSpecialExit(19219, 54632, cmd)
    else
      --if areaID == 209 then --Ageiro
      addSpecialExit(30222, 54632, cmd)
    end
  end
end</script>
							<eventHandlerList>
								<string>mmp link externals</string>
							</eventHandlerList>
						</Script>
						<Script isActive="yes" isFolder="no">
							<name>mmapper_achaea_harness_remove_exits</name>
							<packageName></packageName>
							<script>function mmapper_achaea_harness_remove_exits()
  local areaID = getRoomArea(mmp.currentroom) or 0
  if not (mmp.game == "achaea" and mmp.settings.harness) then
    return
  end
  if mmp.oncontinent(areaID, "Eastern_Isles") then
    mmp.clearspecials({54231})
  elseif mmp.oncontinent(areaID, "Northern_Isles") then
    mmp.clearspecials({48719})
  elseif mmp.oncontinent(areaID, "Western_Isles") then
    mmp.clearspecials({54632})
  end
end</script>
							<eventHandlerList>
								<string>mmp clear externals</string>
							</eventHandlerList>
						</Script>
					</Script>
					<Script isActive="yes" isFolder="no">
						<name>Aetolia</name>
						<packageName></packageName>
						<script>-------------------------------------------------
--         Put your Lua functions here.        --
--                                             --
-- Note that you can also use external Scripts --
-------------------------------------------------
</script>
						<eventHandlerList />
						<Script isActive="yes" isFolder="no">
							<name>register_aetolias_envdata</name>
							<packageName></packageName>
							<script>function register_aetolias_envdata(_, game)
  if game ~= "Aetolia" then return end

  mmp.envids =
  {
    ["a bridge"]                = 55,
    ["Airship wreckage"]        = 62,
    ["camp site"]               = 57,
    ["Constructed underground"] = 2,
    ["Deep ocean"]              = 24,
    ["lifeless sands"]          = 54,
    ["logged forest"]           = 56,
    ["Natural underground"]     = 3,
    ["Tsol'aa city"]            = 19,
    ["Underwater city"]         = 28,
    ["within a tree"]           = 36,
    Beach                       = 5,
    Canyon                      = 34,
    Castle                      = 61,
    Cavern                      = 69,
    Chaos                       = 1,
    Crater                      = 37,
    Desert                      = 6,
    Ethereal                    = 67,
    Forest                      = 4,
    Freshwater                  = 22,
    Garden                      = 21,
    Grasslands                  = 7,
    Graveyard                   = 31,
    grotto                      = 70,
    Hills                       = 9,
    Ice                         = 30,
    Jungle                      = 17,
    lava                        = 39,
    Mines                       = 32,
    Mountains                   = 14,
    Ocean                       = 20,
    Onboard                     = 33,
    Path                        = 11,
    Reef                        = 25,
    River                       = 10,
    Road                        = 12,
    Ruins                       = 26,
    Sewer                       = 23,
    Shadows                     = 58,
    Swamp                       = 15,
    Temple                      = 29,
    Tundra                      = 16,
    Urban                       = 8,
    Valley                      = 13,
    Village                     = 27,
  }

  mmp.waterenvs = {}
  local waterids = { "River", "Freshwater", "Deep ocean", "Reef", "Underwater city" }
  for i = 1, #waterids do mmp.waterenvs[mmp.envids[waterids[i]]] = true end

  mmp.envidsr = {};
  for name, id in pairs(mmp.envids) do mmp.envidsr[id] = name end
end</script>
							<eventHandlerList>
								<string>mmp logged in</string>
							</eventHandlerList>
						</Script>
					</Script>
					<Script isActive="yes" isFolder="no">
						<name>Lusternia</name>
						<packageName></packageName>
						<script>-------------------------------------------------
--         Put your Lua functions here.        --
--                                             --
-- Note that you can also use external Scripts --
-------------------------------------------------
</script>
						<eventHandlerList />
						<Script isActive="yes" isFolder="no">
							<name>register_lusternias_envdata</name>
							<packageName></packageName>
							<script>function register_lusternias_envdata(_, game)
  if game ~= "Lusternia" then return end

  mmp.envids =
  {
    ["constructed underground"] = 2,
    ["deep ocean"]              = 24,
    ["natural underground"]     = 3,
    aether                      = 36,
    astral                      = 35,
    beach                       = 5,
    chaos                       = 39,
    clouds                      = 37,
    concordance                 = 38,
    darkness                    = 1,
    desert                      = 6,
    divine                      = 33,
    farmlands                   = 30,
    flesh                       = 18,
    forest                      = 4,
    freshwater                  = 22,
    garden                      = 21,
    grasslands                  = 7,
    hills                       = 9,
    jungle                      = 17,
    mountains                   = 14,
    netherworld                 = 34,
    ocean                       = 20,
    path                        = 11,
    polar                       = 27,
    reef                        = 25,
    river                       = 10,
    road                        = 12,
    ruins                       = 19,
    sewer                       = 23,
    swamp                       = 15,
    trees                       = 28,
    tundra                      = 16,
    urban                       = 8,
    valley                      = 13,
    volcanic                    = 32,
    wasteland                   = 29,
  }

  mmp.waterenvs = {}
  local waterids = { "river", "ocean", "freshwater", "deep ocean" }
  for i = 1, #waterids do mmp.waterenvs[mmp.envids[waterids[i]]] = true end

  mmp.envidsr = {};
  for name, id in pairs(mmp.envids) do mmp.envidsr[id] = name end
end</script>
							<eventHandlerList>
								<string>mmp logged in</string>
							</eventHandlerList>
						</Script>
						<Script isActive="yes" isFolder="no">
							<name>mmapper_lusternia_went_outside</name>
							<packageName></packageName>
							<script>function mmapper_lusternia_went_outside()
  -- track whenever we need to use items when we get outside!
  if
    not mmp.autowalking or
    mmp.game ~= "lusternia" or
    (mmp.currentroom == mmp.speedWalkPath[#mmp.speedWalkPath])
  then
    return
  end
  -- repath, maybe that'll allow us to use wings now.
  raiseEvent("mmp link externals")
	local previousDirection = mmp.speedWalkDir[speedWalkCounter]
  mmp.getPath(mmp.currentroom, mmp.speedWalkPath[#mmp.speedWalkPath])
  -- don't need to check return value since that fact shouldnt've changed
  -- if our path didn't change, re-instate it as it was (since the new path starts from this room that we checked at)
  if
    speedWalkDir[1]~=previousDirection
  then
    speedWalkCounter = 0
    mmp.echo("We got outside - going to shortcut with 'bix device.")
		if mmp.speedWalk.type == "room" then
			mmp.gotoRoom(mmp.speedWalkPath[#mmp.speedWalkPath])
		else
			mmp.gotoAreaID(getRoomArea(mmp.speedWalkPath[#mmp.speedWalkPath]))
		end
    mmp.ignore_speedwalking = true
  end
  raiseEvent("mmp clear externals")
end</script>
							<eventHandlerList>
								<string>mmapper went outside</string>
							</eventHandlerList>
						</Script>
						<Script isActive="yes" isFolder="no">
							<name>Astral utilities</name>
							<packageName></packageName>
							<script>local astralExits = {
	{5079,5175,"n"},
	{4072,5065,"w"},
	{5088, 5132, "e"},
	{5145, 5176, "s"},
	{5138, 5146, "e"},
	{5158, 5192, "s"},
	{5152, 5041, "e"},
	{5031, 5042, "e"},
	{5022, 5131, "n"},
	{5116, 5198, "w"},
	{5130, 5096, "e"},
	{5089, 5058, "n"},
	{5102, 5115, "e"},
	{5111, 5159, "e"},	
	{5103, 5071, "n"},
	{5059, 5053, "w"},
	{5187, 5169, "w"},
	{5190, 5204, "e"},
	{5065,5072,"e"},
}
local mirrorExits = {
	n="s",
	ne="sw",
	e="w",
	se="nw",
	s="n",
	sw="ne",
	w="e",
	nw="se",
	u="d",
	d="u",
	out="in",
	["in"]="out",
}
function mmp.astroboots(create)
	if mmp.game ~= "lusternia" then return end
	for k, v in pairs(astralExits) do
		if create then
			addSpecialExit(v[1],v[2],"astrojump")
			setExitWeight(v[1],"astrojump",5)
			addSpecialExit(v[2],v[1],"astrojump")
			setExitWeight(v[2],"astrojump",5)
		else
			removeSpecialExit(v[1],"astrojump")
			removeSpecialExit(v[2],"astrojump")
		end
	end
end

function mmp.wildnodes(create)
	if mmp.game ~= "lusternia" then return end
	for k, v in pairs(astralExits) do
		if create then
			setExit(v[1],v[2],v[3])
			setExit(v[2],v[1],mirrorExits[v[3]])
		else
			setExit(v[1],-1,v[3])
			setExit(v[2],-1,mirrorExits[v[3]])
		end
	end
end</script>
							<eventHandlerList />
						</Script>
						<Script isActive="yes" isFolder="no">
							<name>Transverse and pathfind</name>
							<packageName></packageName>
							<script>local planes =
  {
    ["the Prime Material Plane"] = "prime",
    ["the Ethereal Plane"] = "ethereal",
    ["the Water Elemental Plane"] = "elemental",
    ["the Earth Elemental Plane"] = "elemental",
    ["the Air Elemental Plane"] = "elemental",
    ["the Fire Elemental Plane"] = "elemental",
    ["Celestia, Plane of Light"] = "cosmic",
    ["the Cosmic Plane of Vortex"] = "cosmic",
    ["the Cosmic Plane of Continuum"] = "cosmic",
    ["the Tainted Plane of Nil"] = "cosmic",
    ["the Astral Plane"] = "astral",
  }

function mmp.transverse(_, command)
  command = command:lower()
  if command:sub(0, 11) == "transverse " or command == "pathfind" then
    transverseCMD = command
    transversedFrom = gmcp.Room.Info.num
    lastPlane = planes[gmcp.Room.Info.details[1]]
    validTransverse = true
  end
end

registerAnonymousEventHandler("sysDataSendRequest", "mmp.transverse")

function mmp.registerTransverseExit()
  if transversedFrom ~= gmcp.Room.Info.num then
    addSpecialExit(transversedFrom, gmcp.Room.Info.num, transverseCMD)
    setExitWeight(transversedFrom, transverseCMD, 20)
    if lastPlane then
      addSpecialExit(gmcp.Room.Info.num, transversedFrom, "transverse " .. lastPlane)
      setExitWeight(gmcp.Room.Info.num, "transverse " .. lastPlane, 20)
    end
    validTransverse = false
  end
end

function mmp.clearTransverse()
  local otherSide = 0
  for room, command in pairs(getSpecialExits(gmcp.Room.Info.num)) do
    if next(command) == transverseCMD then
      otherSide = room
    end
  end
  for room, command in pairs(getSpecialExits(otherSide) or {}) do
    if room == gmcp.Room.Info.num and string.sub(next(command), 0, 11) == "transverse " then
      removeSpecialExit(otherSide, next(command))
    end
  end
  removeSpecialExit(gmcp.Room.Info.num, transverseCMD)
  if mmp.autowalking then
    mmp.autowalking = false
    mmp.gotoRoom(string.split(next(mmp.showpathcache()), "_")[2])
  end
end

function mmp.registerPathfind()
  addSpecialExit(transversedFrom, gmcp.Room.Info.num, "pathfind")
  setExitWeight(transversedFrom, "pathfind", 15)
  addSpecialExit(gmcp.Room.Info.num, transversedFrom, "pathfind")
  setExitWeight(gmcp.Room.Info.num, "pathfind", 15)
  validTransverse = false
end

function mmp.clearPathfind()
  local otherSide = 0
  for room, command in pairs(getSpecialExits(gmcp.Room.Info.num)) do
    if next(command) == "pathfind" then
      otherSide = room
    end
  end
  for room, command in pairs(getSpecialExits(otherSide) or {}) do
    if room == gmcp.Room.Info.num and next(command) == "pathfind" then
      removeSpecialExit(otherSide, next(command))
    end
  end
  removeSpecialExit(gmcp.Room.Info.num, "pathfind")
  if mmp.autowalking then
    mmp.autowalking = false
    mmp.gotoRoom(string.split(next(mmp.showpathcache()), "_")[2])
  end
end

function mmp.lockpaths(lock)
  local count = 0
  for area, areaname in pairs(mmp.areatabler) do
    local rooms = getAreaRooms(area) or {}
    for i = 0, #rooms do
      local exits = getSpecialExits(rooms[i] or 0)
      for room, command in pairs(exits or {}) do
        if next(command) == "pathfind" then
          count = count + 1
          lockSpecialExit(rooms[i], room, "pathfind", lock)
        end
      end
    end
  end
  mmp.echo((lock and "Locked " or "Unlocked ") .. count .. " pathfinding exits.")
end</script>
							<eventHandlerList />
						</Script>
					</Script>
					<Script isActive="yes" isFolder="no">
						<name>Imperian</name>
						<packageName></packageName>
						<script>-------------------------------------------------
--         Put your Lua functions here.        --
--                                             --
-- Note that you can also use external Scripts --
-------------------------------------------------
</script>
						<eventHandlerList />
						<Script isActive="yes" isFolder="no">
							<name>register_imperians_envdata</name>
							<packageName></packageName>
							<script>function register_imperians_envdata(_, game)
  if game ~= "Imperian" then return end
  mmp.envids =
  {
    ["a sheltered dell"]        = 68,
    ["Arcane Temple"]           = 66,
    ["Blackened Lands"]         = 58,
    ["Blackstone Dungeon"]      = 65,
    ["Blackstone Keep"]         = 62,
    ["Constructed underground"] = 2,
    ["Dark Forest"]             = 1,
    ["Deep Ocean"]              = 24,
    ["Desert Ruins"]            = 38,
    ["Dwarven city"]            = 18,
    ["Forestal Council"]        = 44,
    ["Frozen Bog"]              = 76,
    ["Lake of Fire"]            = 56,
    ["Natural underground"]     = 3,
    ["Noble Bar"]               = 53,
    ["Noble Chambers"]          = 51,
    ["Rocky Shore"]             = 77,
    ["Sylayan city"]            = 19,
    ["Tainted Underground"]     = 35,
    ["Tainted Water"]           = 39,
    ["Underground Lake"]        = 36,
    ["Vast Ocean"]              = 26,
    ["Wetlands Village"]        = 64,
    ["within a tent"]           = 69,
    Academia                    = 42,
    Acropolis                   = 33,
    Beach                       = 5,
    Blighted                    = 74,
    bog                         = 73,
    Catacombs                   = 63,
    Church                      = 54,
    Cliffs                      = 67,
    Crags                       = 32,
    Desert                      = 6,
    Docks                       = 30,
    Farmland                    = 41,
    Forest                      = 4,
    Freshwater                  = 22,
    Garden                      = 21,
    garrison                    = 71,
    Grasslands                  = 7,
    Graveyard                   = 46,
    Hills                       = 9,
    Jungle                      = 17,
    Mountains                   = 14,
    Nobility                    = 50,
    Ocean                       = 20,
    Path                        = 11,
    Polar                       = 27,
    Pond                        = 49,
    pyramid                     = 72,
    quarry                      = 70,
    River                       = 10,
    Road                        = 12,
    Ruins                       = 37,
    Scrublands                  = 78,
    Sewer                       = 23,
    Swamp                       = 15,
    Temple                      = 57,
    Tower                       = 79,
    transportation              = 48,
    Tundra                      = 16,
    Underworld                  = 28,
    Urban                       = 8,
    Valley                      = 13,
    Villa                       = 75,
    Village                     = 47,
    Village                     = 55,
    Volcano                     = 59,
    Warrens                     = 31,
  }

  mmp.waterenvs = {}
  local waterids = { "River", "Ocean", "Deep Ocean", "Vast Ocean", "Underground Lake", "Tainted Water", "Lake of Fire" }
  for i = 1, #waterids do mmp.waterenvs[mmp.envids[waterids[i]]] = true end

  mmp.envidsr = {};
  for name, id in pairs(mmp.envids) do mmp.envidsr[id] = name end
end</script>
							<eventHandlerList>
								<string>mmp logged in</string>
							</eventHandlerList>
						</Script>
						<Script isActive="yes" isFolder="no">
							<name>mmapper_imperian_went_outside</name>
							<packageName></packageName>
							<script>function mmapper_imperian_went_outside()
  if
    not mmp.autowalking or
    not (mmp.settings.shekinah or mmp.settings.suriel) or
    mmp.game ~= "imperian" or
    (mmp.currentroom == mmp.speedWalkPath[#mmp.speedWalkPath]) or
    table.contains(gmcp.Room.Info.details, "indoors") or
    table.contains(gmcp.Room.Info.details, "considered indoors") or
    not table.contains(mmp.imperian.wingAbleAreas, getRoomArea(mmp.currentroom))
  then
    return
  end
  -- repath, maybe that'll allow us to use wings now.
  raiseEvent("mmp link externals")
  local previousDirection = mmp.speedWalkDir[speedWalkCounter]
  mmp.getPath(mmp.currentroom, mmp.speedWalkPath[#mmp.speedWalkPath])
  -- don't need to check return value since that fact shouldnt've changed
  -- if our path didn't change, re-instate it as it was (since the new path starts from this room that we checked at)
  if speedWalkDir[1] ~= previousDirection then
    speedWalkCounter = 0
    mmp.echo("We got outside - going to shortcut with wings.")
    mmp.gotoRoom(mmp.speedWalkPath[#mmp.speedWalkPath])
    mmp.ignore_speedwalking = true
  end
  raiseEvent("mmp clear externals")
end</script>
							<eventHandlerList>
								<string>mmapper went outside</string>
								<string>mmapper changed continent</string>
							</eventHandlerList>
						</Script>
					</Script>
					<Script isActive="yes" isFolder="no">
						<name>Starmourn</name>
						<packageName></packageName>
						<script>-------------------------------------------------
--         Put your Lua functions here.        --
--                                             --
-- Note that you can also use external Scripts --
-------------------------------------------------
</script>
						<eventHandlerList />
						<Script isActive="yes" isFolder="no">
							<name>Lifts</name>
							<packageName></packageName>
							<script>-------------------------------------------------
--         Put your Lua functions here.        --
--                                             --
-- Note that you can also use external Scripts --
-------------------------------------------------
function mmp.liftFloor(roomname,floornum,currentfloor) --string,int,bool
	if not mmp.autowalking then
		return
	end

	--get room name of next in speedwalkpath
	if not speedWalkCounter then
    speedWalkCounter = 1
  end
	local destRoomName = getRoomName(mmp.speedWalkPath[speedWalkCounter])
	if roomname == nil then roomname = destRoomName end

	if roomname == destRoomName then
		if currentfloor then
			send("EXIT LIFT",false) --Lift is on correct floor, can EXIT LIFT
			if mmp.liftTimer then killTimer(mmp.liftTimer) end
		else
			mmp.customwalkdelay(2) --Lift is on incorrect floor arbitrary wait for next trigger line
			if mmp.liftTimer then killTimer(mmp.liftTimer) end
			mmp.liftTimer = tempTimer(1, function() send("KEY LIFT ".. floornum,false) end )	--wait one second before requesting the correct floor (allows other users to enter/exit)
		end
	end
end</script>
							<eventHandlerList />
						</Script>
						<Script isActive="yes" isFolder="no">
							<name>register_starmourn_envdata</name>
							<packageName></packageName>
							<script>function register_starmourn_envdata(_, game)
  if game ~= "Starmourn" then
    return
  end
  mmp.envids =
    {
      ["airlock"] = 55,
      ["alleyway"] = 47,
      ["armory"] = 82,
      ["badlands"] = 45,
      ["barracks"] = 77,
      ["bathroom"] = 71,
      ["beach"] = 51,
      ["bedroom"] = 66,
      ["bridge"] = 18,
      ["building"] = 5,
      ["campsite"] = 65,
      ["canal"] = 85,
      ["cantina"] = 62,
      ["canyon"] = 31,
      ["cargo bay"] = 13,
      ["catwalk"] = 23,
      ["cave"] = 37,
      ["commandpost"] = 80,
      ["corral"] = 34,
      ["deep space"] = 11,
      ["desert"] = 7,
      ["duct"] = 22,
      ["engine room"] = 44,
      ["factory"] = 32,
      ["farmland"] = 28,
      ["firingrange"] = 83,
      ["forest"] = 8,
      ["garden"] = 12,
      ["gym"] = 60,
      ["hallway"] = 58,
      ["hangar"] = 26,
      ["hangar"] = 79,
      ["hydroponics"] = 61,
      ["icyforest"] = 52,
      ["jungle"] = 19,
      ["junkyard"] = 48,
      ["lake"] = 49,
      ["lava fields"] = 56,
      ["lava"] = 57,
      ["meadow"] = 30,
      ["medical facility"] = 17,
      ["medical facility"] = 27,
      ["messhall"] = 78,
      ["militarybase"] = 76,
      ["militaryroad"] = 81,
      ["mine"] = 3,
      ["mountain"] = 1,
      ["obstaclecourse"] = 84,
      ["ocean"] = 6,
      ["office"] = 15,
      ["pier/dock"] = 38,
      ["pond"] = 64,
      ["pool"] = 14,
      ["prison"] = 59,
      ["residence"] = 63,
      ["river"] = 50,
      ["road"] = 29,
      ["ruin"] = 42,
      ["sewer"] = 40,
      ["shop"] = 67,
      ["slum"] = 69,
      ["slumbuilding"] = 73,
      ["slumstreet"] = 70,
      ["slumtoilet"] = 72,
      ["spacecraft"] = 9,
      ["spaceport"] = 39,
      ["stateroom"] = 43,
      ["stream"] = 35,
      ["street"] = 2,
      ["swamp"] = 20,
      ["temple"] = 54,
      ["transport"] = 16,
      ["treehouse"] = 36,
      ["treetops"] = 53,
      ["tundra"] = 10,
      ["underground"] = 86,
      ["underwater"] = 87,
      ["urban"] = 4,
      ["urbanunderground"] = 46,
      ["ventilation shaft"] = 21,
      ["verdantcliffs"] = 75,
    }
  mmp.waterenvs = {}
  mmp.envidsr = {}
  for name, id in pairs(mmp.envids) do
    mmp.envidsr[id] = name
  end
end</script>
							<eventHandlerList>
								<string>mmp logged in</string>
							</eventHandlerList>
						</Script>
					</Script>
					<Script isActive="yes" isFolder="no">
						<name>Lithmeria</name>
						<packageName></packageName>
						<script>-------------------------------------------------
--         Put your Lua functions here.        --
--                                             --
-- Note that you can also use external Scripts --
-------------------------------------------------
</script>
						<eventHandlerList />
						<Script isActive="yes" isFolder="no">
							<name>register_lithmerias_envdata</name>
							<packageName></packageName>
							<script>function register_lithmerias_envdata(_, game)
  if game ~= "Lithmeria" then return end

  mmp.envids =
  {
    ["deep water"] = 4,
    beach          = 11,
    bridge         = 6,
    building       = 13,
    cliffs         = 1,
    desert         = 11,
    forest         = 2,
    highway        = 6,
    jungle         = 10,
    mountain       = 1,
    ocean          = 4,
    path           = 6,
    plains         = 3,
    river          = 4,
    road           = 6,
    shallowwater   = 4,
    swamp          = 2,
    tundra         = 7,
    underground    = 8,
    urban          = 8,
    water          = 4,
  }

  for name, number in pairs(mmp.envids) do
    mmp.envids[name] = number+256 -- adjust for in-built colors
  end

  mmp.waterenvs = {}
  local waterids = { "shallowwater", "river", "water", "deep water", "ocean" }
  for i = 1, #waterids do mmp.waterenvs[mmp.envids[waterids[i]]] = true end

  mmp.envidsr = {};
  for name, id in pairs(mmp.envids) do mmp.envidsr[id] = name end
end</script>
							<eventHandlerList>
								<string>mmp logged in</string>
							</eventHandlerList>
						</Script>
					</Script>
				</ScriptGroup>
				<ScriptGroup isActive="yes" isFolder="yes">
					<name>Test / one-time things</name>
					<packageName></packageName>
					<script>-------------------------------------------------
--         Put your Lua functions here.        --
--                                             --
-- Note that you can also use external Scripts --
-------------------------------------------------
</script>
					<eventHandlerList />
					<Script isActive="no" isFolder="no">
						<name>mmp_grabenvid</name>
						<packageName></packageName>
						<script>function mmp_grabenvid()
  if not mmp.envids[gmcp.Room.Info.environment] then
    mmp.envids[gmcp.Room.Info.environment] = getRoomEnv(mmp.currentroom)
    mmp.echo(string.format("Remembered environment %s as %d", gmcp.Room.Info.environment, mmp.envids[gmcp.Room.Info.environment]))
  end
end

function mmp.getMaxID()
  local roomIDs = {}
  for area, _ in pairs(mmp.areatabler) do
    local ok, t = pcall(getAreaRooms, area)
    if ok then
      for _, id in pairs(t or {}) do
        roomIDs[id] = true
      end
    end
  end

  return table.maxn(roomIDs)
end

function mmp.getUnknownEnvs()
  local maxid, missing = mmp.getMaxID(), {}

  for i = 1, maxid do
    if mmp.roomexists(i) then
      if not table.contains(mmp.envids, getRoomEnv(i)) and not table.contains(missing, getRoomEnv(i)) then
        mmp.echo(string.format("Missing env %d from room %d ('%s' in '%s')",
          tostring(getRoomEnv(i)), i, tostring(getRoomName(i)), tostring(mmp.areatabler[getRoomArea(i)])))
        missing[i] = getRoomEnv(i)
      end
    end
  end
end</script>
						<eventHandlerList>
							<string>gmcp.Room.Info</string>
						</eventHandlerList>
					</Script>
				</ScriptGroup>
				<ScriptGroup isActive="yes" isFolder="yes">
					<name>Check for map updates</name>
					<packageName></packageName>
					<script>-------------------------------------------------
--         Put your Lua functions here.        --
--                                             --
-- Note that you can also use external Scripts --
-------------------------------------------------
</script>
					<eventHandlerList />
					<Script isActive="yes" isFolder="no">
						<name>mmp_downloaded_file</name>
						<packageName></packageName>
						<script>function mmp_downloaded_file(_, filename)
  if not io.exists(filename) then return end

  -- workaround for https://bugs.launchpad.net/mudlet/+bug/1092769
--  if mmp["downloaded_file_block_"..filename] then return end
--  mmp["downloaded_file_block_"..filename] = tempTimer(5, [[mmp["downloaded_file_block_]]..filename..[["] = nil]])

  if filename == tostring(mmp.mapperfile) then   -- mapper script version
	mmp.checkingupdates = false

    local f, s = io.open(filename)
    if f then s = f:read("*l"):trim(); io.close(f) end

    if s ~= tostring(mmp.version) then
      mmp.newmapperversion = s
      mmp.retrievechangelog()
    end

  elseif filename == tostring(mmp.changelogfile) then   -- changelog for the mapper script
	mmp.checkingupdates = false

    local f, s, changelog = io.open(filename)
    if f then changelog = f:read("*a"); io.close(f) end

    mmp.echon("")
    echoLink("The mapper script was updated! Would you like to download the update? Click here if so.", "mmp.downloadmapperscript()", "Changelog for the latest ("..tostring(mmp.version).." -&gt; "..tostring(mmp.newmapperversion)..") update:\n"..changelog, true)

  elseif filename == mmp.crowdchangelogfile then   -- changelog for the crowdmap
    local f, s = io.open(filename)
    if f then s = f:read("*a"); io.close(f) end

    -- make environment
    local env = {} -- add functions you know are safe here

    -- run code under environment [Lua 5.1]
    local function run(untrusted_code)
      if untrusted_code:byte(1) == 27 then return nil, "binary bytecode prohibited" end
      local untrusted_function, message = loadstring(untrusted_code)
      if not untrusted_function then return nil, message end
      setfenv(untrusted_function, env)
      return pcall(untrusted_function)
    end

    run(s)

	mmp.crowdchangelog = env.changelog

    mmp.echon("The crowdmap map was ")
    setUnderline(true)
    echoLink("updated", '', "New version: "..tostring(mmp.newversion)..", previous version: "..(mmp.oldversion or "(none)"), true)
    setUnderline(false)
    echo(" (")
    setUnderline(true)
    echoLink("see full changelog", "mmp.showcrowdchangelog()", 'View the full changelog for mappers', true)
    setUnderline(false)
    echo("). Latest improvement is: "..tostring(mmp.crowdchangelog and mmp.crowdchangelog[#mmp.crowdchangelog] or '?')..".\n")

    mmp.downloadcrowdmap(mmp.newversion)

  elseif filename == mmp.crowdmapfile then    -- crowdmap map
    mmp.echo("Map downloaded, loading it in...")

    local tmp = getRoomUserData(1, "gotoMapping")
    local oldmaptable = {}

    if tmp ~= "" then
      oldmaptable = yajl.to_value(tmp)
    end

    local ok = loadMap(filename)

    if ok then
      if mmp.game ~= "starmourn" then
        local wc = mmp.lockWormholes()
  	local ws = mmp.lockSewers()
        mmp.lockPebble()
        if mmp.game == "achaea" and wc == 0 and ws == 0 then -- in achaea, using crowdmap, if we didn't get any special exits - it means Mudlet needs to be updated
          mmp.echo("Sorry, it seems your Mudlet isn't compatible with the new crowdmap format - and the map cannot be loaded fully. Please update your Mudlet:\n  http://www.mudlet.org/download/")
          return
        end
      end

      if mmp.settings.waterwalk then mmp.enableWaterWalk() else mmp.disableWaterWalk() end

      mmp.echo("Map loaded fine - enjoy!")

      tmp = getRoomUserData(1, "gotoMapping")
      local newmaptable = {}

      if tmp ~= "" then
        newmaptable = yajl.to_value(tmp)
      end

      for k,v in pairs(oldmaptable) do newmaptable[k] = v end
      setRoomUserData(1, "gotoMapping", yajl.to_string(newmaptable))
      mmp.echo("Marks from the old map migrated successfully.")

      raiseEvent("mmapper updated map")
    else
      mmp.echon("Map failed to load - you need to have the mapper open. Please open it, and then ")
      echoLink("click here", [[
        local tmp = getRoomUserData(1, "gotoMapping")
        local oldmaptable = {}
        if tmp ~= "" then
          oldmaptable = yajl.to_value(tmp)
        end

        local ok = loadMap(']]..filename..[[')
        if ok then
        local wc = mmp.lockWormholes()
	    local ws = mmp.lockSewers()
        mmp.lockPebble()
        if mmp.game == "achaea" and wc == 0 and ws == 0 then -- in achaea, using crowdmap, if we didn't get any special exits - it means Mudlet needs to be updated
          mmp.echo("Sorry, it seems your Mudlet isn't compatible with the new crowdmap format - and the map cannot be loaded fully. Please update your Mudlet:\n  http://www.mudlet.org/download/")
          return
        end

        if mmp.settings.waterwalk then mmp.enableWaterWalk() else mmp.disableWaterWalk() end

        mmp.echo("Map loaded successfully!")

          tmp = getRoomUserData(1, "gotoMapping")
          local newmaptable = {}
          if tmp ~= "" then
            newmaptable = yajl.to_value(tmp)
          end
          for k,v in pairs(oldmaptable) do newmaptable[k] = v end
          setRoomUserData(1, "gotoMapping", yajl.to_string(newmaptable))
          mmp.echo("Marks from the old map migrated successfully.")
          raiseEvent("mmapper updated map")
        else mmp.echo("Nope, didn't work. Open the map and try again?") end
      ]],
      "Click here to try loading the map again")
      echo(" to try loading it in again.\n")
    end

  elseif filename == tostring(mmp.downloadedscript) then   -- new mapper script xml downloaded
	mmp.checkingupdates = false

    mmp.echo("Your mapper script was downloaded to '"..filename.."' - uninstall the current copy and install the new one now!")

  elseif filename == tostring(mmp.mapfile) then   -- map version #, either IRE's or crowd
	mmp.checkingupdates = false

    local function needupdate(currentmd5, oldmd5)
      if not mmp.settings.crowdmap then
        mmp.echon("The games map was ")
        echoLink("updated", '', "New MD5: "..tostring(currentmd5)..", previous MD5: "..(oldmd5 or "(none)"), true)
        echo(" - you should update yours! Go to Settings -&gt; Mapper tab and click on the button there. Once you've updated, ")
        echoLink("click here", "mmp.updatedmap('"..currentmd5.."')", "Click here to quiet the update reminder")
        echo(" to remove the reminder.")
      else
        mmp.newversion, mmp.oldversion = currentmd5, oldmd5
        mmp.retrievecrowdchangelog()
      end
    end

    local f, s = io.open(filename)
    if f then s = f:read("*a"); io.close(f) end
    local currentmd5 = string.match(s, "([a-z0-9]+)  map%.xml")

    -- using crowdsourced map
    if not currentmd5 then
      currentmd5 = s:trim()
    end

	os.remove(filename)

    -- never checked yet?
    if not io.exists(getMudletHomeDir().."/map downloads/current") then needupdate(currentmd5) return end

    -- otherwise read old file and check
    local f, s = io.open(getMudletHomeDir().."/map downloads/current")
    if f then s = f:read("*a"); io.close(f) end

    if s ~= currentmd5 then needupdate(currentmd5, s) end
  end
end</script>
						<eventHandlerList>
							<string>sysDownloadDone</string>
						</eventHandlerList>
					</Script>
					<Script isActive="yes" isFolder="no">
						<name>Check for updates</name>
						<packageName></packageName>
						<script>local downloadfolder = getMudletHomeDir() .. "/map downloads/"
local whereisit
-- this should get called at start and every hour after that

function mmp.checkforupdate()
  if not mmp.game or mmp.checkingupdates then
    return
  end
  local game = mmp.game
  mmp.mapfile = downloadfolder .. "MD5"
  mmp.mapperfile = downloadfolder .. "mapper"
  if not downloadFile then
    mmp.echo("Your version of Mudlet doesn't support downloading files - please upgrade to 2.0+")
  else
    if not lfs.attributes(downloadfolder) then
      if lfs and lfs.mkdir then
        local t, s = lfs.mkdir(downloadfolder)
        if not t and s ~= "File exists" then
          mmp.echo("Couldn't make the '" .. downloadfolder .. "' folder; " .. s)
          return
        end
      else
        mmp.echo(
          "Sorry, but you need LuaFileSystem (lfs) installed, or have the '" ..
          downloadfolder ..
          "' folder exist."
        )
        return
      end
    end
    if mmp.settings.crowdmap then
      if game == "achaea" then
        downloadFile(
          mmp.mapfile, "http://ire-mudlet-mapping.github.io/AchaeaCrowdmap/Map/version.txt"
        )
      elseif game == "starmourn" then
        downloadFile(
          mmp.mapfile, "http://ire-mudlet-mapping.github.io/StarmournCrowdmap/Map/version.txt"
        )
      elseif game == "lusternia" then
        downloadFile(
          mmp.mapfile, "http://ire-mudlet-mapping.github.io/LusterniaCrowdmap/Map/version.txt"
        )
      end
    elseif mmp.settings.updatemap then
      downloadFile(mmp.mapfile, "http://www." .. game .. ".com/maps/MD5SUM")
    end
    downloadFile(
      mmp.mapperfile, "http://ire-mudlet-mapping.github.io/ire-mapping-script/downloads/version"
    )
    mmp.checkingupdates = true
  end
end

-- called by the user when the map is updated to register the fact that it was

function mmp.updatedmap(currentmd5)
  assert(currentmd5, "need md5 sum to write to file")
  local f, err = io.open(downloadfolder .. "current", "w")
  if not f then
    return mmp.echo("Couldn't write to the update file, because: " .. err)
  end
  f:write(currentmd5)
  f:close()
  local t = {"Go you for updating!", "Thanks for updating the map!", "Alright, map updated!"}
  mmp.echo(t[math.random(1, #t)])
end

-- downloads the latest changelog for the mapper if it was updated

function mmp.retrievechangelog()
  mmp.changelogfile = downloadfolder .. "changelog"
  downloadFile(
    mmp.changelogfile, "http://ire-mudlet-mapping.github.io/ire-mapping-script/downloads/changelog"
  )
end

function mmp.retrievecrowdchangelog()
  mmp.crowdchangelogfile = downloadfolder .. "crowdchangelogfile"
  if mmp.game == "achaea" then
    downloadFile(
      mmp.crowdchangelogfile, "http://ire-mudlet-mapping.github.io/AchaeaCrowdmap/Map/changelog.txt"
    )
  elseif mmp.game == "starmourn" then
    downloadFile(
      mmp.crowdchangelogfile,
      "http://ire-mudlet-mapping.github.io/StarmournCrowdmap/Map/changelog.txt"
    )
  elseif mmp.game == "lusternia" then
    downloadFile(
      mmp.crowdchangelogfile,
      "http://ire-mudlet-mapping.github.io/LusterniaCrowdmap/Map/changelog.txt"
    )
  end
end

-- downloads the public crowdsources map!

function mmp.downloadmapperscript()
  local downloadlocationfile = downloadfolder .. "savepath"
  local downloadlocation
  local exists = lfs.attributes
  -- somewhat complicated thing to nicely deal with all scenarios.
  if not exists(downloadlocationfile) then
    downloadlocation = whereisit()
    if not downloadlocation then
      return
    end
  end
  if not downloadlocation then
    local f, s = io.open(downloadlocationfile)
    if f then
      downloadlocation = f:read("*a");
      io.close(f)
    end
    if not exists(downloadlocation) then
      downloadlocation = whereisit()
      if not downloadlocation or not exists(downloadlocation) then
        return
      end
    end
  end
  mmp.downloadedscript = downloadlocation .. "/mudlet-mapper.xml"
  downloadFile(
    mmp.downloadedscript,
    "http://ire-mudlet-mapping.github.io/ire-mapping-script/downloads/mudlet-mapper.xml"
  )
  local f, err = io.open(downloadlocationfile, "w")
  if not f then
    return mmp.echo("Couldn't write to the location file, because: " .. err)
  end
  f:write(downloadlocation)
  f:close()
  mmp.echo("Okay, downloading the mapper script...")
end

function mmp.downloadcrowdmap(newversion)
  mmp.crowdmapfile = downloadfolder .. "crowdmap"
  local f, err = io.open(downloadfolder .. "current", "w")
  if not f then
    return mmp.echo("Couldn't write to the update file, because: " .. err)
  end
  f:write(newversion)
  f:close()
  if mmp.game == "achaea" then
    downloadFile(mmp.crowdmapfile, "http://ire-mudlet-mapping.github.io/AchaeaCrowdmap/Map/map")
  elseif mmp.game == "starmourn" then
    downloadFile(mmp.crowdmapfile, "http://ire-mudlet-mapping.github.io/StarmournCrowdmap/Map/map")
  elseif mmp.game == "lusternia" then
    downloadFile(mmp.crowdmapfile, "http://ire-mudlet-mapping.github.io/LusterniaCrowdmap/Map/map")
  end
  mmp.echo("Downloading the latest crowdmap...")
end

function mmp.showcrowdchangelog()
  mmp.echo("Public map changelog:")
  if not mmp.crowdchangelog then
    mmp.echo("(none yet)")
    return
  end
  for k, v in ipairs(mmp.crowdchangelog) do
    cecho(string.format("  %s) %s\n", k, v:gsub("\t", "     ")))
  end
end

whereisit =
  function()
    local path =
      invokeFileDialog(false, "Where should we save the file? Select a folder and click Open")
    if path == "" then
      return nil
    else
      return path
    end
  end</script>
						<eventHandlerList />
						<Script isActive="yes" isFolder="no">
							<name>mmp_checkupdatestart</name>
							<packageName></packageName>
							<script>function mmp_checkupdatestart(...)
  if mmp.checkforupdatetimer then killTimer(mmp.checkforupdatetimer) end
  mmp.checkforupdatetimer = tempTimer(math.random(3, 10), mmp.checkforupdate)
end

function mmp.changeUpdateMap()
  if mmp.settings.updatemap then
    mmp.echo("Will check for new map updates from your MUD.")
    enableTimer"Check for updates periodically"
    mmp_checkupdatestart()
  else
    mmp.echo("Won't check for new map updates from your MUD.")
    disableTimer"Check for updates periodically"
	if mmp.checkforupdatetimer then killTimer("mmp.checkforupdatetimer") end
  end
end</script>
							<eventHandlerList>
								<string>mmp logged in</string>
							</eventHandlerList>
						</Script>
					</Script>
					<Script isActive="no" isFolder="no">
						<name>mmp_see_dl_errors</name>
						<packageName></packageName>
						<script>-- this should be off by default
function mmp_see_dl_errors(...)
  display{...}
end</script>
						<eventHandlerList>
							<string>sysDownloadError</string>
						</eventHandlerList>
					</Script>
				</ScriptGroup>
				<Script isActive="yes" isFolder="no">
					<name>Initialize</name>
					<packageName></packageName>
					<script>mmp.startup()</script>
					<eventHandlerList />
					<Script isActive="yes" isFolder="no">
						<name>mmp.mapdata_changed</name>
						<packageName></packageName>
						<script>-- aggregates map load and such events into one
function mmp.mapdata_changed()
  raiseEvent("mmapper map reloaded")
end
					</script>
						<eventHandlerList>
							<string>sysMapLoad</string>
							<string>sys2DMapLoad</string>
							<string>sys3DMapLoad</string>
							<string>sysMapDownloadEvent</string>
							<string>mapOpenEvent</string>
						</eventHandlerList>
					</Script>
				</Script>
				<Script isActive="yes" isFolder="no">
					<name>map features</name>
					<packageName></packageName>
					<script>-------------------------------------------------
--         Put your Lua functions here.        --
--                                             --
-- Note that you can also use external Scripts --
-------------------------------------------------

local function loadMapFeatures()
  local mapFeaturesString = getMapUserData("mapFeatures")
  local mapFeatures
  if mapFeaturesString and mapFeaturesString ~= "" then
    mapFeatures = yajl.to_value(mapFeaturesString)
  else
    mapFeatures = {}
  end
  return mapFeatures
end

local function saveMapFeatures(mapFeaturesToSave)
  local mapFeaturesString = yajl.to_string(mapFeaturesToSave)
  setMapUserData("mapFeatures", mapFeaturesString)
end

function mmp.createMapFeature(featureName, roomCharacter)
  if not featureName or featureName == "" then
    mmp.echo("Can't create an empty map feature.")
    return
  end
  if featureName:find("%d") then
    mmp.echo("Map feature names must not contain numbers.")
    return
  end
  roomCharacter = roomCharacter or ""
  if type(roomCharacter) ~= "string" then
    mmp.echo(
      "The new room character must be either a string or nil. " ..
      type(roomCharacter) ..
      " is not allowed."
    )
    return
  end
  local lowerFeatureName = featureName:lower()
  local mapFeatures = loadMapFeatures()
  if not mapFeatures[lowerFeatureName] then
    mapFeatures[lowerFeatureName] = roomCharacter
    saveMapFeatures(mapFeatures)
    mmp.echo(
      "Created map feature '" ..
      featureName ..
      "' with the room character '" ..
      roomCharacter ..
      "'."
    )
  else
    mmp.echo("A map feature with the name '" .. featureName .. "' already exists.")
    return
  end
  return true
end

function mmp.listMapFeatures()
  local mapFeatures = loadMapFeatures()
  mmp.echo("This map has the following features:")
  echo(string.format("    %-25s | %s\n", "feature name", "room character"))
  echo(string.format("    %s\n", string.rep("-", 45)))
  for featureName, roomCharacter in pairs(mapFeatures) do
    echo(string.format("    %-25s | %s\n", featureName, roomCharacter))
  end
  return true
end

function mmp.roomCreateMapFeature(featureName, roomId)
  -- checks for the feature name
  if not featureName then
    mmp.echo("Which feature would you like to create?")
    return
  end
  local lowerFeatureName = featureName:lower()
  local mapFeatures = loadMapFeatures()
  if not mapFeatures[lowerFeatureName] then
    mmp.echo(
      "A feature with name '" ..
      featureName ..
      "' does not exist. You need to use 'feature create' first."
    )
    return
  end
  -- checks for the room ID
  if not roomId then
    if not mmp.currentroom then
      mmp.echo("Don't know where we are at the moment.")
      return
    end
    roomId = mmp.currentroom
  else
    if type(roomId) ~= "number" then
      mmp.echo("Need a room ID as number for creating a map feature on a room.")
      return
    end
  end
  if not getRoomName(roomId) then
    mmp.echo("Room number '" .. roomId .. "' does not exist.")
    return
  end
  -- check if feature already exists
  if table.contains(mmp.getRoomMapFeatures(roomId), lowerFeatureName) then
    mmp.echo("Room '" .. roomId .. "' has already map feature '" .. featureName .. "'.")
    return
  end
  -- create map feature in room
  setRoomUserData(roomId, "feature-" .. lowerFeatureName, "true")
  mmp.echo(string.format("Map feature '%s' created in room number '%d'.", featureName, roomId))
  local featureRoomChar = mapFeatures[lowerFeatureName]
  if featureRoomChar ~= "" then
    setRoomChar(roomId, featureRoomChar)
    mmp.echo("The room now carries the room char '" .. featureRoomChar .. "'.")
  end
  return true
end

function mmp.roomDeleteMapFeature(featureName, roomId)
  -- checks for the feature name
  if not featureName then
    mmp.echo("Which feature would you like to delete?")
    return
  end
  local lowerFeatureName = featureName:lower()
  -- checks for the room ID
  if not roomId then
    if not mmp.currentroom then
      mmp.echo("Don't know where we are at the moment.")
      return
    end
    roomId = mmp.currentroom
  else
    if type(roomId) ~= "number" then
      mmp.echo("Need a room ID as number for deleting a map feature from a room.")
      return
    end
  end
  if not getRoomName(roomId) then
    mmp.echo("Room number '" .. roomId .. "' does not exist.")
    return
  end
  -- check if feature exists
  local roomMapFeatures = mmp.getRoomMapFeatures(roomId)
  if not table.contains(roomMapFeatures, lowerFeatureName) then
    mmp.echo("Room '" .. roomId .. "' doesn't have map feature '" .. featureName .. "'.")
    return
  end
  -- delete map feature from room
  setRoomUserData(roomId, "feature-" .. lowerFeatureName, "")
  mmp.echo(string.format("Map feature '%s' deleted from room number '%d'.", featureName, roomId))
  -- now update room char if needed.
  -- first update current map features of this room
  roomMapFeatures = mmp.getRoomMapFeatures(roomId)
  local mapFeatures = loadMapFeatures()
  -- find out if we need to set a new room character
  if getRoomChar(roomId) == mapFeatures[lowerFeatureName] and getRoomChar(roomId) ~= "" then
    local index, otherRoomMapFeature
    -- find another usable room character
    repeat
      index, otherRoomMapFeature = next(roomMapFeatures, index)
    until not otherRoomMapFeature or mapFeatures[otherRoomMapFeature] ~= ""
    if otherRoomMapFeature then
      -- we found a usable room character, now set it
      local newRoomChar = mapFeatures[otherRoomMapFeature]
      setRoomChar(roomId, newRoomChar)
      mmp.echo("Using '" .. newRoomChar .. "' as new room character.")
    else
      -- we didn't find a usable room character, delete it.
      setRoomChar(roomId, "")
      mmp.echo("Deleted the current room character.")
    end
  end
  return true
end

function mmp.getRoomMapFeatures(roomId)
  -- checks for the room ID
  if not roomId then
    if not mmp.currentroom then
      mmp.echo("Don't know where we are at the moment.")
      return
    end
    roomId = mmp.currentroom
  else
    if type(roomId) ~= "number" then
      mmp.echo("Need a room ID as number for getting all map features of a room.")
      return
    end
  end
  if not getRoomName(roomId) then
    mmp.echo("Room number '" .. roomId .. "' does not exist.")
    return
  end
  local result = {}
  local mapFeatures = loadMapFeatures()
  for mapFeature in pairs(mapFeatures) do
    if getRoomUserData(roomId, "feature-" .. mapFeature) == "true" then
      result[#result + 1] = mapFeature
    end
  end
  return result
end

function mmp.deleteMapFeature(featureName)
  if not featureName or featureName == "" then
    mmp.echo("Which map feature would you like to delete?")
    return
  end
  local lowerFeatureName = featureName:lower()
  local mapFeatures = loadMapFeatures()
  if not mapFeatures[lowerFeatureName] then
    mmp.echo("Map feature '" .. featureName .. "' does not exist.")
    return
  end
  local roomsWithFeature = searchRoomUserData("feature-" .. lowerFeatureName, "true")
  for _, roomId in pairs(roomsWithFeature) do
    local deletionResult = mmp.roomDeleteMapFeature(lowerFeatureName, roomId)
    if not deletionResult then
      mmp.echo(
        "Something went wrong deleting the map feature '" ..
        featureName ..
        "' from all rooms. Deletion incomplete."
      )
      return
    end
  end
  mapFeatures[lowerFeatureName] = nil
  saveMapFeatures(mapFeatures)
  mmp.echo("Deleted map feature '" .. featureName .. "' from map.")
  return true
end

function mmp.getMapFeatures()
  return loadMapFeatures()
end</script>
					<eventHandlerList />
				</Script>
			</ScriptGroup>
		</ScriptGroup>
		<ScriptGroup isActive="yes" isFolder="yes">
			<name>send-text-to-all-games</name>
			<packageName>send-text-to-all-games</packageName>
			<script></script>
			<eventHandlerList />
			<Script isActive="yes" isFolder="no">
				<name>sysSendAllProfiles</name>
				<packageName></packageName>
				<script>function sysSendAllProfiles(_, text)
  expandAlias(text)
end</script>
				<eventHandlerList>
					<string>sysSendAllProfiles</string>
				</eventHandlerList>
			</Script>
		</ScriptGroup>
		<ScriptGroup isActive="yes" isFolder="yes">
			<name>deleteOldProfiles</name>
			<packageName>deleteOldProfiles</packageName>
			<script></script>
			<eventHandlerList />
			<Script isActive="yes" isFolder="no">
				<name>deleteOldProfiles script</name>
				<packageName></packageName>
				<script>function deleteOldProfiles(keepdays_arg, delete_maps)

--[[
	Deletes old profiles/maps in the "current"/"map" folders of the Mudlet home directory.
	The following files are NOT deleted:
	- Files newer than the amount of days specified as an argument to deleteOldProfiles(), or 31 days if not specified.	
	- One file for every month before that. Specifically: The first available file of every month prior to this.
	Setting the second argument to true will delete maps instead of profiles. (e.g. deleteOldProfiles(10, true))
--]]

	local keepdays = tonumber(keepdays_arg) or 31
	local profile_table = {}
	local used_last_mod_months = {}
	local slash = (string.char(getMudletHomeDir():byte()) == "/") and "/" or "\\"
	local dirpath = getMudletHomeDir()..slash..(delete_maps and "map" or "current")
	local delnum = 0

	-- Traverse the profiles folder and create a table of files:
	for filename in lfs.dir(dirpath) do
		if filename~="." and filename~=".." then
			profile_table[#profile_table+1] = {name = filename, last_mod = lfs.attributes(dirpath..slash..filename, "modification")}
		end
	end

	-- Sort the table according to last modification date from old to new:
	table.sort(profile_table, function (a,b) return a.last_mod &lt; b.last_mod end)

	echo(string.format("\nDeleting old %s. Files newer than %d days and one profile for every month before that will be kept.", delete_maps and "maps" or "profiles", keepdays))
	for i,v in ipairs(profile_table) do
		local days = math.floor(os.difftime(os.time(), v.last_mod)/86400)
		local last_mod_month = os.date("%Y/%m", v.last_mod)
		if days &gt; keepdays then
			-- For profiles older than X days, check if we already kept a table for this month:
			if not table.contains(used_last_mod_months, last_mod_month) then
				-- If not, do nothing and mark this month as "kept".
				used_last_mod_months[#used_last_mod_months+1] = last_mod_month
			else
				-- Otherwise remove the file:
				local success, errorstring = os.remove(dirpath..slash..v.name)
				if success then
					delnum = delnum + 1
				else
					cecho("\n&lt;red&gt;ERROR: "..errorstring)
				end
			end
		end
	end
	echo(string.format("\nDeletion complete. %d/%d files were removed successfully.", delnum, #profile_table))
end
</script>
				<eventHandlerList />
			</Script>
		</ScriptGroup>
		<ScriptGroup isActive="yes" isFolder="yes">
			<name>Sunder v4.181</name>
			<packageName>Sunder v4.181</packageName>
			<script></script>
			<eventHandlerList />
			<ScriptGroup isActive="yes" isFolder="yes">
				<name>Sunder</name>
				<packageName></packageName>
				<script>-------------------------------------------------
--         Put your Lua functions here.        --
--                                             --
-- Note that you can also use external Scripts --
-------------------------------------------------
</script>
				<eventHandlerList />
				<ScriptGroup isActive="yes" isFolder="yes">
					<name>Core</name>
					<packageName></packageName>
					<script>-------------------------------------------------
--         Put your Lua functions here.        --
--                                             --
-- Note that you can also use external Scripts --
-------------------------------------------------
</script>
					<eventHandlerList />
					<Script isActive="no" isFolder="no">
						<name>Changelog</name>
						<packageName></packageName>
						<script>--This version of Sunder is brought to you by Jory, and some
--dorks who helped me test things. Thanks, dorks!
--As of v3.0, this Sunder is brought to you by Daren instead!
--v3.4 - RIP Daren. Stine's time.

--4.18
--Added regenerate tracking to restoration salve
--Removed extra ironskin defense line trigger
--Fixed ironskin defense command 
--Fixed spheres not working properly for Archivist
--Added an alias to check score to fix snd.class not properly getting set 
--Updated the Vortex path to include the area with treants
--Added the def line for zealot resurgence
--Added Zealot indifference via Psionics Dull
--Added telepathy affs and states (attempting lock, locked, clamped)
--Added telepathy balances (command, cleanse, push)
--Added kaido balances (strike, cripple)
--Added kaido aff lines and updates old ones
--Added Tekura tracking for aff attacks and numb_arms tracking
--Added fend to self-parry trigger
--Added a few catches to quickwield/quickunwield to update GUI
--Added flame tattoo as a defense that you can use (flame_tattoo)
--Potentially fixed tracking for Zealot limb damage 3p on parried attacks, need to keep track
--Fixed direblow trigger not working correctly for 1p
--Removed haven point on experience gain if not above level 99
--Added who group parsing ("who groups") via Czcibor
--Fixed rend tracking to have a bit more leeway between venoms or actual rend
--Added more room suggestions for a different farsee
--Fixed tree line (apparently it changed?)
--Tentative counterattack protection
--Added an aetolia specific line to water mudletmap movement

--4.17
--Aegis function, assumes your city has it turned on (why wouldn't they?)
--Will auto aegis if you're attacking and meet certain criteria
--Fixed a few kaido triggers based on changelog 1670
--Fixed Sentinel reave due to undocumented change making the trigger different
--Fleshed out Sentinel offense to incorporate more attacks and not just spam trample

--CHANGELOG OF CHANGES
--4.16
--Updated wayfare defs
--Added tree/salve_seared

--4.15
--Added a fishing trigger that was missing
--Fixed shaman deffing

--4.14
--Added automatic dispersing with a toggle

--4.13
--Updated some Zealot attacks/triggers that were previously missed
--Updated/strenghtened restoration handling
--Went through each updated trigger with the pronoun change to account for (the racename) and fixed the matches on each.

--4.12
--Fixing random triggers that broke because of the changes below for pronouns
--Added survivor mobs and some weird eld to global targets

--4.11
--Conform to CONFIG PRONOUN - changed every he|her his|her etc to just be \w+.
--Fixed relic entangle/webspray not properly working

--4.10
--Added a safety to QL if it tries to target someone who it hasn't caught as leaving (evade, etc)
--Fixed deepwound not applying correctly for 1p
--Fixed dislocate on mending trigger, was using wrong function name.
--Updated to a new version of ascendril offenses courtesy of Hallis

--4.09
--Just debugging. Nothing major changed.

--4.08
--Alright, I swear to whatever god may listen to text rants, if the calling hasn't been fixed because GMCP is a POS at times, I'm going to 
--Fixed raloth limb breaking trigger to correctly capture breaks
--Updated Ascendril offenses

--4.07
--Fixed miasma/warmth/safeguard to not overlap each other constantly
--Made some changes to target calling w/debugging information to try and track down some problems

--4.06
--Fixed target calling AGAIN. Used the wrong variable.
--Fixed the route for gogo low
--Updated defenses to auto add miasma/safeguard/warmth based on race

--4.05
--Updated crippled_throat to 'crippled throat' for ease of use/tracking.
--Added sparklight into tables of mobs
--Fixed basher not actually changing the correct path

--4.04
--Updated the bashing loop to include two options. You can either choose an easier, longer path, or an endgame, xp focused path.
--Checks automatically if you don't pick either.
--Continued working on Ascendril.
--Fixed/changed method of target call over web changing target.

--4.03
--Fixed a bug with enemy aff displaying multiples of the same
--Fixed up ascendril offenses
--Added fulcrum flare triggers
--Focus now properly cures muddled
--Made a force to use miasma/warmth based on endgame race, it was just way easier this way

--4.02
--Updated ascendril aliases to use the already made system for defenses to check if a spell is stalled
--Fixed target affliction tracker which was messing up the removing of affs
--Fixed up the ylem path to remove an inaccessible location

--4.0
--Changed the "people in room" area to separate to shadow/spirit.
--It uses snd.shadow and snd.spirit primarily.
--WARNING - if there is someone that is not on the list, it will pull information from the Aetolia API to check their city.
--To do this, the function creates a small document (that it deletes once finished) in your home directory - use getMudletHomeDir() to check.
--Fixed soothing trigger to not proc on mending, whoops
--Changed ldd to also accept 'defup'. Will load based on class if no argument specified.
--halp has been updated and fleshed out
--?pk has been made and will show aliases for different modes with basic descriptions based on snd.class
--Added timing delays to 'fake call' and 'prismatic barrier' as spam is a friend of nobody, except..vegans or something? idk nobody reads changelogs anyways
--Lycan tracking should be fixed for the case of it retaining affs and removing the wrong ones on parry/resist
--Fixed an issue with Kai Cripple where we were using the wrong match and it wasn't tracking properly
--Updated checking target list with GMCP instead of who here.
--I think deffing is fixed after death? Maybe?
--The "people here" box in the bottom left should accurately update now. -dirty rotten lies but ITS FIXED maybe -- double fix, see below
--Fixed up the wayfarer aff support to utilize a bit more of the kit
--Added 1p shaman vinelash tracking
--Updated Carnifex hound handling with proper affs and it uses stuff other than contagion
--Combined Carnifex hound aff triggers into 1 so it'll track 1p and 3p affs
--Fixed a typo in the zeal chain attacks
--Fixed Zealot affs not clearing properly on new attacks, which would let parries on attack 2 clear attack 1
--Added Zealot Rejection to rebounding lines
--Opened up the bite trigger so it didn't break on artifact fangs and etc
--The goylem functions shouldn't loop now if you try it while in a city. You will need to GOYLEM START to restart it.
--Added a mounted check based on gmcp to above movement function.
--Added/updated area mobs to the bashing table: 
--Arbothia, Drakuum, Ollin, Kalydian, Maghuir Fissure, Torturer's Caverns, Mamashi, Three Rock, Ia'shal, Tcanna
--Shadow has weird calling habits and likes to call their class. Sunder will now recognize those aff calls appropriately.
--Added swirl/mental disrupt to 1p tracking
--Added research disperse to clear all writhes upon use on target by their ally
--Changed 'on' and 'off' to 'sndon' and 'sndoff' after a suggestion by Ehtias, thanks! No more accidentally turning stuff off or being unable to do certain things.
--The Shadowfiends are upon us. Huge influx of triggers for shadow based classes, including defenses and afflictions.
--Made the defense table a bit easier to navigate by separating most of the defenses per class
--Fixed up vinelash 3rd person hit confirmation
--Added finesse to track and undo properly
--Added the ability to call mobs by number with taget calling enabled (alias 'tcl')
--Fixed up the tracking of folks in room to separate shadow and spirit.
--If it finds someone that it doesn't have in snd.spirit/snd.shadow, it will download a text file of their information to your mudlet directory
--And check their city upon completion, as well as add them to a list. Click on the "New people to sort" to get info of who they are and where they go!
--Updated enemy affs to properly change colors for the lock affs (paralysis, asthma, stupidity, anorexia), as well as prone/pseudo prone
--Updated enemy limb tracker to display different colors for levels of breaks

--Added the function snd.checksomeAffs. 
--It accepts a list of affs in a table, along with a 2nd argument of a number of affs it needs to hit to return true
--For example: snd.checksomeAffs({"slickness","clumsiness", "hypochondria", "weariness", "paresis"}, 2)
--This will return true if 2 of the affs are hit, at minimum. This allows you to open up your aff checking and not be rigid.
--

--3.7 We did stuff here, a lot of stuff, but it got lost somewhere.

--3.6 (The Sentinel update)
--Moved where afflictions are added in snd.target_got so the display panel on left is updated for affs as they are on hit, rather than missing the last aff hit with
--Added prone to the display panel using snd.target_prone and checks in adding/removing affs
--Added ways to have display update removing prone because it's a pain in the neck ('not prone' and 'stood' triggers)
--Added sentinel defs (barksin, flexibility, lifesap, maskedscent, conceal, hardiness) and def lines
--Added sent defup option
--Added more limb break lines
--Added daunt and flourish handling along with daunt aff tracking
--Moved Sentinel aff picking to script to better facility special cases if they want to be made, an example is included
--Added icebreath/salve(trample for groups) offense for sentinels
--Removed some code from tfix+sensi for sentinel so it is more in line with the other modes
--Switched to GMCP for webtell target checking, removing the need to color check.
--Added tenacity/fury tracking
--Switched around and updated the target list

--3.5 (Templuminary additions)
--Updated vine entangle/webspray lines to confirm with changes in changelog 1505
--Implementing better group offenses - Templar/Luminary - Group impale and group aff
--Rewrote some handling of Luminary attacks, added crash, 1p dazzle
--Added snd.all_affs to easier check how many affs are on target
--Added Dhuriv Weaken to tracking

--3.4 (Anti-illusion crusade)
--Added in more customizable Sentinel offense
--Added/fixed Dhuriv attacks to track
--Added some Dhuriv specific curing to appropriate methods
--Updated prismatic handling to include another Templar specific attack
--Added hourglass handling including checking if an hourglass is inked on login
--Added automatic webtell color check and target call check to try to stop illusions -- this has been updated again in 3.6
--Added and fixed some raze tracking issues
--Will start calling affs again on new target switch instead of previous methodology
--Added a Shaman prone, another transfix line which may be overkill

--v3.3
--Added a counter for neckdrag.
--Fixed a bug that occasionally doubled up venoms if you only needed one to lock.
--Updated the lists of spirit/shadow players.
--Fixed a bug with void and ineffective cures in the same prompt as real ones.
--Added angel sacrifice to both 1p and 3p aff tracking cures.
--Added evoke cleansing for luminaries.
--Totally reworked the luminary group offenses.
--Fixed a bug that prevented accurately tracking class/faction on login.
--Added special onslaught eld to the top of the global target list.
--Added a very basic wayfarer offense.
--Expanded the 'halp' alias to include a lot of useful commands.
--Fixed a bug preventing targets from loading in the Shattered Vortex.

--v3.2
--Reworked afftracking for venoms/effects that give more than one aff.
--Improved tracking of flay for syssin.
--Cleaned up all syssin and a bunch of templar offenses.
--Updated how sunder tracks afflictions on target.
--Finished adding all of the weaponry hit lines.
--Further improved 3p affliction tracking with safety checks for luminaries.
--Improved re-queuing logic to avoid hitting rebounding, specifically.

--v3.1
--Improved the parrying even further.
--Expanded the templar 'ret' offense a little more.
--Fixed a bug that occasionally broke the system under certain parry conditions.
--Tidied and updated the templar dmg and zl aliases.
--Added more templar wielding options.
--Made some changes to how target_locked and missingAff functions work.
--Completely revamped third person attack tracking.
--Totally redid how sunder chooses which effects to use in a given round.

--v3.0: Daren's coup
--Reorganized a bunch of folders.
--Added a feature where FC will display missing venoms.
--Hooked up the exit-tracking window in the GUI.
--Added tracking of cube sigils in room.
--Fixed several minor bugs in affliction and prone tracking.
--Fixed some issues with the my and enemy affs windows, they display properly now.
--Updated the bashing table to reflect the previous changes from IH to GMCP.
--Made the melting call a little less obnoxious/frequent.
--Added some new tools like missingAff and target_locked for building offenses.
--Made some major changes to the 3p curing tracking, it's much more accurate now.
--Completely revamped the templar 'ret' offense.
--Improved the parry handling a little.

--v2.3
--Improved the attack queuing to update better as target status changes.
--Added a couple of syssin affliction-based offenses.
--Cleaned up a bunch of junk with global variables, converting to local where possible.
--Added monk defenses and a monk defense profile. Thanks Kalinaar!
--Expanded the alerts to include some other important conditions.
--Sunder will now attempt to automatically set your faction, making it more plug-and-play.

--v2.2
--Cleaned up handling of the toggles window, it should be more accurate now.
--Added some syssin defenses and QOL stuff. Thanks Daren!
--Added a basic syssin damage offense (dmg) for opportunistic garrotes.
--Added some firstaid elevate functionality for panicky stages in a few affs.
--The basher now runs off GMCP - may be some lingering bugs with this change, let me know.
--Apothecaries rejoice! There's not a 'global' target list!
--Added a questing module and some quest triggers and handling. Neat stuff.
--Added a new landmark system, you can set as many as you like now and pt &lt;landmark&gt;.
--  o Find the list in scripts-&gt;sunder-&gt;core-&gt;variables-&gt;landmarks
--Defended attacks will no long have their afflictions tracked.
--Sunder will now handle shrugging for syssin.

--v2.1
--Corrected a syntax error in absolve for lumis. Thanks Oonagh!
--Dramatically improved shifter tracking and offense. Thanks Taaroshi!
--Mjoll linked up the myaff and enemy aff windows. Thanks Mjoll!
--Fixed up some stuff with a couple of the templar offenses.
--Added some more 1p sentinel tracking. Thanks Stine!
--Also woodlore aff tracking. Also from Stine!
--Added more Carnifex defenses. Thanks Dagun!
--Added a new alias, 'grp', which lets you set a bashing group. Use grp none to clear it.
--Improved the 'wielded' tracking window, it's ALMOST always accurate now.
--Got the toggles windows working on the GUI - it's now officially over halfway functional!

--v2.0
--Fixed a bug with handling necromancy shrivel. Sorry :(
--Added some QOL aliases for lumi, like beckon and stuff.
--Added 3p dstab afftracking.
--Fixed an issue with looped target calling if listening to each other.
--Added mindnet and fullsense calls.
--Cleaned up alertness logic.
--Added directional keys.
--Target calling will now also make you pick up/drop monos on movement.
--Fixed a bug with shield swapping for lumi.
--Subjected myself to geyser :( Cleaned up the chat box a lot.
--Sunder now has an actual GUI. Not all of it works yet! COMING SOON (TM).
--Added tracking for monolith sigil in room.
--Added wielding tracking. Still slightly buggy, working on it!
--Added a new utilities folder with some stuff for toxicology.
--Sunder is now packaged in modules, though I'll also maintain a full package.
  --NOTE! I'm expecting bugs with this, please try it out and report errors!
--Fixed a bug with tekura bashing. Apparently there was no cobra toggle.
--The ls alias now supports multiple target callers.

--v1.6
--Added luminary class defenses and ldd lumi option.
--Fixed some stuff to make lumi shield-swapping cleaner.
--Added a couple of basic group offenses for monks.
--Removed blind/deaf from def options as firstaid handles it.
--Adjusted 'newb' mode for templars to cheese impale instead of just affs.
--Fixed a bug with uncalled 3p attacks adding random affs.
--Added first and third person aff tracking for sentinels.
--Made a sentinel version of ms and dmg both.

--v1.5
--Added chasten after overwhelm for lumi offenses.
--Added another zealot group offense, dmg.
--Added ln as a lunge alias.
--Added some serious alerts and echoes for radiance.
--Added an echo for parsing alertness.
--Fixed a bug with class tracking.
--Fixed a bug with rejecting lust tarot.
--Added some stuff to try and rescue allies in need.
--Added a luminary alias 'fs' to perform force stop.
--Added luminary perform force kick on prismatic barrier.
--Luminary group mode will now swap between shields as needed.
--Zealots and monks will GUARD instead of PARRY.
--Added a dmg alias for shapeshifters, too.

--v1.4
--Fixed a bug with shaman afftracking.
--Added a newb offense for Ascendril.
--Added auto class tracking, no more need to change.
--Cleaned up fitness handling, won't try it if you can't now.
--Added basic zealot support and mouse mode.
--Added a couple zones to the basher. Thanks Aeraisentesh!
--Added some support for firstaid to handle shrivel better.

--v1.3
--Cleaned up luminary first-person tracking.
--Added a mouse mode for luminary.
--Added mouse mode for ascendril, too.
--Affcalling will call blaze now for templars.
--Afftracking will track said blaze calls from templars.
--Added minimal shaman support, with mouse mode.
--Cleaned up some stuff with melting calls.
--Fixed an issue with web re-invite spam.

--v1.2
--Added support for shapeshifter defenses.
--Added shifter bashing.
--Fixed a bug with the fangbarrier defense.
--Added an alert for high madness while shifter.
--MUTATE/REVERT will now swap snd.class automatically.
--Fixed the spam issue with arti pipes when lighting is toggled on.

--v1.1.1 (hotfixes)
--Added a better cooldown to panic alerts.
--Added some more checks to the auto-web-invite.
--Removed PvE target calls.
--Fitness toggle will now actually toggle use of fitness.
--Added a scepter toggle for bashing.

--v1.1
--Fixed a major issue with afftracking and rebounding aura.
--Added a new ms alias to templars.
--Expanded afftracking to allow for prone conditions.
--Added a dummy mode generic offense that just punches repeatedly.
--Added entanglement tracking.
--Distinguished between paresis and paralysis for afftracking.
--Added a panic toggle that cries for help as needed.
--Added class-based auto-defend for panicking allies.
--Added some UNDEFEND checks, too.
--Made impale attempts check for physical affs to extend writhe.
--Added auto-web-invite if an ally web quits while attacking.

--v1.0 (out of alpha!)
--Added support for Carnifex.
--Added Carnifex limb and aff routes.
--Added Carnifex third person tracking for limbs and affs.
--Added snd.faction to toggle faction-based functions.
--Added warhound handling! Woo puppies!
--Corrected some errors in tracking a couple defenses.
--Fixed a bug with clearing affs on re-targeting.
--Expanded the list of spirit-side players.
--Added target following with the ls alias (ls off to turn off).
--Added Ayhesa to the pather for bashing.
--Cleaned up some offense options and checks for easier use.

--v0.7
--Fixed several tracking issues with people leaving the room.
--Added a new templar offense route, mg, for magic-based classes.
--Combined the iceblast and stun limb offenses. Super offense!
--Added proper tracking of shivering/frozen affs on target.
--Dramatically changed limb route logic - again.
--Fixed a bug with auto-calling and lyres. Oh the spam.

--v0.6
--Dramatically cleaned up 1p attack echoes. Whew.
--Tweaked templar bashing to support DSK too.
--Added fitness toggle and use of it.
--Started working on the questing module.
--Fixed a bug with the ylem hunter not using leylines.
--Added basic luminary offense stuff.

--v0.5 (beta!)
--Did a total rewrite. Omg.
--Fixed so many bugs. Can't remember them all.
--Cleaned up a lot of unnecessary or redundant variables.
--Added a wield alias for limb weapons.
--Made some major adjustments to limb offense, much nicer now.
--Added some toggles, like newbie and parrying.
--Added third-person luminary aff tracking.

--v0.4.1
--Added basic templar limb offense.

--v0.4 (alpha)
--Cleaned up eld shackling, it's pretty smart now.
--Removed the pile of manure from the ylem hunter.
--Added Nal'jin Depths to the auto basher.
--Added soul substitute for resetting offense.
--Replaced a bunch of ylem-related lines to reduce spam.
--Added a more obvious alert for prismatic barriers.
--Added lower Tiyen to the basher too.
--Added sight as a valid aff. Yay transfix.
--Added new offense options: mana, jesus, legs, and arms.
--Added rudimentary auto-calling.
--Cleaned up a bunch of spammy junk.

--v0.3 (pre-alpha)
--Added a bunch of dead people checks to stop the offense junk.
--Seriously cleaned up the ylem hunter. Like a lot.
--Sank some time into optimizing the zeal offense.
--Added target calling, and an anti-illusion check for it.
--Tweaked the scent calling to ignore your current room.

--v0.2 (pre-pre-alpha)
--Added lots more paths to the basher. Yay bashing.
--Added elemancy reflection to razing, and third person aff tracking.
--Also, added razing to third person tracking, to avoid doing it double.
--Refined some of the venom stacks, specifically the 'ret' one.
--Added more subs, colors, and echoes to reduce spam.
--Put in a prone check to STAND while bashing.
--Worked up a currently primitive ylem hunter thing.
</script>
						<eventHandlerList />
					</Script>
					<Script isActive="yes" isFolder="no">
						<name>init</name>
						<packageName></packageName>
						<script>
snd = snd or {}
snd.charItems = snd.charItems or {}
speedWalkCounter = 0

setConsoleBufferSize("main", 100000, 1000)</script>
						<eventHandlerList />
					</Script>
					<ScriptGroup isActive="yes" isFolder="yes">
						<name>Variables</name>
						<packageName></packageName>
						<script>-------------------------------------------------
--         Put your Lua functions here.        --
--                                             --
-- Note that you can also use external Scripts --
-------------------------------------------------
</script>
						<eventHandlerList />
						<Script isActive="yes" isFolder="no">
							<name>options</name>
							<packageName></packageName>
							<script>
snd.toggles = {
active = true, -- is the system running?
healing = false, -- keep off, incomplete
parrying = true, -- parry most-damaged limb
defenses = true, -- maintain defenses like cloak and density
calling = false, -- call targets on web chat
listening = false,
affcalling = true, -- announce afflictions as you hit
chameleon = false,
standing = true, -- like healing, also incomplete
clotting = true, -- incomplete
bashing = false, -- bashing! Woo!
fasthunt = false, -- automatically clear bashing rooms as you enter
generics = false, -- target by name instead of number while bashing
gathering = true, -- pick up corpses/items/gold while bashing
lighting = true, -- light pipes
attacking = false, -- attacking with a PvP function
balecho = true, -- replace balance lines with shorthand
atkecho = true, -- replace attack lines with shorthand
newbie = false, -- use newbie bashing attacks
scepter = false,
zeal = false, -- use Templar zeal for bashing
cobra = false, -- use of tekura cobra stance
lightning = false, -- use Luminary lightning for bashing
gallop = false, -- use gallop while pathing around
dash = false, -- use of dash while pathing around
fitness = true, -- have access to the fitness ability
purge = false, -- have access to soul purge
shrug = true, -- have access to shrug
rockharvest = false, -- are you harvesting rocks?
roe = false, -- harvesting fishroe
disperse = true,
}

snd.sep = "&amp;&amp;" -- important! CONFIG SEPARATOR value
snd.mount = "287832" -- your horse's ID number
snd.faction = "spirit" -- your faction, spirit or shadow
snd.class = "Templar" -- your class, used for bashing
snd.limb_dmg_done = 8.41 -- really only for Templars
snd.hounds = {
mark = "",
contagion = "",
growl = "",
stare = "",
acidspit = "",
tundralhowl = "",
firebreath = ""
}

snd.stats = { 
  xp = 0,
  last_xp = 0,
  max_xp = 0,
}</script>
							<eventHandlerList />
						</Script>
						<Script isActive="yes" isFolder="no">
							<name>toggles</name>
							<packageName></packageName>
							<script>function snd.toggle(toggle)
  if snd.toggles[toggle] then
    snd.toggles[toggle] = false
    snd.message(string.title(toggle) .. " &lt;red&gt;OFF&lt;white&gt;!", "toggle")
    if toggle == "chameleon" then
      expandAlias("kd chameleon", false)
    end
  else
    snd.toggles[toggle] = true
    snd.message(string.title(toggle) .. " &lt;green&gt;ON&lt;white&gt;!", "toggle")
    if toggle == "chameleon" then
      snd.load_def(snd.class:lower())
      snd.defenses["def_chameleon"].needit = true
    end
  end
  send(" ")
end</script>
							<eventHandlerList />
						</Script>
						<Script isActive="yes" isFolder="no">
							<name>vitals</name>
							<packageName></packageName>
							<script>
snd.balance = {
fitness = true,
shrug = true,
battle = true,
hound = true,
implant = true,
soulpoison = true,
purge = true,		
panacea = true,
cleanse = true,
fool = true,
mend = true,
expunge = true,
purifyblood = true,
nimbleness = true,
momentum = true,
absorb = true,
scour = true,
panacea = true,
earthenwill = true,
morph =  true,
furor = true,
vitality = true,
kaistrike = true,
mindcommand = true,
blackout = true,
mindpush = true,
mindcleanse = true,
}

snd.waiting = {
balance = false,
equilibrium = false,
rarm = false,
larm = false,
quest_get = false,
lighting = false,
elixir = false,
herb = false,
vial = false,
salve = false,
moss = false,
writhe = false,
concentrate = false,
tree = false,
focus = false,
clot = false,
parry = false,
queue = false,
who_here = false,
hound = false,
purge = false,
melting = false
}

snd.limb_damage = {
head = 0,
torso = 0,
["left arm"] = 0,
["right arm"] = 0,
["left leg"] = 0,
["right leg"] = 0
}

snd.parrying = "none"
snd.pipes_lit = false
snd.emptypipe = "none"
snd.smokedpipe = "none"

snd.sent = {

}

snd.cur = {
herb = "",
drink = "",
vial = "",
salve = "",
pipe = ""
}

snd.last = {
elixir = "",
herb = "",
smoke = "",
salve = "",
tattoo = "",
focus = "",
tree = ""
}</script>
							<eventHandlerList />
						</Script>
						<Script isActive="yes" isFolder="no">
							<name>misc</name>
							<packageName></packageName>
							<script>
snd.queued = nil
snd.target = "none"
snd.target_gone = false
snd.moving_to = "none"
snd.can_path = true
snd.scented = {}
snd.items = {}
snd.group = {}
snd.wielded = {left =  {name="", id=""}, right = {name="", id=""}}
snd.eld = 0
snd.pathing = false
snd.need_fitness = false
snd.shopih = false
snd.toparry = "none"
snd.counterattack_active = false

snd.delete_prompt = false

snd.used = {
shield = false,
rebounding = false,
paste = false
}

snd.my = {
area = "",
room = "",
room_name = "",
room_exits = "",
}

snd.new = {
room = false,
area = false
}

snd.pills = {
acuity = "a pill of acuity",
amaurosis = "a pill of amaurosis",
anabiotic = "an anabiotic pill",
antipsychotic = "an antipsychotic pill",
coagulation = "a coagulation pill",
decongestant = "a decongestant pill",
depressant = "a depressant pill",
euphoriant = "an euphoriant pill",
kawhe = "a kawhe pill",
opiate = "an opiate pill",
ototoxin = "an ototoxin pill",
panacea = "a panacea pill",
steroid = "a steroid pill",
stimulant = "a stimulant pill",
thanatonin = "a thanatonin pill",
waterbreathing = "a pill of waterbreathing",
}


snd.balance_pills = {
"antipsychotic",
"amaurosis",
"steroid",
"opiate",
"panacea",
"euphoriant",
"ototoxin",
"decongestant",
"stimulant",
"depressant",
"waterbreathing"
}

snd.outred = {
ash = 0,
bayberry = 0,
bellwort = 0,
bloodroot = 0,
cohosh = 0,
echinacea = 0,
elm = 0,
ginseng = 0,
goldenseal = 0,
hawthorn = 0,
help = 0,
kola = 0,
lobelia = 0,
moss = 0,
pear = 0,
sileris = 0,
skullcap = 0,
valerian = 0
}

snd.physical_affs = {
"paresis",
"paralysis",
"left_leg_broken",
"left_arm_broken",
"right_leg_broken",
"right_arm_broken",
"heamophilia",
"asthma",
"impairment",
"clumsiness",
"vomiting",
"sensitivity",
"ringing_ears",
"limb_veins",
"lethargy",
"blood_poison",
"blood_curse",
"crippled throat",
"sandrot",
"disfigurement",
"ablaze",
"shivering",
"frozen",
"rend",
"exhausted",
"blisters",
"allergies",
"addiction",
"hypersomnia",
"heartflutter",
"burnt_eyes",
"blurry vision",
"migraine",
"deadening"
}

snd.mental_affs = {
"egocentric",
"stupidity",
"anorexia",
"epilepsy",
"mirroring",
"mental disruption",
"peace",
"paranoia",
"hallucinations",
"stuttering",
"dizziness",
"indifference",
"berserking",
"pacifism",
"lovers effect",
"laxity",
"hatred",
"generosity",
"claustrophobia",
"vertigo",
"faintness",
"loneliness",
"agoraphobia",
"masochism",
"recklessness",
"weariness",
"impatience",
"confusion",
"dementia",
"premonition"
}

snd.all_affs =  table.n_union(snd.physical_affs, snd.mental_affs, { "hypochondria", "sight" })

snd.circle_affs = {
"merciful",
"masochism",
"berserking",
"recklessness",
"sealing_circle"
}
snd.triangle_affs = {
"laxity",
"lovers_effect",
"peace",
"magnanimity",
"sealing_triangle"
}
snd.square_affs = {
"dizziness",
"faintness",
"epilepsy",
"shyness",
"sealing_square"
}

snd.weapon_types = {
"club",
"flail",
"mace",
"morningstar",
"greatmaul",
"warhammer",
"handaxe",
"javelin",
"battleaxe",
"broadsword",
"dagger",
"stiletto",
"dirk",
"falchion",
"falcata",
"flyssa",
"longsword",
"rapier",
"sarissa",
"scimitar",
"shortsword",
"spear",
"trident",
"whip",
"bardiche",
"bastard",
"falx",
"glaive",
"halberd",
"scythe",

"banded",
"buckler",
"cavalry",
"kite",
"tower",
"shield",
}</script>
							<eventHandlerList />
						</Script>
						<Script isActive="yes" isFolder="no">
							<name>landmarks</name>
							<packageName></packageName>
							<script>
snd.landmarks = {
["eno"] = "enorian",
["dui"] = "duiran",
["sp"] = "spinesreach",
["bl"] = "bloodloch",
["es"] = "esterport",
["crack"] = "9193", -- Bloodloch meeting place
["ty"] = "22066", -- templar training room
["rd"] = "64874", -- Rising dawn - hidden room in enorian
["milk"] = "21899", -- Enorian milking room
["bp"] = "9330", -- boiling point, bloodloch training room
["im"] = "52748", -- ironmaw, spinesreach training room
["dir"] = "directory",
["tear"] = "19296", -- tear of lleis
["tw"] = "three widows",
["tw1"] = "23655", -- three widows mine
["tw2"] = "23708", -- three widows cows
["tw3"] = "23137", -- jinjin
["tw4"] = "58744", -- turn in alpacas
["tw5"] = "58740", -- turn in kestrels
["stp"] = "14050", -- spinesreach stipend
["mine"] = "mines", -- in case you typo like me all the time :(
["hlb"] = "50504", -- radek in helba
["hlbp"] = "57744", -- helba pickaxes for sale
["hlbm"] = "23359", -- helba mine
["ag"] = "12335", -- agrasha
["put"] = "28511", -- putoran
["gre"] = "37005", -- grecht with the garden
["oy"] = "11203", -- oysters for bruce
["bruce"] = "11146", -- turn in sapphires
["ann"] = "23246", -- annaria
["tue"] = "23282", -- tuera
["tlm"] = "23236", -- near tellimerius, so darkies don't die
["tlmt"] = "23219", -- turn in tellimerius
["vn"] = "22908", -- venicus
["vn1"] = "22883", -- venicus turnin
["sr"] = "siroccian mountains", -- shorthand
["sr1"] = "58748", -- turn in ores, nuggets, and coal
["sr2"] = "1429", -- if you found the chest with the axe
["ms1"] = "24493",
["ms2"] = "65216",
["ms3"] = "59970",
["ms4"] = "60126",
["ms5"] = "59967",
["ms6"] = "59955",
["or"] = "62642", -- orrery
--hunting grounds
["hg"] = "4746",
["nighteye"] = "9342",
["claw"] = "9341",
["shade"] = "6090",
["staghelm"] = "9348",
["silence"] = "4614",
["rose"] = "9341",
["ivory"] = "6842",
["rowan"] = "6842",
["hgshrine"] = "23489",
}</script>
							<eventHandlerList />
						</Script>
					</ScriptGroup>
					<ScriptGroup isActive="yes" isFolder="yes">
						<name>Events</name>
						<packageName></packageName>
						<script>-------------------------------------------------
--         Put your Lua functions here.        --
--                                             --
-- Note that you can also use external Scripts --
-------------------------------------------------
</script>
						<eventHandlerList />
						<Script isActive="yes" isFolder="no">
							<name>gmcp_room</name>
							<packageName></packageName>
							<script>
function gmcp_room()
--Check current room
 if snd.my.room ~= gmcp.Room.Info.num then
--Clear room effects
--Set current room
  snd.my.room = gmcp.Room.Info.num
	snd.my.room_name = gmcp.Room.Info.name
	snd.my.room_exits = {}
	for ex in pairs(gmcp.Room.Info.exits) do
	 table.insert(snd.my.room_exits, ex)
	end
	if snd.gui_loaded then
	 if #snd.my.room_exits &gt;= 1 then
	  exits:echo("&lt;center&gt;"..table.concat(snd.my.room_exits, ", ").."&lt;/center&gt;")
	 else
	  exits:echo("&lt;center&gt;no exits&lt;/center")
	 end
	end
	if snd.toggles.rockharvest then
	 snd.send("harvest rock")
	end
	if snd.toggles.roe then
	 snd.send("plants")
	end
  if snd.bashing_loaded then
	 snd.vermin = 0
--Initiate fasthunt if necessary
   snd.need_loot = false
   snd.new.room = true
	 snd.room_clear = false
	 if snd.my.room == 56222 or snd.my.room == 55185 then
	  snd.send("pull lever")
	 end
	 if snd.my.room == 55187 then
	  snd.send("pull lever196935")
	 end
	end
	if snd.offense_loaded then
	 snd.class_hitting = "none"
	 snd.person_hitting = "none"
	end
	if snd.ylem_loaded then
	 if snd.my.room == tonumber(ylm.next_zone) then
	  snd.send("leylines")
	 end
	end
 end
--Check current area
 if snd.my.area ~= gmcp.Room.Info.area then
  if snd.my.area ~= "Eld" and (not (snd.my.area:find("Vortex") and gmcp.Room.Info.area == "the Shattered Vortex") 
    or  (snd.my.area:find("Vortex") and gmcp.Room.Info.area ~= "the Shattered Vortex")) 
    then --have exceptions for fracture and vortex then 
   snd.my.area = gmcp.Room.Info.area --Initiate new area targets, if necessary
   snd.new.area = true --Set current area
  end
 end
end

</script>
							<eventHandlerList>
								<string>gmcp.Room.Info</string>
							</eventHandlerList>
						</Script>
						<Script isActive="yes" isFolder="no">
							<name>gmcp_vitals</name>
							<packageName></packageName>
							<script>
function gmcp_vitals()
-- snd.core()
 if gmcp.Char.Vitals.prone == "1" and snd.not_entangled() and snd.not_aff("paralysis") then
  snd.aff_have("prone")
 else
  snd.aff_remove("prone")
 end
 if snd.can_cast() then
  snd.last_attack = "none"
 end
 if tonumber(gmcp.Char.Vitals.bleeding) &gt;= 200 then
  snd.aff_have("bleeding")
 else
  snd.aff_remove("bleeding")
 end
 hp = 100*(gmcp.Char.Vitals.hp/gmcp.Char.Vitals.maxhp)
 if hp &lt; 10 then
  snd.aff_have("health_10")
 elseif hp &lt; 35 then
  snd.aff_remove("health_10")
  snd.aff_have("health_35")
 elseif hp &lt; 55 then
  snd.aff_remove("health_10")
  snd.aff_remove("health_35")
  snd.aff_have("health_55")
 elseif hp &lt; 75 then
  snd.aff_remove("health_10")
  snd.aff_remove("health_35")
  snd.aff_remove("health_55")
  snd.aff_have("health_75")
 else
  snd.aff_remove("health_10")
  snd.aff_remove("health_35")
  snd.aff_remove("health_55")
  snd.aff_remove("health_75")
 end
 if hp &lt; 65 then
  snd.aff_have("health_low")
 else
  snd.aff_remove("health_low")
 end
 mp = 100*(gmcp.Char.Vitals.mp/gmcp.Char.Vitals.maxmp)
 if mp &lt; 10 then
  snd.aff_have("mana_10")
 elseif mp &lt; 35 then
  snd.aff_remove("mana_10")
  snd.aff_have("mana_35")
 elseif mp &lt; 55 then
  snd.aff_remove("mana_10")
  snd.aff_remove("mana_35")
  snd.aff_have("mana_55")
 elseif mp &lt; 75 then
  snd.aff_remove("mana_10")
  snd.aff_remove("mana_35")
  snd.aff_remove("mana_55")
  snd.aff_have("mana_75")
 else
  snd.aff_remove("mana_10")
  snd.aff_remove("mana_35")
  snd.aff_remove("mana_55")
  snd.aff_remove("mana_75")
 end
 if mp &lt; 65 then
  snd.aff_have("mana_low")
 else
  snd.aff_remove("mana_low")
 end
end</script>
							<eventHandlerList>
								<string>gmcp.Char.Vitals</string>
							</eventHandlerList>
						</Script>
						<Script isActive="yes" isFolder="no">
							<name>gmcp_items</name>
							<packageName></packageName>
							<script>
function gmcp_items()
 if gmcp.Char.Items.List.location == "room" then
  snd.items = {}
  for _, v in ipairs(gmcp.Char.Items.List.items) do
   if not snd.items[v.name] then snd.items[v.name] = {} end
   table.insert(snd.items[v.name], v.id)
  end
 elseif gmcp.Char.Items.List.location == "inv" then
  snd.wielded = {left =  {name="", id=""}, right = {name="", id=""}}
  for _, v in ipairs(gmcp.Char.Items.List.items) do
	 if v.attrib == "l" then
	  if snd.wielded.left.name == "" then
		 snd.wielded.left.name = v.name
		 snd.wielded.left.id = v.id
		elseif snd.wielded.right.name == "" then
		 snd.wielded.right.name = v.name
		 snd.wielded.right.id = v.id
		end
	 end
	end
 end
 snd.updateItems()


	local list = gmcp.Char.Items.List
	if list.location == "inv" then
		snd.charItems = snd.charItems or{}
		snd.charItems.wielded = {}
		snd.charItems.worn = {}
		snd.charItems.not_worn = {}
		snd.charItems.full = {}
        
		snd.charItems.weaponbelt = {}
		snd.charItems.weaponbelt.id = nil
		snd.charItems.weaponbelt.contents = {}
		snd.charItems.sigils = {}
		snd.charItems.sigils.fist = {}
		snd.charItems.sigils.firefly = {}
		snd.charItems.claw = nil
		snd.charItems.orbs = {}

		
		for i, item in ipairs(list.items) do
			table.insert(snd.charItems.full, {item.name, item.id})
			if item.attrib and item.attrib:find("l") then
				table.insert(snd.charItems.wielded, {item.name, item.id})
			end

			if item.attrib == "w" then
				table.insert(snd.charItems.worn, {item.name, item.id})
				if item.name:find("weaponbelt") then
				end
			end

			if item.attrib == "W" then
				table.insert(snd.charItems.not_worn, {item.name, item.id})
			end

			if item.name:find("weaponbelt") then
				snd.charItems.weaponbelt.id = item.id
			end
	
			if item.name:find("Parxian orb") then
				table.insert(snd.charItems.orbs, item.id)
			end

			if item.name:find("fist%-shaped sigil") or item.name:find("vine sigil") then
				table.insert(snd.charItems.sigils.fist, item.id)
			end
    
			if item.name:find("eye sigil") or item.name:find("firefly sigil") then
				table.insert(snd.charItems.sigils.firefly, item.id)
			end

			if item.name:find("Claw") then
				snd.charItems.claw = item.id
			end
		end
	end

	if snd.charItems.fistup and snd.bals.both() then
		for _, item in ipairs(snd.charItems.wielded) do
			local sigil = table.remove(snd.charItems.sigils.fist, 1)
			if not sigil then
				snd.charItems.fistup = false
			else
				send("attach " .. sigil .. " to " .. item[2])
			end
		end
		send("invcat sort")
		snd.charItems.fistup = false
	elseif snd.charItems.fistup and not snd.bals.both() then
		tempTimer(1, [[requestCharItems(true)]])
	end

	if snd.charItems.wield and snd.bals.both() then
		if not hasSkill("Weaponbelts") then
			send("wield " .. snd.charItems.wield.right or snd.charItems.wield.left, false)
			snd.charItems.wield = nil
			requestCharItems(true)
			return false
		end
--NTS The 'quickwield' code is new. If it breaks, comment 
--out everything up to: for k, and one of the ends at the bottom, line 127
	if hasSkill("Quickwield") and snd.charItems.wield.right:lower() ~= "none" then
		if snd.charItems.wield.left then
			send("qeb quickwield both " .. snd.charItems.wield.right .. " " .. snd.charItems.wield.left, false)
		else
			send("qeb quickwield both  " .. snd.charItems.wield.right, false)
		end
	else
		for k, values in pairs(snd.charItems.wielded) do
			--send("get sigil from " .. values[2], false)
			if values[1]:find("shield") or values[1]:find("buckler") then
				send("wear " .. values[2], false)
			elseif values[1]:find("bow") then
				send("unwield " .. values[2], false)
				send("wear " .. values[2], false)
			elseif values[1]:find("noose") or values[1]:find("sigil") or values[1]:find("Claw") then
				send("unwield " .. values[2], false)
			else
				if 	snd.settings.items.weaponbelt then
					send("secure " .. values[2], false)
				else
					send("unwield " .. values[2], false)
				end
			end
		end

		if snd.charItems.wield.right:find("bow") then
			if hasSkill("Bowstance") then 
				send("bowstance", false) 
			else
				send("remove bow", false)
				send("wield " .. snd.charItems.wield.right .. " right", false)
			end
		elseif snd.charItems.wield.right == "claw" then
			send("wield " .. snd.charItems.claw .. " right", false)
		else
			send("wield " .. snd.charItems.wield.right .. " right", false)
		end

		if snd.charItems.wield.left then
			send("wield " .. snd.charItems.wield.left .. " left", false)
		end
	end
		--snd.charItems.fistup = true
		snd.charItems.wield = nil
		requestCharItems()
	end
end
</script>
							<eventHandlerList>
								<string>gmcp.Char.Items.List</string>
							</eventHandlerList>
						</Script>
						<Script isActive="yes" isFolder="no">
							<name>gmcp_item_add</name>
							<packageName></packageName>
							<script>
function gmcp_item_add()
 v = gmcp.Char.Items.Add.item
 if gmcp.Char.Items.Add.location == "room" then
  if not snd.items[v.name] then snd.items[v.name] = {} end
  table.insert(snd.items[v.name], v.id)
 elseif gmcp.Char.Items.List.location == "inv" then
  if v.attrib == "l" then
	 if snd.wielded.left.name == "" then
	  snd.wielded.left.name = v.name
		snd.wielded.left.id = v.id
	 elseif snd.wielded.right.name == "" then
	  snd.wielded.right.name = v.name
		snd.wielded.right.id = v.id
	 end
	end
 end
 snd.updateItems()
end</script>
							<eventHandlerList>
								<string>gmcp.Char.Items.Add</string>
							</eventHandlerList>
						</Script>
						<Script isActive="yes" isFolder="no">
							<name>gmcp_item_remove</name>
							<packageName></packageName>
							<script>
function gmcp_item_remove()
 v = gmcp.Char.Items.Remove.item
 if gmcp.Char.Items.Remove.location == "room" then
 	if v == snd.bashing.target and snd.toggles.fasthunt then
		snd.runBasher()
	end
	for item in pairs(snd.items) do
	 for id in pairs(snd.items[item]) do
	  if snd.items[item][id] == v.id then
		 table.remove(snd.items[item], id)
		 if #snd.items[item] == 0 then snd.items[item] = nil end
		end
	 end
	end
 elseif gmcp.Char.Items.List.location == "inv" then
  if snd.wielded.left.id == v.id then
	 snd.wielded.left.id = ""
	 snd.wielded.left.name = ""
	elseif snd.wielded.right.id == v.id then
	 snd.wielded.right.id = ""
	 snd.wielded.right.name = ""	
	end
 end
 snd.updateItems()
end

</script>
							<eventHandlerList>
								<string>gmcp.Char.Items.Remove</string>
							</eventHandlerList>
						</Script>
						<Script isActive="yes" isFolder="no">
							<name>gmcp_item_update</name>
							<packageName></packageName>
							<script>
function gmcp_item_update()
 v = gmcp.Char.Items.Update.item
 --echo(v.name)
 if gmcp.Char.Items.Update.location == "inv" then
  if v.attrib == "l" then
	 if snd.wielded.left.name == "" and snd.wielded.right.id ~= v.id then
	  snd.wielded.left.name = v.name
		snd.wielded.left.id = v.id
	 elseif snd.wielded.right.name == "" and snd.wielded.left.id ~= v.id then
	  snd.wielded.right.name = v.name
		snd.wielded.right.id = v.id
	 end
	else
	 if snd.wielded.left.id == v.id then
	  snd.wielded.left.name = ""
		snd.wielded.left.id = ""
	 elseif snd.wielded.right.id == v.id then
	  snd.wielded.right.name = ""
		snd.wielded.right.id = ""
	 end
	end
 end
 snd.updateItems()
end</script>
							<eventHandlerList>
								<string>gmcp.Char.Items.Update</string>
							</eventHandlerList>
						</Script>
						<Script isActive="yes" isFolder="no">
							<name>gmcp_people_update</name>
							<packageName></packageName>
							<script>function gmcp_people_update()
	snd.players_here = {}
  for k,v in ipairs(gmcp.Room.Players) do
  	if not table.contains(snd.players_here, gmcp.Room.Players[k].name) then
  		table.insert(snd.players_here, gmcp.Room.Players[k].name)
  	end
  end	
	snd.are_we_checking_ql = false
	people_update()
end



</script>
							<eventHandlerList>
								<string>gmcp.Room.Players</string>
							</eventHandlerList>
						</Script>
						<Script isActive="yes" isFolder="no">
							<name>gmcp_people_remove</name>
							<packageName></packageName>
							<script>function gmcp_people_remove()

local removePlayer = gmcp.Room.RemovePlayer
  if table.contains(snd.players_here, removePlayer) then
      table.remove(snd.players_here, table.index_of(snd.players_here, removePlayer))   
  end
	people_update()
end


</script>
							<eventHandlerList>
								<string>gmcp.Room.RemovePlayer</string>
							</eventHandlerList>
						</Script>
						<Script isActive="yes" isFolder="no">
							<name>gmcp_people_add</name>
							<packageName></packageName>
							<script>function gmcp_people_add()
 
local newPlayers = gmcp.Room.AddPlayer.name
    if not table.contains(snd.players_here, newPlayers) then
        table.insert(snd.players_here, newPlayers)
				people_update()
    end
end</script>
							<eventHandlerList>
								<string>gmcp.Room.AddPlayer</string>
							</eventHandlerList>
						</Script>
						<Script isActive="yes" isFolder="no">
							<name>updating the boxes for people in room</name>
							<packageName></packageName>
							<script>people_update = function()
	spirit_people:clear()
	shadow_people:clear()
	snd.shadow_targets = {}
	snd.spirit_targets = {}
	
	local spiritpeoplehere = {}
	for name, val in pairs(snd.players_here) do
		if val and (table.isMember(snd.spirit, val) or table.isMember(snd.randomspirit, val)) then 
			table.insert(spiritpeoplehere, val) 
		end
	end
	
	local shadowpeoplehere = {}
	for name, val in pairs(snd.players_here) do
		if val and (table.isMember(snd.shadow, val) or table.isMember(snd.randomshadow, val)) then
			table.insert(shadowpeoplehere, val) 
		end
	end
	
	for name, val in pairs(snd.players_here) do
		if val and not table.isMember(snd.spirit, val) and not table.isMember(snd.shadow, val) 
		and not table.isMember(snd.randomspirit, val) and not table.isMember(snd.randomshadow, val)
		and not table.isMember(snd.player_names_to_check, val) then
			table.insert(snd.player_names_to_check, val)
			local check = OnlineCharacters()
			if (check == "Bloodloch" or check == "Spinesreach") then
				table.insert(shadowpeoplehere, val)
			elseif (check == "Enorian" or check == "Duiran") then
				table.insert(spiritpeoplehere, val)
			end
		end
	end
	
	if #spiritpeoplehere &gt;= 1 then
	 spirit_people:echo("&lt;center&gt;"..table.concat(spiritpeoplehere, "&lt;br&gt;").."&lt;/center&gt;")
	 snd.spirit_targets = spiritpeoplehere
  end
	
	if #shadowpeoplehere &gt;= 1 then
	 shadow_people:echo("&lt;center&gt;"..table.concat(shadowpeoplehere, "&lt;br&gt;").."&lt;/center&gt;")
	 snd.shadow_targets = shadowpeoplehere
  end
	
end</script>
							<eventHandlerList />
						</Script>
						<Script isActive="yes" isFolder="no">
							<name>Query API to check City</name>
							<packageName></packageName>
							<script>snd.player_names_to_check = {}
snd.are_we_downloading = false

function OnlineCharacters()
  if snd.are_we_downloading == false then
		downloadFile(getMudletHomeDir() .. "/city_check","http://api.Aetolia.com/characters/" .. snd.player_names_to_check[1] .. ".json")
		snd.are_we_downloading = true
	end
end

registerAnonymousEventHandler("sysDownloadDone", "FindTheirCity")

function FindTheirCity(_, filename)
	if filename:find("city_check") then
    snd.are_we_downloading = false
  	local f, s, webpage = io.open(getMudletHomeDir() .. "/city_check")
    
  	if f then
      webpage = f:read("*a")
      io.close(f)
    end
    
  	local stats = yajl.to_value(webpage)
  	local name = ""
  	local do_we_update = false
  	
  	for k, v in pairs(stats) do
  		if k == "name" then name = v end
      if k == "city" and snd.player_names_to_check[1]:lower() == name:lower() then
        if (v == "Bloodloch" or v == "Spinesreach") and not table.isMember(snd.shadow, name) then
  				table.insert(snd.randomshadow, name)
  				do_we_update = true
  			elseif (v == "Enorian" or v == "Duiran") and not table.isMember(snd.spirit, name) then
  				table.insert(snd.randomspirit, name)
  				do_we_update = true
  			end
      end
  	end
  	if do_we_update then 
  		people_update() 
  		random_people:setFgColor("green")
  		random_people:echo("&lt;center&gt;New people to sort!&lt;\center&gt;")
  	end
  	
  	table.remove(snd.player_names_to_check, table.index_of(snd.player_names_to_check, name))
  	
  	local check = tablelength(snd.player_names_to_check)
  	
  	if tablelength(snd.player_names_to_check) ~= 0 then
  		display("I have sorted "..name..". I have "..check.." left to check.")
  		OnlineCharacters(snd.player_names_to_check[1])
  	end
		os.remove(filename)
	end
end

	function tablelength(T)
    local count = 0
    for _ in pairs(T) do count = count + 1 end
    return count
	end</script>
							<eventHandlerList />
						</Script>
						<Script isActive="yes" isFolder="no">
							<name>items</name>
							<packageName></packageName>
							<script>--[[function get_char_items(event)
	if gmcp.Char.Items.List.location ~= "inv" then 
		return false 
	end	

	local list = gmcp.Char.Items.List
	if list.location == "inv" then
		snd.charItems = snd.charItems or{}
		snd.charItems.wielded = {}
		snd.charItems.worn = {}
		snd.charItems.not_worn = {}
		snd.charItems.full = {}
        
		snd.charItems.weaponbelt = {}
		snd.charItems.weaponbelt.id = nil
		snd.charItems.weaponbelt.contents = {}
		snd.charItems.sigils = {}
		snd.charItems.sigils.fist = {}
		snd.charItems.sigils.firefly = {}
		snd.charItems.claw = nil
		snd.charItems.orbs = {}

		
		for i, item in ipairs(list.items) do
			table.insert(snd.charItems.full, {item.name, item.id})
			if item.attrib and item.attrib:find("l") then
				table.insert(snd.charItems.wielded, {item.name, item.id})
			end

			if item.attrib == "w" then
				table.insert(snd.charItems.worn, {item.name, item.id})
				if item.name:find("weaponbelt") then
				end
			end

			if item.attrib == "W" then
				table.insert(snd.charItems.not_worn, {item.name, item.id})
			end

			if item.name:find("weaponbelt") then
				snd.charItems.weaponbelt.id = item.id
			end
	
			if item.name:find("Parxian orb") then
				table.insert(snd.charItems.orbs, item.id)
			end

			if item.name:find("fist%-shaped sigil") or item.name:find("vine sigil") then
				table.insert(snd.charItems.sigils.fist, item.id)
			end
    
			if item.name:find("eye sigil") or item.name:find("firefly sigil") then
				table.insert(snd.charItems.sigils.firefly, item.id)
			end

			if item.name:find("Claw") then
				snd.charItems.claw = item.id
			end
		end
	end

	if snd.charItems.fistup and snd.bals.both() then
		for _, item in ipairs(snd.charItems.wielded) do
			local sigil = table.remove(snd.charItems.sigils.fist, 1)
			if not sigil then
				snd.charItems.fistup = false
			else
				send("attach " .. sigil .. " to " .. item[2])
			end
		end
		send("invcat sort")
		snd.charItems.fistup = false
	elseif snd.charItems.fistup and not snd.bals.both() then
		--tempTimer(1, [[requestCharItems(true)]])
	end]]

	if snd.charItems.wield and snd.bals.both() then
		if not hasSkill("Weaponbelts") then
			send("wield " .. snd.charItems.wield.right or snd.charItems.wield.left, false)
			snd.charItems.wield = nil
			requestCharItems(true)
			return false
		end
--NTS The 'quickwield' code is new. If it breaks, comment 
--out everything up to: for k, and one of the ends at the bottom, line 127
	if hasSkill("Quickwield") and snd.charItems.wield.right:lower() ~= "none" then
		if snd.charItems.wield.left then
			send("qeb quickwield both " .. snd.charItems.wield.right .. " " .. snd.charItems.wield.left, false)
		else
			send("qeb quickwield both  " .. snd.charItems.wield.right, false)
		end
	else
		for k, values in pairs(snd.charItems.wielded) do
			--send("get sigil from " .. values[2], false)
			if values[1]:find("shield") or values[1]:find("buckler") then
				send("wear " .. values[2], false)
			elseif values[1]:find("bow") then
				send("unwield " .. values[2], false)
				send("wear " .. values[2], false)
			elseif values[1]:find("noose") or values[1]:find("sigil") or values[1]:find("Claw") then
				send("unwield " .. values[2], false)
			else
				if 	snd.settings.items.weaponbelt then
					send("secure " .. values[2], false)
				else
					send("unwield " .. values[2], false)
				end
			end
		end

		if snd.charItems.wield.right:find("bow") then
			if hasSkill("Bowstance") then 
				send("bowstance", false) 
			else
				send("remove bow", false)
				send("wield " .. snd.charItems.wield.right .. " right", false)
			end
		elseif snd.charItems.wield.right == "claw" then
			send("wield " .. snd.charItems.claw .. " right", false)
		else
			send("wield " .. snd.charItems.wield.right .. " right", false)
		end

		if snd.charItems.wield.left then
			send("wield " .. snd.charItems.wield.left .. " left", false)
		end
	end
		--snd.charItems.fistup = true
		snd.charItems.wield = nil
		requestCharItems()
	end
end</script>
							<eventHandlerList>
								<string>gmcp.Char.Items.List</string>
							</eventHandlerList>
						</Script>
					</ScriptGroup>
					<ScriptGroup isActive="yes" isFolder="yes">
						<name>Misc</name>
						<packageName></packageName>
						<script>-------------------------------------------------
--         Put your Lua functions here.        --
--                                             --
-- Note that you can also use external Scripts --
-------------------------------------------------
</script>
						<eventHandlerList />
						<ScriptGroup isActive="yes" isFolder="yes">
							<name>Skill Checking</name>
							<packageName></packageName>
							<script>-------------------------------------------------
--         Put your Lua functions here.        --
--                                             --
-- Note that you can also use external Scripts --
-------------------------------------------------
</script>
							<eventHandlerList />
							<Script isActive="yes" isFolder="no">
								<name>parse_skillsets</name>
								<packageName></packageName>
								<script>function parse_skillsets()
	snd.skills = {}
	for _, set in ipairs(gmcp.Char.Skills.Groups) do
		local skills = string.format("Char.Skills.Get %s", yajl.to_string({ group = set.name }))
		sendGMCP(skills)
	end
	send("\n")
end</script>
								<eventHandlerList>
									<string>gmcp.Char.Skills.Groups</string>
								</eventHandlerList>
							</Script>
							<Script isActive="yes" isFolder="no">
								<name>populate_skills</name>
								<packageName></packageName>
								<script>function populate_skills()
	local group = gmcp.Char.Skills.List.group
	local list = gmcp.Char.Skills.List.list
	local newlist = {}
	for i, val in ipairs(list) do
		list[i] = val:gsub("* ", "")
	end

	if group then
		if not snd.skills then snd.skills = {} end
			snd.skills[group] = list
	end
end</script>
								<eventHandlerList>
									<string>gmcp.Char.Skills.List</string>
								</eventHandlerList>
							</Script>
							<Script isActive="yes" isFolder="no">
								<name>has_skill</name>
								<packageName></packageName>
								<script>function hasSkill(skill, tree)
	if not snd.skills then return false end

	if tree then
		if snd.skills[tree:lower()] and table.contains(snd.skills[tree:lower()], skill) then
			return true
		else
			return false
		end
	else
		if table.contains(snd.skills, skill) then
			return true
		else
			return false
		end
	end
end</script>
								<eventHandlerList />
							</Script>
						</ScriptGroup>
						<Script isActive="yes" isFolder="no">
							<name>message</name>
							<packageName></packageName>
							<script>
function snd.message(string, type)
 if type == "atk" then
  color = "magenta"
 elseif type == "death" then
  color = "red"
 elseif type == "q" then
  color = "brown"
 elseif type == "balance" then
  color = "orange"
 elseif type == "level" then
  color = "yellow"
 elseif type == "reset" then
  color = "brown"
 elseif type == "affliction" then
  color = "DodgerBlue"
elseif type == "dendara" then
  color = "green"
 else
  color = "white"
 end
 if type == "toggle" or type == "echo" then
  line = ""
 else
  line = "\n"
 end
 cecho(line.."&lt;green&gt;[&lt;white&gt;SND&lt;green&gt;]&lt;"..color.."&gt; "..string)
 if type == "reset" then
  send(" ")
 end
end

function snd.attack_hit(attack, target)
 snd.message("You: &lt;green&gt;HIT&lt;magenta&gt; "..attack.."&lt;white&gt; "..target.."&lt;magenta&gt;!", "atk")
end

function snd.got_hit(attack, attacker)
 snd.message(attacker..": &lt;red&gt;HIT&lt;magenta&gt; "..attack.."&lt;white&gt; you&lt;magenta&gt;!", "atk")
end

function snd.third_hit(attack, attacker, target)
 snd.message("&lt;white&gt;"..attacker..": &lt;red&gt;HIT&lt;white&gt; "..attack.." "..target)
end

function snd.target_hit(attack, attacker, target)
 snd.message("&lt;grey&gt;"..attacker..": &lt;red&gt;HIT&lt;grey&gt; "..attack.." "..target)
end</script>
							<eventHandlerList />
						</Script>
						<Script isActive="yes" isFolder="no">
							<name>able</name>
							<packageName></packageName>
							<script>
function snd.functional()
 if snd.have_aff("stun") or
    snd.have_aff("petrified") or
    snd.have_aff("asleep") then
    return false
 else
    return true
 end
end

function snd.wielding(weapon)
 if snd.weaponType(snd.wielded.left.name) == weapon or
    snd.weaponType(snd.wielded.right.name) == weapon then
	  return true
 else
    return false
 end
end

function snd.full_balance()
 if gmcp.Char.Vitals.balance == "1" and
    gmcp.Char.Vitals.equilibrium == "1" and
    gmcp.Char.Vitals.left_arm == "1" and
    gmcp.Char.Vitals.right_arm == "1" and
    not snd.waiting.balance and
    not snd.waiting.equilibrium then
    return true
 else
    return false
 end
end

function snd.have_aff(affliction)
 if not string.find(affliction, "aff_") then
  affliction = "aff_"..affliction
 end
 if snd.afflictions[affliction] == nil then
  return false
 end
 if snd.afflictions[affliction].state ~= "healed" then
    return true
 else
    return false
 end
end

function snd.aff_tally()
 count = 0
 for aff in pairs(snd.afflictions) do
  if snd.have_aff(aff) then
	 if snd.afflictions[aff]["cures"]["herb"] ~= nil or snd.afflictions[aff]["cures"]["salve"] ~= nil or snd.afflictions[aff]["cures"]["smoke"] ~= nil then
	  count = count+1
	 end
	end
 end
 return count
end

function snd.not_aff(affliction)
 if not string.find(affliction, "aff_") then
  affliction = "aff_"..affliction
 end
 if snd.afflictions[affliction].state == "healed" then
    return true
 else
    return false
 end
end

function snd.can_cast()
 if snd.full_balance() and
    snd.functional() and
    snd.not_aff("paralysis") and
		snd.not_aff("pacifism") and
    gmcp.Char.Vitals.prone == "0" then
    return true
 else
    return false
 end
end

function snd.can_tattoo()
 if snd.not_aff("paresis") then
    return true
 else
    return false
 end
end

function snd.can_eat()
 if snd.not_aff("anorexia") and
    snd.not_aff("destroyed_throat") then
    return true
 else
    return false
 end
end

function snd.can_apply()
 if snd.not_aff("slickness") then
    return true
 else
    return false
 end
end

function snd.can_smoke()
 if snd.not_aff("asthma") then
    return true
 else
    return false
 end
end

function snd.can_focus()
 if snd.not_aff("impatience") and
    snd.not_aff("muddled") then
    return true
 else
    return false
 end
end

function snd.can_fitness()
 fitness_classes = {
  "Templar",
	"Carnifex",
	"Monk"
 }
 if snd.not_aff("destroyed_throat") and
    snd.toggles.fitness and
		snd.balance.fitness and
		table.contains(fitness_classes, snd.class) then
    return true
 else
    return false
 end
end

function snd.can_shrug()
 if snd.class == "Syssin" and
    snd.toggles.shrug and
		snd.balance.shrug then
		return true
 else
    return false
 end
end

function snd.not_entangled()
 if snd.have_aff("grappled") or
    snd.have_aff("writhe_web") or
    snd.have_aff("writhe_impaled") then
    return false
 else
    return true
 end
end

function snd.not_slow()
 if snd.not_aff("aeon") then
    return true
 else
    return false
 end
end

function snd.have_slow()
 if snd.have_aff("aeon") then
    return true
 else
    return false
 end
end

function snd.can_arms()
 if snd.have_aff("left_arm_broken") or
    snd.have_aff("left_arm_damaged") or
    snd.have_aff("left_arm_mangled") or
    snd.have_aff("right_arm_broken") or
    snd.have_aff("right_arm_damaged") or
    snd.have_aff("right_arm_mangled") then
    return false
 else
    return true
 end
end

function snd.can_legs()
 if snd.have_aff("left_leg_broken") or
    snd.have_aff("left_leg_damaged") or
    snd.have_aff("left_leg_mangled") or
    snd.have_aff("right_leg_broken") or
    snd.have_aff("right_leg_damaged") or
    snd.have_aff("right_leg_mangled") then
    return false
 else
    return true
 end
end
</script>
							<eventHandlerList />
						</Script>
						<Script isActive="yes" isFolder="no">
							<name>delay</name>
							<packageName></packageName>
							<script>
function snd.delay()
 if snd.not_slow() then
  return 0.5
 else
  return 1.5
 end
end</script>
							<eventHandlerList />
						</Script>
						<Script isActive="yes" isFolder="no">
							<name>queue</name>
							<packageName></packageName>
							<script>
function snd.set_queue(action)
 if snd.can_cast() then
  snd.send_attack(action)
 else
  snd.queued = action
  snd.message("Queued: "..string.upper(action), "q")
  send(" ")
 end
end

function snd.send_attack(action)
 if snd.can_cast() then
  snd.send(action)
  if action == snd.queued then
   snd.queued = nil
  end
 end
end

function snd.send(action)
 send(action, false)
end
</script>
							<eventHandlerList />
						</Script>
						<Script isActive="yes" isFolder="no">
							<name>movement</name>
							<packageName></packageName>
							<script>
function snd.get_moving()
 hp = 100*(gmcp.Char.Vitals.hp/gmcp.Char.Vitals.maxhp)
 if snd.can_path and snd.can_cast() and hp &gt;= 85 and snd.moving_to ~= "none" then
	if snd.toggles.gallop and gmcp.Char.Vitals.mounted == "0" then
	 expandAlias("mnt", false)
	 snd.send("path find "..snd.moving_to..snd.sep.."path go gallop")
	elseif snd.toggles.dash then
	 snd.send("path find "..snd.moving_to..snd.sep.."path go dash")
	else
	 snd.send("path track "..snd.moving_to)
	end
  snd.moving_to = "none"
	if ylm.active and ylm.next_zone == "city" then
 		ylm.active = false
	end
 end
end

function snd.parseDir(direction)
 if direction == "north" then
  return "n"
 elseif direction == "south" then
  return "s"
 elseif direction == "east" then
  return "e"
 elseif direction == "west" then
  return "w"
 elseif direction == "northeast" then
  return "ne"
 elseif direction == "northwest" then
  return "nw"
 elseif direction == "southeast" then
  return "se"
 elseif direction == "southwest" then
  return "sw"
 elseif direction == "up" then
  return "up"
 elseif direction == "down" then
  return "d"
 else
  return direction
 end
end

function snd.swapDir(direction)
 directions = {
  north = "south",
	south = "north",
	east = "west",
	west = "east",
	northeast = "southwest",
	southwest = "northeast",
	northwest = "southeast",
	southeast = "northwest",
	["in"] = "out",
	out = "in",
	up = "down",
	down = "up",
 }
 return directions[direction]
end</script>
							<eventHandlerList />
						</Script>
						<Script isActive="yes" isFolder="no">
							<name>no target</name>
							<packageName></packageName>
							<script>
function snd.no_target()
 --deleteLine()
 --snd.message("Need new targets!")
 if snd.offense_loaded then
  snd.target_gone = true
  snd.get_new_target()
 end
 if snd.bashing_loaded then
  snd.untarget()
  snd.waiting.balance = false
  snd.waiting.equilibrium = false
  snd.bashing.target_priority = 10000
 end
end

function snd.untarget()
 snd.bashing.engaged = false
 snd.bashing.targeted = false
 snd.affstoclear = {
 "paresis",
 "paralysis",
 "crippled",
 "mental disruption",
 "physical disruption",
 "crippled body",
 }
 for aff in pairs(snd.affstoclear) do
  snd.target_cured(snd.affstoclear[aff])
 end
 for limb in pairs(snd.limb_bruising) do
  snd.limb_bruising[limb] = 0
 end
 
 for i in pairs(snd.used) do
  snd.used[i] = false
 end
 snd.used.rebounding = true
 snd.target_prone = false
 snd.last_attack = "none"
 if snd.bashing.stopping then
  snd.message("Bashing OFF!")
  snd.toggles.bashing = false
  snd.bashing.stopping = false
 end
end</script>
							<eventHandlerList />
						</Script>
						<Script isActive="yes" isFolder="no">
							<name>reset me</name>
							<packageName></packageName>
							<script>
function snd.reset_me()
 for i in pairs(snd.afflictions) do
  snd.aff_remove(i)
 end
 for i in pairs(snd.defenses) do
  snd.def_remove(i)
 end
 snd.parrying = "none"
end</script>
							<eventHandlerList />
						</Script>
						<Script isActive="yes" isFolder="no">
							<name>misc</name>
							<packageName></packageName>
							<script>
function snd.changeClass()
 snd.class = gmcp.Char.Status.class
 snd.city = gmcp.Char.Status.city
 if snd.city == "Spinesreach" or snd.city == "Bloodloch" then
  snd.faction = "shadow"
 elseif snd.city == "Enorian" or snd.city == "Duiran" then
  snd.faction = "spirit"
 end
 if snd.gui_loaded then
  snd.set_vitals()
 end
 expandAlias("ldd none", false)
end

function snd.updateItems()
 if snd.items["a monolith sigil"] ~= nil then
  snd.monolith = true
 else
  snd.monolith = false
 end
 if snd.gui_loaded then
  if snd.monolith then
	 monolith:setColor("medium_sea_green")
	else
	 monolith:setColor("firebrick")
	end
	if snd.wielded.left.name == "" and snd.wielded.right.name == "" then
	 wielding:echo("&lt;center&gt;empty hands&lt;/center&gt;")
	else
	 local string = ""
	 if snd.wielded.left.name ~= "" then
	  string = string.."&lt;center&gt;"..snd.weaponType(snd.wielded.left.name).."&lt;/center&gt;"
	 end
	 if snd.wielded.right.name ~= "" then
	  string = string.."\n&lt;center&gt;"..snd.weaponType(snd.wielded.right.name).."&lt;/center&gt;"
	 end
	 wielding:echo(string)
	end
 end
 if snd.questing_loaded then
  snd.runQuests()
 end
end

function snd.weaponType(weapon)
 for wtype in pairs(snd.weapon_types) do
  if string.find(weapon, snd.weapon_types[wtype]) then
	 return snd.weapon_types[wtype]
	end
 end
 return weapon
end

function snd.skillrankcheck(rank)
	local skillranks = {
	  "Transcendent",
		"Mythical",
		"Fabled",
		"Virtuoso",
		}
		
		for _, v in pairs(skillranks) do
			if string.find(rank, v) then
				return true
			end
		end		
end







</script>
							<eventHandlerList />
						</Script>
						<Script isActive="yes" isFolder="no">
							<name>Who groups parser</name>
							<packageName></packageName>
							<script>function snd.parse_who()
  snd.who_list = {}

  enableTrigger("Who parser")
  send("who")
end</script>
							<eventHandlerList />
						</Script>
						<Script isActive="yes" isFolder="no">
							<name>random functions</name>
							<packageName></packageName>
							<script>function round(num, idp)
  local mult = 10 ^ (idp or 0)
  return math.floor(num * mult + 0.5) / mult
end

function table.isMember(table, member)
  for i, m in ipairs(table) do
    if m == member then
      return true
    end
  end
  return false
end

function snd.count(table)
  local count = 0
  for i, v in ipairs(table) do
    count = count + 1
  end
  return count
end</script>
							<eventHandlerList />
						</Script>
					</ScriptGroup>
					<ScriptGroup isActive="yes" isFolder="yes">
						<name>Logic</name>
						<packageName></packageName>
						<script>-------------------------------------------------
--         Put your Lua functions here.        --
--                                             --
-- Note that you can also use external Scripts --
-------------------------------------------------
</script>
						<eventHandlerList />
						<Script isActive="yes" isFolder="no">
							<name>core</name>
							<packageName></packageName>
							<script>
function snd.core()
 if snd.toggles.active and snd.have_aff("asthma") and snd.have_aff("slickness") then
  snd.need_fitness = true
 else
  snd.need_fitness = false
 end
 if snd.toggles.active and snd.toggles.parrying and snd.offense_loaded then
  snd.parry()
 end
 if snd.toggles.active and snd.emptypipe ~= "none" and not snd.waiting.lighting and snd.can_cast() then
  snd.send("outc "..snd.emptypipe..snd.sep.."put "..snd.emptypipe.." in emptypipe")
	snd.waiting.lighting = true
	tempTimer(snd.delay(), [[snd.waiting.lighting = false]])
 end
 snd.def_check()
 snd.aff_check()
 if snd.toggles.active and snd.healing_loaded then
  if snd.have_aff("asleep") and snd.toggles.standing then
   snd.send("wake")
  end
 end
 if snd.functional() then
  snd.do_queue()
  snd.do_stuff()
 end
end</script>
							<eventHandlerList />
						</Script>
						<Script isActive="yes" isFolder="no">
							<name>priorities</name>
							<packageName></packageName>
							<script>snd.queue = {}
 
snd.priorities = {
"lighting",
"def_speed",
"aff_prone",
"aff_adder_tarot",
 
"fitness",
"purge",
"purify",
"panacea",
"aegis",
 
"attack",
 
"aff_bleeding",
 
"aff_voyria",
 
"def_cloak_tattoo",
"def_spheres",
"def_earthenform",
"def_focalmark",
"aff_health_10",
"aff_health_35",
"aff_health_55",
"aff_health_low",
"aff_health_75",
"aff_mana_10",
"aff_mana_35",
"aff_mana_55",
"aff_mana_low",
"aff_mana_75",
"def_safeguard",
"def_miasma",
"def_warmth",
"def_chameleon",
"loot",
"def_gripping",
"def_vigor",
"def_divert_melee",
"def_dodge_melee",
"def_waterwalking",
"def_mindseye_tattoo",
"def_flame_tattoo",
"def_fearless",
"def_recklessness",
"def_soul_harvest",
"def_soul_thirst",
"def_soul_fortify",
"def_soul_fracture",
"def_soul_body",
"def_weathering",
"def_bodyheat",
"def_metabolize",
"def_endurance",
"def_thickhide",
"def_corner",
"def_salivate",
"def_harden",
"def_lightshield",
"def_inspiration",
"def_fireblock",
"def_toughness",
"def_resistance",
"def_warding",
"def_corpus_warding",
"def_finesse",
"def_weaving",
"def_shadowsight",
"def_ghost",
"def_hiding",
"def_shroud",
"def_shadowslip",
"def_ironskin",
"def_fortify",
"def_countercurrent",		
"def_rigor",		
"def_shadow_engulf",		
"def_shadow_mantle",		
"def_blurring",		
"def_sagacity",
"queue",
"bashing",
"moving",
"def_thirdeye",
"def_blindness",
"def_deafness",
"def_kola",
"def_waterbreathing",
"def_deathsight",
"def_insomnia",
"def_frost",
"def_venom",
"def_levitation",
"def_caloric",
"def_fitness",
"def_fangbarrier",
"def_rebounding",
"def_density",
"def_nightsight",
"def_clarity",
"def_vitality",
"def_kaido_regeneration",
"def_constitution",
"def_split_mind",
"def_immunity",
"def_boosted_regen",
"aff_aeon",
 
"aff_paralysis",
"aff_paresis",
"aff_mirroring",
"aff_crippled_body",
"aff_crippled",
"aff_heartflutter",
"aff_sandrot",
 "def_firefly_tattoo",
	
"aff_baldness",
"aff_clumsiness",
"aff_hypochondria",
"aff_weariness",
"aff_asthma",
"aff_sensitivity",
"aff_blood_poison",
"aff_limp_veins",
 
"aff_slickness",
"aff_disfigurement",
"aff_squelched",
"aff_migraine",
 
"aff_self-pity",
"aff_stupidity",
"aff_dizziness",
"aff_shyness",
"aff_epilepsy",
"aff_impatience",
"aff_dissonance",
"aff_infested",
 
"aff_soulfire",
"aff_soulburn",
"aff_body_odor",
"aff_haemophilia",
"aff_mental_disruption",
"aff_physical_disruption",
"aff_allergies",
"aff_vomiting",
"aff_thin_blood",
"aff_rend",
"aff_lethargy",
"aff_addiction",
 
"aff_hubris",
"aff_pacifism",
"aff_peace",
"aff_lovers_effect",
"aff_superstition",
"aff_generosity",
"aff_justice",
 
"aff_commitment_fear",
"aff_recklessness",
"aff_masochism",
"aff_agoraphobia",
"aff_loneliness",
"aff_berserking",
"aff_vertigo",
"aff_claustrophobia",
"aff_nyctophobia",
 
"aff_sadness",
"aff_confusion",
"aff_dementia",
"aff_hallucinations",
"aff_paranoia",
"aff_hypersomnia",
"aff_hatred",
"aff_blood_curse",
"aff_blighted",
 
"aff_plodding",
"aff_idiocy",
 
"aff_withering",
"aff_hellsight",
"aff_deadening",
 
"aff_anorexia",
 
"aff_head_mangled",
"aff_head_damaged",
"aff_head_bruised_critical",
"aff_head_bruised_moderate",
"aff_head_bruised",
"aff_destroyed_throat",
"aff_left_arm_amputated",
"aff_left_arm_mangled",
"aff_left_arm_damaged",
"aff_right_arm_amputated",
"aff_right_arm_mangled",
"aff_right_arm_damaged",
"aff_left_arm_broken",
"aff_right_arm_broken",
"aff_left_arm_bruised_critical",
"aff_left_arm_bruised_moderate",
"aff_crushed_elbows",
"aff_left_arm_bruised",
"aff_left_arm_dislocated",
"aff_right_arm_bruised_critical",
"aff_right_arm_bruised_moderate",
"aff_right_arm_bruised",
"aff_right_arm_dislocated",
"aff_broken_arm",
"aff_left_leg_amputated",
"aff_left_leg_mangled",
"aff_left_leg_damaged",
"aff_right_leg_amputated",
"aff_right_leg_mangled",
"aff_right_leg_damaged",
"aff_left_leg_bruised_critical",
"aff_right_leg_bruised_critical",
"aff_left_leg_broken",
"aff_right_leg_broken",
"aff_left_leg_bruised_moderate",
"aff_left_leg_bruised",
"aff_left_leg_dislocated",
"aff_right_leg_bruised_moderate",
"aff_broken_leg",
"aff_right_leg_bruised",
"aff_crushed_kneecaps",
"aff_right_leg_dislocated",
"aff_crushed_chest",
"aff_torso_mangled",
"aff_torso_damaged",
"aff_torso_bruised_critical",
"aff_cracked_ribs",
"aff_torso_bruised_moderate",
"aff_torso_bruised",
"aff_spinal_rip",
"aff_selarnia",
"aff_mauled_face",
"aff_burnt_skin",
"aff_collapsed_lung",
"aff_ablaze",
"aff_crippled_throat",
"aff_throatclaw",
"aff_smashed_throat",
"aff_pre_restore_head",
"aff_pre_restore_left_arm",
"aff_pre_restore_left_leg",
"aff_pre_restore_right_arm",
"aff_pre_restore_right_leg",
"aff_pre_restore_torso",
 
"aff_gorged",
"aff_effused_blood",
"aff_indifference",
"aff_stuttering",
"aff_blurry_vision",
"aff_burnt_eyes",
"aff_gloom",
 
"aff_frozen",
"aff_shivering",
 
 
"aff_disrupted",
"aff_fear",
"aff_premonition",
"aff_vinethorns",
 
"aff_void",
"aff_weakvoid",
 
"aff_grappled",
"aff_writhe_armpitlock",
"aff_writhe_bind",
"aff_writhe_feed",
"aff_writhe_hoist",
"aff_writhe_impaled",
"aff_writhe_lure",
"aff_writhe_necklock",
"aff_writhe_ropes",
"aff_writhe_tar",
"aff_writhe_thighlock",
"aff_writhe_transfix",
"aff_writhe_vines",
"aff_writhe_web",
 
"def_maingauche",
"def_pacing",
"def_heatsight",
"def_reveling",
"def_barkskin",
"def_conceal",
"def_hardiness",
"def_flexibility",
"def_lifesap",
"def_maskedscent",
"def_linked",
"def_oneness",
"def_sublimation",
"def_ameliorate",
"def_catabolism",
"def_blindsense",
"def_greenheart",
"def_endure",
"def_mountaineer",
"def_dustcoat",
"def_resilience",
"def_desolation",
"def_circulation",
"def_potence",
"def_celerity",
"def_lifescent",
"def_lifevision",
"def_veil",
"def_stalk",
"def_concentrate",
"def_entwine",
"def_ricochet",
"def_twinsoul",
"def_resonance",
"def_stonebind",
"def_earthenwill",
"def_erosion",
"def_stonefury",
"def_sand_swelter",
"def_arcaneskin",
"def_sagacity",
"def_countercurrent",
"def_missiles",
"def_firefist",
"def_tempered_body",
"def_swagger",
"def_deflection",
"def_discharge",
"def_resurgence",
"def_haste",
"def_litheness",
"def_disunion",
"def_wrath",
"def_spiritbond",
"def_protection",
"def_shaman_spiritsight",
"def_lifebloom",
"def_shaman_warding",
}</script>
							<eventHandlerList />
						</Script>
						<Script isActive="yes" isFolder="no">
							<name>methods</name>
							<packageName></packageName>
							<script>
snd.method_priority = {
{balance = "special", func = function(current) snd.do_special(current) end},
{balance = "balanceneed", func = function(current) snd.do_balance_need(current) end},
{balance = "equilibriumneed", func = function(current) snd.do_equilibrium_need(current) end},
{balance = "balanceequilibrium", func = function(current) snd.do_balance_equilibrium_need(current) end},

{balance = "reject", func = function(current) snd.do_reject(current) end},
{balance = "concentrate", func = function(current) snd.do_concentrate(current) end},
{balance = "drink", func = function(current) snd.do_drink(current) end},
{balance = "vial", func = function(current) snd.do_vial(current) end},
{balance = "eat", func = function(current) snd.do_eat(current) end},
{balance = "smoke", func = function(current) snd.do_smoke(current) end},
{balance = "herb", func = function(current) snd.do_herb(current) end},
{balance = "salve", func = function(current) snd.do_salve(current) end},
{balance = "elixir", func = function(current) snd.do_elixir(current) end},
{balance = "moss", func = function(current) snd.do_moss(current) end},
{balance = "clot", func = function(current) snd.do_clot(current) end},
{balance = "stand", func = function(current) snd.do_stand(current) end},
{balance = "writhe", func = function(current) snd.do_writhe(current) end},
{balance = "focus", func = function(current) snd.do_focus(current) end},
{balance = "tree", func = function(current) snd.do_tree(current) end},

{balance = "tattoo", func = function(current) snd.do_tattoo(current) end},
{balance = "balancetake", func = function(current) snd.do_balance_take(current) end},
{balance = "equilibriumtake", func = function(current) snd.do_equilibrium_take(current) end},
{balance = "needybalancetake", func = function(current) snd.do_needy_balance_take(current) end},
{balance = "needyequilibriumtake", func = function(current) snd.do_needy_equilibrium_take(current) end},
{balance = "balanceequilibriumtake", func = function(current) snd.do_balance_equilibrium_take(current) end}
}</script>
							<eventHandlerList />
						</Script>
						<Script isActive="yes" isFolder="no">
							<name>queue</name>
							<packageName></packageName>
							<script>
function snd.do_queue()
 snd.queue = {}
 if snd.toggles.active then
  if not snd.pipes_lit and snd.toggles.lighting then
   table.insert(snd.queue, "lighting")
  end
  --if snd.healing_loaded and snd.toggles.healing then
  -- for i in pairs(snd.afflictions) do
  --  if snd.afflictions[i].state ~= "healed" then
  --   table.insert(snd.queue, i)
  --  end
  -- end
  --end
  if snd.defenses_loaded and snd.toggles.defenses then
   for k in pairs(snd.defenses) do
    if snd.defenses[k].state == "down" and snd.defenses[k].needit then
			if k == "def_vitality" then
				if snd.balance.vitality then
					table.insert(snd.queue, k)
				end
			elseif (k == "def_shroud" or k == "def_ghost" or k == "def_hiding") then
				if snd.defenses.def_phase.state ~= "deffed" then
					table.insert(snd.queue, k)
				end
			elseif (k == "def_miasma" or k == "def_safeguard" or k == "def_warmth") then
				if not (snd.defenses.def_miasma.state == "deffed" 
				or snd.defenses.def_safeguard.state == "deffed" 
				or snd.defenses.def_warmth.state == "deffed") then 
					table.insert(snd.queue, k)
				end      
			else
	    	table.insert(snd.queue, k)
    	end
		end
   end
  end
   if snd.queued ~= nil then
    table.insert(snd.queue, "queue")
   end
   if snd.bashing_loaded then
    if #snd.gathering &gt;= 1 then
     table.insert(snd.queue, "loot")
    end
    if snd.toggles.bashing and snd.bashing_loaded then
     table.insert(snd.queue, "bashing")
    end
    if snd.moving_to ~= "none" then
     table.insert(snd.queue, "moving")
    end
  	if snd.need_fitness then
  	 table.insert(snd.queue, "fitness")
  	end
  	if snd.toggles.purge and snd.class == "Carnifex" and snd.aff_tally() &gt;= 3 then
  	 table.insert(snd.queue, "purge")
  	end
		hp = 100*(gmcp.Char.Vitals.hp/gmcp.Char.Vitals.maxhp)
		if snd.toggles.attacking and snd.offense_loaded and
			(snd.count(snd.people_hitting_me) &gt;= 3 or snd.aff_tally() &gt;= 5 or hp &lt; 60) and snd.check_aegis() then
  	 table.insert(snd.queue, "aegis")
  	end
   end
   if snd.toggles.attacking and snd.offense_loaded and snd.defenses.def_manipulation_aegis.state ~= "deffed" then
    table.insert(snd.queue, "attack")
   end
  end
 end</script>
							<eventHandlerList />
						</Script>
						<Script isActive="yes" isFolder="no">
							<name>stuff</name>
							<packageName></packageName>
							<script>
function snd.do_stuff()
 for _,i in ipairs(snd.priorities) do
  if table.contains(snd.queue, i) then
   if i == "queue" then
    snd.send_attack(snd.queued)
   elseif i == "bashing" then
    snd.bashing_function()
   elseif i == "lighting" then
    snd.do_lighting()
   elseif i == "attack" then
    snd.attack_function()
   elseif i == "loot" then
    snd.do_loot()
   elseif i == "moving" then
    snd.get_moving()
	 elseif i == "fitness" then
	  snd.do_fitness()
		snd.do_shrug()
	 elseif i == "purge" then
	  snd.do_purge()
	 elseif i == "aegis" then
	 	snd.do_aegis()
   else
    for _,z in pairs(snd.method_priority) do
     if snd.afflictions[i] ~= nil then
      if snd.afflictions[i].cures[z.balance] ~= nil then
       z.func(i)
      end
     elseif snd.defenses[i] ~= nil then
      if snd.defenses[i].balance[z.balance] ~= nil then
       z.func(i)
      end
     end
    end
   end
  end
 end
end</script>
							<eventHandlerList />
						</Script>
						<Script isActive="yes" isFolder="no">
							<name>lighting</name>
							<packageName></packageName>
							<script>
function snd.do_lighting()
 if snd.can_cast() and (not snd.pipes_lit) and (not snd.waiting.lighting) then
  snd.light_up()
 end
end

function snd.light_up()
 snd.send("light pipes")
 snd.waiting.lighting = true
 tempTimer(snd.delay(), [[snd.waiting.lighting = false]])
end</script>
							<eventHandlerList />
						</Script>
					</ScriptGroup>
					<ScriptGroup isActive="yes" isFolder="yes">
						<name>Tracking</name>
						<packageName></packageName>
						<script>-------------------------------------------------
--         Put your Lua functions here.        --
--                                             --
-- Note that you can also use external Scripts --
-------------------------------------------------
</script>
						<eventHandlerList />
						<ScriptGroup isActive="yes" isFolder="yes">
							<name>Afflictions</name>
							<packageName></packageName>
							<script>-------------------------------------------------
--         Put your Lua functions here.        --
--                                             --
-- Note that you can also use external Scripts --
-------------------------------------------------
</script>
							<eventHandlerList />
							<Script isActive="yes" isFolder="no">
								<name>affliction table</name>
								<packageName></packageName>
								<script>
snd.afflictions = {
aff_health_75 = {state = "healed", cures = {elixir = "health"}, assess = false, timer = createStopWatch()},
aff_health_55 = {state = "healed", cures = {elixir = "health"}, assess = false, timer = createStopWatch()},
aff_health_35 = {state = "healed", cures = {elixir = "health"}, assess = false, timer = createStopWatch()},
aff_health_10 = {state = "healed", cures = {elixir = "health"}, assess = false, timer = createStopWatch()},
aff_mana_75 = {state = "healed", cures = {elixir = "mana"}, assess = false, timer = createStopWatch()},
aff_mana_55 = {state = "healed", cures = {elixir = "mana"}, assess = false, timer = createStopWatch()},
aff_mana_35 = {state = "healed", cures = {elixir = "mana"}, assess = false, timer = createStopWatch()},
aff_mana_35 = {state = "healed", cures = {elixir = "mana"}, assess = false, timer = createStopWatch()},
aff_mana_10 = {state = "healed", cures = {elixir = "mana"}, assess = false, timer = createStopWatch()},
aff_health_low = {state = "healed", cures = {moss = "send"}, assess = false, timer = createStopWatch()},
aff_mana_low = {state = "healed", cures = {moss = "send"}, assess = false, timer = createStopWatch()},
aff_bleeding = {state = "healed", cures = {clot = "send"}, assess = false, timer = createStopWatch()},

aff_prone = {state = "healed", effect = "cannot move or attack, must STAND", cures = {stand = "send"}, assess = false, timer = createStopWatch()},
aff_asleep = {state = "healed", effect = "cannot do anything other than WAKE", cures = {}, assess = false, timer = createStopWatch()},
aff_stun = {state = "healed", effect = "cannot do anything", cures = {}, assess = false, timer = createStopWatch()},
aff_aeon = {state = "healed", effect = "delays all actions", cures = {smoke = "elm"}, assess = false, timer = createStopWatch()},

aff_paresis = {state = "healed", effect = "prevents tattoos and movement", cures = {herb = "bloodroot"}, assess = false, timer = createStopWatch()},
aff_paralysis = {state = "healed", effect = "prevents attacks, movement, and tattoos", cures = {herb = "bloodroot"}, assess = false, timer = createStopWatch()},
aff_anorexia = {state = "healed", effect = "prevents eating", cures = {tree = "send", salve = "epidermal to torso", focus = "send"}, assess = false, timer = createStopWatch()},
aff_asthma = {state = "healed", effect = "prevents smoking", cures = {tree = "send", herb = "kelp"}, assess = false, timer = createStopWatch()},
aff_slickness = {state = "healed", effect = "prevents applying salves", cures = {tree = "send", smoke = "valerian", herb = "bloodroot"}, assess = false, timer = createStopWatch()},

aff_broken_arm = {state = "healed", effect = "", cures = {salve = "mending to arms", tree = "send"}, assess = false, timer = createStopWatch()},
aff_broken_leg = {state = "healed", effect = "", cures = {salve = "mending to legs", tree = "send"}, assess = false, timer = createStopWatch()},
aff_adder_tarot = {state = "healed", effect = "", cures = {balanceequilibrium = "rip card from body"}, assess = false, timer = createStopWatch()},

aff_ablaze = {state = "healed", effect = "", cures = {salve = "mending to body", tree = "send"}, assess = false, timer = createStopWatch()},
aff_addiction = {state = "healed", effect = "", cures = {herb = "ginseng", tree = "send"}, assess = false, timer = createStopWatch()},
aff_agoraphobia = {state = "healed", effect = "", cures = {herb = "lobelia", tree = "send", focus = "send"}, assess = false, timer = createStopWatch()},
aff_allergies = {state = "healed", effect = "", cures = {herb = "ginseng", tree = "send"}, assess = false, timer = createStopWatch()},
aff_attuned = {state = "healed", effect = "", cures = {}, assess = false, timer = createStopWatch()},
aff_backstabbed = {state = "healed", effect = "", cures = {}, assess = false, timer = createStopWatch()},
aff_baldness = {state = "healed", effect = "", cures = {herb = "kelp", tree = "send"}, assess = false, timer = createStopWatch()},
aff_battle_hunger = {state = "healed", effect = "", cures = {}, assess = false, timer = createStopWatch()},
aff_berserking = {state = "healed", effect = "", cures = {herb = "lobelia", tree = "send", focus = "send"}, assess = false, timer = createStopWatch()},
aff_blackout = {state = "healed", effect = "", cures = {}, assess = false, timer = createStopWatch()},
aff_blighted = {state = "healed", effect = "", cures = {herb = "ash", tree = "send"}, assess = false, timer = createStopWatch()},
aff_blood_curse = {state = "healed", effect = "", cures = {herb = "ash", tree = "send"}, assess = false, timer = createStopWatch()},
aff_blood_poison = {state = "healed", effect = "", cures = {herb = "kelp", tree = "send"}, assess = false, timer = createStopWatch()},
aff_bloodlust = {state = "healed", effect = "", cures = {}, assess = false, timer = createStopWatch()},
aff_blurry_vision = {state = "healed", effect = "", cures = {salve = "epidermal to body", tree = "send"}, assess = false, timer = createStopWatch()},
aff_body_odor = {state = "healed", effect = "", cures = {herb = "ginseng", tree = "send"}, assess = false, timer = createStopWatch()},
aff_burnt_eyes = {state = "healed", effect = "", cures = {salve = "epidermal to head", tree = "send"}, assess = false, timer = createStopWatch()},
aff_burnt_skin = {state = "healed", effect = "", cures = {salve = "restoration to torso"}, assess = false, timer = createStopWatch()},
aff_chaos_warp = {state = "healed", effect = "", cures = {}, assess = false, timer = createStopWatch()},
aff_claustrophobia = {state = "healed", effect = "", cures = {herb = "lobelia", tree = "send", focus = "send"}, assess = false, timer = createStopWatch()},
aff_clumsiness = {state = "healed", effect = "", cures = {herb = "kelp", tree = "send"}, assess = false, timer = createStopWatch()},
aff_cold_weakness = {state = "healed", effect = "", cures = {}, assess = false, timer = createStopWatch()},
aff_collapsed_lung = {state = "healed", effect = "", cures = {salve = "restoration to torso"}, assess = false, timer = createStopWatch()},
aff_commitment_fear = {state = "healed", effect = "", cures = {herb = "lobelia", tree = "send"}, assess = false, timer = createStopWatch()},
aff_confusion = {state = "healed", effect = "", cures = {herb = "ash", tree = "send", focus = "send"}, assess = false, timer = createStopWatch()},
aff_conviction = {state = "healed", effect = "", cures = {}, assess = false, timer = createStopWatch()},
aff_corsin_weight = {state = "healed", effect = "", cures = {}, assess = false, timer = createStopWatch()},
aff_cracked_ribs = {state = "healed", effect = "", cures = {salve = "mending to torso", tree = "send"}, assess = false, timer = createStopWatch()},
aff_crippled = {state = "healed", effect = "", cures = {herb = "bloodroot", tree = "send"}, assess = false, timer = createStopWatch()},
aff_crippled_body = {state = "healed", effect = "", cures = {herb = "bloodroot", tree = "send"}, assess = false, timer = createStopWatch()},
aff_crippled_throat = {state = "healed", effect = "", cures = {salve = "mending to head", tree = "send"}, assess = false, timer = createStopWatch()},
aff_crushed_chest = {state = "healed", effect = "", cures = {salve = "restoration to torso"}, assess = false, timer = createStopWatch()},
aff_crushed_elbows = {state = "healed", effect = "", cures = {salve = "mending to arms", tree = "send"}, assess = false, timer = createStopWatch()},
aff_crushed_kneecaps = {state = "healed", effect = "", cures = {salve = "mending to legs", tree = "send"}, assess = false, timer = createStopWatch()},
aff_deadening = {state = "healed", effect = "", cures = {smoke = "elm", tree = "send"}, assess = false, timer = createStopWatch()},
aff_dementia = {state = "healed", effect = "", cures = {herb = "ash", tree = "send", focus = "send"}, assess = false, timer = createStopWatch()},
aff_despair = {state = "healed", effect = "", cures = {}, assess = false, timer = createStopWatch()},
aff_destroyed_throat = {state = "healed", effect = "", cures = {salve = "mending to head", tree = "send"}, assess = false, timer = createStopWatch()},
aff_disfigurement = {state = "healed", effect = "", cures = {smoke = "valerian", tree = "send"}, assess = false, timer = createStopWatch()},
aff_disrupted = {state = "healed", effect = "", cures = {special = "concentrate"}, assess = false, timer = createStopWatch()},
aff_dissonance = {state = "healed", effect = "", cures = {herb = "goldenseal", tree = "send"}, assess = false, timer = createStopWatch()},
aff_distortion = {state = "healed", effect = "", cures = {}, assess = false, timer = createStopWatch()},
aff_disturb_confidence = {state = "healed", effect = "", cures = {}, assess = false, timer = createStopWatch()},
aff_disturb_impulse = {state = "healed", effect = "", cures = {}, assess = false, timer = createStopWatch()},
aff_disturb_inhibition = {state = "healed", effect = "", cures = {}, assess = false, timer = createStopWatch()},
aff_disturb_sanity = {state = "healed", effect = "", cures = {}, assess = false, timer = createStopWatch()},
aff_dizziness = {state = "healed", effect = "", cures = {herb = "goldenseal", tree = "send", focus = "send"}, assess = false, timer = createStopWatch()},
aff_effused_blood = {state = "healed", effect = "", cures = {}, assess = false, timer = createStopWatch()},
aff_eldritch_invocation = {state = "healed", effect = "", cures = {}, assess = false, timer = createStopWatch()},
aff_electric_weakness = {state = "healed", effect = "", cures = {}, assess = false, timer = createStopWatch()},
aff_emberbrand = {state = "healed", effect = "", cures = {}, assess = false, timer = createStopWatch()},
aff_epilepsy = {state = "healed", effect = "", cures = {herb = "goldenseal", tree = "send", focus = "send"}, assess = false, timer = createStopWatch()},
aff_farag_rot = {state = "healed", effect = "", cures = {}, assess = false, timer = createStopWatch()},
aff_faintness = {state = "healed", effect = "", cures = {}, assess = false, timer = createStopWatch()},
aff_fear = {state = "healed", effect = "", cures = {special = "compose"}, assess = false, timer = createStopWatch()},
aff_fire_weakness = {state = "healed", effect = "", cures = {}, assess = false, timer = createStopWatch()},
aff_flash_blindness = {state = "healed", effect = "", cures = {}, assess = false, timer = createStopWatch()},
aff_forestbrand = {state = "healed", effect = "", cures = {}, assess = false, timer = createStopWatch()},
aff_frozen = {state = "healed", effect = "", cures = {salve = "caloric to torso", tree = "send"}, assess = false, timer = createStopWatch()},
aff_frozen_feet = {state = "healed", effect = "", cures = {}, assess = false, timer = createStopWatch()},
aff_generosity = {state = "healed", effect = "", cures = {herb = "bellwort", tree = "send", focus = "send"}, assess = false, timer = createStopWatch()},
aff_glasslimb = {state = "healed", effect = "", cures = {}, assess = false, timer = createStopWatch()},
aff_gloom = {state = "healed", effect = "", cures = {salve = "epidermal to head"}, assess = false, timer = createStopWatch()},
aff_gorged = {state = "healed", effect = "", cures = {salve = "epidermal to head", tree = "send"}, assess = false, timer = createStopWatch()},
aff_grappled = {state = "healed", effect = "", cures = {writhe = "send"}, assess = false, timer = createStopWatch()},
aff_haemophilia = {state = "healed", effect = "", cures = {herb = "ginseng", tree = "send"}, assess = false, timer = createStopWatch()},
aff_hallucinations = {state = "healed", effect = "", cures = {herb = "ash", tree = "send", focus = "send"}, assess = false, timer = createStopWatch()},
aff_halted = {state = "healed", effect = "", cures = {}, assess = false, timer = createStopWatch()},
aff_hatred = {state = "healed", effect = "", cures = {herb = "ash", tree = "send", focus = "send"}, assess = false, timer = createStopWatch()},
aff_head_broken = {state = "healed", effect = "", cures = {}, assess = false, timer = createStopWatch()},
aff_head_bruised = {state = "healed", effect = "", cures = {salve = "mending to head"}, assess = false, timer = createStopWatch()},
aff_head_bruised_critical = {state = "healed", effect = "", cures = {salve = "mending to head"}, assess = false, timer = createStopWatch()},
aff_head_bruised_moderate = {state = "healed", effect = "", cures = {salve = "mending  to head"}, assess = false, timer = createStopWatch()},
aff_head_damaged = {state = "healed", effect = "", cures = {salve = "restoration to head"}, assess = false, timer = createStopWatch()},
aff_head_deepwound = {state = "healed", effect = "", cures = {}, assess = false, timer = createStopWatch()},
aff_head_mangled = {state = "healed", effect = "", cures = {salve = "restoration to head"}, assess = false, timer = createStopWatch()},
aff_heartflutter = {state = "healed", effect = "", cures = {herb = "bloodroot", tree = "send"}, assess = false, timer = createStopWatch()},
aff_hellsight = {state = "healed", effect = "", cures = {smoke = "elm", tree = "send"}, assess = false, timer = createStopWatch()},
aff_hubris = {state = "healed", effect = "", cures = {herb = "bellwort", tree = "send"}, assess = false, timer = createStopWatch()},
aff_hypersomnia = {state = "healed", effect = "", cures = {herb = "ash", tree = "send"}, assess = false, timer = createStopWatch()},
aff_hypertension = {state = "healed", effect = "", cures = {}, assess = false, timer = createStopWatch()},
aff_hypochondria = {state = "healed", effect = "", cures = {herb = "kelp", tree = "send"}, assess = false, timer = createStopWatch()},
aff_idiocy = {state = "healed", effect = "", cures = {moss = "send", tree = "send"}, assess = false, timer = createStopWatch()},
aff_impairment = {state = "healed", effect = "", cures = {}, assess = false, timer = createStopWatch()},
aff_plodding = {state = "healed", effect = "", cures = {moss = "send", tree = "send"}, assess = false, timer = createStopWatch()},
aff_impatience = {state = "healed", effect = "", cures = {herb = "goldenseal", tree = "send", focus = "send"}, assess = false, timer = createStopWatch()},
aff_indifference = {state = "healed", effect = "", cures = {salve = "epidermal to head", tree = "send", focus = "send"}, assess = false, timer = createStopWatch()},
aff_infernal_seal = {state = "healed", effect = "", cures = {}, assess = false, timer = createStopWatch()},
aff_infernal_shroud = {state = "healed", effect = "", cures = {}, assess = false, timer = createStopWatch()},
aff_infested = {state = "healed", effect = "", cures = {herb = "goldenseal", tree = "send"}, assess = false, timer = createStopWatch()},
aff_insomnia = {state = "healed", effect = "", cures = {}, assess = false, timer = createStopWatch()},
aff_justice = {state = "healed", effect = "", cures = {herb = "bellwort", tree = "send"}, assess = false, timer = createStopWatch()},
aff_laxity = {state = "healed", effect = "", cures = {herb = "bellwort", tree = "send"}, assess = false, timer = createStopWatch()},
aff_leeched_aura = {state = "healed", effect = "", cures = {}, assess = false, timer = createStopWatch()},
aff_left_arm_amputated = {state = "healed", effect = "", cures = {salve = "restoration to arms"}, assess = false, timer = createStopWatch()},
aff_left_arm_broken = {state = "healed", effect = "", cures = {salve = "mending to arms", tree = "send"}, assess = false, timer = createStopWatch()},
aff_left_arm_bruised = {state = "healed", effect = "", cures = {salve = "mending to arms"}, assess = false, timer = createStopWatch()},
aff_left_arm_bruised_critical = {state = "healed", effect = "", cures = {salve = "mending to arms"}, assess = false, timer = createStopWatch()},
aff_left_arm_bruised_moderate = {state = "healed", effect = "", cures = {salve = "mending to arms"}, assess = false, timer = createStopWatch()},
aff_left_arm_damaged = {state = "healed", effect = "", cures = {salve = "restoration to arms"}, assess = false, timer = createStopWatch()},
aff_left_arm_deepwound = {state = "healed", effect = "", cures = {}, assess = false, timer = createStopWatch()},
aff_left_arm_dislocated = {state = "healed", effect = "", cures = {salve = "mending to arms"}, assess = false, timer = createStopWatch()},
aff_left_arm_mangled = {state = "healed", effect = "", cures = {salve = "restoration to arms"}, assess = false, timer = createStopWatch()},
aff_left_arm_numbed = {state = "healed", effect = "", cures = {}, assess = false, timer = createStopWatch()},
aff_left_leg_amputated = {state = "healed", effect = "", cures = {salve = "restoration to legs"}, assess = false, timer = createStopWatch()},
aff_left_leg_broken = {state = "healed", effect = "", cures = {salve = "mending to legs", tree = "send"}, assess = false, timer = createStopWatch()},
aff_left_leg_bruised = {state = "healed", effect = "", cures = {salve = "mending to legs"}, assess = false, timer = createStopWatch()},
aff_left_leg_bruised_critical = {state = "healed", effect = "", cures = {salve = "mending to legs"}, assess = false, timer = createStopWatch()},
aff_left_leg_bruised_moderate = {state = "healed", effect = "", cures = {salve = "mending to legs"}, assess = false, timer = createStopWatch()},
aff_left_leg_damaged = {state = "healed", effect = "", cures = {salve = "restoration to legs"}, assess = false, timer = createStopWatch()},
aff_left_leg_deepwound = {state = "healed", effect = "", cures = {}, assess = false, timer = createStopWatch()},
aff_left_leg_dislocated = {state = "healed", effect = "", cures = {salve = "mending to legs"}, assess = false, timer = createStopWatch()},
aff_left_leg_mangled = {state = "healed", effect = "", cures = {salve = "restoration to legs"}, assess = false, timer = createStopWatch()},
aff_left_leg_numbed = {state = "healed", effect = "", cures = {}, assess = false, timer = createStopWatch()},
aff_lemniscate = {state = "healed", effect = "", cures = {}, assess = false, timer = createStopWatch()},
aff_lethargy = {state = "healed", effect = "", cures = {herb = "ginseng", tree = "send"}, assess = false, timer = createStopWatch()},
aff_lifebane = {state = "healed", effect = "", cures = {}, assess = false, timer = createStopWatch()},
aff_limp_veins = {state = "healed", effect = "", cures = {herb = "kelp", tree = "send"}, assess = false, timer = createStopWatch()},
aff_loneliness = {state = "healed", effect = "", cures = {herb = "lobelia", tree = "send", focus = "send"}, assess = false, timer = createStopWatch()},
aff_lovers_effect = {state = "healed", effect = "", cures = {herb = "bellwort", tree = "send", focus = "send"}, assess = false, timer = createStopWatch()},
aff_magical_weakness = {state = "healed", effect = "", cures = {}, assess = false, timer = createStopWatch()},
aff_magnanimity = {state = "healed", effect = "", cures = {}, assess = false, timer = createStopWatch()},
aff_masochism = {state = "healed", effect = "", cures = {herb = "lobelia", tree = "send", focus = "send"}, assess = false, timer = createStopWatch()},
aff_mauled_face = {state = "healed", effect = "", cures = {salve = "restoration to head"}, assess = false, timer = createStopWatch()},
aff_mental_disruption = {state = "healed", effect = "", cures = {herb = "ginseng", tree = "send", focus = "send"}, assess = false, timer = createStopWatch()},
aff_mental_fatigue = {state = "healed", effect = "", cures = {}, assess = false, timer = createStopWatch()},
aff_merciful = {state = "healed", effect = "", cures = {}, assess = false, timer = createStopWatch()},
aff_migraine = {state = "healed", effect = "", cures = {smoke = "valerian", tree = "send"}, assess = false, timer = createStopWatch()},
aff_mind_blank = {state = "healed", effect = "", cures = {}, assess = false, timer = createStopWatch()},
aff_mind_clamped = {state = "healed", effect = "", cures = {}, assess = false, timer = createStopWatch()},
aff_mirroring = {state = "healed", effect = "", cures = {herb = "bloodroot", tree = "send", focus = "send"}, assess = false, timer = createStopWatch()},
aff_mistbrand = {state = "healed", effect = "", cures = {}, assess = false, timer = createStopWatch()},
aff_muddled = {state = "healed", effect = "", cures = {}, assess = false, timer = createStopWatch()},
aff_mutagen = {state = "healed", effect = "", cures = {}, assess = false, timer = createStopWatch()},
aff_mutation_sickness = {state = "healed", effect = "", cures = {}, assess = false, timer = createStopWatch()},
aff_numb_arms = {state = "healed", effect = "", cures = {}, assess = false, timer = createStopWatch()},
aff_numbed_skin = {state = "healed", effect = "", cures = {}, assess = false, timer = createStopWatch()},
aff_oiled = {state = "healed", effect = "", cures = {}, assess = false, timer = createStopWatch()},
aff_omen = {state = "healed", effect = "", cures = {}, assess = false, timer = createStopWatch()},
aff_pacifism = {state = "healed", effect = "", cures = {herb = "bellwort", tree = "send", focus = "send"}, assess = false, timer = createStopWatch()},
aff_paranoia = {state = "healed", effect = "", cures = {herb = "ash", tree = "send", focus = "send"}, assess = false, timer = createStopWatch()},
aff_patterns = {state = "healed", effect = "", cures = {}, assess = false, timer = createStopWatch()},
aff_peace = {state = "healed", effect = "", cures = {herb = "bellwort", tree = "send", focus = "send"}, assess = false, timer = createStopWatch()},
aff_penance = {state = "healed", effect = "", cures = {}, assess = false, timer = createStopWatch()},
aff_petrified = {state = "healed", effect = "", cures = {}, assess = false, timer = createStopWatch()},
aff_physical_disruption = {state = "healed", effect = "", cures = {herb = "ginseng", tree = "send"}, assess = false, timer = createStopWatch()},
aff_pre_restore_head = {state = "healed", effect = "", cures = {salve = "restoration to head"}, assess = false, timer = createStopWatch()},
aff_pre_restore_left_arm = {state = "healed", effect = "", cures = {salve = "restoration to arms"}, assess = false, timer = createStopWatch()},
aff_pre_restore_left_leg = {state = "healed", effect = "", cures = {salve = "restoration to legs"}, assess = false, timer = createStopWatch()},
aff_pre_restore_right_arm = {state = "healed", effect = "", cures = {salve = "restoration to right arm"}, assess = false, timer = createStopWatch()},
aff_pre_restore_right_leg = {state = "healed", effect = "", cures = {salve = "restoration to right leg"}, assess = false, timer = createStopWatch()},
aff_pre_restore_torso = {state = "healed", effect = "", cures = {salve = "restoration to torso"}, assess = false, timer = createStopWatch()},
aff_premonition = {state = "healed", effect = "", cures = {}, assess = false, timer = createStopWatch()},
aff_quicksand = {state = "healed", effect = "", cures = {}, assess = false, timer = createStopWatch()},
aff_recklessness = {state = "healed", effect = "", cures = {herb = "lobelia", tree = "send", focus = "send"}, assess = false, timer = createStopWatch()},
aff_rend = {state = "healed", effect = "", cures = {herb = "ginseng", tree = "send"}, assess = false, timer = createStopWatch()},
aff_resin_glauxe = {state = "healed", effect = "", cures = {}, assess = false, timer = createStopWatch()},
aff_right_arm_amputated = {state = "healed", effect = "", cures = {salve = "restoration to right arm"}, assess = false, timer = createStopWatch()},
aff_right_arm_broken = {state = "healed", effect = "", cures = {salve = "mending to arms", tree = "send"}, assess = false, timer = createStopWatch()},
aff_right_arm_bruised = {state = "healed", effect = "", cures = {salve = "mending to arms"}, assess = false, timer = createStopWatch()},
aff_right_arm_bruised_critical = {state = "healed", effect = "", cures = {salve = "mending to arms"}, assess = false, timer = createStopWatch()},
aff_right_arm_bruised_moderate = {state = "healed", effect = "", cures = {salve = "mending to arms"}, assess = false, timer = createStopWatch()},
aff_right_arm_damaged = {state = "healed", effect = "", cures = {salve = "restoration to right arm"}, assess = false, timer = createStopWatch()},
aff_right_arm_deepwound = {state = "healed", effect = "", cures = {}, assess = false, timer = createStopWatch()},
aff_right_arm_dislocated = {state = "healed", effect = "", cures = {salve = "mending to arms"}, assess = false, timer = createStopWatch()},
aff_right_arm_mangled = {state = "healed", effect = "", cures = {salve = "restoration to right arm"}, assess = false, timer = createStopWatch()},
aff_right_arm_numbed = {state = "healed", effect = "", cures = {}, assess = false, timer = createStopWatch()},
aff_right_leg_amputated = {state = "healed", effect = "", cures = {salve = "restoration to right leg"}, assess = false, timer = createStopWatch()},
aff_right_leg_broken = {state = "healed", effect = "", cures = {salve = "mending to legs", tree = "send"}, assess = false, timer = createStopWatch()},
aff_right_leg_bruised = {state = "healed", effect = "", cures = {salve = "mending to legs"}, assess = false, timer = createStopWatch()},
aff_right_leg_bruised_critical = {state = "healed", effect = "", cures = {salve = "mending to legs"}, assess = false, timer = createStopWatch()},
aff_right_leg_bruised_moderate = {state = "healed", effect = "", cures = {salve = "mending to legs"}, assess = false, timer = createStopWatch()},
aff_right_leg_damaged = {state = "healed", effect = "", cures = {salve = "restoration to right leg"}, assess = false, timer = createStopWatch()},
aff_right_leg_deepwound = {state = "healed", effect = "", cures = {}, assess = false, timer = createStopWatch()},
aff_right_leg_dislocated = {state = "healed", effect = "", cures = {salve = "mending to legs"}, assess = false, timer = createStopWatch()},
aff_right_leg_mangled = {state = "healed", effect = "", cures = {salve = "restoration to right leg"}, assess = false, timer = createStopWatch()},
aff_right_leg_numbed = {state = "healed", effect = "", cures = {}, assess = false, timer = createStopWatch()},
aff_ripped_groin = {state = "healed", effect = "", cures = {}, assess = false, timer = createStopWatch()},
aff_ripped_spleen = {state = "healed", effect = "", cures = {}, assess = false, timer = createStopWatch()},
aff_ripped_throat = {state = "healed", effect = "", cures = {}, assess = false, timer = createStopWatch()},
aff_ruptured_eardrum = {state = "healed", effect = "", cures = {}, assess = false, timer = createStopWatch()},
aff_sadness = {state = "healed", effect = "", cures = {herb = "ash", tree = "send"}, assess = false, timer = createStopWatch()},
aff_salve_seared = {state = "healed", effect = "", cures = {}, assess = false, timer = createStopWatch()},
aff_sand_trapped = {state = "healed", effect = "", cures = {}, assess = false, timer = createStopWatch()},
aff_sandrot = {state = "healed", effect = "", cures = {herb = "bloodroot", tree = "send"}, assess = false, timer = createStopWatch()},
aff_sapped_constitution = {state = "healed", effect = "", cures = {}, assess = false, timer = createStopWatch()},
aff_sapped_dexterity = {state = "healed", effect = "", cures = {}, assess = false, timer = createStopWatch()},
aff_sapped_intelligence = {state = "healed", effect = "", cures = {}, assess = false, timer = createStopWatch()},
aff_sapped_stats = {state = "healed", effect = "", cures = {}, assess = false, timer = createStopWatch()},
aff_sapped_strength = {state = "healed", effect = "", cures = {}, assess = false, timer = createStopWatch()},
aff_selarnia = {state = "healed", effect = "", cures = {salve = "mending to torso", tree = "send"}, assess = false, timer = createStopWatch()},
["aff_self-pity"] = {state = "healed", effect = "", cures = {herb = "goldenseal", tree = "send"}, assess = false, timer = createStopWatch()},
aff_sensitivity = {state = "healed", effect = "", cures = {herb = "kelp", tree = "send"}, assess = false, timer = createStopWatch()},
aff_shadow_coat = {state = "healed", effect = "", cures = {}, assess = false, timer = createStopWatch()},
aff_shadowbrand = {state = "healed", effect = "", cures = {}, assess = false, timer = createStopWatch()},
aff_shivering = {state = "healed", effect = "", cures = {salve = "caloric", tree = "send"}, assess = false, timer = createStopWatch()},
aff_shyness = {state = "healed", effect = "", cures = {herb = "goldenseal", tree = "send", focus = "send"}, assess = false, timer = createStopWatch()},
aff_smashed_throat = {state = "healed", effect = "", cures = {salve = "restoration to head"}, assess = false, timer = createStopWatch()},
aff_soul_disease = {state = "healed", effect = "", cures = {}, assess = false, timer = createStopWatch()},
aff_soul_poison = {state = "healed", effect = "", cures = {}, assess = false, timer = createStopWatch()},
aff_soulchill = {state = "healed", effect = "", cures = {}, assess = false, timer = createStopWatch()},
aff_soulburn = {state = "healed", effect = "", cures = {herb = "bellwort", tree = "send"}, assess = false, timer = createStopWatch()},
aff_soulfire = {state = "healed", effect = "", cures = {herb = "bellwort", tree = "send"}, assess = false, timer = createStopWatch()},
aff_soulpuncture = {state = "healed", effect = "", cures = {}, assess = false, timer = createStopWatch()},
aff_soulroot = {state = "healed", effect = "", cures = {}, assess = false, timer = createStopWatch()},
aff_spinal_rip = {state = "healed", effect = "", cures = {salve = "restoration to torso"}, assess = false, timer = createStopWatch()},
aff_spiritbane = {state = "healed", effect = "", cures = {}, assess = false, timer = createStopWatch()},
aff_spiritbrand = {state = "healed", effect = "", cures = {}, assess = false, timer = createStopWatch()},
aff_squelched = {state = "healed", effect = "", cures = {smoke = "valerian", tree = "send"}, assess = false, timer = createStopWatch()},
aff_stonebrand = {state = "healed", effect = "", cures = {}, assess = false, timer = createStopWatch()},
aff_stonevice = {state = "healed", effect = "", cures = {}, assess = false, timer = createStopWatch()},
aff_stormtouched = {state = "healed", effect = "", cures = {}, assess = false, timer = createStopWatch()},
aff_stupidity = {state = "healed", effect = "", cures = {herb = "goldenseal", tree = "send", focus = "send"}, assess = false, timer = createStopWatch()},
aff_stuttering = {state = "healed", effect = "", cures = {salve = "epidermal to head", tree = "send", focus = "send"}, assess = false, timer = createStopWatch()},
aff_superstition = {state = "healed", effect = "", cures = {herb = "bellwort", tree = "send"}, assess = false, timer = createStopWatch()},
aff_thin_blood = {state = "healed", effect = "", cures = {herb = "ginseng", tree = "send"}, assess = false, timer = createStopWatch()},
aff_thorns = {state = "healed", effect = "", cures = {}, assess = false, timer = createStopWatch()},
aff_throatclaw = {state = "healed", effect = "", cures = {salve = "mending to head", tree = "send"}, assess = false, timer = createStopWatch()},
aff_throatslice = {state = "healed", effect = "", cures = {}, assess = false, timer = createStopWatch()},
aff_thunderstorm = {state = "healed", effect = "", cures = {}, assess = false, timer = createStopWatch()},
aff_torso_bruised = {state = "healed", effect = "", cures = {salve = "mending to torso"}, assess = false, timer = createStopWatch()},
aff_torso_bruised_critical = {state = "healed", effect = "", cures = {salve = "mending to torso"}, assess = false, timer = createStopWatch()},
aff_torso_bruised_moderate = {state = "healed", effect = "", cures = {salve = "mending to torso"}, assess = false, timer = createStopWatch()},
aff_torso_damaged = {state = "healed", effect = "", cures = {salve = "restoration to torso"}, assess = false, timer = createStopWatch()},
aff_torso_deepwound = {state = "healed", effect = "", cures = {}, assess = false, timer = createStopWatch()},
aff_torso_mangled = {state = "healed", effect = "", cures = {salve = "restoration to torso"}, assess = false, timer = createStopWatch()},
aff_tree_seared = {state = "healed", effect = "", cures = {}, assess = false, timer = createStopWatch()},
aff_troubled_breathing = {state = "healed", effect = "", cures = {}, assess = false, timer = createStopWatch()},
aff_vertigo = {state = "healed", effect = "", cures = {herb = "lobelia", tree = "send", focus = "send"}, assess = false, timer = createStopWatch()},
aff_vinethorns = {state = "healed", effect = "", cures = {special = "pull thorn from body"}, assess = false, timer = createStopWatch()},
aff_vitalbane = {state = "healed", effect = "", cures = {}, assess = false, timer = createStopWatch()},
aff_void = {state = "healed", effect = "", cures = {salve = "caloric"}, assess = false, timer = createStopWatch()},
aff_vomiting = {state = "healed", effect = "", cures = {herb = "ginseng", tree = "send"}, assess = false, timer = createStopWatch()},
aff_voyria = {state = "healed", effect = "", cures = {vial = "immunity"}, assess = false, timer = createStopWatch()},
aff_weakvoid = {state = "healed", effect = "", cures = {salve = "caloric"}, assess = false, timer = createStopWatch()},
aff_weariness = {state = "healed", effect = "", cures = {herb = "kelp", tree = "send", focus = "send"}, assess = false, timer = createStopWatch()},
aff_windbrand = {state = "healed", effect = "", cures = {}, assess = false, timer = createStopWatch()},
aff_withering = {state = "healed", effect = "", cures = {smoke = "elm", tree = "send"}, assess = false, timer = createStopWatch()},
aff_wraith = {state = "healed", effect = "", cures = {}, assess = false, timer = createStopWatch()},
aff_writhe_armpitlock = {state = "healed", effect = "", cures = {writhe = "send"}, assess = false, timer = createStopWatch()},
aff_writhe_bind = {state = "healed", effect = "", cures = {writhe = "send"}, assess = false, timer = createStopWatch()},
aff_writhe_feed = {state = "healed", effect = "", cures = {writhe = "send"}, assess = false, timer = createStopWatch()},
aff_writhe_hoist = {state = "healed", effect = "", cures = {writhe = "send"}, assess = false, timer = createStopWatch()},
aff_writhe_impaled = {state = "healed", effect = "", cures = {writhe = "send"}, assess = false, timer = createStopWatch()},
aff_writhe_lure = {state = "healed", effect = "", cures = {writhe = "send"}, assess = false, timer = createStopWatch()},
aff_writhe_necklock = {state = "healed", effect = "", cures = {writhe = "send"}, assess = false, timer = createStopWatch()},
aff_writhe_ropes = {state = "healed", effect = "", cures = {writhe = "send"}, assess = false, timer = createStopWatch()},
aff_writhe_tar = {state = "healed", effect = "", cures = {writhe = "send"}, assess = false, timer = createStopWatch()},
aff_writhe_thighlock = {state = "healed", effect = "", cures = {writhe = "send"}, assess = false, timer = createStopWatch()},
aff_writhe_transfix = {state = "healed", effect = "", cures = {writhe = "send"}, assess = false, timer = createStopWatch()},
aff_writhe_vines = {state = "healed", effect = "", cures = {writhe = "send"}, assess = false, timer = createStopWatch()},
aff_writhe_web = {state = "healed", effect = "", cures = {writhe = "send"}, assess = false, timer = createStopWatch()},

}</script>
								<eventHandlerList />
							</Script>
							<Script isActive="yes" isFolder="no">
								<name>give/take</name>
								<packageName></packageName>
								<script>
function snd.aff_check()
 for i in pairs(snd.afflictions) do
  if snd.afflictions[i].cures.writhe ~= nil or string.find(i, "damaged") or string.find(i, "mangled") or string.find(i, "pre_restore") or i == "aff_concussion" then
   if getStopWatchTime(snd.afflictions[i].timer) &gt; 7 and snd.afflictions[i].state == "waiting" then
    snd.aff_timeout(i)
   end
  elseif snd.afflictions[i].state == "waiting" and getStopWatchTime(snd.afflictions[i].timer) &gt; 2 then
   snd.aff_timeout(i)
  end
 end
end
function snd.aff_timeout(affliction)
 snd.afflictions[affliction].state = "afflicted"
 snd.message("[Resetting: &lt;white&gt;"..affliction.."&lt;brown&gt;]", "reset")
end

function snd.aff_gain(affliction)
 if affliction == "aeon" then
  if snd.defenses.def_speed.state == "deffed" then
   snd.def_take("speed")
   return
  end
 end
--  deleteLine()
 snd.message("You: &lt;red&gt;GOT&lt;SteelBlue&gt; "..affliction..".", "affliction")
 snd.aff_have(affliction)
 if affliction == "amnesia" then
  for i = 1,5 do
   snd.send("stand")
  end
 elseif affliction == "paresis" then
  if snd.paraTimer then killTimer(snd.paraTimer) end
  snd.paraTimer = tempTimer(3, [[if snd.have_aff("paresis") then snd.send("firstaid elevate paresis") end]])
 elseif affliction == "allergies" then
  if snd.allergyTimer then killTimer(snd.allergyTimer) end
	snd.allergyTimer = tempTimer(18, [[if snd.have_aff("allergies") then snd.send("firstaid elevate allergies") end]])
 end
 display_my_affs()
 color_self_limbs()
end

function snd.aff_have(affliction)
 if snd.class_hitting == "archivist" then
	if table.contains(snd.circle_affs, affliction) then
	 hit_aff = false
	 for aff in pairs(snd.circle_affs) do
	  if not hit_aff then
		 snd.send("firstaid predict "..snd.circle_affs[aff])
		 if snd.circle_affs[aff] == affliction then
		  hit_aff = true
		 end
		end
	 end
	end
	if table.contains(snd.square_affs, affliction) then
	 hit_aff = false
	 for aff in pairs(snd.square_affs) do
	  if not hit_aff then
		 snd.send("firstaid predict "..snd.square_affs[aff])
		 if snd.square_affs[aff] == affliction then
		  hit_aff = true
		 end
		end
	 end
	end
	if table.contains(snd.triangle_affs, affliction) then
	 hit_aff = false
	 for aff in pairs(snd.triangle_affs) do
	  if not hit_aff then
		 snd.send("firstaid predict "..snd.triangle_affs[aff])
		 if snd.triangle_affs[aff] == affliction then
		  hit_aff = true
		 end
		end
	 end
	end
 end
 if not string.find(affliction, "aff_") then
  affliction = "aff_"..affliction
 end
 if snd.afflictions[affliction].state == "healed" then
  snd.afflictions[affliction].state = "afflicted"
	display_my_affs()
	color_self_limbs()
 end
end

function snd.aff_diag(affliction)
 if not string.find(affliction, "aff_") then
  affliction = "aff_"..affliction
 end
 snd.aff_have(affliction)
 deleteLine()
 if snd.afflictions[affliction].cures.herb ~= nil then
  if string.find(snd.afflictions[affliction].cures.herb, "eat") then
   snd.aff_color = "&lt;red&gt;"
  elseif string.find(snd.afflictions[affliction].cures.herb, "smoke") then
   snd.aff_color = "&lt;SteelBlue&gt;"
  end
 elseif snd.afflictions[affliction].cures.salve ~= nil then
   snd.aff_color = "&lt;green&gt;"
 end
 snd.aff_color = "&lt;yellow&gt;"
 cecho(snd.aff_color.."\n"..affliction)
 if not string.find(affliction, "aff_") then
  affliction = "aff_"..affliction
 end
 echo(" "..snd.afflictions[affliction].effect)
 display_my_affs()
 color_self_limbs()
end

function snd.aff_cure(affliction)
 snd.message("You: &lt;green&gt;HEAL&lt;SteelBlue&gt; "..affliction..".", "affliction")
 snd.aff_remove(affliction)
end

function snd.aff_remove(affliction)
 if not string.find(affliction, "aff_") then
  affliction = "aff_"..affliction
 end
 if snd.afflictions[affliction].cures.writhe ~= nil then
--  snd.status.writhing = false
 end
 snd.afflictions[affliction].state = "healed"
 display_my_affs()
 color_self_limbs()
end</script>
								<eventHandlerList />
							</Script>
							<Script isActive="yes" isFolder="no">
								<name>clear</name>
								<packageName></packageName>
								<script>
function snd.clear_afflictions(type)
 snd.clear_affs = {}
 for i in pairs(snd.afflictions) do
  if snd.afflictions[i].cures[type] ~= nil then
   if snd.afflictions[i].cures[type] == snd.last[type] and snd.afflictions[i].state ~= "healed" then
    table.insert(snd.clear_affs, i)
    snd.aff_remove(i)
   end
  end
 end
 if #snd.clear_affs &gt; 0 then
  cecho("&lt;red&gt;\n[Removing:")
  for k in pairs(snd.clear_affs) do
   if snd.clear_affs[k] then
    cecho("&lt;SteelBlue&gt; "..snd.clear_affs[k])
   end
  end
  cecho("&lt;red&gt;]")
  send(" ")
 end
end
</script>
								<eventHandlerList />
							</Script>
							<Script isActive="yes" isFolder="no">
								<name>Timer</name>
								<packageName></packageName>
								<script>timer = timer or {}
timer.values = timer.values or {}

-- Usage:
--
-- timer:init() - create master timer
-- timer:get(xname) - return current value or nil
-- timer:set(xname, xduration) -- set timer 'xname' to value 'xduration' (duration=nil removes timer)
-- timer:custom - if created, this script will be called every second after all timers are updated
--
-- If a function exists matching the name of the timer, it will be called every second with arguments (functionname, timervalue).
-- When time remaining reaches 0, the timer will then be removed.


function timer:init()
	if exists("MudTimer", "timer") == 0 then
		permTimer("MudTimer", "", 1, [[timer:script()]] )
	end

	enableTimer("MudTimer")
end

function timer:set(xname, xduration)
	self.values[xname] = xduration
end

function timer:get(xname)
	if self.values[xname] == nil then
		return(nil)
	end

	return (self.values[xname])
end

function timer:script()
	-- decrement all timers
	for k, v in pairs(timer.values) do
		timer.values[k] = timer.values[k]-1

		-- Timer has reached 0 (expired)
		if timer.values[k] &lt; 1 and k ~= "" then
			timer.values[k] = nil	

			if _G[k] ~= nil then
				-- call timer with 0 (expired)
				_G[k](k, 0)
			end
		else
			-- have timer called every second with "fname, time" as argument
			if _G[k] ~= nil then
				_G[k](k, timer.values[k])
			end
		end
	end

	if timer.custom ~= nil then
		timer:custom()
	end
end</script>
								<eventHandlerList />
							</Script>
						</ScriptGroup>
						<ScriptGroup isActive="yes" isFolder="yes">
							<name>Defenses</name>
							<packageName></packageName>
							<script>-------------------------------------------------
--         Put your Lua functions here.        --
--                                             --
-- Note that you can also use external Scripts --
-------------------------------------------------
</script>
							<eventHandlerList />
							<Script isActive="yes" isFolder="no">
								<name>defense table</name>
								<packageName></packageName>
								<script>
snd.defenses = {
def_gripping = {defense = "gripping", type = "normal", effect = "Prevents disarming", balance = {balanceequilibrium = "grip"}, state = "down", needit = false, timer = createStopWatch()},
def_divert_melee = {defense = "divert_melee", type = "normal", effect = "Protects from melee damage", balance = {special = "divert melee"}, state = "down", needit = false, timer = createStopWatch()},
def_dodge_melee = {defense = "dodge_melee", type = "normal", effect = "Protects from melee damage", balance = {special = "dodge melee"}, state = "down", needit = false, timer = createStopWatch()},
def_starburst = {defense = "starburst", type = "blue", effect = "Instant revival on death", balance = {tattoo = "starburst"}, state = "down", needit = false, timer = createStopWatch()},
def_cloak_tattoo = {defense = "cloak", type = "blue", effect = "Protects from unwanted summons", balance = {tattoo = "cloak"}, state = "down", needit = false, timer = createStopWatch()},
def_mindseye_tattoo = {defense = "mindseye", type = "green", effect = "Allows deaf/blind hearing/vision", balance = {balanceequilibrium = "touch allsight"}, state = "down", needit = false, timer = createStopWatch()},
def_firefly_tattoo = {defense = "firefly", type = "green", effect = "Protects you against them Sciomancers", balance = {tattoo = "firefly"},state = "down", needit = false, timer = createStopWatch()},
def_flame_tattoo = {defense = "flame", type = "green", effect = "Helps protect against writhe affs", balance = {tattoo = "flame"},state = "down", needit = false, timer = createStopWatch()},
def_shield_tattoo = {defense = "shielded", type = "green", effect = "Magical shield to stop attacks", balance = {tattoo = "shield"},state = "down", needit = false, timer = createStopWatch()},
def_fitness = {defense = "fitness", type = "normal", effect = "Protects from asthma", balance = {balanceequilibriumtake = "fitness"}, state = "down", needit = false, timer = createStopWatch()},
def_deafness = {defense = "deafness", type = "normal", effect = "Protects from sonic effects", balance = {herb = "ototoxin"}, state = "down", needit = false, timer = createStopWatch()},
def_blindness = {defense = "blindness", type = "normal", effect = "Protects from visual effects", balance = {herb = "amaurosis"}, state = "down", needit = false, timer = createStopWatch()},
def_waterbreathing = {defense = "waterbreathing", type = "normal", effect = "Prevents choking underwater", balance = {herb = "waterbreathing"}, state = "down", needit = false, timer = createStopWatch()},
def_kola = {defense = "instawake", type = "normal", effect = "Removes the WAKE delay", balance = {eat = "stimulant"}, state = "down", needit = false, timer = createStopWatch()},
def_insomnia = {defense = "insomnia", type = "normal", effect = "Prevents sleep effects", balance = {eat = "kawhepill"}, state = "down", needit = false, timer = createStopWatch()},
def_deathsight = {defense = "deathsight", type = "normal", effect = "Reports player deaths", balance = {eat = "thanatonin"}, state = "down", needit = false, timer = createStopWatch()},
def_thirdeye = {defense = "thirdeye", type = "normal", effect = "Adds locations to WHO", balance = {eat = "acuity"}, state = "down", needit = false, timer = createStopWatch()},
def_venom = {defense = "venom_resistance", type = "normal", effect = "Protects against poison damage", balance = {vial = "antivenin"}, state = "down", needit = false, timer = createStopWatch()},
def_levitation = {defense = "levitation", type = "normal", effect = "Protects against falling effects", balance = {vial = "levitation"}, state = "down", needit = false, timer = createStopWatch()},
def_frost = {defense = "temperance", type = "normal", effect = "Protects against fire damage", balance = {drink = "frost"}, state = "down", needit = false, timer = createStopWatch()},
def_speed = {defense = "speed", type = "green", effect = "Protects against aeon affliction", balance = {drink = "speed"}, state = "down", needit = false, timer = createStopWatch()},
def_caloric = {defense = "insulation", type = "normal", effect = "Protects against cold damage", balance = {salve = "caloric"}, state = "down", needit = false, timer = createStopWatch()},
def_vigor = {defense = "vigor", type = "normal", effect = "Critical hits heal you", balance = {drink = "vigor"}, state = "down", needit = false, timer = createStopWatch()},
def_fangbarrier = {defense = "fangbarrier", type = "normal", effect = "Protects against syssin bites", balance = {special = "outc paste|apply paste"}, state = "down", needit = false, timer = createStopWatch()},
def_rebounding = {defense = "rebounding", type = "blue", effect = "Causes weapon attacks to backfire", balance = {smoke = "reishi"}, state = "down", needit = false, timer = createStopWatch()},
def_density = {defense = "density", type = "red", effect = "Resists forced movement", balance = {salve = "mass"}, state = "down", needit = false, timer = createStopWatch()},
def_nightsight = {defense = "nightsight", type = "normal", effect = "Allows glancing at night", balance = {special = "nightsight on"}, state = "down", needit = false, timer = createStopWatch()},
def_clarity = {defense = "clarity", type = "normal", effect = "Protects against some mental affs", balance = {needyequilibriumtake = "clarity"}, state = "down", needit = false, timer = createStopWatch()},
def_waterwalking = {defense = "waterwalking", type = "normal", effect = "Allows you to walk on water", balance = {special = "touch waterwalking"}, state = "down", needit = false, timer = createStopWatch()},
def_safeguard = {defense = "safeguard", type = "normal", effect = "Increased resistances", balance = {needyequilibriumtake = "safeguard"}, state = "down", needit = false, timer = createStopWatch()},
def_warmth = {defense = "warmth", type = "normal", effect = "Increased resistances", balance = {needyequilibriumtake = "warmth"}, state = "down", needit = false, timer = createStopWatch()},
def_miasma = {defense = "miasma", type = "normal", effect = "Increased resistances", balance = {needyequilibriumtake = "miasma"}, state = "down", needit = false, timer = createStopWatch()},
def_maingauche = {defense = "maingauche", type = "normal", effect = "Chance to counter attack", balance = {needyequilibriumtake = "maingauche"}, state = "down", needit = false, timer = createStopWatch()},
def_pacing = {defense = "pacing", type = "red", effect = "Keep up while following", balance = {needybalancetake = "pacing on"}, state = "down", needit = false, timer = createStopWatch()},
def_heatsight = {defense = "heatsight", type = "normal", effect = "See hidden people", balance = {needyequilibriumtake = "heatsight"}, state = "down", needit = false, timer = createStopWatch()},
def_manipulation_aegis = {defense = "manipulation_aegis", type = "normal", effect = "cheap prism", balance = {needyequilibriumtake = "manipulate pylon for aegis"}, state = "down", needit = false, timer = createStopWatch()},
def_chameleon = {defense = "chameleon", type = "normal", effect = "Change your name on QW/WHO", balance = {balanceequilibrium = "touch chameleon "}, state = "down", needit = false, timer = createStopWatch()},

--Carnifex
def_fearless = {defense = "fearless", type = "normal", effect = "Protects against fear affliction.", balance = {special = "fearless"}, state = "down", needit = false, timer = createStopWatch()},
def_reveling = {defense = "reveling", type = "normal", effect = "Periodic heal on damage done.", balance = {needybalancetake = "reveling on"}, state = "down", needit = false, timer = createStopWatch()},
def_recklessness = {defense = "reckless", type = "normal", effect = "Can attack with 1 broken arm.", balance = {needybalancetake = "recklessness on"}, state = "down", needit = false, timer = createStopWatch()},
def_soul_harvest = {defense = "soulharvest", type = "normal", effect = "Automatically harvest souls.", balance = {special = "soul harvest on"}, state = "down", needit = false, timer = createStopWatch()},
def_soul_fracture = {defense = "soul_fracture", type = "normal", effect = "Boosts defenses and weapon damage.", balance = {special = "soul fracture"}, state = "down", needit = false, timer = createStopWatch()},
def_houndmark = {defense = "houndmark", type = "yellow", effect = "hounds go zoom", balance = {}, state = "down", needit = false, timer = createStopWatch()},                                                                                  
def_soul_body = {defense = "soul_body", type = "normal", effect = "Boosts physical defense.", balance = {needyequilibriumtake = "soul embed in body"}, state = "down", needit = false, timer = createStopWatch()},
def_soul_fortify = {defense = "soul_fortify", type = "normal", effect = "Increased constitution.", balance = {needyequilibriumtake = "soul fortify"}, state = "down", needit = false, timer = createStopWatch()},
def_soul_thirst = {defense = "soulthirst", type = "normal", effect = "Steals soul on hit.", balance = {equilibriumtake = "soul thirst"}, state = "down", needit = false, timer =createStopWatch()},
def_soul_substitute = {defense = "substitute", type = "normal", effect = "Protected from death.", balance = {needyequilibriumtake = "soul substitute"}, state = "down", needit = false, timer = createStopWatch()},
--def_shroud = {defense = "shroud", type = "normal", effect = "Shrouded.", balance = {balanceequilibrium = "soul shroud"}, state = "down", needit = false, timer = createStopWatch()},
def_shroud = {defense = "shroud", type = "normal", effect = "Shrouded.",  balance = {needybalancetake = "shroud"..snd.sep.."conjure cloak"}, state = "down", needit = false, timer = createStopWatch()},
def_soul_spiritsight = {defense = "soul_spiritsight", type = "normal", effect = "You can see the hidden.", balance = {needyequilibriumtake = "soul spiritsight"}, state = "down", needit = false, timer = createStopWatch()},
def_hound_opening = {defense = "hound_opening", type = "normal", effect = "Increases damage done to mobs.", balance = {}, state = "down", needit = false, timer = createStopWatch()},
def_bruteforce = {defense = "bruteforce", type = "normal", effect = "Attacks hit through parry.", balance = {needybalancetake = "hammer force"}, state = "down", needit = false, timer = createStopWatch()},
def_herculeanrage = {defense = "herculean rage", type = "normal", effect = "Make them prone/off bal.", balance = {needybalancetake = "hammer rage on"}, state = "down", needit = false, timer = createStopWatch()},

--Lycan
def_weathering = {defense = "weathering", type = "normal", effect = "Cold resistance", balance = {special = "weathering"}, state = "down", needit = false, timer = createStopWatch()},
def_bodyheat = {defense = "bodyheat", type = "normal", effect = "Protects against chill", balance = {needyequilibriumtake = "bodyheat"}, state = "down", needit = false, timer = createStopWatch()},
def_metabolize = {defense = "metabolism", type = "normal", effect = "Increase strength", balance = {balancetake = "metabolize on"}, state = "down", needit = false, timer = createStopWatch()},
def_endurance = {defense = "celerity", type = "normal", effect = "Faster movement", balance = {needybalancetake = "endurance"}, state = "down", needit = false, timer = createStopWatch()},
def_thickhide = {defense = "thickhide", type = "normal", effect = "Physical protection", balance = {balancetake = "thickhide"}, state = "down", needit = false, timer = createStopWatch()},
def_corner = {defense = "cornering", type = "normal", effect = "Increase dodge chance", balance = {needybalancetake = "corner on"}, state = "down", needit = false, timer = createStopWatch()},
def_salivate = {defense = "salivating", type = "normal", effect = "Bites give haemophilia", balance = {equilibriumneed = "salivate"}, state = "down", needit = false, timer = createStopWatch()},
def_harden = {defense = "hardening", type = "normal", effect = "Chance to prevent crippled limbs", balance = {needyequilibriumtake = "harden bones"}, state = "down", needit = false, timer = createStopWatch()},
def_fury = {defense = "fury", type = "normal", effect = "Can use claws off balance", balance = {}, state = "down", needit = false, timer = createStopWatch()},

--Luminary
def_lightshield = {defense = "lightshield", type = "normal", effect = "Light-based damage resistance", balance = {needyequilibriumtake = "evoke lightshield"}, state = "down", needit = false, timer = createStopWatch()},
def_inspiration = {defense = "inspiration_strength", type = "normal", effect = "Increases strength", balance = {needyequilibriumtake = "perform inspiration strength"}, state = "down", needit = false, timer = createStopWatch()},
def_fireblock = {defense = "fireblock", type = "normal", effect = "Resists fire attacks", balance = {needybalancetake = "evoke fireblock"}, state = "down", needit = false, timer = createStopWatch()},

--Syssin
def_hiding = {defense = "hiding", type = "blue", effect = "Conceals your presence", balance = {needybalancetake = "hide"}, state = "down", needit = false, timer = createStopWatch()},
def_warding = {defense = "warding", type = "normal", effect = "Physical resistance", balance = {needybalancetake = "warding"}, state = "down", needit = false, timer = createStopWatch()},
def_finesse = {defense = "finesse", type = "normal", effect = "Protects against rebounding", balance = {needybalancetake = "finesse"}, state = "down", needit = false, timer = createStopWatch()},
def_weaving = {defense = "weaving", type = "red", effect = "Increases dodge rate", balance = {needybalancetake = "weaving on"}, state = "down", needit = false, timer = createStopWatch()},
def_shadowsight = {defense = "shadowsight", type = "normal", effect = "See hidden people", balance = {equilibriumtake = "shadowsight"}, state = "down", needit = false, timer = createStopWatch()},
def_ghost = {defense = "ghosted", type = "normal", effect = "Conceals movement", balance = {needyequilibriumtake = "conjure ghost"}, state = "down", needit = false, timer = createStopWatch()},
def_shadowslip = {defense = "shadowslip", type = "normal", effect = "HIDE on killing blow", balance = {needybalancetake = "shadowslip on"}, state = "down", needit = false, timer = createStopWatch()},
def_phase = {defense = "phased", type = "yellow", effect = "On another plane", balance = {}, state = "down", needit = false, timer = createStopWatch()},

--Monk
def_vitality = {defense = "vitality", type = "normal", effect = "You will get a burst of HP when near death", balance = {needyequilibriumtake = "vitality"}, state = "down", needit = false, timer = createStopWatch()},
def_kaido_regeneration = {defense = "kaido_regeneration", type = "normal", effect = "HP regen", balance = {special = "regeneration on"}, state = "down", needit = false, timer = createStopWatch()},
def_constitution = {defense = "constitution", type = "normal", effect = "Protection from nausea", balance = {needyequilibriumtake = "constitution"}, state = "down", needit = false, timer = createStopWatch()},
def_split_mind = {defense = "split_mind", type = "normal", effect = "Constant meditation", balance = {needyequilibriumtake = "split mind"}, state = "down", needit = false, timer = createStopWatch()},
def_kaido_immunity = {defense = "immunity", type = "normal", effect = "You will auto cure the next poison you are hit with", balance = {needyequilibriumtake = "immunity"}, state = "down", needit = false, timer = createStopWatch()},
def_boosted_regen = {defense = "boosted_regen", type = "normal", effect = "Even more HP regen", balance = {special = "boost regeneration"}, state = "down", needit = false, timer = createStopWatch()},

--Sentinel
def_barkskin = {defense = "barkskin", type = "normal", effect = "10% Resist to Cutting/Blunt", balance = {needyequilibriumtake = "barkskin"}, state = "down", needit = false, timer = createStopWatch()},
def_lifesap = {defense = "lifesap", type = "normal", effect = "Gain health on melee attack", balance = {needyequilibriumtake = "lifesap"}, state = "down", needit = false, timer = createStopWatch() },
def_hardiness = {defense = "hardiness", type = "normal", effect = "15% Resist to Cold/Venom", balance = {needyequilibriumtake = "hardiness"}, state = "down", needit = false, timer = createStopWatch() },
def_flexibility = {defense = "flexibility", type = "normal", effect = "Increased writhe", balance = {balanceequilibriumtake = "flexibility"}, state = "down", needit = false, timer = createStopWatch() },
def_maskedscent = {defense = "masked_scent", type = "normal", effect = "Not listed on scent", balance = {balanceequilibriumtake = "mask scent"}, state = "down", needit = false, timer = createStopWatch() },
def_conceal = {defense = "concealed", type = "normal", effect = "You are a shadowy figure", balance = {balanceequilibriumtake = "conceal"}, state = "down", needit = false, timer = createStopWatch() },

--Wayfarer
def_ironskin = {defense = "wayfare ironskin", type = "normal", effect = "Resist physical damage", balance = {balanceequilibriumtake = "wayfare ironskin"}, state = "down", needit = false, timer = createStopWatch() },
def_blindsense = {defense = "blindsense", type = "normal", effect = "Resistance to accuracy reduction", balance = {balanceequilibriumtake = "wayfare blindsense on"}, state = "down", needit = false, timer = createStopWatch() },
def_greenheart = {defense = "greenheart", type = "normal", effect = "Tree Tattoo is sped up", balance = {balanceequilibriumtake = "outc greenink"..snd.sep.."wayfare greenheart on"}, state = "down", needit = false, timer = createStopWatch() },
def_endure = {defense = "endure", type = "normal", effect = "Endurance usage reduced", balance = {balanceequilibriumtake = "wayfare endure on"}, state = "down", needit = false, timer = createStopWatch() },
def_mountaineer = {defense = "mountaineer", type = "normal", effect = "You're shoutin' room-wide", balance = {balanceequilibriumtake = "wayfare mountaineer on"}, state = "down", needit = false, timer = createStopWatch() },
def_dustcoat = {defense = "dustcoat", type = "normal", effect = "Soulmask while moving", balance = {balanceequilibriumtake = "wayfare dustcoat"}, state = "down", needit = false, timer = createStopWatch() },
def_resilience = {defense = "resilience", type = "normal", effect = "Assess is wonky vs you", balance = {balanceequilibriumtake = "wayfare resilience on"}, state = "down", needit = false, timer = createStopWatch() },
def_desolation = {defense = "desolation", type = "normal", effect = "You do more melee damage, ranged speed down", balance = {balanceequilibriumtake = "wayfare desolation on"}, state = "down", needit = false, timer = createStopWatch() },
def_circulation = {defense = "circulation", type = "normal", effect = "+1STR, clot under haemophilia, clot cost up", balance = {balanceequilibriumtake = "wayfare circulation on"}, state = "down", needit = false, timer = createStopWatch() },
def_weathering = {defense = "weathering", type = "normal", effect = "Cold resistance", balance = {special = "weathering"}, state = "down", needit = false, timer = createStopWatch()},
def_brutality = {defense = "brutality", type = "normal", effect = "MAKE THEM FLEE", balance = {balanceequilibrium = "fury brutality on"}, neetid = false, timer = createStopWatch() },
-- Brutality, axe avert, axe obstruct, axe repel, weathering, bloodtrails, phalanx are missing

--Archivist
def_spheres = {defense = "spheres", type = "normal", effect = "Spheres defense for Archivist", balance = {balanceequilibriumtake = "contemplate spheres"}, state = "down", needit = false, timer = createStopWatch() },
def_linked = {defense = "linked", type = "normal", effect = "Yay link", balance = {balanceequilibriumtake = "elicit link 50"}, state = "down", needit = false, timer = createStopWatch() },
def_oneness = {defense = "oneness", type = "normal", effect = "oneness", balance = {balanceequilibriumtake = "elicit oneness"}, state = "down", needit = false, timer = createStopWatch() },
def_sublimation = {defense = "sublimation", type = "normal", effect = "sublimation", balance = {balanceequilibriumtake = "elicit sublimation me"}, state = "down", needit = false, timer = createStopWatch() },
def_ameliorate = {defense = "ameliorate", type = "normal", effect = "ameliorate", balance = {balanceequilibriumtake = "bio ameliorate on"}, state = "down", needit = false, timer = createStopWatch() },
def_catabolism = {defense = "catabolism", type = "normal", effect = "catabolism", balance = {balanceequilibriumtake = "bio catabolism"}, state = "down", needit = false, timer = createStopWatch() },
def_geo_invert = {defense = "Token Inverted", type = "normal", effect = "You Have Inverted Your Token", balance = {balanceequilibriumtake = "drop token##geo invert"}, state = "down", needit = false, timer = createStopWatch() },
def_geo_trace = {defense = "Token Tracing You", type = "normal", effect = "You Have Traced Your Token", balance = {balanceequilibriumtake = "geo trace me"}, state = "down", needit = false, timer = createStopWatch() },
def_empower_jhako = {defense = "Empowering Jhako", type = "normal", effect = "You Have Empowered Jhako", balance = {balanceequilibriumtake = "empower jhako"}, state = "down", needit = false, timer = createStopWatch() },
def_nexus = {defense = "nexus", type = "normal", effect = "Setup your nexus", balance = {balanceequilibriumtake = "bio nexus one"}, state = "down", needit = false, timer = createStopWatch() },

--Indorani
def_soulmask = {defense = "soulmask", type = "normal", effect = "Your soul is harder to sense.", balance = {balanceequilibriumtake = "soulmask"}, state = "down", needit = false, timer = createStopWatch() },
def_vengeance = {defense = "vengeance", type = "normal", effect = "You will deal AoE damage to enemies upon death.", balance = {balanceequilibriumtake = "vengeance"}, state = "down", needit = false, timer = createStopWatch() },
def_deathaura = {defense = "deathaura", type = "normal", effect = "You deal damage to enemies in room passively.", balance = {balanceequilibriumtake = "deathaura on"}, state = "down", needit = false, timer = createStopWatch() },
def_gravechill = {defense = "gravechill", type = "normal", effect = "Cold damage on decay instead of magic.", balance = {balanceequilibriumtake = "gravechill"}, state = "down", needit = false, timer = createStopWatch() },
def_lifevision = {defense = "lifevision ", type = "normal", effect = "See all things living, sometimes identify illusions.", balance = {balanceequilibriumtake = "lifevision"}, state = "down", needit = false, timer = createStopWatch() },
def_soulcage = {defense = "soulcage", type = "normal", effect = "You come back to life upon death instantly.", balance = {balanceequilibriumtake = "soulcage"}, state = "down", needit = false, timer = createStopWatch() },
def_devilpact = {defense = "devil", type = "normal", effect = "Throw 2 cards at once.", balance = {balanceequilibriumtake = "outc blank as devil"..snd.sep.."fling devil at ground"}, state = "down", needit = false, timer = createStopWatch() },
def_eclipse = {defense = "eclipse", type = "normal", effect = "Every 3rd card is hidden, sun/moon only.", balance = {balanceequilibriumtake = "outc blank as eclipse"..snd.sep.."fling eclipse at me"}, state = "down", needit = false, timer = createStopWatch() },
def_chariot = {defense = "chariot", type = "normal", effect = "+Celerity, +bal for cards", balance = {balanceequilibriumtake = "outc blank as chariot"..snd.sep.."fling chariot at ground"}, state = "down", needit = false, timer = createStopWatch() },
def_hierophant = {defense = "hierophant", type = "normal", effect = "Protect against disloyalty.", balance = {balanceequilibriumtake = "outc blank as hierophant"..snd.sep.."fling hierophant at me"}, state = "down", needit = false, timer = createStopWatch() },

--Shaman
def_spiritbond = {defense = "spiritbond", type = "normal", effect = "Share damage with your spirit.", balance = {balanceequilibriumtake = "familiar spiritbond on"}, state = "down", needit = false, timer = createStopWatch() },
def_protection = {defense = "protection", type = "normal", effect = "Resistance to cutting/blunt.", balance = {balanceequilibriumtake = "shaman protection"}, state = "down", needit = false, timer = createStopWatch() },
def_shaman_spiritsight = {defense = "shaman_spiritsight", type = "normal", effect = "You get loki 2.0.", balance = {balanceequilibriumtake = "shaman spiritsight on"}, state = "down", needit = false, timer = createStopWatch() },
def_lifebloom = {defense = "lifebloom", type = "normal", effect = "Restore HP upon getting low health.", balance = {balanceequilibriumtake = "commune lifebloom"}, state = "down", needit = false, timer = createStopWatch() },
def_shaman_warding  = {defense = "shaman_warding", type = "normal", effect = "Give mental affs when your parry is hit.", balance = {balanceequilibriumtake = "shaman warding"}, state = "down", needit = false, timer = createStopWatch() },

--Praenomen
def_potence_strength = {defense = "potence strength", type = "normal", effect = "+1 STR", balance = {balanceequilibriumtake = "potence strength"}, state = "down", needit = false, timer = createStopWatch() },
def_potence_constitution = {defense = "potence constitution", type = "normal", effect = "+1 CON", balance = {balanceequilibriumtake = "potence constitution"}, state = "down", needit = false, timer = createStopWatch() },
def_potence_intelligence = {defense = "potence intelligence", type = "normal", effect = "+1 INT", balance = {balanceequilibriumtake = "potence intelligence"}, state = "down", needit = false, timer = createStopWatch() },
def_potence_dexterity = {defense = "potence dexterity", type = "normal", effect = "+1 DEX", balance = {balanceequilibriumtake = "potence dexterity"}, state = "down", needit = false, timer = createStopWatch() },
def_fortify = {defense = "fortify", type = "normal", effect = "Fortify your body to take less physical damage", balance = {balanceequilibriumtake = "fortify"}, state = "down", needit = false, timer = createStopWatch() },
def_corpus_warding = {defense = "corpus_warding", type = "normal", effect = "Fortify your body to take less magical damage", balance = {balanceequilibriumtake = "ward"}, state = "down", needit = false, timer = createStopWatch() },
def_celerity = {defense = "celerity", type = "normal", effect = "Increased movement speed", balance = {balanceequilibriumtake = "celerity"}, state = "down", needit = false, timer = createStopWatch() },
def_lifescent = {defense = "lifescent", type = "normal", effect = "Detect nearby prey movements", balance = {balanceequilibriumtake = "lifescent"}, state = "down", needit = false, timer = createStopWatch() },
def_lifevision = {defense = "lifevision", type = "normal", effect = "See things in the shadows", balance = {balanceequilibriumtake = "lifevision"}, state = "down", needit = false, timer = createStopWatch() },
def_veil = {defense = "veil", type = "normal", effect = "Hide deeper in the shadows", balance = {balanceequilibriumtake = "veil"}, state = "down", needit = false, timer = createStopWatch() },
def_stalk = {defense = "stalk", type = "normal", effect = "Nighttime hiding in the shadows", balance = {balanceequilibriumtake = "stalk"}, state = "down", needit = false, timer = createStopWatch() },
def_concentrate = {defense = "concentrate", type = "normal", effect = "Make your blood use more efficient", balance = {balanceequilibriumtake = "blood concentrate"}, state = "down", needit = false, timer = createStopWatch() },
def_shadowblow = {defense = "shadowblow", type = "normal", effect = "Your shadow strikes out at your attacker", balance = {balanceequilibriumtake = "blood shadow"}, state = "down", needit = false, timer = createStopWatch() },
def_blurred = {defense = "blurred", type = "normal", effect = "Others cannot see your vitals", balance = {balanceequilibriumtake = "blood blur"}, state = "down", needit = false, timer = createStopWatch() },
def_elusion = {defense = "elusion", type = "normal", effect = "You avoid opponents' blows", balance = {balanceequilibriumtake = "elusion on"}, state = "down", needit = false, timer = createStopWatch() },
def_deathlink = {defense = "deathlink", type = "normal", effect = "You are linked to your coffin", balance = {balanceequilibriumtake = "deathlink"}, state = "down", needit = false, timer = createStopWatch() },

--Teradrim
def_earthenform = {defense = "earthenform", type = "normal", effect = "Embrace your earthen features", balance = {balanceequilibriumtake = "earthenform embrace"}, state = "down", needit = false, timer = createStopWatch() },
def_entwine = {defense = "entwine", type = "normal", effect = "Disarm when someone goes for your parried limb", balance = {balanceequilibriumtake = "earth entwine"}, state = "down", needit = false, timer = createStopWatch() },
def_ricochet =  {defense = "ricochet", type = "normal", effect = "Bounce attacks back to cripple limbs at times", balance = {balanceequilibriumtake = "earth ricochet"}, state = "down", needit = false, timer = createStopWatch() },
def_twinsoul = {defense = "twinsoul", type = "normal", effect = "Link your soul to your golem", balance = {balanceequilibriumtake = "golem twinsoul on"}, state = "down", needit = false, timer = createStopWatch() },
def_resonance = {defense = "resonance", type = "normal", effect = "Boosted health/mana regen", balance = {balanceequilibriumtake = "earth resonance"}, state = "down", needit = false, timer = createStopWatch() },
def_stonebind = {defense = "stonebind", type = "normal", effect = "They can't take your weapon", balance = {balanceequilibriumtake = "earth stonebind"}, state = "down", needit = false, timer = createStopWatch() },
def_earthenwill = {defense = "prepare earthenwill", type = "normal", effect = "Golem can hit freely next time", balance = {balanceequilibriumtake = "prepare earthenwill"}, state = "down", needit = false, timer = createStopWatch() },
def_erosion = {defense = "erosion", type = "normal", effect = "Erosion is useful on your weapon if you're sand sweltering", balance = {balanceequilibriumtake = "earth imbue erosion"}, state = "down", needit = false, timer = createStopWatch() },
def_stonefury = {defense = "stonefury", type = "normal", effect = "Stonefury is useful on your weapon for bashing", balance = {balanceequilibriumtake = "earth imbue stonefury"}, state = "down", needit = false, timer = createStopWatch() },
def_sand_swelter = {defense = "sand_swelter", type = "normal", effect = "Your sands hit people in the room", balance = {balanceequilibriumtake = "sand flood"..snd.sep.."qeb sand swelter on"}, state = "down", needit = false, timer = createStopWatch() },


--Ascendril
def_missiles = {defense = "missiles", type = "normal", effect = "PvE damage", balance = {balanceequilibriumtake = "cast missiles on"}, state = "down", needit = false, timer = createStopWatch() },
def_sagacity = {defense = "sagacity", type = "normal", effect = "extra mana recovery", balance = {balanceequilibriumtake = "cast sagacity"}, state = "down", needit = false, timer = createStopWatch() },
def_arcaneskin = {defense = "arcaneskin", type = "normal", effect = "Increased cutting/blunt resistances", balance = {balanceequilibrium = "cast arcaneskin"}, state = "down", needit = false, timer = createStopWatch()},
def_countercurrent = {defense = "countercurrent", type = "normal", effect = "chance to resist venoms", balance = {balanceequilibrium = "cast countercurrent"}, state = "down", needit = false, timer = createStopWatch()},
def_stalled = {defense = "stalled", type = "normal", effect = "holding an attack", balance = {balanceequilibrium = ""}, state = "down", needit = false, timer = createStopWatch()},

--Sciomancer
def_rigor  = {defense = "rigor", type = "normal", effect = "WP drain but better crit chance", balance = {balanceequilibriumtake = "cast rigor on"}, state = "down", needit = false, timer = createStopWatch() },
def_shadow_engulf   = {defense = "shadow_engulf", type = "normal", effect = "Mask your movements", balance = {balanceequilibriumtake = "cast engulf on"}, state = "down", needit = false, timer = createStopWatch() },
def_shadow_mantle  = {defense = "shadow_mantle", type = "normal", effect = "Reduce damage taken from elements", balance = {balanceequilibriumtake = "cast mantle"}, state = "down", needit = false, timer = createStopWatch() },
def_blurring  = {defense = "blurring", type = "normal", effect = "Better diverting", balance = {balanceequilibriumtake = "cast blurring"}, state = "down", needit = false, timer = createStopWatch() },

--Zealot
def_firefist = {defense = "firefist", type = "normal", effect = "makes your fists attack cause ablaze", balance = {balanceequilibriumtake = "enact firefist"}, state = "down", needit = false, timer = createStopWatch() },
def_focalmark = {defense = "focalmark", type = "normal", effect = "Enabled your use of purification abilities", balance = {balanceequilibriumtake = "enact focalmark"}, state = "down", needit = false, timer = createStopWatch() },
def_tempered_body = {defense = "tempered_body", type = "normal", effect = "Resist cutting and blunt dmg", balance = {balanceequilibriumtake = "enact tempering"}, state = "down", needit = false, timer = createStopWatch() },
def_swagger = {defense = "swagger", type = "normal", effect = "Negates paresis only once", balance = {needybalancetake = "swagger"}, state = "down", needit = false, timer = createStopWatch() },
def_deflection = {defense = "deflection", type = "normal", effect = "Deflect arrows by chance, return them on success", balance = {balanceequilibriumtake = "enact deflection"}, state = "down", needit = false, timer = createStopWatch() },
def_discharge = {defense = "discharge", type = "normal", effect = "Store up dmgs until threshold, then it heal some of your wounds", balance = {balanceequilibriumtake = "enact discharge"}, state = "down", needit = false, timer = createStopWatch() },
def_resurgence = {defense = "resurgence", type = "normal", effect = "Revive you once you died", balance = {balanceequilibriumtake = "enact resurgence"}, state = "down", needit = false, timer = createStopWatch() },
def_haste = {defense = "haste", type = "normal", effect = " +2 to movement", balance = {special = "haste"}, state = "down", needit = false, timer = createStopWatch() },
def_litheness = {defense = "litheness", type = "normal", effect = "Suffer no malus to dodge chance when use channeling action", balance = {needybalance = "litheness"}, state = "down", needit = false, timer = createStopWatch() },
def_disunion = {defense = "disunion", type = "normal", effect = "give chance to reduce eq and bal timer", balance = {balanceequilibriumtake = "disunion"}, state = "down", needit = false, timer = createStopWatch() },
def_wrath = {defense = "wrath", type = "normal", effect = "see what other would parries in very short time", balance = {needybalancetake = "wrath"}, state = "down", needit = false, timer = createStopWatch() },
def_zenith = {defense = "zenith", type = "normal", effect = "cure a random AFF, use certain attacks off bal", balance = {balanceequilibriumtake = "enact zenith"}, state = "down", needit = false, timer = createStopWatch() },
def_mindspark = {defense = "mindspark", type = "normal", effect = "raises your intelligence", balance = {balanceequilibrium = "psi mindspark"}, state = "down", needit = false, timer = createStopWatch() },

}</script>
								<eventHandlerList />
							</Script>
							<Script isActive="yes" isFolder="no">
								<name>give/take</name>
								<packageName></packageName>
								<script>
function snd.def_check()
 for i in pairs(snd.defenses) do
  if i == "def_speed" or i == "def_rebounding" or i == "def_deafness" or i == "def_fangbarrier" then
   if snd.defenses[i].state == "waiting" and getStopWatchTime(snd.defenses[i].timer) &gt;= 10 then
    snd.def_timeout(i)
   end
  elseif snd.defenses[i].state == "waiting" and getStopWatchTime(snd.defenses[i].timer) &gt; 2 then
   snd.def_timeout(i)
  end
 end
end

function snd.def_timeout(defense)
 snd.defenses[defense].state = "down"
 snd.message("[Resetting: &lt;white&gt;"..defense.."&lt;brown&gt;]", "reset")
end

function snd.def_gain(defense)
--  deleteLine()
 snd.message("You: &lt;green&gt;GAIN &lt;white&gt;"..defense..".", "defense")
 if not string.find(defense, "def_") then
  defense = "def_"..defense
 end
 x = stopStopWatch(snd.defenses[defense].timer)
-- resetStopWatch(snd.defenses[defense].timer)
 snd.def_have(defense)
 snd.defenses[defense].timer = createStopWatch()
end

function snd.def_have(defense)
 if not string.find(defense, "def_") then
  defense = "def_"..defense
 end
 snd.defenses[defense].state = "deffed"
 for i in pairs(snd.less_defs) do
  if snd.less_defs[i] == defense then
   snd.defenses[defense].needit = false
   table.remove(snd.less_defs, i)
  end
 end
end

function snd.def_def(defense)
 deleteLine()
 if snd.defenses["def_"..defense].type == "normal" then
  cecho("&lt;white&gt;\n"..defense)
 else
  cecho("&lt;"..snd.defenses["def_"..defense].type.."&gt;\n"..defense)
 end
 if not string.find(defense, "def_") then
  defense = "def_"..defense
 end
 echo(" "..snd.defenses[defense].effect)
 snd.def_have(defense)
end

function snd.def_take(defense)
 if not string.find(defense, "def_") then
  defense = "def_"..defense
 end

 if snd.defenses[defense].state == "deffed" then
--  deleteLine()
  snd.message("You: &lt;red&gt;LOSE &lt;white&gt;"..defense..".", "defense")
 end
 snd.def_remove(defense)
end

function snd.def_remove(defense)
 if not string.find(defense, "def_") then
  defense = "def_"..defense
 end
 snd.defenses[defense].state = "down"
end</script>
								<eventHandlerList />
							</Script>
						</ScriptGroup>
					</ScriptGroup>
				</ScriptGroup>
				<ScriptGroup isActive="yes" isFolder="yes">
					<name>Bashing</name>
					<packageName></packageName>
					<script></script>
					<eventHandlerList />
					<ScriptGroup isActive="yes" isFolder="yes">
						<name>Auto Bashing</name>
						<packageName></packageName>
						<script>-------------------------------------------------
--         Put your Lua functions here.        --
--                                             --
-- Note that you can also use external Scripts --
-------------------------------------------------
</script>
						<eventHandlerList />
						<Script isActive="yes" isFolder="no">
							<name>init</name>
							<packageName></packageName>
							<script>
bot = bot or {}

bot.info = {
room = "",
area = "",
next = ""
}

bot.new_room = false
bot.going = false
</script>
							<eventHandlerList />
						</Script>
						<Script isActive="yes" isFolder="no">
							<name>bot_room_info</name>
							<packageName></packageName>
							<script>
function bot_room_info()
--echo("I see you")
 if bot.info.room ~= gmcp.Room.Info.num then
  bot.new_room = true
  bot.info.room = gmcp.Room.Info.num
  bot.info.area = gmcp.Room.Info.area
 end
end</script>
							<eventHandlerList>
								<string>gmcp.Room.Info</string>
							</eventHandlerList>
						</Script>
						<Script isActive="yes" isFolder="no">
							<name>paths</name>
							<packageName></packageName>
							<script>function sndpathpick()

local check = {}

if snd.which_path == "high" then
check = {
--Dun Fortress
v5128 = "5129",
v5129 = "5130",
v5130 = "5131",
v5131 = "3886",
--Shattered Vortex
v36079 = "36080",
v36080 = "36081",
v36081 = "36082",
v36082 = "36083",
v36083 = "36084",
v36084 = "36085",
v36085 = "36086",
v36086 = "36087",
v36087 = "36091",
v36091 = "36096",
v36096 = "36093",
v36093 = "36092",
v36092 = "36089",
v36089 = "36088",
v36088 = "36090",
v36090 = "36094",
v36094 = "36095",
v36095 = "36335",
v36335 = "36330",
v36330 = "36326",
v36326 = "36323",
v36323 = "36325",
v36325 = "36324",
v36324 = "36293",
v36293 = "36315",
v36315 = "36329",
v36329 = "36334",
v36334 = "36316",
v36316 = "36328",
v36328 = "36333",
v36333 = "36332",
v36332 = "36331",
v36331 = "36327",
v36327 = "36322",
v36322 = "36321",
v36321 = "36320",
v36320 = "36319",
v36319 = "36318",
v36318 = "36317",
v36317 = "36314",
v36314 = "36313",
v36313 = "36312",
v36312 = "36311",
v36311 = "36310",
v36310 = "36309",
v36309 = "36306",
v36306 = "36298",
v36298 = "36300",
v36300 = "36301",
v36301 = "36308",
v36308 = "36307",
v36307 = "36304",
v36304 = "36305",
v36305 = "36303",
v36303 = "36302",
v36302 = "36299",
v36299 = "36297",
v36297 = "36296",
v36296 = "36103",
v36103 = "36102",
v36102 = "36101",
v36101 = "36100",
v36100 = "36099",
v36099 = "36098",
v36098 = "36104",
v36104 = "36105",
v36105 = "36106",
v36106 = "36107",
v36107 = "36272",
v36272 = "36273",
v36273 = "36278",
v36278 = "36281",
v36281 = "36280",
v36280 = "36279",
v36279 = "36277",
v36277 = "36276",
v36276 = "36282",
v36282 = "36283",
v36283 = "36284",
v36284 = "36285",
v36285 = "36286",
v36286 = "36287",
v36287 = "36288",
v36288 = "36289",
v36289 = "36290",
v36290 = "36291",
v36291 = "36292",
v36292 = "36097",
v36097 = "36294",
v36294 = "36295",
v36295 = "36336",
v36336 = "36347",
v36347 = "36339",
v36339 = "36340",
v36340 = "36346",
v36346 = "36337",
v36337 = "36338",
v36338 = "36345",
v36345 = "36341",
v36341 = "36343",
v36343 = "36344",
v36344 = "36342",
v36342 = "36351",
v36351 = "36350",
v36350 = "36349",
v36349 = "36354",
v36354 = "36357",
v36357 = "36358",
v36358 = "36360",
v36360 = "36361",
v36361 = "36362",
v36362 = "36363",
v36363 = "36364",
v36364 = "36365",
v36365 = "36455",
v36455 = "36456",
v36456 = "36457",
v36457 = "36458",
v36458 = "36459",
v36459 = "36460",
v36460 = "36461",
v36461 = "36359",
v36359 = "36419",
v36419 = "36418",
v36418 = "36417",
v36417 = "36438",
v36438 = "36439",
v36439 = "36440",
v36440 = "36356",
v36356 = "36352",
v36352 = "36355",
v36355 = "36444",
v36444 = "36443",
v36443 = "36442",
v36442 = "36446",
v36446 = "36450",
v36450 = "36451",
v36451 = "36447",
v36447 = "36448",
v36448 = "36452",
v36452 = "36453",
v36453 = "36400",
v36400 = "36353",
v36353 = "36368",
v36368 = "36369",
v36369 = "36462",
v36462 = "36463",
v36463 = "36370",
v36370 = "36371",
v36371 = "36464",
v36464 = "36465",
v36465 = "36372",
v36372 = "36373",
v36373 = "36466",
v36466 = "36467",
v36467 = "36374",
v36374 = "36375",
v36375 = "36468",
v36468 = "36376",
v36376 = "36377",
v36377 = "36378",
v36378 = "36380",
v36380 = "36470",
v36470 = "36469",
v36469 = "36475",
v36475 = "36471",
v36471 = "36381",
v36381 = "36382",
v36382 = "36472",
v36472 = "36476",
v36476 = "36477",
v36477 = "36473",
v36473 = "36383",
v36383 = "36384",
v36384 = "36385",
v36385 = "36386",
v36386 = "36474",
v36474 = "36478",
v36478 = "36387",
v36387 = "36388",
v36388 = "36479",
v36479 = "36480",
v36480 = "36389",
v36389 = "36390",
v36390 = "36481",
v36481 = "36482",
v36482 = "36391",
v36391 = "36392",
v36392 = "36483",
v36483 = "36484",
v36484 = "36393",
v36393 = "36394",
v36394 = "36454",
v36454 = "36449",
v36449 = "36395",
v36395 = "36396",
v36396 = "36445",
v36445 = "36441",
v36441 = "36397",
v36397 = "36398",
v36398 = "36437",
v36437 = "36416",
v36416 = "36399",
v36399 = "36420",
v36420 = "36421",
v36421 = "36422",
v36422 = "36423",
v36423 = "36424",
v36424 = "36425",
v36425 = "36426",
v36426 = "36427",
v36427 = "36433",
v36433 = "36434",
v36434 = "36435",
v36435 = "36436",
v36436 = "36366",
v36366 = "36367",
v36367 = "36379",
v36379 = "36401",
v36401 = "36432",
v36432 = "36431",
v36431 = "36402",
v36402 = "36403",
v36403 = "36430",
v36430 = "36429",
v36429 = "36404",
v36404 = "36405",
v36405 = "36428",
v36428 = "36406",
v36406 = "36407",
v36407 = "36408",
v36408 = "36409",
v36409 = "36410",
v36410 = "36411",
v36411 = "36412",
v36412 = "36413",
v36413 = "36414",
v36414 = "36415",
v36415 = "36508",
v36508 = "36509",
v36509 = "36510",
v36510 = "36511",
v36511 = "36512",
v36512 = "36513",
v36513 = "36514",
v36514 = "36518",
v36518 = "36522",
v36522 = "36523",
v36523 = "36519",
v36519 = "36515",
v36515 = "36516",
v36516 = "36520",
v36520 = "36524",
v36524 = "36525",
v36525 = "36521",
v36521 = "36517",
v36517 = "36526",
v36526 = "36527",
v36527 = "36528",
v36528 = "36529",
v36529 = "36533",
v36533 = "36532",
v36532 = "36530",
v36530 = "36531",
v36531 = "36534",
v36534 = "36535",
v36535 = "36536",
v36536 = "36541",
v36541 = "36537",
v36537 = "36538",
v36538 = "36539",
v36539 = "36540",
v36540 = "36079",
--Luzith's Lair
v16282 = "16284",
v16284 = "16286",
v16286 = "16285",
v16285 = "16290",
v16290 = "16292",
v16292 = "16311",
v16311 = "16291",
v16291 = "16293",
v16293 = "16287",
v16287 = "16288",
v16288 = "16283",
v16283 = "16289",
v16289 = "16294",
v16294 = "16296",
v16296 = "16295",
v16295 = "16297",
v16297 = "16298",
v16298 = "16300",
v16300 = "16301",
v16301 = "16303",
v16303 = "16305",
v16305 = "16310",
v16310 = "16306",
v16306 = "16307",
v16307 = "16299",
v16299 = "16302",
v16302 = "16304",
v16304 = "16308",
v16308 = "16309",
v16309 = "16359",
v16359 = "16358",
v16358 = "16334",
v16334 = "16333",
v16333 = "16335",
v16336 = "16360",
v16360 = "16335",
v16335 = "16366",
v16366 = "16340",
v16340 = "16362",
v16362 = "16337",
v16337 = "16338",
v16338 = "16339",
v16339 = "16357",
v16357 = "16341",
v16341 = "16342",
v16342 = "16343",
v16343 = "16361",
v16361 = "16344",
v16344 = "16367",
v16367 = "16345",
v16345 = "16346",
v16346 = "16350",
v16350 = "16351",
v16351 = "16347",
v16347 = "16370",
v16370 = "16352",
v16352 = "16372",
v16372 = "16356",
v16356 = "16348",
v16348 = "16353",
v16353 = "16368",
v16368 = "16354",
v16354 = "16371",
v16371 = "16355",
v16355 = "16349",
v16349 = "16369",
v16369 = "16363",
v16363 = "16364",
v16364 = "16365",
v16365 = "16373",
v16373 = "16374",
v16374 = "16375",
v16375 = "16383",
v16383 = "16374",
v16374 = "16375",
v16375 = "16376",
v16376 = "16377",
v16377 = "16379",
v16379 = "16378",
v16378 = "16380",
v16380 = "16381",
v16381 = "16382",
v16382 = "16402",
v16402 = "16386",
v16386 = "16387",
v16387 = "16394",
v16394 = "16388",
v16388 = "16389",
v16389 = "16403",
v16403 = "16404",
v16404 = "16405",
v16405 = "16406",
v16406 = "16390",
v16390 = "16400",
v16400 = "16401",
v16401 = "16391",
v16391 = "16392",
v16392 = "16393",
v16393 = "16395",
v16395 = "16396",
v16396 = "16397",
v16397 = "16398",
v16398 = "16399",
v16399 = "16407",
v16407 = "16408",
v16408 = "16409",
v16409 = "16410",
v16410 = "16411",
v16411 = "16412",
v16412 = "24531",

--Bastion of Illdon
v4964 = "24410",
v24410 = "24411",
v24411 = "24412",
v24412 = "24413",
v24413 = "24414",
v24414 = "24415",
v24415 = "24416",
v24416 = "24417",
v24417 = "24418",
v24418 = "24424",
v24424 = "24426",
v24426 = "24425",
v24425 = "24419",
v24419 = "24420",
v24420 = "24421",
v24421 = "24422",
v24422 = "24423",
v24423 = "24531",
v24531 = "24532",
v24532 = "24533",
v24533 = "24534",
v24534 = "24535",
v24535 = "24536",
v24536 = "24538",
v24538 = "24539",
v24539 = "24542",
v24542 = "24543",
v24543 = "24544",
v24544 = "24545",
v24545 = "24537",
v24537 = "24926",
v24926 = "24927",
v24927 = "24928",
v24928 = "24613",
v24613 = "24600",
v24600 = "24614",
v24614 = "24599",
v24599 = "24598",
v24598 = "24547",
v24547 = "24546",
v24546 = "24612",
v24612 = "24615",
v24615 = "24619",
v24619 = "24617",
v24617 = "24623",
v24623 = "24622",
v24622 = "24621",
v24621 = "24624",
v24624 = "24625",
v24625 = "24884",
v24884 = "24886",
v24886 = "24885",
v24885 = "24892",
v24892 = "24891",
v24891 = "24893",
v24893 = "24894",
v24894 = "24895",
v24895 = "24896",
v24896 = "24897",
v24897 = "24898",
v24898 = "24899",
v24899 = "24906",
v24906 = "24911",
v24911 = "24912",
v24912 = "24913",
v24913 = "24915",
v24915 = "24916",
v24916 = "24917",
v24917 = "24918",
v24918 = "24920",
v24920 = "24919",
v24919 = "24921",
v24921 = "24908",
v24908 = "24910",
v24910 = "24909",
v24909 = "24907",
v24907 = "24626",
v24626 = "24882",
v24882 = "24887",
v24887 = "24883",
v24883 = "24890",
v24890 = "24888",
v24888 = "24889",
v24889 = "24900",
v24900 = "24901",
v24901 = "24902",
v24902 = "24903",
v24903 = "24904",
v24904 = "24905",
v24905 = "pt36271",
-- Eresh
v15344 = "15346",
v15346 = "15347",
v15347 = "15350",
v15350 = "15349",
v15349 = "15351",
v15351 = "15352",
v15352 = "15354",
v15354 = "15353",
v15353 = "15355",
v15355 = "15356",
v15356 = "15367",
v15367 = "15368",
v15368 = "15348",
v15348 = "15369",
v15369 = "15370",
v15370 = "15372",
v15372 = "15373",
v15373 = "15371",
v15371 = "15374",
v15374 = "15390",
v15390 = "15375",
v15375 = "15376",
v15376 = "15377",
v15377 = "15391",
v15391 = "15392",
v15392 = "15393",
v15393 = "15394",
v15394 = "15404",
v15404 = "15405",
v15405 = "15395",
v15395 = "15396",
--v15396 =
--Upper Tiyen
v38894 = "38896",
v38896 = "38897",
v38897 = "38898",
v38898 = "38899",
v38899 = "38900",
v38900 = "38901",
v38901 = "38902",
v38902 = "38903",
v38903 = "38904",
v38904 = "38905",
v38905 = "38906",
v38906 = "38907",
v38907 = "38908",
v38908 = "38909",
v38909 = "38915",
v38915 = "38912",
v38912 = "38911",
v38911 = "38910",
v38910 = "38913",
v38913 = "38914",
v38914 = "38916",
v38916 = "38918",
v38918 = "38926",
v38926 = "38921",
v38921 = "38927",
v38927 = "38922",
v38922 = "38928",
v38928 = "38930",
v38930 = "38936",
v38936 = "38935",
v38935 = "38937",
v38937 = "38944",
v38944 = "38943",
v38943 = "38941",
v38941 = "38946",
v38946 = "38945",
v38945 = "38958",
v38958 = "38948",
v38948 = "38947",
v38947 = "38950",
v38950 = "38949",
v38949 = "38951",
v38951 = "38954",
v38954 = "38952",
v38952 = "38956",
v38956 = "38957",
v38957 = "38959",
v38959 = "38960",
v38960 = "38961",
v38961 = "38962",
v38962 = "38963",
v38963 = "38964",
v38964 = "38994",
v38994 = "38966",
v38966 = "38965",
v38965 = "38993",
v38993 = "38967",
v38967 = "38999",
v38999 = "39000",
v39000 = "39001",
v39001 = "38995",
v38995 = "38996",
v38996 = "38997",
v38997 = "38998",
v38998 = "39002",
v39002 = "39004",
v39004 = "39003",
v39003 = "39005",
v39005 = "39007",
v39007 = "39006",
v39006 = "39008",
v39008 = "39010",
v39010 = "39009",
v39009 = "39011",
v39011 = "39014",
v39014 = "39015",
v39015 = "39016",
v39016 = "39017",
v39017 = "39019",
v39019 = "39020",
v39020 = "38919",
v38919 = "38917",
v38917 = "38920",
v38920 = "38924",
v38924 = "38925",
v38925 = "38923",
v38923 = "39021",
v39021 = "39022",
v39022 = "39023",
v39023 = "39024",
v39024 = "39025",
v39025 = "38888",
v38888 = "38892",
v38892 = "38893",
v38893 = "39037",
v39037 = "39039",
v39039 = "39043",
v39043 = "39041",
v39041 = "39042",
v39042 = "39044",
v39044 = "39040",
v39040 = "39038",
v39038 = "39026",
v39026 = "39027",
v39027 = "38826",
v38826 = "38827",
v38827 = "38828",
v38828 = "38829",
v38829 = "38835",
v38835 = "38830",
v38830 = "39031",
v39031 = "39033",
v39033 = "39034",
v39034 = "38833",
v38833 = "39029",
v39029 = "39030",
v39030 = "38817",
v38817 = "38818",
v38818 = "38819",
v38819 = "38820",
v38820 = "38832",
v38832 = "38821",
v38821 = "38822",
v38822 = "38823",
v38823 = "38824",
v38824 = "38825",
v38825 = "38836",
v38836 = "38837",
v38837 = "38838",
v38838 = "38840",
v38840 = "38839",
v38839 = "38867",
v38867 = "38870",
v38870 = "38873",
v38873 = "38877",
v38877 = "38841",
v38841 = "38842",
v38842 = "38843",
v38843 = "38844",
v38844 = "38847",
v38847 = "38849",
v38849 = "38851",
v38851 = "38855",
v38855 = "38857",
v38857 = "38861",
v38861 = "38863",
v38863 = "38864",
v38864 = "38866",
v38866 = "38868",
v38868 = "38871",
v38871 = "38879",
v38879 = "38880",
v38880 = "38886",
v38886 = "38887",
v38887 = "38845",
v38845 = "38846",
v38846 = "38848",
v38848 = "38850",
v38850 = "38852",
v38852 = "38856",
v38856 = "38858",
v38858 = "38862",
v38862 = "38865",
v38865 = "39045",
v39045 = "39065",
v39065 = "39064",
v39064 = "39063",
v39063 = "39062",
v39062 = "39048",
v39048 = "39047",
v39047 = "39046",
v39046 = "39066",
v39066 = "39067",
v39067 = "39068",
v39068 = "39069",
v39069 = "39070",
--Lower Tiyen
v39070 = "39071",
v39071 = "39072",
v39072 = "39073",
v39073 = "39076",
v39076 = "39075",
v39075 = "39074",
v39074 = "39077",
v39077 = "39078",
v39078 = "39079",
v39079 = "39080",
v39080 = "39101",
v39101 = "39081",
v39081 = "39098",
v39098 = "39096",
v39096 = "39083",
v39083 = "39082",
v39082 = "39084",
v39084 = "39085",
v39085 = "39097",
v39097 = "39099",
v39099 = "39102",
v39102 = "39929",
v39929 = "39931",
v39931 = "39934",
v39934 = "39935",
v39935 = "39938",
v39938 = "39937",
v39937 = "39936",
v39936 = "39932",
v39932 = "39933",
v39933 = "39930",
v39930 = "39928",
v39928 = "39100",
v39100 = "39927",
v39927 = "39967",
v39967 = "39969",
v39969 = "39971",
v39971 = "39975",
v39975 = "39979",
v39979 = "39982",
v39982 = "39985",
v39985 = "39989",
v39989 = "39991",
v39991 = "39990",
v39990 = "39988",
v39988 = "39984",
v39984 = "39981",
v39981 = "39978",
v39978 = "39974",
v39974 = "39970",
v39970 = "39968",
v39968 = "39973",
v39973 = "39977",
v39977 = "39980",
v39980 = "39983",
v39983 = "39987",
v39987 = "39986",
v39986 = "39976",
v39976 = "39972",
v39972 = "39940",
v39940 = "39939",
v39939 = "39942",
v39942 = "39941",
v39941 = "39943",
v39943 = "39951",
v39951 = "39949",
v39949 = "39947",
v39947 = "39945",
v39945 = "39944",
v39944 = "39946",
v39946 = "39948",
v39948 = "39950",
v39950 = "39953",
v39953 = "39956",
v39956 = "39958",
v39958 = "39955",
v39955 = "39952",
v39952 = "39954",
v39954 = "39957",
v39957 = "39959",
v39959 = "39962",
v39962 = "39960",
v39960 = "pt36677",
--Dovan Hollow
v57392 = "49286",
v49286 = "48747",
v48747 = "49287",
v49287 = "49288",
v49288 = "49289",
v49289 = "49291",
v49291 = "49292",
v49292 = "49293",
v49293 = "49294",
v49294 = "48767",
v48767 = "49295",
v49295 = "49296",
v49296 = "48746",
v48746 = "48745",
v48745 = "48744",
v48744 = "48743",
v48743 = "48742",
v48742 = "49297",
v49297 = "49298",
v49298 = "49300",
v49300 = "49299",
v49299 = "49301",
v49301 = "45757",
v45757 = "48405",
v48405 = "49307",
v49307 = "49306",
v49306 = "49309",
v49309 = "49310",
v49310 = "49311",
v49311 = "49324",
v49324 = "49325",
v49325 = "49326",
v49326 = "49327",
v49327 = "49328",
v49328 = "49329",
v49329 = "49330",
v49330 = "48763",
v48763 = "49331",
v49331 = "49332",
v49332 = "49333",
v49333 = "49334",
v49334 = "49335",
v49335 = "44515",
v44515 = "48748",
v48748 = "48749",
v48749 = "48750",
v48750 = "48751",
v48751 = "48752",
v48752 = "48753",
v48753 = "48754",
v48754 = "48755",
v48755 = "48761",
v48761 = "48762",
v48762 = "49305",
v49305 = "49308",
v49308 = "48768",
v48768 = "49303",
v49303 = "49304",
v49304 = "48766",
v48766 = "49302",
v49302 = "49290",
v49290 = "49314",
v49314 = "49313",
v49313 = "49312",
v49312 = "49315",
v49315 = "49316",
v49316 = "49317",
v49317 = "48740",
v48740 = "48741",
v48741 = "49318",
v49318 = "49319",
v49319 = "49320",
v49320 = "49321",
v49321 = "49323",
v49323 = "49322",
v49322 = "ptcity",
--Upper Xaanhal
v36677 = "36678",
v36678 = "36679",
v36679 = "36680",
v36680 = "36681",
v36681 = "36682",
v36682 = "36683",
v36683 = "36684",
v36684 = "36685",
v36685 = "36686",
v36686 = "36687",
v36687 = "36689",
v36689 = "36690",
v36690 = "36691",
v36691 = "36692",
v36692 = "36693",
v36693 = "36694",
v36694 = "36695",
v36695 = "36696",
v36696 = "36697",
v36697 = "36698",
v36698 = "36699",
v36699 = "36700",
v36700 = "36701",
v36701 = "36703",
v36703 = "36702",
v36702 = "36704",
v36704 = "36707",
v36707 = "36706",
v36706 = "36705",
v36705 = "36708",
v36708 = "36709",
v36708 = "36688",
v36688 = "pt38090",
--Spiral of the Corrupt
v36271 = "36596",
v36596 = "36622",
v36622 = "36624",
v36624 = "36625",
v36625 = "36634",
v36634 = "36639",
v36639 = "36648",
v36648 = "36598",
v36598 = "36599",
v36599 = "36600",
v36600 = "36601",
v36601 = "36602",
v36602 = "36603",
v36603 = "36604",
v36604 = "36605",
v36605 = "36606",
v36606 = "36607",
v36607 = "36608",
v36608 = "36609",
v36609 = "36610",
v36610 = "36611",
v36611 = "36612",
v36612 = "36613",
v36613 = "36614",
v36614 = "36615",
v36615 = "36616",
v36616 = "36617",
v36617 = "36618",
v36618 = "36619",
v36619 = "36620",
v36620 = "36621",
v36621 = "36623",
v36623 = "36626",
v36626 = "36627",
v36627 = "36628",
v36628 = "36629",
v36629 = "36630",
v36630 = "36631",
v36631 = "36632",
v36632 = "36633",
v36633 = "36635",
v36635 = "36636",
v36636 = "36637",
v36637 = "36638",
v36638 = "36640",
v36640 = "36641",
v36641 = "36642",
v36642 = "36643",
v36643 = "36644",
v36644 = "36645",
v36645 = "36647",
v36647 = "36649",
v36649 = "36650",
v36650 = "36646",
v36646 = "pt38894",
--Forgotten Dome
v56107 = "56108",
v56108 = "56110",
v56110 = "56197",
v56197 = "56217",
v56217 = "56218",
v56218 = "56219",
v56219 = "56220",
v56220 = "56196",
v56196 = "56213",
v56213 = "56214",
v56214 = "56215",
v56215 = "56216",
v56216 = "56192",
v56192 = "56193",
v56193 = "56194",
v56194 = "56195",
v56195 = "56205",
v56205 = "56206",
v56206 = "56207",
v56207 = "56208",
v56208 = "56209",
v56209 = "56210",
v56210 = "56211",
v56211 = "56212",
v56212 = "56191",
v56191 = "56201",
v56201 = "56202",
v56202 = "56203",
v56203 = "56204",
v56204 = "56190",
v56190 = "56200",
v56200 = "56199",
v56199 = "56198",
v56198 = "56109",
v56109 = "56186",
v56186 = "56187",
v56187 = "56188",
v56188 = "56189",
v56189 = "56221",
v56221 = "56104",
v56104 = "56103",
v56103 = "56102",
v56102 = "56101",
v56101 = "56100",
v56100 = "56106",
v56106 = "56105",
v56105 = "56099",
v56099 = "56098",
v56098 = "56097",
v56097 = "56091",
v56091 = "56093",
v56093 = "56094",
v56094 = "56083",
v56083 = "56084",
v56084 = "56085",
v56085 = "56075",
v56075 = "56076",
v56076 = "56077",
v56077 = "56080",
v56080 = "56082",
v56082 = "56081",
v56081 = "56079",
v56079 = "56078",
v56078 = "55015",
v55015 = "55188",
v55188 = "56071",
v56071 = "56072",
v56072 = "56073",
v56073 = "56074",
v56074 = "56086",
v56086 = "56087",
v56087 = "56088",
v56088 = "56092",
v56092 = "56095",
v56095 = "56096",
v56096 = "55711",
v55711 = "56247",
v56247 = "55708",
v55708 = "55709",
v55709 = "55706",
v55706 = "55707",
v55707 = "56245",
v56245 = "56239",
v56239 = "56238",
v56238 = "56243",
v56243 = "56244",
v56244 = "56241",
v56241 = "56242",
v56242 = "56227",
v56227 = "56230",
v56230 = "56231",
v56231 = "56228",
v56228 = "56229",
v56229 = "56224",
v56224 = "56226",
v56226 = "56240",
v56240 = "55712",
v55712 = "56246",
v56246 = "56232",
v56232 = "56233",
v56233 = "56236",
v56236 = "56237",
v56237 = "56234",
v56234 = "56235",
v56235 = "56225",
v56225 = "56223",
v56223 = "56222",
v56222 = "pt57392",
v55183 = "pt57392",
--Nal'jin Depths
v38090 = "38091",
v38091 = "38092",
v38092 = "38093",
v38093 = "38096",
v38096 = "38095",
v38095 = "38094",
v38094 = "38097",
v38097 = "38099",
v38099 = "38110",
v38110 = "38111",
v38111 = "38107",
v38107 = "38104",
v38104 = "38103",
v38103 = "38100",
v38100 = "38102",
v38102 = "38101",
v38101 = "38105",
v38105 = "38108",
v38108 = "38109",
v38109 = "38112",
v38112 = "38106",
v38106 = "38131",
v38131 = "38124",
v38124 = "38117",
v38117 = "38113",
v38113 = "38116",
v38116 = "38123",
v38123 = "38122",
v38122 = "38115",
v38115 = "38114",
v38114 = "38121",
v38121 = "38129",
v38129 = "38128",
v38128 = "38130",
v38130 = "38135",
v38135 = "38142",
v38142 = "38143",
v38143 = "38136",
v38136 = "38137",
v38137 = "38144",
v38144 = "38149",
v38149 = "38145",
v38145 = "38138",
v38138 = "38139",
v38139 = "38146",
v38146 = "38147",
v38147 = "38140",
v38140 = "38141",
v38141 = "38133",
v38133 = "38134",
v38134 = "38132",
v38132 = "38127",
v38127 = "38120",
v38120 = "38119",
v38119 = "38126",
v38126 = "38125",
v38125 = "38118",
v38118 = "38164",
v38164 = "38158",
v38158 = "38154",
v38154 = "38151",
v38151 = "38155",
v38155 = "38159",
v38159 = "38166",
v38166 = "38173",
v38173 = "38180",
v38180 = "38184",
v38184 = "38188",
v38188 = "38190",
v38190 = "38187",
v38187 = "38183",
v38183 = "38179",
v38179 = "38172",
v38172 = "38165",
v38165 = "38171",
v38171 = "38178",
v38178 = "38177",
v38177 = "38170",
v38170 = "38163",
v38163 = "38162",
v38162 = "38169",
v38169 = "38176",
v38176 = "38182",
v38182 = "38175",
v38175 = "38168",
v38168 = "38161",
v38161 = "38157",
v38157 = "38153",
v38153 = "38150",
v38150 = "38152",
v38152 = "38156",
v38156 = "38160",
v38160 = "38167",
v38167 = "38174",
v38174 = "38181",
v38181 = "38185",
v38185 = "38189",
v38189 = "38186",
v38186 = "pt56107",
}
else


check = {
--Caverns of Mor
v19344 = "19346",
v19346 = "19351",
v19351 = "19352",
v19352 = "19353",
v19353 = "19354",
v19354 = "19355",
v19355 = "19356",
v19356 = "19357",
v19357 = "19358",
v19358 = "19360",
v19360 = "19359",
v19359 = "19361",
v19361 = "19362",
v19362 = "19363",
v19363 = "19364",
v19364 = "19365",
v19365 = "19417",
v19417 = "19416",
v19416 = "19415",
v19415 = "19413",
v19413 = "19414",
v19414 = "19418",
v19418 = "19419",
v19419 = "19424",
v19424 = "19425",
v19425 = "19426",
v19426 = "19427",
v19427 = "19420",
v19420 = "19421",
v19421 = "19423",
v19423 = "19429",
v19429 = "19430",
v19430 = "19431",
v19431 = "19432",
v19432 = "19433",
v19433 = "19434",
v19434 = "19435",
v19435 = "19436",
v19436 = "19437",
v19437 = "19438",
v19438 = "19439",
v19439 = "19440",
v19440 = "19441",
v19441 = "19442",
v19442 = "19506",
v19506 = "19507",
v19507 = "19508",
v19508 = "19509",
v19509 = "19510",  -- need to add "open door sw" in the gmpc_room for here, just in case it's closed
v19510 = "19511",  -- need to add "open door nw" in the gmpc_room for here, just in case it's closed
v19511 = "19512",
v19512 = "19514",
v19514 = "19513",
v19513 = "19515",
v19515 = "19516",
v19516 = "19517",
v19517 = "19518",
v19518 = "19519",
v19519 = "pt56942",

--a snake pit
v56942 = "56790",
v56790 = "56793",
v56793 = "56795",
v56795 = "57174",
v57174 = "57176",
v57176 = "57177",
v57177 = "57178",
v57178 = "57179",
v57179 = "57180",
v57180 = "57181",
v57181 = "57182",
v57182 = "57183",
v57183 = "57184",
v57184 = "57175",
v57175 = "57185",
v57185 = "57186",
v57186 = "57187",
v57187 = "57188",
v57188 = "57246",
v57246 = "57247",
v57247 = "57252",
v57252 = "57253",
v57253 = "57244",
v57244 = "57245",
v57245 = "57251",
v57251 = "57248",
v57248 = "57249",
v57249 = "57250",
v57250 = "57243",
v57243 = "57052",
v57052 = "57049",
v57049 = "57050",
v57050 = "57051",
v57051 = "56796",
v56796 = "56797",
v56797 = "56808",
v56808 = "57042",
v57042 = "57043",
v57043 = "57044",
v57044 = "57045",
v57045 = "57046",
v57046 = "57047",
v57047 = "57048",
v57048 = "56807",
v56807 = "56794",
v56794 = "56792",
v56792 = "56791",
v56791 = "57242",
v57242 = "56786",
v56786 = "pt62102",

--Saliltul Swamp

v62102 = "59254",
v59254 = "59257",
v59257 = "61882",
v61882 = "61883",
v61883 = "61884",
v61884 = "61885",
v61885 = "61886",
v61886 = "61878",
v61878 = "61879",
v61879 = "61880",
v61880 = "61881",
v61881 = "61877",
v61877 = "61848",
v61848 = "59256",
v59256 = "61901",
v61901 = "61902",
v61902 = "61903",
v61903 = "61904",
v61904 = "61905",
v61905 = "61906",
v61906 = "61924",
v61924 = "61925",
v61925 = "61927",
v61927 = "62097",
v62097 = "62548",
v62548 = "61900",
v61900 = "61899",
v61899 = "59255",
v59255 = "61887",
v61887 = "61890",
v61890 = "61891",
v61891 = "61892",
v61892 = "61893",
v61893 = "61894",
v61894 = "pt60845",

--Sparklight
v60845 = "60846",
v60846 = "60847",
v60847 = "60848",
v60848 = "60844",
v60844 = "60855",
v60855 = "60854",
v60854 = "60849",
v60849 = "60851",
v60851 = "60850",
v60850 = "60853",
v60853 = "60852",
v60852 = "60856",
v60856 = "60857",
v60857 = "60858",
v60858 = "60909",
v60909 = "60910",
v60910 = "60911",
v60911 = "60912",
v60912 = "60913",
v60913 = "60914",
v60914 = "60859",
v60859 = "60860",
v60860 = "60904",
v60904 = "60905",
v60905 = "60906",
v60906 = "60907",
v60907 = "60908",
v60908 = "60915",
v60915 = "60916",
v60916 = "60920",
v60920 = "60921",
v60921 = "60922",
v60922 = "60923",
v60923 = "60924",
v60924 = "60925",
v60925 = "60926",
v60926 = "60927",
v60927 = "60928",
v60928 = "60929",
v60929 = "pt21001",


--Maghuir Fissure
v21001 = "21168",
v21168 = "21169",
v21169 = "21170",
v21170 = "21171",
v21171 = "21172",
v21172 = "21173",
v21173 = "21174",
v21174 = "21175",
v21175 = "21176",
v21176 = "21177",
v21177 = "21178",
v21178 = "21179",
v21179 = "21180",
v21180 = "21181",
v21181 = "21182",
v21182 = "21183",
v21183 = "21184",
v21184 = "21185",
v21185 = "21186",
v21186 = "21187",
v21187 = "21188",
v21188 = "21189",
v21189 = "21190",
v21190 = "21191",
v21191 = "21192",
v21192 = "21193",
v21193 = "21194",
v21194 = "21195",
v21195 = "21196",
v21196 = "21197",
v21197 = "21198",
v21198 = "21199",
v21199 = "21200",
v21200 = "21201",
v21201 = "21202",
v21202 = "21203",
v21203 = "21204",
v21204 = "21205",
v21205 = "21206",
v21206 = "21210",
v21210 = "21211",
v21211 = "21209",
v21209 = "21208",
v21208 = "21207",
v21207 = "21212",
v21212 = "21213",
v21213 = "21214",
v21214 = "21215",
v21215 = "21216",
v21216 = "21217",
v21217 = "21218",
v21218 = "21219",
v21219 = "21220",
v21220 = "21221",
v21221 = "21222",
v21222 = "pt19810",

--Kalydian Forest
v19810 = "19811",
v19811 = "19813",
v19813 = "19812",
v19812 = "19869",
v19869 = "19870",
v19870 = "19871",
v19871 = "19875",
v19875 = "19874",
v19874 = "19873",
v19873 = "19893",
v19893 = "19896",
v19896 = "19894",
v19894 = "19895",
v19895 = "19909",
v19909 = "19910",
v19910 = "19897",
v19897 = "19901",
v19901 = "19903",
v19903 = "19902",
v19902 = "19900",
v19900 = "19881",
v19881 = "19899",
v19899 = "19898",
v19898 = "19876",
v19876 = "19872",
v19872 = "19855",
v19855 = "19877",
v19877 = "19882",
v19882 = "19886",
v19886 = "19890",
v19890 = "19887",
v19887 = "19888",
v19888 = "19891",
v19891 = "19889",
v19889 = "19884",
v19884 = "19885",
v19885 = "19879",
v19879 = "19883",
v19883 = "19878",
v19878 = "pt19999",

--Ayhesa Cliffs
v19999 = "20000",
v20000 = "20001",
v20001 = "20002",
v20002 = "20003",
v20003 = "20004",
v20004 = "20005",
v20005 = "20006",
v20006 = "20007",
v20007 = "20008",
v20008 = "20009",
v20009 = "20010",
v20010 = "20011",
v20011 = "20012",
v20012 = "20013",
v20013 = "20014",
v20014 = "20015",
v20015 = "20016",
v20016 = "20018",
v20018 = "20019",
v20019 = "20020",
v20020 = "20021",
v20021 = "20022",
v20022 = "20023",
v20023 = "20024",
v20024 = "20025",
v20025 = "20026",
v20026 = "20027",
v20027 = "20028",
v20028 = "20029",
v20029 = "20030",
v20030 = "20031",
v20031 = "20032",
v20032 = "pt62996",

--Fractal Bloom
v62996 = "63002",
v63002 = "63003",
v63003 = "63004",
v63004 = "63009",
v63009 = "63026",
v63026 = "63027",
v63027 = "63028",
v63028 = "63029",
v63029 = "63030",
v63030 = "63035",
v63035 = "63036",
v63036 = "63037",
v63037 = "63038",
v63038 = "63039",
v63039 = "pt20281",

--Three Rock Outpost
v20281 = "20282",
v20282 = "20284",
v20284 = "20285",
v20285 = "20286",
v20286 = "20287",
v20287 = "20288",
v20288 = "20289",
v20289 = "20290",
v20290 = "20291",
v20291 = "20292",
v20292 = "20293",
v20293 = "20294",
v20294 = "20295",
v20295 = "20296",
v20296 = "20297",
v20297 = "20298",
v20298 = "20299",
v20299 = "20300",
v20300 = "20310",
v20310 = "20311",
v20311 = "20312",
v20312 = "20309",
v20309 = "20301",
v20301 = "20318",
v20318 = "20317",
v20317 = "20316",
v20316 = "20315",
v20315 = "20314",
v20314 = "20313",
v20313 = "20319",
v20319 = "20320",
v20320 = "20321",
v20321 = "20322",
v20322 = "20323",
v20323 = "20324",
v20324 = "20325",
v20325 = "20327",
v20327 = "20328",
v20328 = "20353",
v20353 = "20329",
v20329 = "20331",
v20331 = "20333",
v20333 = "20334",
v20334 = "20335",
v20335 = "20336",
v20336 = "20337",
v20337 = "20339",
v20339 = "20340",
v20340 = "20342",
v20342 = "20343",
v20343 = "20344",
v20344 = "20345",
v20345 = "20346",
v20346 = "20347",
v20347 = "20348",
v20348 = "20349",
v20349 = "48414",
v48414 = "48415",
v48415 = "48416",
v48416 = "48413",
v48413 = "48417",
v48417 = "48418",
v48418 = "48419",
v48419 = "pt23113",


--Augerweald
v23113 = "23750",
v23750 = "23751",
v23751 = "23778",
v23778 = "23779",
v23779 = "23777",
v23777 = "23780",
v23780 = "23781",
v23781 = "23782",
v23782 = "23796",
v23796 = "23784",
v23784 = "23785",
v23785 = "23786",
v23786 = "23787",
v23787 = "23913",
v23913 = "23914",
v23914 = "23915",
v23915 = "23916",
v23916 = "23922",
v23922 = "24338",
v24338 = "24339",
v24339 = "24340",
v24340 = "24341",
v24341 = "23912",
v23912 = "23790",
v23790 = "23791",
v23791 = "23792",
v23792 = "23797",
v23797 = "23789",
v23789 = "23788",
v23788 = "23923",
v23923 = "23924",
v23924 = "23936",
v23936 = "23937",
v23937 = "23938",
v23938 = "23798",
v23798 = "23804",
v23804 = "23795",
v23795 = "23925",
v23925 = "23926",
v23926 = "23927",
v23927 = "23928",
v23928 = "23929",
v23929 = "23930",
v23930 = "23931",
v23931 = "23932",
v23932 = "23933",
v23933 = "23934",
v23934 = "23935",
v23935 = "23064",
v23064 = "23063",
v23063 = "23062",
v23062 = "23061",
v23061 = "23060",
v23060 = "23052",
v23052 = "23051",
v23051 = "23050",
v23050 = "23049",
v23049 = "23048",
v23048 = "23065",
v23065 = "23107",
v23107 = "23108",
v23108 = "23109",
v23109 = "23110",
v23110 = "23907",
v23907 = "23908",
v23908 = "23909",
v23909 = "23910",
v23910 = "23911",
v23911 = "pt20855",

--Mamashi Tunnels
v20855 = "20856",
v20856 = "20857",
v20857 = "20858",
v20858 = "20859",
v20859 = "20861",
v20861 = "20862",
v20862 = "20863",
v20863 = "20866",
v20866 = "20864",
v20864 = "20865",
v20865 = "20860",
v20860 = "20867",
v20867 = "20868",
v20868 = "20869",
v20869 = "20871",
v20871 = "20870",
v20870 = "20877",
v20877 = "20878",
v20878 = "20879",
v20879 = "20876",
v20876 = "20875",
v20875 = "20874",
v20874 = "20901",
v20901 = "20900",
v20900 = "20899",
v20899 = "20898",
v20898 = "20909",
v20909 = "20908",
v20908 = "20907",
v20907 = "20906",
v20906 = "20905",
v20905 = "20904",
v20904 = "20902",
v20902 = "20903",
v20903 = "20912",
v20912 = "20913",
v20913 = "20916",
v20916 = "20917",
v20917 = "20918",
v20918 = "20919",
v20919 = "20920",
v20920 = "20921",
v20921 = "pt19626",

--Isle of Ollin
v19626 = "19624",
v19624 = "19598",
v19598 = "19594",
v19594 = "19625",
v19625 = "20270",
v20270 = "20269",
v20269 = "20268",
v20268 = "20267",
v20267 = "20272",
v20272 = "20273",
v20273 = "20274",
v20274 = "20275",
v20275 = "20220",
v20220 = "20221",
v20221 = "20223",
v20223 = "20224",
v20224 = "20222",
v20222 = "20233",
v20233 = "20234",
v20234 = "20235",
v20235 = "20236",
v20236 = "20237",
v20237 = "20251",
v20251 = "20252",
v20252 = "20226",
v20226 = "20253",
v20253 = "20254",
v20254 = "20242",
v20242 = "20238",
v20238 = "20241",
v20241 = "20240",
v20240 = "20239",
v20239 = "20248",
v20248 = "20243",
v20243 = "20247",
v20247 = "20249",
v20249 = "20246",
v20246 = "20245",
v20245 = "20244",
v20244 = "20250",
v20250 = "20218",
v20218 = "20219",
v20219 = "20217",
v20217 = "20214",
v20214 = "19521",
v19521 = "19520",
v19520 = "19523",
v19523 = "19525",
v19525 = "20227",
v20227 = "20228",
v20228 = "20229",
v20229 = "20230",
v20230 = "20231",
v20231 = "20232",
v20232 = "19526",
v19526 = "19524",
v19524 = "19593",
v19593 = "19595",
v19595 = "19597",
v19597 = "19627",
v19627 = "20255",
v20255 = "20256",
v20256 = "20257",
v20257 = "20259",
v20259 = "20258",
v20258 = "20260",
v20260 = "20261",
v20261 = "20263",
v20263 = "20262",
v20262 = "20264",
v20264 = "20265",
v20265 = "20266",
v20266 = "pt23202",

--the Torturers' Caverns
v23202 = "23203",
v23203 = "23204",
v23204 = "23205",
v23205 = "23206",
v23206 = "23207",
v23207 = "23208",
v23208 = "23209",
v23209 = "23210",
v23210 = "23211",
v23211 = "23212",
v23212 = "23213",
v23213 = "23214",
v23214 = "23215",
v23215 = "23216",
v23216 = "23217",
v23217 = "23218",
v23218 = "23219",
v23219 = "23220",
v23220 = "23221",
v23221 = "23222",
v23222 = "23223",
v23223 = "23224",
v23224 = "23225",
v23225 = "23226",
v23226 = "23227",
v23227 = "23228",
v23228 = "23229",
v23229 = "23230",
v23230 = "23231",
v23231 = "23232",
v23232 = "23233",
v23233 = "23234",
v23234 = "23235",
v23235 = "23236",
v23236 = "23237",
v23237 = "23238",
v23238 = "23257",
v23257 = "23256",
v23256 = "23255",
v23255 = "23254",
v23254 = "23253",
v23253 = "23243",
v23243 = "23244",
v23244 = "23245",
v23245 = "23246",
v23246 = "23247",
v23247 = "23248",
v23248 = "23249",
v23249 = "23250",
v23250 = "23251",
v23251 = "23252",
v23252 = "23242",
v23242 = "23241",
v23241 = "23240",
v23240 = "23239",
v23239 = "23265",
v23265 = "23266",
v23266 = "23267",
v23267 = "23268",
v23268 = "23269",
v23269 = "23270",
v23270 = "23271",
v23271 = "23272",
v23272 = "23279",
v23279 = "23280",
v23280 = "23273",
v23273 = "23284",
v23284 = "23283",
v23283 = "23282",
v23282 = "23274",
v23274 = "23281",
v23281 = "23275",
v23275 = "23276",
v23276 = "23277",
v23277 = "23285",
v23285 = "23278",
v23278 = "23286",
v23286 = "23287",
v23287 = "23288",
v23288 = "23289",
v23289 = "23291",
v23291 = "23290",
v23290 = "23292",
v23292 = "23293",
v23293 = "23294",
v23294 = "23295",
v23295 = "23296",
v23296 = "23297",
v23297 = "23298",
v23298 = "23300",
v23300 = "23301",
v23301 = "23302",
v23302 = "23303",
v23303 = "23304",
v23304 = "23305",
v23305 = "23306",
v23306 = "23307",
v23307 = "23308",
v23308 = "23309",
v23309 = "23310",
v23310 = "23311",
v23311 = "23312",
v23312 = "23313",
v23313 = "23314",
v23314 = "23315",
v23315 = "23316",
v23316 = "23317",
v23317 = "23318",
v23318 = "23319",
v23319 = "23321",
v23321 = "23322",
v23322 = "pt22866",

--the Lich Gardens
v22866 = "22867",
v22867 = "22868",
v22868 = "22869",
v22869 = "22870",
v22870 = "22871",
v22871 = "22872",
v22872 = "22873",
v22873 = "22874",
v22874 = "22875",
v22875 = "22876",
v22876 = "22877",
v22877 = "22878",
v22878 = "22879",
v22879 = "22880",
v22880 = "22881",
v22881 = "22882",
v22882 = "22884",
v22884 = "22885",
v22885 = "22886",
v22886 = "22911",
v22911 = "22912",
v22912 = "22913",
v22913 = "22914",
v22914 = "22915",
v22915 = "22916",
v22916 = "22917",
v22917 = "22918",
v22918 = "22919",
v22919 = "22920",
v22920 = "22921",
v22921 = "22922",
v22922 = "22923",
v22923 = "22924",
v22924 = "22925",
v22925 = "22890",
v22890 = "22891",
v22891 = "22892",
v22892 = "22893",
v22893 = "22894",
v22894 = "22895",
v22895 = "22896",
v22896 = "22897",
v22897 = "22898",
v22898 = "22899",
v22899 = "22900",
v22900 = "22901",
v22901 = "22902",
v22902 = "22903",
v22903 = "22904",
v22904 = "22905",
v22905 = "22906",
v22906 = "22907",
v22907 = "22908",
v22908 = "22909",
v22909 = "22910",
v22910 = "22883",
v22883 = "pt19854",

--Drakuum
v19854 = "20076",
v20076 = "20077",
v20077 = "20078",
v20078 = "20079",
v20079 = "20086",
v20086 = "20087",
v20087 = "20088",
v20088 = "20089",
v20089 = "20083",
v20083 = "20084",
v20084 = "20085",
v20085 = "20080",
v20080 = "20081",
v20081 = "20082",
v20082 = "20090",
v20090 = "20091",
v20091 = "20092",
v20092 = "20093",
v20093 = "20094",
v20094 = "20095",
v20095 = "20096",
v20096 = "20097",
v20097 = "20098",
v20098 = "20099",
v20099 = "20100",
v20100 = "20101",
v20101 = "20102",
v20102 = "20103",
v20103 = "20104",
v20104 = "20105",
v20105 = "20106",
v20106 = "20107",
v20107 = "20108",
v20108 = "20109",
v20109 = "20110",
v20110 = "20111",
v20111 = "20112",
v20112 = "20113",
v20113 = "20114",
v20114 = "20115",
v20115 = "20116",
v20116 = "20117",
v20117 = "20118",
v20118 = "20119",
v20119 = "20120",
v20120 = "20121",
v20121 = "20122",
v20122 = "20123",
v20123 = "20124",
v20124 = "20125",
v20125 = "20126",
v20126 = "20127",
v20127 = "20128",
v20128 = "20129",
v20129 = "20130",
v20130 = "20131",
v20131 = "20132",
v20132 = "20133",
v20133 = "20134",
v20134 = "20135",
v20135 = "20136",
v20136 = "20137",
v20137 = "20138",
v20138 = "20139",
v20139 = "20140",
v20140 = "20141",
v20141 = "20142",
v20142 = "20143",
v20143 = "20144",
v20144 = "20145",
v20145 = "20146",
v20146 = "20147",
v20147 = "20148",
v20148 = "20149",
v20149 = "20150",
v20150 = "20151",
v20151 = "20152",
v20152 = "pt55276",

--Teshen Caldera
v55276 = "55277",
v55277 = "55287",
v55287 = "55289",
v55289 = "55290",
v55290 = "55291",
v55291 = "55288",
v55288 = "55281",
v55281 = "55285",
v55285 = "55286",
v55286 = "55278",
v55278 = "55279",
v55279 = "55280",
v55280 = "55292",
v55292= "55294",
v55294= "55316",
v55316= "55315",
v55315= "55317",
v55317= "55318",
v55318= "55319",
v55319= "55326",
v55326= "55320",
v55320= "55321",
v55321= "55322",
v55322= "55323",
v55323= "55324",
v55324= "55325",
v55325= "55293",
v55293= "55327",
v55327= "55330",
v55330= "55341",
v55341= "55342",
v55342= "55343",
v55343= "55344",
v55344= "55328",
v55328= "55336",
v55336= "55331",
v55331= "55329",
v55329= "55337",
v55337= "55335",
v55335= "55338",
v55338= "55332",
v55332= "55340",
v55340= "55333",
v55333= "55334",
v55334= "55339",
v55339= "53178",
v53178= "53179",
v53179= "53180",
v53180= "53883",
v53883= "54203",
v54203= "54204",
v54204= "54205",
v54205= "54206",
v54206= "53181",
v53181= "53241",
v53241= "55356",
v55356= "55357",
v55357= "55358",
v55358= "55359",
v55359= "55360",
v55360= "55361",
v55361= "55362",
v55362= "55363",
v55363= "55364",
v55364= "55365",
v55365= "55366",
v55366= "55367",
v55367= "55368",
v55368= "55369",
v55369= "55370",
v55370= "54207",
v54207= "54209",
v54209= "54242",
v54242= "54243",
v54243= "54256",
v54256= "54257",
v54257= "54259",
v54259= "54260",
v54260= "54261",
v54261= "54244",
v54244= "54262",
v54262= "54270",
v54270= "54249",
v54249= "54271",
v54271= "54250",
v54250= "54253",
v54253= "54252",
v54252= "54251",
v54251= "54394",
v54394= "54395",
v54395= "54396",
v54396= "54397",
v54397= "54398",
v54398= "54399",
v54399= "54400",
v54400= "ptcity",
}
end

return check

end</script>
							<eventHandlerList />
						</Script>
					</ScriptGroup>
					<Script isActive="yes" isFolder="no">
						<name>bashing variables</name>
						<packageName></packageName>
						<script>
snd.bashing_loaded = true

snd.room_clear = false

snd.bashing = {
target = "none",
target_type = "long",
target_word = "",
target_number = "",
target_desc = "",
corpse_word = "",
corpse_number = "",
corpse_desc = "",
target_priority = 10000,
engaged = false,
targeted = false,
stopping = false
}

snd.area_found = false
snd.possible_targets = {}
snd.possible_items = {}
snd.corpses = {}
snd.gathering = {}
snd.have_items = false
snd.need_loot = false
snd.vermin = 0</script>
						<eventHandlerList />
					</Script>
					<Script isActive="yes" isFolder="no">
						<name>table</name>
						<packageName></packageName>
						<script>
snd.areas = {
{area = "the City of Enorian", level = "globe", targets = {"a massive elemental"}},
{area = "the Kingdom of New Sehal", level = "newbie", targets = {"a soulless pixie", "a stern Imp warrior", "a boisterous Imp boy", "a charming Imp girl", "a fluffy white sheep", "a fuzzy grey rabbit"}, items = {}},
{area = "the Valley of Lodi", level = "newbie", targets = {"a cave bat", "a sheep", "a white hen", "a juvenile wildcat", "an adult wildcat"}, items = {}},
{area = "the Village of Gorshire", level = "newbie", targets = {"a guard pig", "a portly gnome sentry", "a gnome man", "a gnome woman", "a little gnome boy", "a gnome sentry", "a little gnome girl", "a skinny gnome sentry", "a deputy constable", "a lithe weasel", "a large grey goose", "a large gray goose"}, items = {}},
{area = "the Tarean Caverns", level = "Newbie", targets = {"a small, black bat", "an unkempt Trog", "a chubby Trog woman", "a rambunctious young Trog", "a hulking Trog man", "a rotting rattlesnake", "an irritable, rabid zebra", "a blood-spattered leopard", "a frothing, manic buffalo", "a gigantic cave bear"}, items = {"a jagged stone shard"}},
{area = "the Crags", level = "Newbie", targets = {"a light grey stone worm", "a dark grey stone worm", "an infant-like cragling", "a steady cragling", "a vile snatcher", "a hulking snatcher"}, items = {"a dull, irregular gem"}},
{area = "the village of Rahveir", level = "Newbie", targets = {"a disgustingly warped missionary", "a malevolent poltergeist", "a corrupted spirit"}, items = {"a strange black sphere"}},
{area = "Forsaken Evlasu", level = "Newbie", targets = {"an unnaturally lithe, shadowy aberration", "a hideous winged aberration", "a grotesque, warped aberration", "a corrupted cultist"}, items = {"a cluster of pure white starflower", "a corrupted aberration's feather", "a blighted branch", "a minute, corrupted totem"}},
{area = "Yohanan Village", level = "Newbie", targets = {"a fleshless skeleton", "a female villager", "a villager", "an old guard", "a small girl", "a young village guard", "a mangy rat", "a cave bat"}, items = {}},
{area = "Difohr Passage", level = "Quest", targets = {"a skittering onyx eld"}},
{area = "Myesian Run", level = "Quest", targets = {"a skittering verdant eld"}},
{area = "Cinderbreach Mine", level = "Quest", targets = {"a fiery crimson fragmented eld", "a shattered eld monstrosity", "a skittering crimson eld"}, items = {}},
{area = "Radial Dig Shaft #15", level = "Quest", targets = {"a shattered eld monstrosity", "an icy azure fragmented eld", "a skittering azure eld"}, items = {}},
{area = "the Dungeon of the Beastlords", level = "15-30", targets = {"Viskein, Cerberus Master", "a bat-winged stirge", "a mysterious cloaked figure", "a bestial, two-headed canine"}, items = {}},
{area = "the Centipede Cave", level = "25-35", targets = {"a large centipede", "a skittering centipede", "a chitinous centipede", "a venomous centipede", "a juvenile centipede", "a massive centipede queen"}, items = {}},
{area = "Riparium", level = "25-50", targets = {"a large red crab", "a moray eel", "a mantaglow fish", "a large, deepwater salmon", "an angler fish"}, items = {}},
{area = "the Siroccian Mountains", level = "30+", targets = {"a vicious wolverine", "a powerful wolverine"}},
{area = "the Festering Wastes", level = "30-40", targets = {"a darkly patterned sand viper", "a gray, spotted bobcat", "a ragged brown coyote", "a tiny black scorpion", "a deep green lizard", "a shivering jackrabbit", "a small yellow rattlesnake"}, items = {}},
{area = "Halls of Tornos", level = "30-40", targets = {"a speckled tinyok", "a snowy armadilleon", "a malformed beast", "a botched phase-hound", "a rabid blood-fiend", "a crazed blood-fiend", "a mutated blood-fiend"}},
{area = "Rebels' Ridge", level = "30-40", targets = {"a tenacious tough", "a rebellious rancher", "a former farmer", "a naive neo-Ankyrean", "a seditious scholar", "a dingy dog", "a gamey goat", "a chittering chicken"}, items = {}},
{area = "Scidve", level = "30-45", targets = {"a large gray and black dugger", "a rock devil", "a Drakt guard"}},
{area = "the Central Wilderness", level = "35-50", targets = {"a gnat", "a mottled green bullfrog", "a dragonfly"}},
{area = "Mount Humgurd", level = "40+", targets = {"a black-spotted cow"}},
{area = "the Western Itzatl Rainforest", level = "40-50", targets = {"a menacing black rojalli", "a white stone oyster"}, items = {"a glistening iridescent pearl", "a beautiful rough sapphire"}},
{area = "the Azdun dungeon", level = "40-50", targets = {"a huge pulsating spider", "medium pulsating spider", "a large pulsating spider"}},
{area = "the Dolbodi Campsite", level = "45-60", targets = {"a brawny hunter", "a slender forager", "a burly lumberjack", "a grizzly foreman", "a lithe buckawn"}, items = {}},
{area = "Dun Fortress", level = "45-60", targets = {"an orc guard", "a demonic screamer", "a serpentine blademistress", "a slime-encrusted spitter", "a dangerous water snake", "a large catfish"}, items = {}},
{area = "a snake pit", level = "50-60", targets = {"a venenigol snake", "an andragil snake", "a tiny hatchling", "a large sertag snake", "a grassel snake","a muselon snake",}},
{area = "Alaqsii Inlet", level = "50-60", targets = {"an arctic wolf", "a small, ruddy turnstone", "a rotund, white ptarmigan", "a white-collared lemming", "a white gyrfalcon"}},
{area = "the Ruins of Farsai", level = "50-60", targets = {"an unctuous creepling", "a shadowdrop", "a darkling"}},
{area = "Asper", level = "50-60", targets = {"a fearsome icewyrm", "a malevolent spectre", "a failed experiment", "an animated golem of flesh", "a wild bobcat", "a snowshoe hare"}, items = {}},
{area = "the Khauskin Mines", level = "50-60", targets = {"a soft-shelled klikkin", "a grotesque fangtooth"}, items = {}},
{area = "City of Djeir", level = "50+", targets = {"a gargantuan spider"}},
{area = "the Three Rock Outpost", level = "60+", targets = {"a huge, scarred wildcat","a beautiful wild horse","a mountain wildcat",  "a wildcat kitten", "a long-haired buffalo", "an enormous Troll bandit","a shifty bandit", "the cave bear, White Ghost"}},
{area = "the village of Bihrkaen", level = "60-80", targets = {"a grotesque snapping turtle", "a mire hound", "a bog hound", "a mire pup", "an alpha female hound", "a slender mud adder", "a speckled, brown turtle", "an alpha male hound"}},
{area = "the Augerweald", level = "65-80", targets = {"an agitated direwolf"}},
{area = "the Fractal Bloom", level = "65+", targets = {"a towering crystalline entity", "a slender crystalline entity", "a radiant crystalline entity", "a squat crystalline entity", "a fractured crystalline entity", "a faceted crystalline entity"}}, 
{area = "the Kalydian Forest", level = "65+", targets = {"a gaunt elk",  "a rabid rabbit", "a ravenous squirrel"}},
{area = "the Maghuir Fissure", level = "65+", targets = {"an amorphous black umbra","a darkly robed priest"}},
{area = "the Torturers' Caverns", level = "70-80", targets = {"Mellias, an elegant Tsol'aa consanguine", "Tuera, the torturer", "Sentinel Rozhirr", "a rank ghoul", "a vampiric overseer", "a maggot-ridden skeleton", "a flesh golem sentry", "a vile inquisitor", "a hulking ghast", "a scheming terramancer"}},
{area = "the Caverns of Mor", level = "70-85", targets = {"a ravenous, shadowy ghast", "a robed, skeletal lich", "a stench-ridden ghoul", "a skeletal warrior", "a vampiric warrior", "a vampiric sentry"}, items = {}},
{area = "the Sparklight Rift", level = "75+", targets = {"an oversized efreeti","a churning fire elemental","a fire elemental minion","a greater fire elemental","a colossal elemental"}},
{area = "the Mamashi Tunnels", level = "75+", targets = {"a greater nalas", "a young nalas", "a mature nalas","a Mit'olk bladesman", "a Mit'olk axeman", "a Mit'olk illusionist"}},
{area = "the Lich Gardens", level = "75-90", targets = {"a dissected child", "a commanding lich scientist", "a dark Cabalist scholar", "a monstrous Carnifex guard", "a mindless experiment", "a guardian wraith", "a tattered Bahkatu experiment", "a student of the lich"}, items = {}},
{area = "the Isle of Ollin", level = "80-90", targets = {"a ferocious Alpha Syll","a giant, rabid Syll", "a massive, verdant-furred Syll", "a young Syll cub", "a blackened, ravenous shark", "a massive black crab", "a dark-furred, rabid boar", "a towering Nazetu guard", "a stinking Nazetu soldier", "a rotting Nazetu ghoul", "a Nazetu comfort woman", "a boisterous Nazetu child", "a sharp-clawed Boru prowler", "a fiendish, tainted Syll", "a diligent Boru harvester"}, items = {}},
{area = "the Itzatl Morass", level = "80-90", targets = {"an oversized fly", "an oversized earthworm", "a capybara", "a poisonous water moccasin", "a green slime toad", "a silent reed cat", "a vicious snapping turtle", "a long-toothed beaver"}},
{area = "Saliltul Swamp", level = "80-90", targets = {"a rabid direwolf", "a mutilated humanoid", "a red-eyed water snake"}},
{area = "the Iernian Fracture", level = "80+", targets = {"an unstable white eld", "a colossal crystalline eld", "a churning, unstable eld", "an enormous, three-cored eld", "an effulgent platinum eld", "a discordant, buzzing eld", "a cacophonous cluster of eld", "a shrieking mass of eld", "a flickering green eld", "a coruscating swarm of eld"}},{area = "Drakuum", level = "70+", targets = {"a savage shade", "a blackened darkwalker", "a hideous lich",  "a misty apparition","a gnarled spirit"}}, 
{area = "the Ia'shal Barrow", level = "85+", targets = { "a foul spiderling", "a ravenous cave spider", "a bulbous cave spider", "an egg-laden spider"}},
{area = "Arbothia", level = "85-95", targets = {"an enraged female servant", "an enraged male servant", "an enraged female villager", "an enraged male villager"}},
{area = "the Eresh Mines", level = "85-95", targets = {"an angry vampire bat", "a blind wolf spider", "a swarm of black beetles"}, items = {}},
--{area = "the Eresh Mines", level = "85-95", targets = {"a blind wolf spider"}, items = {}},
{area = "the Fengard Keep", level = "85-95", targets = {"a massive argobole", "a fiery phenkyre", "an ogre berserker", "a horrid basilwyrm", "a shrieking grimshrill", "a vicious horned garwhol", "a brawny glaive knight", "a tall chempala", "a radiant lumore", "a pious invoker", "a pungent lichosphere"}, items = {}},
{area = "the Ayhesa Cliffs", level = "90-100", targets = {"a Spellshaper Archon", "a Spellshaper Master", "a Spellshaper Adept"}, items = {"a flat metal disc"}},
{area = "Yuzurai village", level = "90-100", targets = {"a massive rojalli matriarch", "a sleek black rojalli", "a savage rojalli"}},
{area = "Dramedo Warrens", level = "90-100", targets = {"a vast ochre ooze", "a winged fungal horror","a shambling fungal abomination", "a gigantic fungal strider","a cloud of fungal spores"}}, 
{area = "the Isle of Despair", level = "90-100", targets = {"a darkened soul", "a severed male head"}},
{area = "the Shattered Vortex (Low Level)", level = "90-100", targets = {"a chimera", "a pathfinder", "a sharp-toothed gremlin", "a minion of chaos", "a chaos orb", "a bloodleech", "a bubonis", "a humbug", "a chaos hound", "a green slime", "an ethereal firelord", "a simpering Sycophant", "a soulmaster", "a dervish", "a withered crone"}, items = {}},
{area = "the Shattered Vortex (Shadow)", level = "90-100", targets = {"a chimera", "a pathfinder", "a sharp-toothed gremlin", "a minion of chaos", "a chaos orb", "a bloodleech", "a bubonis", "a humbug", "a chaos hound", "a green slime", "an ethereal firelord", "a simpering Sycophant", "a soulmaster", "a dervish", "a withered crone", "a chaos storm", "a warped turtle", "a warrior of the Demonsbane", "a reinforcement warrior of the demonsbane", "a fetish-decorated shaman", "a guardian angel", "a nimble sentinel", "a stalwart templar", "an agile Sentaari monk", "a battle-worn Ascendril", "an Ascendril mage"}, items = {"a finger", "a chunk grey stone", "a chunk of obsidian glass", "a chunk of green and blue stone", "a broken shard of ruby"}},
{area = "the Shattered Vortex (Spirit)", level = "90-100", targets = {"a chaos worm", "a chimera", "a pathfinder", "a sharp-toothed gremlin", "a minion of chaos", "a chaos orb", "a bloodleech", "a bubonis", "a humbug", "a chaos hound", "a green slime", "an ethereal firelord", "a simpering Sycophant", "a soulmaster", "a dervish", "a withered crone", "a chaos storm", "a Sciomancer mage", "a warped indorani", "a strained indorani", "a crazed indorani", "a reinforcement warrior of the aztob", "a warped turtle", "a petrified treant", "a piece of an amalgamation"}, items = {"a finger", "a chunk grey stone", "a chunk of obsidian glass", "a chunk of green and blue stone", "a broken shard of ruby"}},
{area = "Tiyen Esityi", level = "95+", targets = {"Commander Marakhi", "Tirahl the Necromancer", "Lieutenant Gharvoi", "a ball of chitinous legs", "insubstantial whispers", "Quartermaster Kuius", "Lieutenant Chiakhi", "a crazed Nazetu cutter", "a mutated Nazetu intercessor", "a Nazetu cook", "a Nazetu halberdier", "a Nazetu provost", "a deformed Nazetu priest", "a Nazetu crossbowman", "a bound shade", "a Nazetu corrupter", "a Nazetu necromancer", "a supply officer", "a victimised intruder"}},
{area = "the Nal'jin Depths", level = "95+", targets = {"an enormous spinelash fish", "a sinewy Nal'jin eel", "a shadow ray", "a serpentine jawsnapper"}},
{area = "the Forgotten Dome", level = "95+", targets = {"a gibbering kelki reaver", "a deformed kelki ravener", "a mutated kelki ravager", "a vile kelki prowler"}},
{area = "Luzith's Lair", level = "95+", targets = {"a mass of deadly trap spiders", "a deadly trap spider", "a monstrous arachnid", "a vicious little spider", "a large, crystalline spider", "a flying spider", "a sentinel spider", "a slender, female arachnoid"}},
--{area = "Luzith's Lair", level = "95+", targets = {"a mass of deadly trap spiders", "a deadly trap spider", "a monstrous arachnid", "a vicious little spider", "a large, crystalline spider", "a flying spider", "a sentinel spider", "a slender, female arachnoid", "a large cocoon"}},
{area = "the Bastion of Illdon", level = "95+", targets = {"a rabid plant", "a rabid hound", "a nightmare shadow", "a shadowy, mindless demon", "a mutated experiment"}},
{area = "Spiral of the Corrupt", level = "95+", targets = {"an ethereal, scarred jellyfish", "a rot-infested swordfish", "a five-tentacled octopus of jade", "a taint-infested shark", "a miasma-wreathed electric eel"}},
{area = "the Shastaan Warrens", level = "95+", targets = {"an aberrant, obscenely deformed Kelki", "a wild-eyed Kelki cultist", "a ragged Kelki cultist"}},
{area = "the Bloodwood", level = "95+", targets = {"a distressed spirit", "a wailing spirit", "a lingering spirit"}},
--{area = "Dovan Hollow", level = "95+", targets = {"a gaunt Aslinn slaver"}},
{area = "Dovan Hollow", level = "95+", targets = {"a gaunt Aslinn slaver", "a scarred Aslinn slaver", "a sinewy Aslinn slaver"}},
{area = "the Feral Caves", level = "95+", targets = {"a small green blob", "a slimy green blob", "a massive green blob", "a gigantic green blob"}},
{area = "The Forgotten Mausoleum", level = "95+", targets = {"a reanimated Dwarf woman", "a rotting Dwarf archer", "a decomposing Dwarf", "a robed reanimated Dwarf"}},
{area = "Tcanna Island", level = "95+", targets = {"a brown and tan python", "a blue crab", "a box jellyfish", "a large capybara", "a small ocelot", "a spotted leopard", "a howler monkey", "a striped tiger", "a water buffalo", "an enormous elephant", "a vicious copperhead snake", "an oversized tortoise", "a diseased raccoon", "a dark green alligator", "a white-tailed deer", "a lithe cougar", "a black bear", "a black and white badger","a great white stag", "a spotted jaguar","a long billed toucan", "a scarlet macaw", "a bald eagle", "a gray wolf", "a ragged coyote", "a Troll guard", "a Troll cook","a white goose", "a Nazetu officer"}},
{area = "Xaanhal", level = "really high", targets = {"a suspicious Xorani patrol", "a wiry Xorani guard", "a cautious Xorani guard", "a merciless Xorani warrior", "a willowy nest guardian"}, items = {"a fragment of a mosaic"}},
--{area = "Xaanhal", level = "really high", targets = {"a suspicious Xorani patrol", "a wiry Xorani guard", "a cautious Xorani guard", "a willowy nest guardian"}, items = {"a fragment of a mosaic"}},
{area = "Trapped within a mirror", level = "Quest", targets = {"a fragment of living glass"}},
{area = "the Teshen Caldera", level = "40-60? Maybe", targets  = {"a Teshen raider", "a Teshen scout", "a Teshen reaver", "a Teshen worker"}}
}</script>
						<eventHandlerList />
					</Script>
					<Script isActive="yes" isFolder="no">
						<name>load targets</name>
						<packageName></packageName>
						<script>
function snd.load_targets(area)	
 snd.my.area = area
 snd.area_found = false
 snd.possible_targets = {}
 snd.possible_items = {}
 for i in ipairs(snd.areas) do
  if snd.areas[i].area == area then
   snd.area_found = true
   snd.bashing.target_type = "long"
   snd.possible_targets = snd.areas[i].targets
   echo("\n Level Range: "..snd.areas[i].level)
   cecho("\n&lt;green&gt;Possible Targets:")
   for h in ipairs(snd.possible_targets) do
    echo("\n "..snd.possible_targets[h])
   end
   if snd.areas[i].items then
    snd.possible_items = snd.areas[i].items
   end
   if snd.areas[i].items then
    snd.possible_items = snd.areas[i].items
    cecho("\n&lt;green&gt;Gathering Items:")
    for k in ipairs(snd.possible_items) do
     echo("\n "..snd.possible_items[k])
    end
   end
  end
 end
 if not snd.area_found then
  cecho("\n&lt;green&gt;Unknown Area.")
 end
end</script>
						<eventHandlerList />
					</Script>
					<Script isActive="yes" isFolder="no">
						<name>looting</name>
						<packageName></packageName>
						<script>
function snd.do_loot()
 if #snd.gathering &gt;= 1 then
  if snd.can_cast() and not snd.waiting.loot then
   snd.loot_it()
  end
 end
end

function snd.loot_it()
 for i in ipairs(snd.corpses) do
  snd.send("get "..snd.corpses[i])
 end
 for h in ipairs(snd.gathering) do
  snd.send("get "..snd.gathering[h])
  if string.find(snd.gathering[h], "coins") then
   snd.send("put coins in "..snd.options.container)
  end
 end
 snd.corpses = {}
 snd.gathering = {}
 snd.have_items = false
 snd.need_loot = false
end</script>
						<eventHandlerList />
					</Script>
					<Script isActive="yes" isFolder="no">
						<name>global items</name>
						<packageName></packageName>
						<script>
snd.global_items = {

}

snd.global_targets = {
--elds
"a billowing dust eld",
"an oozing magma eld",
"a silvery pink salmon",
"a pulsating amber eld",
"a shimmering azure eld",
"a whirling violet eld",
"a shadow-laden grey eld",
"a sinuous eld of rust",
"a vicious crimson eld",
"a vibrating black eld",
"a shimmering azure eld",
"a stalwart iron eld",
"a towering translucent eld",
"a spherical armored eld",
"a dominating frostbound eld",
"a tenebrous ash eld",
"a massive flame-covered eld",
"a jagged citrine eld",
"a crackling lightning eld",
"a crystalline opal eld",
"a crudely-formed silver eld",
"an amorphous red eld",
"an immature jade eld",
"a meager golden eld",
"a shattered eld monstrosity",
"a fiery crimson fragmented eld",
"a skittering verdant eld",

--survivor
"a living puppet",
"a sorcerous puppetmaster",
"a fearsome bone dragon",
"a deep purple hydra",
"a monstrous sandman",
"a fearsome wyvern",
"a silver being of flame",
"a towering treant",
"an unctuous creepling",
"a blood-drenched succubus",
"an ethereal construct",
"a black hell-hound",

"a goblin soldier",
"a ravenous, shadowy ghast",
"a warlock apprentice",
"a large, venomous tarantula",
"a massive elemental",
"a muscular mountain lion",
"a skeletal soldier",
"a Troll sentry",
"a mind flayer",
 "a foul-smelling orc",
 "a dwarf guard",
"a horrendous abomination",
"an enormous black scorpion",
"a Mhun warrior",
"a black cobra",



}</script>
						<eventHandlerList />
					</Script>
					<Script isActive="yes" isFolder="no">
						<name>run basher</name>
						<packageName></packageName>
						<script>function snd.runBasher()
  snd.gathering = {}
  snd.bashing.targeted = false
  snd.bashing.target_priority = 10000
  snd.bashing.target = "none"
  for item in pairs(snd.items) do
    if item == "some gold sovereigns" and #snd.items[item] &gt;= 1 then
      table.insert(snd.gathering, "sovereigns")
    elseif
      string.find(item, "the corpse of") or
      table.contains(snd.possible_items, item) or
      table.contains(snd.global_items, item)
    then
      for id in pairs(snd.items[item]) do
        table.insert(snd.gathering, snd.items[item][id])
      end
    elseif
      (table.contains(snd.possible_targets, item) or table.contains(snd.global_targets, item)) and
      #snd.items[item] &gt;= 1
    then
      for targ in pairs(snd.possible_targets) do
        if snd.possible_targets[targ] == item and targ &lt; snd.bashing.target_priority then
          snd.bashing.targeted = true
          snd.bashing.target = snd.items[item][1]
          snd.bashing.target_priority = targ
        end
      end
      for targ in pairs(snd.global_targets) do
        if snd.global_targets[targ] == item and targ &lt; snd.bashing.target_priority then
          snd.bashing.targeted = true
          snd.bashing.target = snd.items[item][1]
          snd.bashing.target_priority = targ
        end        --if
      end      --for
    end    --elseif
  end  --for
  --if #snd.gathering &gt;= 1 then
  -- snd.loot_it()
  --end
  if not snd.bashing.targeted then
    snd.toggles.bashing = false
    if bot.going then
      expandAlias("move", false)
      --  tempTimer(1.5, [[expandAlias("move")]])
    end
  else
    snd.counterattack_active = false
    if snd.toggles.calling then
      snd.send("wt target: " .. snd.bashing.target)
    end
  end
  snd.core()
end</script>
						<eventHandlerList />
					</Script>
					<Script isActive="yes" isFolder="no">
						<name>class bashing functions</name>
						<packageName></packageName>
						<script>
snd.class_list = {
{class = "Templar", func = function(current) snd.templar_bash() end},
{class = "Luminary", func = function(current) snd.luminary_bash() end}, 
{class = "Ascendril", func = function(current) snd.ascendril_bash() end},
{class = "Zealot", func = function(current) snd.zealot_bash() end}, 
{class = "Shaman", func = function(current) snd.shaman_bash() end}, 
{class = "Sentinel", func = function(current) snd.sentinel_bash() end}, 
{class = "Monk", func = function(current) snd.monk_bash() end}, 
{class = "Wayfarer", func = function(current) snd.wayfarer_bash() end},
{class = "Syssin", func = function(current) snd.syssin_bash() end}, 
{class = "Shapeshifter", func = function(current) snd.shapeshifter_bash() end}, 
{class = "Archivist", func = function(current) snd.archivist_bash() end}, 
{class = "Sciomancer", func = function(current) snd.sciomancer_bash() end}, 
{class = "Teradrim", func = function(current) snd.teradrim_bash() end}, 
{class = "Praenomen", func = function(current) snd.praenomen_bash() end}, 
{class = "Indorani", func = function(current) snd.indorani_bash() end}, 
{class = "Carnifex", func = function(current) snd.carnifex_bash() end}, 
}

function snd.shield_check()
  if snd.defenses.def_shield_tattoo.state ~= "deffed" then
    return true
  end
end

function snd.bashing_function()
 if not snd.room_clear then return end
 if not snd.waiting.queue then
  if not snd.bashing.targeted then
	 snd.runBasher()
	else
   battack = "none"
--   snd.waiting.balance = true
--   tempTimer(0.5, [[snd.waiting.balance = false]])
   if snd.toggles.scepter then
	  battack = "point scepter "..snd.bashing.target
	 elseif not snd.counterattack_active then
    for k,v in pairs(snd.class_list) do
     if snd.class_list[k].class == snd.class then
      v.func()
     end
		end
   end
   if battack ~= snd.last_attack and snd.last_attack ~= "absorb ylem" then
    snd.last_attack = battack
    snd.send("qeb stand"..snd.sep..snd.last_attack)
    snd.waiting.queue = true
    tempTimer(snd.delay(), [[snd.waiting.queue = false]])
   end
  end
 end
end



function snd.templar_bash()
hp = 100*(gmcp.Char.Vitals.hp/gmcp.Char.Vitals.maxhp)
 if snd.toggles.zeal then
  battack = "empower left with sacrifice"..snd.sep.."empower left with sacrifice"..snd.sep.."empower left with sacrifice"..snd.sep.."empower left with sacrifice"..snd.sep.."zeal "..snd.bashing.target
 elseif snd.toggles.newbie then
  battack = "strike "..snd.bashing.target
 else
  if hp &gt;= 65 then
	 battack = "dsk "..snd.bashing.target.." sacrifice sacrifice"
	else
   battack = "cleanse left"..snd.sep.."cleanse right"..snd.sep.."dsk "..snd.bashing.target
	end
 end
 battack = battack..snd.sep.."absorb ylem"
end

function snd.luminary_bash()
hp = 100*(gmcp.Char.Vitals.hp/gmcp.Char.Vitals.maxhp)
	if hp &lt;= 60 then
  	battack = "angel aura me"
	elseif snd.toggles.lightning then
  	battack = "evoke lightning "..snd.bashing.target
 	else
  	battack = "smite "..snd.bashing.target.." secret"
 	end
end

function snd.monk_bash()
 hp = 100*(gmcp.Char.Vitals.hp/gmcp.Char.Vitals.maxhp)
 	if hp &lt; 75 then
  	battack = "transmute mana 1000"..snd.sep.. "numb"
 	elseif snd.have_aff("blackout") then
		if snd.shield_check() then 
      battack = "touch shield"
    end
	elseif snd.toggles.cobra then
  	battack = "combo "..snd.bashing.target.." sdk sdk"
	else 
		battack = "combo "..snd.bashing.target.." sdk ucp ucp"
	end

end

function snd.shaman_bash()
hp = 100*(gmcp.Char.Vitals.hp/gmcp.Char.Vitals.maxhp)
	if hp &lt;= 60 then
		if snd.shield_check() then 
      battack = "touch shield"
    end
	else
		battack = "commune boost"..snd.sep.."commune lightning "..snd.bashing.target
	end
end

function snd.sentinel_bash()
hp = 100*(gmcp.Char.Vitals.hp/gmcp.Char.Vitals.maxhp)
	if hp &lt;= 60 then
  	if snd.shield_check() then 
      battack = "touch shield"
    end
	elseif snd.toggles.newbie then
  	battack = "dhuriv combo "..snd.bashing.target.." slash stab"
 	else
  	battack = "dhuriv combo "..snd.bashing.target.." crosscut thrust"
 	end
end

function snd.wayfarer_bash()
hp = 100*(gmcp.Char.Vitals.hp/gmcp.Char.Vitals.maxhp)
	if hp &lt;= 60 then
		if snd.shield_check() then 
      battack = "touch shield"
    end
	else
    battack = "axe chop "..snd.bashing.target
	end
end

function snd.syssin_bash()
hp = 100*(gmcp.Char.Vitals.hp/gmcp.Char.Vitals.maxhp)
	if hp &lt;= 60 then
		if snd.shield_check() then 
      battack = "touch shield"
    end
	elseif snd.toggles.newbie then
 		if snd.defenses.def_hiding.state == "deffed" then
	 		battack = "backstab "..snd.bashing.target
		else
   		battack = "bite "..snd.bashing.target.." camus"
		end
 	else
  	if snd.defenses.def_hiding.state == "deffed" then
	 		if snd.wielding("dirk") or snd.wielding("stilleto") then
	  		battack = "backstab "..snd.bashing.target
	 		else
	  		battack = "quickwield left dirk"..snd.sep.."backstab "..snd.bashing.target
	 		end
		else
	 		if snd.wielding("whip") then
	  		battack = "garrote "..snd.bashing.target
	 		else
    		battack = "quickwield left whip"..snd.sep.."garrote "..snd.bashing.target
	 		end
		end
 	end
end

function snd.shapeshifter_bash()
hp = 100*(gmcp.Char.Vitals.hp/gmcp.Char.Vitals.maxhp)
	if hp &lt;= 60 then
		if snd.shield_check() then 
      battack = "touch shield"
    end
	else
    battack = "combo "..snd.bashing.target.." slash slash"
	end
end

function snd.indorani_bash()
hp = 100*(gmcp.Char.Vitals.hp/gmcp.Char.Vitals.maxhp)
	if hp &lt;= 60 then
		if snd.shield_check() then 
      battack = "touch shield"
    end
	else
    battack = "flick bonedagger at "..snd.bashing.target
	end
end

function snd.carnifex_bash()
hp = 100*(gmcp.Char.Vitals.hp/gmcp.Char.Vitals.maxhp)
	if hp &lt;= 60 then
		if snd.shield_check() then 
      battack = "touch shield"
    end
	else
    battack = "hammer doublebash "..snd.bashing.target
	end
end

function snd.archivist_bash()
hp = 100*(gmcp.Char.Vitals.hp/gmcp.Char.Vitals.maxhp)
bioessence = tonumber(gmcp.Char.Vitals.bio) 
	if hp &lt;= 70 and bioessence &gt; 1 then
		battack = "bio ethereal"
	elseif hp &lt;= 60 then
		if snd.shield_check() then 
      battack = "touch shield"
    end
	else
    battack = "incite crux "..snd.bashing.target..snd.sep.."bio stimulant"
	end
end

function snd.zealot_bash()
hp = 100*(gmcp.Char.Vitals.hp/gmcp.Char.Vitals.maxhp)
	if hp &lt;= 60 then
		if snd.shield_check() then 
      battack = "touch shield"
    end
	else
		battack = "flow "..snd.bashing.target.." pummel pummel"
	end
end

function snd.praenomen_bash()
hp = 100*(gmcp.Char.Vitals.hp/gmcp.Char.Vitals.maxhp)
	if hp &lt;= 45 then
		if snd.balance.mend == true then
			battack = "mend"
    else 
  		if snd.shield_check() then 
        battack = "touch shield"
      end
		end
	elseif hp &lt;= 30 then
    if snd.shield_check() then 
      battack = "touch shield"
    end
	else
		battack = "frenzy "..snd.bashing.target
	end
end

function snd.teradrim_bash()
hp = 100*(gmcp.Char.Vitals.hp/gmcp.Char.Vitals.maxhp)
	if hp &lt;= 60 then
    battack = "sand shield me"
	else
		battack = "earth batter "..snd.bashing..snd.sep.."golem recover"
	end
end

function snd.ascendril_bash()
	hp = 100*(gmcp.Char.Vitals.hp/gmcp.Char.Vitals.maxhp)
  if hp &lt;=40 then
		if snd.shield_check() then 
      battack = "touch shield"
    end
	elseif hp &lt;= 60 then
		if snd.reflection_charge &gt; 0 then
      battack = "cast reflection"
		else
		if snd.shield_check() then 
      battack = "touch shield"
    end
		end
  else
    if gmcp.Char.Vitals.resonance == "none" or gmcp.Char.Vitals.resonance == "" or gmcp.Char.Vitals.resonance == "air"  then
   		battack = "cast frostblade "..snd.bashing.target
    elseif gmcp.Char.Vitals.resonance == "water" then
   		battack = "cast firelash "..snd.bashing.target
    elseif gmcp.Char.Vitals.resonance == "fire" then
    	battack = "cast windlance "..snd.bashing.target
    end
	end
end</script>
						<eventHandlerList />
					</Script>
				</ScriptGroup>
				<ScriptGroup isActive="yes" isFolder="yes">
					<name>GUI</name>
					<packageName></packageName>
					<script>-------------------------------------------------
--         Put your Lua functions here.        --
--                                             --
-- Note that you can also use external Scripts --
-------------------------------------------------
</script>
					<eventHandlerList />
					<Script isActive="yes" isFolder="no">
						<name>setup</name>
						<packageName></packageName>
						<script>
snd.gui_loaded = true

setBorderLeft(150);
setBorderRight(400);

rightContainer = Geyser.Container:new({
    name = "rightContainer", x = -400, y = 0,
    width = 400, height = "100%",
});

leftContainer = Geyser.Container:new({
		name = "leftContainer", x = 1, y = 0,
		width = 145, height = "100%",
});</script>
						<eventHandlerList />
					</Script>
					<ScriptGroup isActive="yes" isFolder="yes">
						<name>Left</name>
						<packageName></packageName>
						<script>-------------------------------------------------
--         Put your Lua functions here.        --
--                                             --
-- Note that you can also use external Scripts --
-------------------------------------------------
</script>
						<eventHandlerList />
						<Script isActive="yes" isFolder="no">
							<name>vitals</name>
							<packageName></packageName>
							<script>
vitals = Geyser.Label:new({
 name = "vitals",
 x = 0, y = 0,
 width = "100%", height = "7%",
 color = "dark_slate_gray", fgColor = "white",
}, leftContainer);
vitals:setFontSize(11)</script>
							<eventHandlerList />
						</Script>
						<Script isActive="yes" isFolder="no">
							<name>wielding</name>
							<packageName></packageName>
							<script>
wielding = Geyser.Label:new({
 name = "wielding",
 x = 0, y = "7%",
 width = "100%", height = "5%",
 color = "slate_gray", fgColor = "white",
 message = [[wielding]],
}, leftContainer);
wielding:setFontSize(9)</script>
							<eventHandlerList />
						</Script>
						<Script isActive="yes" isFolder="no">
							<name>time_update</name>
							<packageName></packageName>
							<script>
time = Geyser.Label:new({
 name = "time",
 x = 0, y = "12%",
 width = "100%", height = "3%",
 color = "black", fgColor = "white",
 message = [[time]],
}, leftContainer);
time:setFontSize(7.45)

function time_update()

sendGMCP("IRE.Time.Request")

local d = gmcp.IRE.Time.List.day
local m = gmcp.IRE.Time.List.month
local y = gmcp.IRE.Time.List.year

local t = gmcp.IRE.Time.List.time 
	if t:find("late night, approaching midnight") then
		time:setFontSize(8)
 		t = "Late night"
	elseif t:find("It is deep night in Aetolia") then
		t = "Almost midnight"
		time:setFontSize(7.45)
	elseif t:find("It is deepest midnight.") then
		t = "Midnight"
		time:setFontSize(8)
	elseif t:find("It is the middle of the night in Aetolia") then
		t = "After midnight"
		time:setFontSize( 7.45)
	elseif t:find("early morning in Aetolia") then
		t = "Early morning"
		time:setFontSize(7.45)
	elseif t:find("approaching dawn.") then
		t = "Almost dawn"
		time:setFontSize(7.45)
	elseif t:find("It is dawn.") then
		t = "Dawn"
		time:setFontSize(8)
	elseif t:find("It's mid-") then
		t = "Mid-morning"
		time:setFontSize(8)
	elseif t:find("approaching noon") then
		t = "Almost noon"
		time:setFontSize(7.45)
	elseif t:find("exactly noon") then
		t = "Hiiiigh noooon"
		time:setFontSize(7.45)
	elseif t:find("early afternoon") then
		t = "Early afternoon"
		time:setFontSize(7.45)
	elseif t:find("It is late afternoon in Aetolia") then
		t = "Late afternoon"
		time:setFontSize(7.45)
	elseif t:find("dusk in Aet") then
		t = "Dusk"
		time:setFontSize(8)
	elseif t:find("Twilight has overtaken the light") then
		t = "Early evening"
		time:setFontSize(7.45)
	else 
		display(t)
	end

time:echo("&lt;center&gt;"..t.." "..m.."/"..d.."/"..y.."&lt;/center&gt;")

end</script>
							<eventHandlerList>
								<string>gmcp.IRE.Time.Update</string>
							</eventHandlerList>
						</Script>
						<Script isActive="yes" isFolder="no">
							<name>my status</name>
							<packageName></packageName>
							<script>
mystatus = Geyser.Label:new({
 name = "mystatus",
 x = 0, y = "15%",
 width = "35%", height = "10%",
 color = "slate_gray", fgColor = "white",
 message = [[mystatus]],
}, leftContainer);
mystatus:setFontSize(9)
	mystatus:setStyleSheet([[
		border-width: 3px;
		border-style: solid;
		border-color: grey;
		
	]])
mystatus:echo("&lt;center&gt;".."PASN".."&lt;/center&gt;\n&lt;center&gt;prone&lt;/center&gt;")
</script>
							<eventHandlerList />
						</Script>
						<Script isActive="yes" isFolder="no">
							<name>my limbs</name>
							<packageName></packageName>
							<script>
mylimbs = Geyser.Label:new({
 name = "mylimbs",
 x = 0, y = "25%",
 width = "35%", height = "10%",
 color = "dim_gray", fgColor = "white",
 message = [[mylimbs]],
}, leftContainer);
mylimbs:setFontSize(9)
	mylimbs:setStyleSheet([[
		border-width: 3px;
		border-style: solid;
		border-color: grey;
		
	]])
mylimbs:echo("&lt;center&gt;0&lt;/center&gt;\n&lt;center&gt;/|\\&lt;/center&gt;\n&lt;center&gt;/\\&lt;/center&gt;")
</script>
							<eventHandlerList />
						</Script>
						<Script isActive="yes" isFolder="no">
							<name>my affs</name>
							<packageName></packageName>
							<script>
myaffs = Geyser.Label:new({
 name = "myaffs",
 x = "35%", y = "15%",
 width = "65%", height = "20%",
 color = "dark_slate_gray", fgColor = "white",
 message = [[my affs]],
}, leftContainer);
myaffs:setFontSize(9)</script>
							<eventHandlerList />
						</Script>
						<Script isActive="yes" isFolder="no">
							<name>enemy name</name>
							<packageName></packageName>
							<script>
enemy = Geyser.Label:new({
 name = "enemy",
 x = 0, y = "35%",
 width = "100%", height = "5%",
 color = "black", fgColor = "red",
}, leftContainer);
enemy:setFontSize(12)
enemy:echo("&lt;center&gt;[[none]]&lt;/center&gt;")</script>
							<eventHandlerList />
						</Script>
						<Script isActive="yes" isFolder="no">
							<name>enemy status</name>
							<packageName></packageName>
							<script>estatus = Geyser.Label:new({
 name = "estatus",
 x = 0, y = "40%",
 width = "35%", height = "10%",
 color = "slate_gray", fgColor = "white",
 message = [[estatus]],
}, leftContainer);
estatus:setFontSize(9)
	estatus:setStyleSheet([[
		border-width: 3px;
		border-style: solid;
		border-color: grey;
		
	]])
estatus:echo("&lt;center&gt;".."PASN".."&lt;/center&gt;\n&lt;center&gt;prone&lt;/center&gt;")



</script>
							<eventHandlerList />
						</Script>
						<Script isActive="yes" isFolder="no">
							<name>enemy limbs</name>
							<packageName></packageName>
							<script>
elimbs = Geyser.Label:new({
 name = "elimbs",
 x = 0, y = "50%",
 width = "35%", height = "10%",
 color = "black", fgColor = "white",
 message = [[elimbs]],
}, leftContainer);
elimbs:setFontSize(9)
	elimbs:setStyleSheet([[
		border-width: 3px;
		border-style: solid;
		border-color: grey;
		
	]])
--border-radius: 10px;
elimbs:echo("&lt;center&gt;0&lt;/center&gt;\n&lt;center&gt;/|\\&lt;/center&gt;\n&lt;center&gt;/\\&lt;/center&gt;")
</script>
							<eventHandlerList />
						</Script>
						<Script isActive="yes" isFolder="no">
							<name>enemy affs</name>
							<packageName></packageName>
							<script>
eaffs = Geyser.Label:new({
 name = "eaffs",
 x = "35%", y = "40%",
 width = "65%", height = "20%",
 color = "dark_slate_gray", fgColor = "white",
 message = [[&lt;center&gt;enemy affs&lt;/center&gt;]],
}, leftContainer);
eaffs:setFontSize(9)</script>
							<eventHandlerList />
						</Script>
						<Script isActive="yes" isFolder="no">
							<name>toggles</name>
							<packageName></packageName>
							<script>
toggles = Geyser.MiniConsole:new({
 name = "toggles",
 x = 0, y = "60%",
 width = "50%", height = "10%",
 color = "black", fgColor = "white",
 message = [[toggles]],
}, leftContainer);
toggles:setFontSize(9)
toggles:clear()
toggles:cecho("\nattacking")
toggles:echo("\nbashing")
toggles:echo("\nfasthunt")
toggles:echo("\ndispersing")
--toggles:echo("attacking\n&lt;center&gt;&lt;/center&gt;bashing\n&lt;center&gt;&lt;/center&gt;fasthunt")</script>
							<eventHandlerList />
						</Script>
						<Script isActive="yes" isFolder="no">
							<name>toggles2</name>
							<packageName></packageName>
							<script>
toggles2 = Geyser.MiniConsole:new({
 name = "toggles2",
 x = "50%", y = "60%",
 width = "50%", height = "10%",
 color = "black", fgColor = "white",
 message = [[toggles2]],
}, leftContainer);
toggles2:setFontSize(9)
toggles2:clear()
toggles2:cecho("\naffcalling")
toggles2:echo("\ncalling")
toggles2:echo("\nlistening")
toggles2:echo("\nchameleon")
--toggles2:echo("affcalling\n&lt;center&gt;&lt;/center&gt;calling\n&lt;center&gt;&lt;/center&gt;listening")</script>
							<eventHandlerList />
						</Script>
						<Script isActive="yes" isFolder="no">
							<name>monolith</name>
							<packageName></packageName>
							<script>
monolith = Geyser.Label:new({
 name = "monolith",
 x = 0, y = "70%",
 width = "100%", height = "5%",
 color = "firebrick", fgColor = "black",
}, leftContainer);
monolith:setFontSize(12)
monolith:echo("&lt;center&gt;monolith&lt;/center&gt;")</script>
							<eventHandlerList />
						</Script>
						<Script isActive="yes" isFolder="no">
							<name>exits</name>
							<packageName></packageName>
							<script>
exits = Geyser.Label:new({
 name = "exits",
 x = 0, y = "75%",
 width = "100%", height = "5%",
 color = "midnight_blue", fgColor = "white",
 message = [[exits]],
}, leftContainer);</script>
							<eventHandlerList />
						</Script>
						<Script isActive="yes" isFolder="no">
							<name>spirit in room</name>
							<packageName></packageName>
							<script>
spirit_people = Geyser.Label:new({
 name = "spirit_people",
 x = 0, y = "80%",
 width = "50%", height = "18%",
 color = "steel_blue", fgColor = "black",
 message = [[Spirit]],
}, leftContainer);
</script>
							<eventHandlerList />
						</Script>
						<Script isActive="yes" isFolder="no">
							<name>shadow in room</name>
							<packageName></packageName>
							<script>
shadow_people = Geyser.Label:new({
 name = "shadow_people",
 x = "-50%", y = "80%",
 width = "50%", height = "18%",
 color = "thistle", fgColor = "black",
 message = [[Shadow]],
}, leftContainer);
</script>
							<eventHandlerList />
						</Script>
						<Script isActive="yes" isFolder="no">
							<name>people to be sorted</name>
							<packageName></packageName>
							<script>
random_people = Geyser.Label:new({
 name = "random_people",
 x = 0, y = "98%",
 width = "100%", height = "2%",
 color = "black", fgColor = "red",
 message = [[&lt;center&gt;Nobody new to sort.&lt;\center&gt;]],
}, leftContainer);

random_people:setClickCallback("Do_We_Need_To_Sort")

function Do_We_Need_To_Sort()

local string = ""

	if #snd.randomspirit &gt; 0 then
		cecho("\n")
		cecho("You have the following players to sort out for Spirit: ".."\n&lt;firebrick&gt;"..table.concat(snd.randomspirit, ", ")..".")
		cecho("\n ")
	else
		cecho("\n")
		cecho("You have no new Spirit folks to sort.")
		cecho("\n ")
	end
	
	if #snd.randomshadow &gt; 0 then
		cecho("\n")
		cecho("You have the following players to sort out for Shadow: ".."\n&lt;firebrick&gt;"..table.concat(snd.randomshadow, ", ")..".")
		cecho("\n ")
	else
		cecho("\n")
		cecho("You have no new Shadow folks to sort.")
		cecho("\n ")
	end
	
	snd.randomspirit = {}
	snd.randomshadow = {}
	random_people:setFgColor("red")
	random_people:echo("&lt;center&gt;Nobody new to sort.&lt;\center&gt;")
	
	cecho("\n")
	cecho("To update the list of folks, go into your settings and search for:\n")
	cecho("snd.shadow and snd.spirit - add the names of the folks in there to\n")
	cecho("have them automatically sorted next time.")
	cecho("\n ")
end
</script>
							<eventHandlerList />
						</Script>
						<Script isActive="yes" isFolder="no">
							<name>Coloring these things</name>
							<packageName></packageName>
							<script>snd.display = {
--Begin self 
--locking affs
self_paralysis = "P",
self_paralysis_color = "",
self_asthma = "A",
self_asthma_color = "",
self_slickness = "S",
self_slickness_color = "",
self_anorexia = "N",
self_anorexia_color = "",
--prone/pseudo prone
self_prone = "prone",
self_prone_color = "",
--limb damage
self_head = "0",
self_head_color = "",
self_leftleg = "/",
self_leftleg_color = "",
self_rightleg = "\\",
self_rightleg_color = "",
self_leftarm = "/",
self_leftarm_color = "",
self_rightarm = "\\",
self_rightarm_color = "",
self_torso = "|",
self_torso_color = "",


--Begin enemy
--locking affs
enemy_paralysis = "P",
enemy_paralysis_color = "",
enemy_asthma = "A",
enemy_asthma_color = "",
enemy_slickness = "S",
enemy_slickness_color = "",
enemy_anorexia = "N",
enemy_anorexia_color = "",
--prone/pseudo prone
enemy_prone = "prone",
enemy_prone_color = "",
--limb damage
enemy_head = "0",
enemy_head_color = "",
enemy_leftleg = "/",
enemy_leftleg_color = "",
enemy_rightleg = "\\",
enemy_rightleg_color = "",
enemy_leftarm = "/",
enemy_leftarm_color = "",
enemy_rightarm = "\\",
enemy_rightarm_color = "",
enemy_torso = "|",
enemy_torso_color = "",
}

function color_self_affs()
if snd.have_aff("paralysis") then 
	snd.display.self_paralysis_color = "red" 
elseif snd.have_aff("paresis") then 
	snd.display.self_paralysis_color = "yellow" 
else
	snd.display.self_paralysis_color = "white"
end

if snd.have_aff("asthma") then 
	snd.display.self_asthma_color = "red" 
else
	snd.display.self_asthma_color = "white"
end

if snd.have_aff("slickness") then 
	snd.display.self_slickness_color = "red" 
else
	snd.display.self_slickness_color = "white"
end

if snd.have_aff("anorexia") then 
	snd.display.self_anorexia_color = "red" 
else
	snd.display.self_anorexia_color = "white"
end

local pseudo_check = false
for _, v in ipairs(snd.entangleaffs) do
	if snd.have_aff(v) then
		pseudo_check = true
		break
	end
end

if snd.target_prone or snd.have_aff("prone") then 
	snd.display.self_prone_color = "red" 
elseif pseudo_check then
	snd.display.self_prone_color = "yellow" 
else
	snd.display.self_prone_color = "white"
end

mystatus:echo("&lt;center&gt;".."&lt;span style=\"color:"..snd.display.self_paralysis_color.."\"&gt;"..snd.display.self_paralysis.."&lt;/span&gt;"..
												"&lt;span style=\"color:"..snd.display.self_asthma_color.."\"&gt;"..snd.display.self_asthma.."&lt;/span&gt;"..
												"&lt;span style=\"color:"..snd.display.self_slickness_color.."\"&gt;"..snd.display.self_slickness.."&lt;/span&gt;"..
												"&lt;span style=\"color:"..snd.display.self_anorexia_color.."\"&gt;"..snd.display.self_anorexia.."&lt;/span&gt;"..
												"&lt;/center&gt;\n&lt;center&gt;"..
												"&lt;span style=\"color:"..snd.display.self_prone_color.."\"&gt;"..snd.display.self_prone.."&lt;/span&gt;".."&lt;/center&gt;")
												
end

function color_enemy_affs()
if snd.checkAff("paralysis") then 
	snd.display.enemy_paralysis_color = "red" 
elseif snd.checkAff("paresis") then 
	snd.display.enemy_paralysis_color = "yellow" 
else
	snd.display.enemy_paralysis_color = "white"
end

if snd.checkAff("asthma") then 
	snd.display.enemy_asthma_color = "red" 
else
	snd.display.enemy_asthma_color = "white"
end

if snd.checkAff("slickness") then 
	snd.display.enemy_slickness_color = "red" 
else
	snd.display.enemy_slickness_color = "white"
end

if snd.checkAff("anorexia") then 
	snd.display.enemy_anorexia_color = "red" 
else
	snd.display.enemy_anorexia_color = "white"
end

local pseudo_check = false
for _, v in ipairs(snd.entangleaffs) do
	if snd.checkAff(v) then
		pseudo_check = true
		break
	end
end

if snd.target_prone or snd.checkAff("prone") then 
	snd.display.enemy_prone_color = "red" 
elseif pseudo_check then
	snd.display.enemy_prone_color = "yellow" 
else
	snd.display.enemy_prone_color = "white"
end


estatus:echo("&lt;center&gt;".."&lt;span style=\"color:"..snd.display.enemy_paralysis_color.."\"&gt;"..snd.display.enemy_paralysis.."&lt;/span&gt;"..
												"&lt;span style=\"color:"..snd.display.enemy_asthma_color.."\"&gt;"..snd.display.enemy_asthma.."&lt;/span&gt;"..
												"&lt;span style=\"color:"..snd.display.enemy_slickness_color.."\"&gt;"..snd.display.enemy_slickness.."&lt;/span&gt;"..
												"&lt;span style=\"color:"..snd.display.enemy_anorexia_color.."\"&gt;"..snd.display.enemy_anorexia.."&lt;/span&gt;"..
												"&lt;/center&gt;\n&lt;center&gt;"..
												"&lt;span style=\"color:"..snd.display.enemy_prone_color.."\"&gt;"..snd.display.enemy_prone.."&lt;/span&gt;".."&lt;/center&gt;")
												
end

function color_enemy_limbs()

--consider using different symbols for the bruising levels
if snd.limb_status["head"] == "mangled" then 
	snd.display.enemy_head_color = "red" 
elseif snd.limb_status["head"] == "broken" then 
	snd.display.enemy_head_color = "gold" 
else
	snd.display.enemy_head_color = "white"
end

if snd.limb_status["left leg"] == "mangled" then 
	snd.display.enemy_leftleg_color = "red" 
elseif snd.limb_status["left leg"] == "broken" then 
	snd.display.enemy_leftleg_color = "gold" 
elseif snd.checkAff("a broken left leg") then
	snd.display.enemy_leftleg_color = "green" 
else
	snd.display.enemy_leftleg_color = "white"
end

if snd.limb_status["right leg"] == "mangled" then 
	snd.display.enemy_rightleg_color = "red" 
elseif snd.limb_status["right leg"] == "broken" then 
	snd.display.enemy_rightleg_color = "gold" 
elseif snd.checkAff("a broken right leg") then
	snd.display.enemy_rightleg_color = "green" 
else
	snd.display.enemy_rightleg_color = "white"
end

if snd.limb_status["left arm"] == "mangled" then 
	snd.display.enemy_leftarm_color = "red" 
elseif snd.limb_status["left arm"] == "broken" then 
	snd.display.enemy_leftarm_color = "gold" 
elseif snd.checkAff("a broken left arm") then
	snd.display.enemy_leftarm_color = "green" 
else
	snd.display.enemy_leftarm_color = "white"
end

if snd.limb_status["right arm"] == "mangled" then 
	snd.display.enemy_rightarm_color = "red" 
elseif snd.limb_status["right arm"] == "broken" then 
	snd.display.enemy_rightarm_color = "gold" 
elseif snd.checkAff("a broken right arm") then
	snd.display.enemy_rightarm_color = "green" 
else
	snd.display.enemy_rightarm_color = "white"
end

if snd.limb_status["torso"] == "mangled" then 
	snd.display.enemy_torso_color = "red" 
elseif snd.limb_status["torso"] == "broken" then 
	snd.display.enemy_torso_color = "gold" 
else
	snd.display.enemy_torso_color = "white"
end 
elimbs:echo("&lt;center&gt;".."&lt;span style=\"color:"..snd.display.enemy_head_color.."\"&gt;"..snd.display.enemy_head.."&lt;/span&gt;".."&lt;/center&gt;"..
						"&lt;/center&gt;\n&lt;center&gt;"..
						"&lt;center&gt;".."&lt;span style=\"color:"..snd.display.enemy_leftarm_color.."\"&gt;"..snd.display.enemy_leftarm.."&lt;/span&gt;"..
						"&lt;span style=\"color:"..snd.display.enemy_torso_color.."\"&gt;"..snd.display.enemy_torso.."&lt;/span&gt;"..
						"&lt;span style=\"color:"..snd.display.enemy_rightarm_color.."\"&gt;"..snd.display.enemy_rightarm.."&lt;/span&gt;".."&lt;/center&gt;"..
						"&lt;/center&gt;\n&lt;center&gt;"..
						"&lt;center&gt;".."&lt;span style=\"color:"..snd.display.enemy_leftleg_color.."\"&gt;"..snd.display.enemy_leftleg.."&lt;/span&gt;"..
						"&lt;span style=\"color:"..snd.display.enemy_rightleg_color.."\"&gt;"..snd.display.enemy_rightleg.."&lt;/span&gt;".."&lt;/center&gt;"	
						
				)

end

function color_self_limbs()

--consider using different symbols for the bruising levels
if snd.afflictions.aff_torso_mangled.state == "afflicted" then 
	snd.display.self_torso_color = "red" 
elseif snd.afflictions.aff_torso_damaged.state == "afflicted" then 
	snd.display.self_torso_color = "gold" 
else
	snd.display.self_leftleg_color = "white"
end

if snd.afflictions.aff_left_leg_mangled.state == "afflicted" then 
	snd.display.self_leftleg_color = "red" 
elseif snd.afflictions.aff_left_leg_damaged.state == "afflicted" then 
	snd.display.self_leftleg_color = "gold" 
elseif snd.afflictions.aff_left_leg_broken.state == "afflicted" then
	snd.display.self_leftleg_color = "green" 
else
	snd.display.self_leftleg_color = "white"
end

if snd.afflictions.aff_right_leg_mangled.state == "afflicted" then 
	snd.display.self_rightleg_color = "red" 
elseif snd.afflictions.aff_right_leg_damaged.state == "afflicted" then 
	snd.display.self_rightleg_color = "gold" 
elseif snd.afflictions.aff_right_leg_broken.state == "afflicted" then
	snd.display.self_rightleg_color = "green" 
else
	snd.display.self_rightleg_color = "white"
end

if snd.afflictions.aff_left_arm_mangled.state == "afflicted" then 
	snd.display.self_leftarm_color = "red" 
elseif snd.afflictions.aff_left_arm_damaged.state == "afflicted" then 
	snd.display.self_leftarm_color = "gold" 
elseif snd.afflictions.aff_left_arm_broken.state == "afflicted" then
	snd.display.self_leftarm_color = "green" 
else
	snd.display.self_leftarm_color = "white"
end

if snd.afflictions.aff_right_arm_mangled.state == "afflicted" then 
	snd.display.self_rightarm_color = "red" 
elseif snd.afflictions.aff_right_arm_damaged.state == "afflicted" then 
	snd.display.self_rightarm_color = "gold" 
elseif snd.afflictions.aff_right_arm_broken.state == "afflicted" then
	snd.display.self_rightarm_color = "green" 
else
	snd.display.self_rightarm_color = "white"
end

if snd.afflictions.aff_head_mangled.state == "afflicted" then 
	snd.display.self_head_color = "red" 
elseif snd.afflictions.aff_head_damaged.state == "afflicted" then 
	snd.display.self_head_color = "gold" 
else
	snd.display.self_head_color = "white"
end

mylimbs:echo("&lt;center&gt;".."&lt;span style=\"color:"..snd.display.self_head_color.."\"&gt;"..snd.display.self_head.."&lt;/span&gt;".."&lt;/center&gt;"..
						"&lt;/center&gt;\n&lt;center&gt;"..
						"&lt;center&gt;".."&lt;span style=\"color:"..snd.display.self_leftarm_color.."\"&gt;"..snd.display.self_leftarm.."&lt;/span&gt;"..
						"&lt;span style=\"color:"..snd.display.self_torso_color.."\"&gt;"..snd.display.self_torso.."&lt;/span&gt;"..
						"&lt;span style=\"color:"..snd.display.self_rightarm_color.."\"&gt;"..snd.display.self_rightarm.."&lt;/span&gt;".."&lt;/center&gt;"..
						"&lt;/center&gt;\n&lt;center&gt;"..
						"&lt;center&gt;".."&lt;span style=\"color:"..snd.display.self_leftleg_color.."\"&gt;"..snd.display.self_leftleg.."&lt;/span&gt;"..
						"&lt;span style=\"color:"..snd.display.self_rightleg_color.."\"&gt;"..snd.display.self_rightleg.."&lt;/span&gt;".."&lt;/center&gt;"	
						
				)

end</script>
							<eventHandlerList />
						</Script>
						<Script isActive="yes" isFolder="no">
							<name>Aff displays</name>
							<packageName></packageName>
							<script>function display_my_affs()
	
	local self_display_table = {}
	local tally_check = snd.aff_tally()
	local aff_check = ""
  if tally_check &gt; 0 then
		for aff in pairs(snd.afflictions) do
  		if snd.have_aff(aff) then
				aff_check = aff
				aff_check = aff_check:gsub("aff_", "")
				aff_check = aff_check:gsub("_", " ")
				aff_check = aff_check:gsub("left", "L")
				aff_check = aff_check:gsub("right", "R")
				if snd.afflictions[aff]["cures"]["herb"] ~= nil or snd.afflictions[aff]["cures"]["salve"] ~= nil or snd.afflictions[aff]["cures"]["smoke"] ~= nil then
     			table.insert(self_display_table, "&lt;center&gt;"..aff_check.."&lt;/center&gt;")
				end
			end
		end

    myaffs:echo(table.concat(self_display_table))
  else
 		myaffs:echo("&lt;center&gt;my affs&lt;/center&gt;")
	end
	color_self_affs()
end</script>
							<eventHandlerList />
						</Script>
					</ScriptGroup>
					<ScriptGroup isActive="yes" isFolder="yes">
						<name>Right</name>
						<packageName></packageName>
						<script>-------------------------------------------------
--         Put your Lua functions here.        --
--                                             --
-- Note that you can also use external Scripts --
-------------------------------------------------
</script>
						<eventHandlerList />
						<ScriptGroup isActive="yes" isFolder="yes">
							<name>Chat</name>
							<packageName></packageName>
							<script></script>
							<eventHandlerList />
							<ScriptGroup isActive="yes" isFolder="yes">
								<name>YATCOCONFIG</name>
								<packageName></packageName>
								<script>demonnic = demonnic or {}
demonnic.chat = demonnic.chat or {}
demonnic.chat.config = demonnic.chat.config or {}</script>
								<eventHandlerList />
								<Script isActive="yes" isFolder="no">
									<name>Configuration Options</name>
									<packageName></packageName>
									<script>--[[
This is where all of the configuration options can be set. 
Anything I've put in this script object can be changed, but please do pay attention to what you're doing.
If you change one of the values to something it shouldn't be, you could break it. 
]]

--This is where you tell it to use tabbed chat.
demonnic.chat.use = true

--[[
This is where you put what container to put the tabbed chat stuff into. Make it
equal to the actual container object you want it in, or false for none. Defaults to false
Which is to say if you want to put the tabbed chat stuff into a container made using 
uiRight = Geyser.Container:new()

you would put

demonnic.chat.useContainer = uiRight

and if you don't want it in a container you would put

demonnic.chat.useContainer = false
]]

demonnic.chat.useContainer = false

--[[
The timestamp option is set here.
Set to false if you do not want any timestamps displayed for chat.
If you do want it displayed, set to the string for the format you wish. 
see http://wiki.mudlet.org/w/Manual:Lua_Functions#getTime for information
how to format the string
]]
--demonnic.chat.config.timestamp = "HH:mm:ss"
demonnic.chat.config.timestamp = false

--[[ Should we use our own colors for the timestamp?
Set to true if you want to specify foreground and background colors
for the timestamp.
Set to false if you want the timestamps background and foreground
colors to match that of the mud output.
]]
demonnic.chat.config.timestampCustomColor = false
--[[
and what foreground color? You can either use one of the 'named' colors
(see http://wiki.mudlet.org/images/c/c3/ShowColors.png for available colors)
demonnic.chat.config.timestampFG = "slate_grey"

Or you can use a table of R,G,B values. 
demonnic.chat.config.timestampFG = {
  255,
    0,
    0,
}
then the foreground for the timestamp would be 255 read, 100 green, and 0 blue
]]
demonnic.chat.config.timestampFG = "red"

--and background? Same rules as for the foreground above
demonnic.chat.config.timestampBG = "blue"

--[[
This is where you say what corner of the screen you want the tabbed chat on
Valid settings are "topright", "topleft", "bottomright", "bottomleft"
]]--
demonnic.chat.config.location = "topright"

--[[
This is a table of channels you would like.
AKA the place you tell the script what tabs you want.
Each entry must be a string. The defaults should be a pretty effective guide.
]]

demonnic.chat.config.channels = {
  "All",
	"Tells",
	"Local",
	"Web",
  "City",
  "Guild",
  "Clans",
	"OOC",
  "Misc",
}


--Set this to the name of the channel you want to have everything sent to. 
--Per the default, this would be the "All" channel. If you have a different name for it:
--
--demonnic.chat.config.Alltab = "Bucket"  
--
--And if you don't want it turned on at all:
--
--demonnic.chat.config.Alltab = false

demonnic.chat.config.Alltab = "All"

--Set this to the name of the channel you want to display your map. Set to "" if you
--don't want to display the map in your YATCO tabs
demonnic.chat.config.Maptab = ""


---------------------------------------------------------------------------------
--                                                                             --
--The infamous blinking stuff!!!                                               --
--                                                                             --
---------------------------------------------------------------------------------

--[[
Do you want tabs to blink when you get new messages, until you click on the tab?
True if yes, false if no.
]]
demonnic.chat.config.blink = true

--How long (in seconds) between blinks? For example, 1 would mean a 1 second pause in between blinks.
demonnic.chat.config.blinkTime = 3

--Blink if the bucket tab ("All" by default, but configured above) is in focus?
demonnic.chat.config.blinkFromAll = false




--Font size for the chat messages

demonnic.chat.config.fontSize = 9

--[[
Should we preserve the formatting of the text. 
Or should we set the background of it to match the window color?
Set this to false if you want the background for all chat to match the background of the window.
Useful if you change the background from black, and don't like the way the pasted chat makes blocks in it
]]

demonnic.chat.config.preserveBackground = false

--[[
Gag the chat lines in the main window?
defaults to false, set to true if you want to gag.
]]

demonnic.chat.config.gag = false

--[[
Number of lines of chat visible at once. 
Will determine how tall the window for the chats is.
]]

demonnic.chat.config.lines = 15

--[[
Number of characters to wrap the chatlines at.
This will also determine how wide the chat windows are.
]]

demonnic.chat.config.width = 55

--[[
Set the color for the active tab. R,G,B format.
The default here is a brightish green
]]

demonnic.chat.config.activeColors = {
  r = 0,
  g = 180,
  b = 0,
}

--[[
Set the color for the inactive tab. R,G,B format.
The default here is a drab grey
]]

demonnic.chat.config.inactiveColors = {
  r = 60,
  g = 60,
  b = 60,
}

--[[
Set the color for the chat window itself. R,G,B format.
Defaulted to the black of my twisted hardened soul. Or something.
]]

demonnic.chat.config.windowColors = {
  r = 0,
  g = 0,
  b = 0,
}

--[[
Set the color for the text on the active tab. Uses color names.
Set the default to purple. So the tab you're looking at, by default will be purple on bright green. 
Did I mention I'm a bit colorblind?
]]

demonnic.chat.config.activeTabText = "purple"

--[[
Set the color for the text on the inactive tabs. Uses color names.
Defaulted this to white. So the tabs you're not looking at will be white text on boring grey background.
]]

demonnic.chat.config.inactiveTabText = "white"

--[[
have to make sure a currentTab is set... 
so we'll use the one for the bucket, or the first one in the channels table
Or, you know... what it's currently set to, if it's already set.
]]
demonnic.chat.currentTab = demonnic.chat.currentTab or demonnic.chat.config.Alltab or demonnic.chat.config.channels[1]
</script>
									<eventHandlerList />
								</Script>
							</ScriptGroup>
							<ScriptGroup isActive="yes" isFolder="yes">
								<name>Shared</name>
								<packageName></packageName>
								<script>--Bootstrapping variables/etc. Don't touch this unless you really know what you're doing

--I mean it. I'll point. AND laugh. loudly. 
demonnic = demonnic or {}
demonnic.config = demonnic.config or {}
demonnic.balances = demonnic.balances or {}
demonnic.balances.balance = demonnic.balances.balance or 1
demonnic.balances.equilibrium = demonnic.balances.equilibrium or 1
demonnic.debug = demonnic.debug or {}
demonnic.debug.active = demonnic.debug.active or nil
demonnic.debug.categories = demonnic.debug.categories or { }


function demonnic:echo(msg)
 cecho(string.format("\n&lt;SteelBlue&gt;(&lt;green&gt;Demonnic&lt;SteelBlue&gt;):&lt;white&gt; %s", msg))
end</script>
								<eventHandlerList />
								<Script isActive="yes" isFolder="no">
									<name>Debugging</name>
									<packageName></packageName>
									<script>--Adds debugging functionality 

function demonnic:Debug(category,debugData)
   if category then
      if table.contains(demonnic.debug.categories, category) then
         if type(debugData) == "table" then
            demonnic:echo("&lt;red&gt;DEBUG " .. category .. ":&lt;white&gt;")
            display(debugData)
         elseif type(debugData) == "string" or type(debugData) == "number" then
            demonnic:echo("&lt;red&gt;DEBUG " .. category .. ":&lt;white&gt; " .. debugData .. "\n" )
         else
            demonnic:echo("&lt;red&gt;DEBUG " .. category .. ":&lt;white&gt; " .. tostring(debugData) .. "\n" )
         end
      end
   else
      if type(debugData) == "table" then
         demonnic:echo("&lt;red&gt;DEBUG:&lt;white&gt;")
         display(debugData)
      elseif type(debugData) == "string" or type(debugData) == "number" then
         demonnic:echo("&lt;red&gt;DEBUG:&lt;white&gt; " .. debugData)
      else
         demonnic:echo("&lt;red&gt;DEBUG:&lt;white&gt; " .. tostring(debugData))
      end
   end
end

function demonnic:printDebug(category, debugData)
   if not demonnic.debug.active then return end
   demonnic:Debug(category, debugData)
end

function demonnic:toggleDebug()
   if demonnic.debug.active then demonnic.debug.active = nil
   else demonnic.debug.active = true
   end
   demonnic:echo("Debugging is currently " .. (( demonnic.debug.active and "&lt;green&gt;ON&lt;white&gt;") or "&lt;red&gt;OFF&lt;white&gt;"))
end

function demonnic:watchCategory( category )
   if table.contains(demonnic.debug.categories, category) then
      for i,v in ipairs(demonnic.debug.categories) do
         if v == category then
            table.remove(demonnic.debug.categories, i)
         end
      end
      demonnic:echo("No longer watching the '&lt;red&gt;"..category.."&lt;white&gt;' category.") 
   else
      table.insert(demonnic.debug.categories, category)
      demonnic:echo("Now watching the '&lt;red&gt;"..category.."&lt;white&gt;' category.")
   end
   demonnic:echo("Debugging is currently " .. (( demonnic.debug.active and "&lt;green&gt;ON&lt;white&gt;") or "&lt;red&gt;OFF&lt;white&gt;"))
end

function demonnic:listCategories()
   if #demonnic.debug.categories &gt; 0 then
      demonnic:echo("You are currently watching the following categories:\n" .. table.concat(demonnic.debug.categories,", ") )
   else
      demonnic:echo("You are not watching any debugs.")
   end
end
</script>
									<eventHandlerList />
								</Script>
								<Script isActive="yes" isFolder="no">
									<name>Geyser Additions</name>
									<packageName></packageName>
									<script>function Geyser.MiniConsole:clear()
   clearWindow(self.name)
end

function Geyser.MiniConsole:append()
  appendBuffer(self.name)
end</script>
									<eventHandlerList />
								</Script>
							</ScriptGroup>
							<ScriptGroup isActive="yes" isFolder="yes">
								<name>Tabbed Chat</name>
								<packageName></packageName>
								<script>--Do not remove the following lines. Or change them.
demonnic = demonnic or {}
demonnic.chat = demonnic.chat or {}
demonnic.chat.tabsToBlink = demonnic.chat.tabsToBlink or {}
demonnic.chat.tabs = demonnic.chat.tabs or {}
demonnic.chat.windows = demonnic.chat.windows or {}
if not demonnic.chat.config then
  cecho("&lt;red:white&gt;YOU DO NOT HAVE THE YATCO CONFIG PACKAGE IN PLACE. THINGS WILL NOT WORK AS EXPECTED\n\n")
  demonnic.chat.error = "NO CONFIG"
end</script>
								<eventHandlerList />
								<Script isActive="yes" isFolder="no">
									<name>Code</name>
									<packageName></packageName>
									<script>--[[
If the label callbacks ever decide to start taking a function which is part of a table, 0then this will change.
Or if it's modified to take actual functions. Anonymouse function clickcallback would be awfully nice.
]]

function demonnicChatSwitch(chat)
  local r = demonnic.chat.config.inactiveColors.r
  local g = demonnic.chat.config.inactiveColors.g
  local b = demonnic.chat.config.inactiveColors.b
  local newr = demonnic.chat.config.activeColors.r
  local newg = demonnic.chat.config.activeColors.g
  local newb = demonnic.chat.config.activeColors.b
  local oldchat = demonnic.chat.currentTab
  if demonnic.chat.currentTab ~= chat then
    demonnic.chat.windows[oldchat]:hide()
    demonnic.chat.tabs[oldchat]:setColor(r,g,b)
    demonnic.chat.tabs[oldchat]:echo(oldchat, demonnic.chat.config.inactiveTabText, "c")
    if demonnic.chat.config.blink and demonnic.chat.tabsToBlink[chat] then
      demonnic.chat.tabsToBlink[chat] = nil
    end
    if demonnic.chat.config.blink and chat == demonnic.chat.config.Alltab then
      demonnic.chat.tabsToBlink = {}
    end
  end
  demonnic.chat.tabs[chat]:setColor(newr,newg,newb)
  demonnic.chat.tabs[chat]:echo(chat, demonnic.chat.config.activeTabText, "c")
  demonnic.chat.windows[chat]:show()
  demonnic.chat.currentTab = chat  
end

function demonnic.chat:resetUI()
  demonnic.chat.container = demonnic.chat.useContainer or Geyser.Container:new(demonnic.chat[demonnic.chat.config.location]())
  demonnic.chat.tabBox = Geyser.HBox:new({
    x=0,
    y=0,
    width = "100%",
    height = "25px",
    name = "DemonChatTabs",
  },demonnic.chat.container)

end

function demonnic.chat:create()
  --reset the UI
  demonnic.chat:resetUI()
  --Set some variables locally to increase readability
  local r = demonnic.chat.config.inactiveColors.r
  local g = demonnic.chat.config.inactiveColors.g
  local b = demonnic.chat.config.inactiveColors.b
  local winr = demonnic.chat.config.windowColors.r
  local wing = demonnic.chat.config.windowColors.g
  local winb = demonnic.chat.config.windowColors.b

  --iterate the table of channels and create some windows and tabs
  for i,tab in ipairs(demonnic.chat.config.channels) do
    demonnic.chat.tabs[tab] = Geyser.Label:new({
      name=string.format("tab%s", tab),
    }, demonnic.chat.tabBox)
    demonnic.chat.tabs[tab]:echo(tab, demonnic.chat.config.inactiveTabText, "c")
    demonnic.chat.tabs[tab]:setColor(r,g,b)
    demonnic.chat.tabs[tab]:setClickCallback("demonnicChatSwitch", tab)
    demonnic.chat.windows[tab] = Geyser.MiniConsole:new({
--      fontSize = demonnic.chat.config.fontSize,
      x = 0,
      y = 25,
      height = "100%",
      width = "100%",
      name = string.format("win%s", tab),
    }, demonnic.chat.container)
    demonnic.chat.windows[tab]:setFontSize(demonnic.chat.config.fontSize)
    demonnic.chat.windows[tab]:setColor(winr,wing,winb)
    demonnic.chat.windows[tab]:setWrap(demonnic.chat.config.width)
    demonnic.chat.windows[tab]:hide()
  end
  if demonnic.chat.config.Maptab and demonnic.chat.config.Maptab ~= "" then
    demonnic.chat.mapWindow = Geyser.Mapper:new({
      x = 0,
      y = 0,
      height = "100%",
      width = "100%",
    }, demonnic.chat.windows[demonnic.chat.config.Maptab])
    demonnic.chat.windows[demonnic.chat.config.Maptab]:hide()
  end
  local showme = demonnic.chat.config.Alltab or demonnic.chat.config.channels[1]
  demonnicChatSwitch(showme)
  --start the blink timers, if enabled
  if demonnic.chat.config.blink and not demonnic.chat.blinkTimerOn then
    demonnic.chat:blink()
  end
end

function demonnic.chat:append(chat)

  local r = demonnic.chat.config.windowColors.r
  local g = demonnic.chat.config.windowColors.g
  local b = demonnic.chat.config.windowColors.b
  selectCurrentLine()
  local ofr,ofg,ofb = getFgColor()
  local obr,obg,obb = getBgColor()
  if demonnic.chat.config.preserveBackground then
    setBgColor(r,g,b)
  end
  copy()
  if demonnic.chat.config.timestamp then
    local timestamp = getTime(true, demonnic.chat.config.timestamp)
    local tsfg = {}
    local tsbg = {}
    local colorLeader = ""
    if demonnic.chat.config.timestampCustomColor then
      if type(demonnic.chat.config.timestampFG) == "string" then
        tsfg = color_table[demonnic.chat.config.timestampFG]
      else
        tsfg = demonnic.chat.config.timestampFG
      end
      if type(demonnic.chat.config.timestampBG) == "string" then
        tsbg = color_table[demonnic.chat.config.timestampBG]
      else
        tsbg = demonnic.chat.config.timestampBG
      end
      colorLeader = string.format("&lt;%s,%s,%s:%s,%s,%s&gt;",tsfg[1],tsfg[2],tsfg[3],tsbg[1],tsbg[2],tsbg[3])
    else
      colorLeader = string.format("&lt;%s,%s,%s:%s,%s,%s&gt;",ofr,ofg,ofb,obr,obg,obb)
    end
    local fullstamp = string.format("%s%s",colorLeader,timestamp)
      demonnic.chat.windows[chat]:decho(fullstamp)
      demonnic.chat.windows[chat]:echo(" ")
      if demonnic.chat.config.Alltab then 
        demonnic.chat.windows[demonnic.chat.config.Alltab]:decho(fullstamp)
        demonnic.chat.windows[demonnic.chat.config.Alltab]:echo(" ")
      end
  end
  demonnic.chat.windows[chat]:append()
  if demonnic.chat.config.gag then 
    deleteLine() 
    tempLineTrigger(1,1, [[if isPrompt() then deleteLine() end]])
  end
  if demonnic.chat.config.Alltab then appendBuffer(string.format("win%s", demonnic.chat.config.Alltab)) end
  if demonnic.chat.config.blink and chat ~= demonnic.chat.currentTab then 
    if (demonnic.chat.config.Alltab == demonnic.chat.currentTab) and not demonnic.chat.config.blinkOnAll then
      return
    else
      demonnic.chat.tabsToBlink[chat] = true
    end
  end
end



function demonnic.chat:blink()
  if demonnic.chat.blinkID then killTimer(demonnic.chat.blinkID) end
  if not demonnic.chat.config.blink then 
    demonnic.chat.blinkTimerOn = false
    return 
  end
  if not demonnic.chat.container.hidden then
    for tab,_ in pairs(demonnic.chat.tabsToBlink) do
      demonnic.chat.tabs[tab]:flash()
    end
  end
  demonnic.chat.blinkID = tempTimer(demonnic.chat.config.blinkTime, function () demonnic.chat:blink() end)
end

function demonnic.chat:topright()
  return {
    fontSize = demonnic.chat.config.fontSize,
    x=string.format("-%sc",demonnic.chat.config.width + 2),
    y=0,
    width="-1px",
    height=string.format("%ic", demonnic.chat.config.lines + 2),
  }
end

function demonnic.chat:topleft()
  return {
    fontSize = demonnic.chat.config.fontSize,
    x=0,
    y=0,
    width=string.format("%sc",demonnic.chat.config.width),
    height=string.format("%ic", demonnic.chat.config.lines + 2),
  }
end

function demonnic.chat:bottomright()
  return {
    fontSize = demonnic.chat.config.fontSize,
    x=string.format("-%sc",demonnic.chat.config.width + 2),
    y=string.format("-%sc",demonnic.chat.config.lines + 2),
    width="-15px",
    height=string.format("%ic", demonnic.chat.config.lines + 2),
  }
end

function demonnic.chat:bottomleft()
  return {
    fontSize = demonnic.chat.config.fontSize,
    x=0,
    y=string.format("-%sc",demonnic.chat.config.lines + 2),
    width=string.format("%sc",demonnic.chat.config.width),
    height=string.format("%ic", demonnic.chat.config.lines + 2),
  }
end</script>
									<eventHandlerList />
								</Script>
								<Script isActive="yes" isFolder="no">
									<name>demonnicOnStart</name>
									<packageName></packageName>
									<script>function demonnicOnStart()
  if demonnic.chat.use then
    demonnic.chat:create()
  end
end</script>
									<eventHandlerList>
										<string>sysLoadEvent</string>
									</eventHandlerList>
								</Script>
								<Script isActive="yes" isFolder="no">
									<name>echo functions</name>
									<packageName></packageName>
									<script>
function demonnic.chat:cecho(chat, message)
  local alltab = demonnic.chat.config.Alltab
  local blink = demonnic.chat.config.blink
  cecho(string.format("win%s",chat), message)
  if alltab and chat ~= alltab then 
    cecho(string.format("win%s", alltab), message)
  end
  if blink and chat ~= demonnic.chat.currentTab then
    if (alltab == demonnic.chat.currentTab) and not demonnic.chat.config.blinkOnAll then
      return
    else
      demonnic.chat.tabsToBlink[chat] = true
    end
  end
end

function demonnic.chat:decho(chat, message)
  local alltab = demonnic.chat.config.Alltab
  local blink = demonnic.chat.config.blink
  decho(string.format("win%s",chat), message)
  if alltab and chat ~= alltab then 
    decho(string.format("win%s", alltab), message)
  end
  if blink and chat ~= demonnic.chat.currentTab then
    if (alltab == demonnic.chat.currentTab) and not demonnic.chat.config.blinkOnAll then
      return
    else
      demonnic.chat.tabsToBlink[chat] = true
    end
  end
end

function demonnic.chat:hecho(chat, message)
  local alltab = demonnic.chat.config.Alltab
  local blink = demonnic.chat.config.blink
  hecho(string.format("win%s",chat), message)
  if alltab and chat ~= alltab then 
    hecho(string.format("win%s", alltab), message)
  end
  if blink and chat ~= demonnic.chat.currentTab then
    if (alltab == demonnic.chat.currentTab) and not demonnic.chat.config.blinkOnAll then
      return
    else
      demonnic.chat.tabsToBlink[chat] = true
    end
  end
end

function demonnic.chat:echo(chat, message)
  local alltab = demonnic.chat.config.Alltab
  local blink = demonnic.chat.config.blink
  echo(string.format("win%s",chat), message)
  if alltab and chat ~= alltab then 
    echo(string.format("win%s", alltab), message)
  end
  if blink and chat ~= demonnic.chat.currentTab then
    if (alltab == demonnic.chat.currentTab) and not demonnic.chat.config.blinkOnAll then
      return
    else
      demonnic.chat.tabsToBlink[chat] = true
    end
  end
end</script>
									<eventHandlerList />
								</Script>
								<Script isActive="yes" isFolder="no">
									<name>demonnicOnInstall</name>
									<packageName></packageName>
									<script>function demonnicOnInstall(_, package)
  if package:find("YATCO") then
  	demonnicOnStart()
  end
end</script>
									<eventHandlerList>
										<string>sysInstall</string>
									</eventHandlerList>
								</Script>
							</ScriptGroup>
						</ScriptGroup>
						<Script isActive="yes" isFolder="no">
							<name>map window</name>
							<packageName></packageName>
							<script>
mapper = Geyser.Mapper:new({
 name = "mapper",
 x = 0, y = "50%",
 width = "100%", height = "50%",
}, rightContainer);
</script>
							<eventHandlerList />
						</Script>
					</ScriptGroup>
					<Script isActive="yes" isFolder="no">
						<name>echoing</name>
						<packageName></packageName>
						<script>
function snd.set_vitals()
 local string = "&lt;center&gt;"..gmcp.Char.Name.name.."&lt;/center&gt;\n&lt;center&gt;"..gmcp.Char.Status.class.."&lt;/center&gt;"
 vitals:echo(string)
end</script>
						<eventHandlerList />
					</Script>
				</ScriptGroup>
				<ScriptGroup isActive="yes" isFolder="yes">
					<name>Healing</name>
					<packageName></packageName>
					<script>-------------------------------------------------
--         Put your Lua functions here.        --
--                                             --
-- Note that you can also use external Scripts --
-------------------------------------------------
</script>
					<eventHandlerList />
					<ScriptGroup isActive="yes" isFolder="yes">
						<name>Methods</name>
						<packageName></packageName>
						<script>-------------------------------------------------
--         Put your Lua functions here.        --
--                                             --
-- Note that you can also use external Scripts --
-------------------------------------------------
</script>
						<eventHandlerList />
						<Script isActive="yes" isFolder="no">
							<name>balance</name>
							<packageName></packageName>
							<script>

function snd.do_special(current)
 if snd.afflictions[current] ~= nil then
  if snd.afflictions[current].state == "afflicted" then
   snd.send(snd.afflictions[current].cures.special)
   echo("("..snd.afflictions[current].cures.special..")")
   snd.last_type = "special"
   snd.last_item = snd.afflictions[current].cures.special
   snd.afflictions[current].state = "waiting"
   startStopWatch(snd.afflictions[current].timer)
  end
 elseif snd.defenses[current] ~= nil then
  if current == "def_fangbarrier" and snd.have_aff("slickness") then
	 return
	else
   if snd.defenses[current].state == "down" then
    snd.send(snd.defenses[current].balance.special)
    echo("("..snd.defenses[current].balance.special..")")
    snd.last_type = "special"
    snd.last_item = snd.defenses[current].balance.special
    snd.defenses[current].state = "waiting"
    startStopWatch(snd.defenses[current].timer)
	 end
  end
 end
end

function snd.do_balance_need(current)
 if gmcp.Char.Vitals.balance == "1" and not snd.waiting.balance and snd.defenses[current].state == "down" and snd.defenses[current].needit then
  snd.send(snd.defenses[current].balance.balanceneed)
  echo("("..snd.defenses[current].balance.balanceneed..")")
  snd.last_type = "balanceneed"
  snd.last_item = snd.defenses[current].balance.balanceneed
  snd.defenses[current].state = "waiting"
  startStopWatch(snd.defenses[current].timer)
 end
end

function snd.do_equilibrium_need(current)
 if gmcp.Char.Vitals.equilibrium == "1" and not snd.waiting.equilibrium and snd.defenses[current].state == "down" and snd.defenses[current].needit then
  snd.send(snd.defenses[current].balance.equilibriumneed)
  echo("("..snd.defenses[current].balance.equilibriumneed..")")
  snd.last_type = "equilibriumneed"
  snd.last_item = snd.defenses[current].balance.equilibriumneed
  snd.defenses[current].state = "waiting"
  startStopWatch(snd.defenses[current].timer)
 end
end

function snd.do_balance_equilibrium_need(current)
 if snd.can_cast() then
  if snd.defenses[current] ~= nil then
   if snd.defenses[current].state == "down" and snd.defenses[current].needit then
    if current:find("chameleon") then 
      local cham_check = table.n_union(snd.shadow, snd.spirit)[math.random(#table.n_union(snd.shadow, snd.spirit))] 
      snd.send(snd.defenses[current].balance.balanceequilibrium..cham_check)
    else
      snd.send(snd.defenses[current].balance.balanceequilibrium)
    end
    echo("("..snd.defenses[current].balance.balanceequilibrium..")")
    snd.last_type = "balanceequilibrium"
    snd.last_item = snd.defenses[current].balance.balanceequilibrium
    snd.defenses[current].state = "waiting"
    startStopWatch(snd.defenses[current].timer)
   end
  elseif snd.afflictions[current] ~= nil then
   if snd.afflictions[current].state == "afflicted" then
    snd.send(snd.afflictions[current].cures.balanceequilibrium)
    echo("("..snd.afflictions[current].cures.balanceequilibrium..")")
    snd.last_type = "balanceequilibrium"
    snd.last_item = snd.afflictions[current].cures.balanceequilibrium
    snd.afflictions[current].state = "waiting"
    startStopWatch(snd.afflictions[current].timer)
   end
  end
 end
end

function snd.do_balance_take(current)
 if gmcp.Char.Vitals.balance == "1" and not snd.waiting.balance and snd.defenses[current].state == "down" and snd.defenses[current].needit then
  snd.send(snd.defenses[current].balance.balancetake)
  echo("("..snd.defenses[current].balance.balancetake..")")
  snd.last_type = "balancetake"
  snd.last_item = snd.defenses[current].balance.balancetake
  snd.defenses[current].state = "waiting"
  startStopWatch(snd.defenses[current].timer)
  snd.waiting.balance = true
  tempTimer(snd.delay(), [[snd.waiting.balance = false]])
 end
end

function snd.do_equilibrium_take(current)
 if gmcp.Char.Vitals.equilibrium == "1" and not snd.waiting.equilibrium and snd.defenses[current].state == "down" and snd.defenses[current].needit then
  snd.send(snd.defenses[current].balance.equilibriumtake)
  echo("("..snd.defenses[current].balance.equilibriumtake..")")
  snd.last_type = "equilibriumtake"
  snd.last_item = snd.defenses[current].balance.equilibriumtake
  snd.defenses[current].state = "waiting"
  startStopWatch(snd.defenses[current].timer)
  snd.waiting.equilibrium = true
  tempTimer(snd.delay(), [[snd.waiting.equilibrium = false]])
 end
end

function snd.do_needy_balance_take(current)
 if snd.can_cast() and snd.defenses[current].state == "down" and snd.defenses[current].needit then
  snd.send(snd.defenses[current].balance.needybalancetake)
  echo("("..snd.defenses[current].balance.needybalancetake..")")
  snd.last_type = "needybalancetake"
  snd.last_item = snd.defenses[current].balance.needybalancetake
  snd.defenses[current].state = "waiting"
  startStopWatch(snd.defenses[current].timer)
  snd.waiting.balance = true
  tempTimer(snd.delay(), [[snd.waiting.balance = false]])
 end
end

function snd.do_needy_equilibrium_take(current)
 if snd.can_cast() and snd.defenses[current].state == "down" and snd.defenses[current].needit then
  snd.send(snd.defenses[current].balance.needyequilibriumtake)
  echo("("..snd.defenses[current].balance.needyequilibriumtake..")")
  snd.last_type = "needyequilibriumtake"
  snd.last_item = snd.defenses[current].balance.needyequilibriumtake
  snd.defenses[current].state = "waiting"
  startStopWatch(snd.defenses[current].timer)
  snd.waiting.equilibrium = true
  tempTimer(snd.delay(), [[snd.waiting.equilibrium = false]])
 end
end

function snd.do_balance_equilibrium_take(current)
 if snd.can_cast() and snd.defenses[current].state == "down" and snd.defenses[current].needit then
  snd.send(snd.defenses[current].balance.balanceequilibriumtake)
  echo("("..snd.defenses[current].balance.balanceequilibriumtake..")")
  snd.last_type = "balanceequilibriumtake"
  snd.last_item = snd.defenses[current].balance.balanceequilibriumtake
  snd.defenses[current].state = "waiting"
  startStopWatch(snd.defenses[current].timer)
  snd.waiting.balance = true
  tempTimer(snd.delay(), [[snd.waiting.balance = false]])
  snd.waiting.equilibrium = true
  tempTimer(snd.delay(), [[snd.waiting.equilibrium = false]])
 end
end</script>
							<eventHandlerList />
						</Script>
						<Script isActive="yes" isFolder="no">
							<name>tattoo</name>
							<packageName></packageName>
							<script>
function snd.do_tattoo(current)
 if snd.can_cast() and snd.can_tattoo() and snd.defenses[current].state == "down" and snd.defenses[current].needit then
  snd.send("touch "..snd.defenses[current].balance.tattoo.." tattoo")
  echo("(touch "..snd.defenses[current].balance.tattoo.." tattoo)")
  snd.last_type = "tattoo"
  snd.last_item = snd.defenses[current].balance.tattoo
  snd.defenses[current].state = "waiting"
  startStopWatch(snd.defenses[current].timer)
  snd.waiting.equilibrium = true
  tempTimer(snd.delay(), [[snd.waiting.equilibrium = false]])
 end
end</script>
							<eventHandlerList />
						</Script>
						<Script isActive="yes" isFolder="no">
							<name>eat</name>
							<packageName></packageName>
							<script>
function snd.do_eat(current)
 if snd.defenses[current] ~= nil then
  if snd.defenses[current].state == "down" and snd.defenses[current].needit and snd.can_eat() then
   snd.cur.herb = snd.defenses[current].balance.eat
   if snd.have_slow() then
    if snd.outred[snd.cur.herb] &gt;= 1 then
     snd.eat(current)
     return
    elseif snd.not_entangled() then
     snd.send("outr "..snd.cur.herb)
     return
    else
     return
    end
   elseif snd.not_entangled() then
    if snd.defenses[current] ~= nil then
     snd.send("outr "..snd.cur.herb)
     snd.eat(current)
    end
   else
    if snd.defenses[current] ~= nil then
     if snd.outred[snd.cur.herb] &gt;= 1 then
      snd.eat(current)
     end
    end
   end
  end
 end
end

function snd.eat(current)
 snd.send("eat "..snd.cur.herb)
 echo("(eat "..snd.cur.herb..")")
 snd.defenses[current].state = "waiting"
 startStopWatch(snd.defenses[current].timer)
end</script>
							<eventHandlerList />
						</Script>
						<Script isActive="yes" isFolder="no">
							<name>drink</name>
							<packageName></packageName>
							<script>
function snd.do_drink(current)
 if snd.can_eat() then
  if snd.afflictions[current] ~= nil then
   snd.cur.drink = snd.afflictions[current].cures.drink
  else
   snd.cur.drink = snd.defenses[current].balance.drink
  end
  if snd.defenses[current] ~= nil then
   if snd.defenses[current].state == "down" and snd.defenses[current].needit then
    snd.send("drink "..snd.cur.drink)
    echo(" (drink "..snd.cur.drink..")")
    snd.defenses[current].state = "waiting"
    startStopWatch(snd.defenses[current].timer)
   end
  elseif snd.afflictions[current] ~= nil then
   if snd.afflictions[current].state == "afflicted" then
    snd.send("drink "..snd.cur.drink)
    echo(" (drink "..snd.cur.drink..")")
    snd.afflictions[current].state = "waiting"
    startStopWatch(snd.afflictions[current].timer)
   end
  end
 end
end
</script>
							<eventHandlerList />
						</Script>
						<Script isActive="yes" isFolder="no">
							<name>herb</name>
							<packageName></packageName>
							<script>
function snd.do_herb(current)
 if gmcp.Char.Vitals.herb == "1" and not snd.waiting.herb and snd.can_eat() then
  if snd.afflictions[current] ~= nil then
   if snd.afflictions[current].state == "afflicted" then
    snd.cur.herb = snd.afflictions[current].cures.herb
   else
    return
   end
  else
   if snd.defenses[current].state == "down" and snd.defenses[current].needit then
    snd.cur.herb = snd.defenses[current].balance.herb
   else
    return
   end
  end
  if snd.have_slow() then
   if snd.afflictions[current] ~= nil then
    if snd.outred[snd.cur.herb] &gt;= 1 then
     snd.herb(current)
     return
    elseif snd.not_entangled() then
     snd.send("outr "..snd.cur.herb)
     return
    else
     return
    end
   elseif snd.defenses[current] ~= nil then
    if snd.outred[snd.cur.herb] &gt;= 1 then
     snd.herb(current)
     return
    elseif snd.not_entangled() then
     snd.send("outr "..snd.cur.herb)
     return
    else
     return
    end
   end
  elseif snd.not_entangled() then
   if snd.afflictions[current] ~= nil then
    snd.send("outr "..snd.cur.herb)
    snd.herb(current)
   elseif snd.defenses[current] ~= nil then
    snd.send("outr "..snd.cur.herb)
    snd.herb(current)
   end
  else
   if snd.afflictions[current] ~= nil then
    if snd.outred[snd.cur.herb] &gt;= 1 then
     snd.herb(current)
    end
   elseif snd.defenses[current] ~= nil then
    if snd.outred[snd.cur.herb] &gt;= 1 then
     snd.herb(current)
    end
   end
  end
 end
end

function snd.herb(current)
 if snd.afflictions[current] ~= nil then
  snd.cur.herb = snd.afflictions[current].cures.herb
 else
  snd.cur.herb = snd.defenses[current].balance.herb
 end
 if snd.afflictions[current] ~= nil then
  snd.send("eat "..snd.cur.herb)
  echo("(eat "..snd.cur.herb..")")
  snd.last_type = "herb"
  snd.last_item = snd.cur.herb
  snd.waiting.herb = true
  tempTimer(snd.delay(), [[snd.waiting.herb = false]])
  snd.afflictions[current].state = "waiting"
  startStopWatch(snd.afflictions[current].timer)
 elseif snd.defenses[current] ~= nil then
  snd.send("eat "..snd.cur.herb)
  echo("(eat "..snd.cur.herb..")")
  snd.last_type = "herb"
  snd.last_item = snd.cur.herb
  snd.waiting.herb = true
  tempTimer(snd.delay(), [[snd.waiting.herb = false]])
  snd.defenses[current].state = "waiting"
  startStopWatch(snd.defenses[current].timer)
 end
end
</script>
							<eventHandlerList />
						</Script>
						<Script isActive="yes" isFolder="no">
							<name>vial</name>
							<packageName></packageName>
							<script>
function snd.do_vial(current)
 if gmcp.Char.Vitals.affelixir == "1" and not snd.waiting.vial and snd.can_eat() then
  if snd.afflictions[current] ~= nil then
   snd.cur.vial = snd.afflictions[current].cures.vial
  else
   snd.cur.vial = snd.defenses[current].balance.vial
  end
  if snd.defenses[current] ~= nil then
   if snd.defenses[current].state == "down" and snd.defenses[current].needit then
    snd.send("drink "..snd.cur.vial)
    echo(" (drink "..snd.cur.vial..")")
    snd.waiting.vial = true
    tempTimer(snd.delay(), [[snd.waiting.vial = false]])
    snd.defenses[current].state = "waiting"
    startStopWatch(snd.defenses[current].timer)
   end
  elseif snd.afflictions[current] ~= nil then
   if snd.afflictions[current].state == "afflicted" then
    snd.send("drink "..snd.cur.vial)
    echo(" (drink "..snd.cur.vial..")")
    snd.waiting.vial = true
    tempTimer(snd.delay(), [[snd.waiting.vial = false]])
    snd.afflictions[current].state = "waiting"
    startStopWatch(snd.afflictions[current].timer)
   end
  end
 end
end
</script>
							<eventHandlerList />
						</Script>
						<Script isActive="yes" isFolder="no">
							<name>salve</name>
							<packageName></packageName>
							<script>
function snd.do_salve(current)
 if gmcp.Char.Vitals.salve == "1" and not snd.waiting.salve and snd.can_apply() then
  if snd.afflictions[current] ~= nil then
   snd.cur.salve = snd.afflictions[current].cures.salve
  else
   snd.cur.salve = snd.defenses[current].balance.salve
  end
  if snd.afflictions[current] ~= nil then
   if snd.afflictions[current].state == "afflicted" then
    snd.send("apply "..snd.cur.salve)
    echo("(apply "..snd.cur.salve..")")
    snd.last_type = "salve"
    snd.last_item = snd.cur.salve
    snd.waiting.salve = true
    tempTimer(snd.delay(), [[snd.waiting.salve = false]])
    snd.afflictions[current].state = "waiting"
    startStopWatch(snd.afflictions[current].timer)
   end
  elseif snd.defenses[current] ~= nil then
   if snd.defenses[current].state == "down" then
    snd.send("apply "..snd.cur.salve.." to body")
    echo("(apply "..snd.cur.salve.." to body)")
    snd.last_type = "salve"
    snd.last_item = snd.cur.salve
    snd.waiting.salve = true
    tempTimer(snd.delay(), [[snd.waiting.salve = false]])
    snd.defenses[current].state = "waiting"
    startStopWatch(snd.defenses[current].timer)
   end
  end
 end
end</script>
							<eventHandlerList />
						</Script>
						<Script isActive="yes" isFolder="no">
							<name>elixir</name>
							<packageName></packageName>
							<script>
function snd.do_elixir(current)
 if gmcp.Char.Vitals.elixir == "1" and not snd.waiting.elixir and snd.can_eat() then
  snd.send("sip "..snd.afflictions[current].cures.elixir)
  snd.waiting.elixir = true
  tempTimer(snd.delay(), [[snd.waiting.elixir = false]] )
 end
end</script>
							<eventHandlerList />
						</Script>
						<Script isActive="yes" isFolder="no">
							<name>moss</name>
							<packageName></packageName>
							<script>
function snd.do_moss(current)
 if gmcp.Char.Vitals.moss == "1" and not snd.waiting.moss and snd.can_eat() then
  snd.cur.herb = "moss"
  if snd.have_slow() then
   if snd.afflictions[current] ~= nil then
    if snd.outred[snd.cur.herb] &gt;= 1 then
     snd.send("eat "..snd.cur.herb)
     return
    elseif snd.not_entangled() then
     snd.send("outr "..snd.cur.herb)
     return
    else
     return
    end
   end
  elseif snd.not_entangled() then
   if snd.afflictions[current] ~= nil then
    snd.send("outr "..snd.cur.herb)
    snd.send("eat "..snd.cur.herb)
   elseif snd.defenses[current] ~= nil then
    snd.send("outr "..snd.cur.herb)
    snd.send("eat "..snd.cur.herb)
   end
  else
   if snd.afflictions[current] ~= nil then
    if snd.outred[snd.cur.herb] &gt;= 1 then
     snd.send("eat "..snd.cur.herb)
    end
   end
  end
  snd.waiting.moss = true
  tempTimer(snd.delay(), [[snd.waiting.moss = false]] )
 end
end</script>
							<eventHandlerList />
						</Script>
						<Script isActive="yes" isFolder="no">
							<name>writhe</name>
							<packageName></packageName>
							<script>
function snd.do_writhe(current)
 if snd.afflictions[current].state == "afflicted" and gmcp.Char.Vitals.writhing == "0" and (not snd.waiting.writhe) and (not string.find(current, "impale") or snd.full_balance()) then
  snd.send("writhe")
  echo("(writhe)")
  snd.last_type = "writhe"
  snd.last_item = "send"
  snd.waiting.writhe = true
  tempTimer(snd.delay(), [[snd.waiting.writhe = false]])
  snd.afflictions[current].state = "waiting"
  startStopWatch(snd.afflictions[current].timer)
 end
end
</script>
							<eventHandlerList />
						</Script>
						<Script isActive="yes" isFolder="no">
							<name>concentrate</name>
							<packageName></packageName>
							<script>
function snd.do_concentrate(current)
 if snd.afflictions[current].state == "afflicted" and not snd.waiting.concentrate then
  snd.send("concentrate")
  echo("(concentrate)")
  snd.last_type = "concentrate"
  snd.last_item = "send"
  snd.waiting.concentrate = true
  tempTimer(snd.delay(), [[snd.waiting.concentrate = false]])
  snd.afflictions[current].state = "waiting"
  startStopWatch(snd.afflictions[current].timer)
 end
end</script>
							<eventHandlerList />
						</Script>
						<Script isActive="yes" isFolder="no">
							<name>other</name>
							<packageName></packageName>
							<script>
function snd.do_tree(current)
 limb = false
 if string.find(current, "_broken") then
  x = string.gsub(current, "_broken", "_damaged")
  y = string.gsub(current, "_broken", "_mangled")
  if snd.have_aff(x) or snd.have_aff(y) then
   limb = true
  end
 end
 if not limb and snd.afflictions[current].state == "afflicted" and gmcp.Char.Vitals.tree == "1" and not snd.waiting.tree and snd.can_tattoo() then
  snd.send("touch tree tattoo")
  echo("(touch tree tattoo)")
  snd.last_type = "tree"
  snd.last_item = "send"
  snd.waiting.tree = true
  tempTimer(snd.delay(), [[snd.waiting.tree = false]])
  snd.afflictions[current].state = "waiting"
  startStopWatch(snd.afflictions[current].timer)
 end
end

function snd.do_focus(current)
 if snd.afflictions[current].state == "afflicted" and gmcp.Char.Vitals.focus == "1" and not snd.waiting.focus and snd.can_focus() then
  snd.send("focus")
  echo("(focus)")
  snd.last_type = "focus"
  snd.last_item = "send"
  snd.waiting.focus = true
  tempTimer(snd.delay(), [[snd.waiting.focus = false]])
  snd.afflictions[current].state = "waiting"
  startStopWatch(snd.afflictions[current].timer)
 end
end

function snd.do_clot(current)
 if snd.afflictions[current].state == "afflicted" and not snd.waiting.clot and snd.toggles.clotting then
  mp = gmcp.Char.Vitals.mp
  mid = math.floor((gmcp.Char.Vitals.maxmp/100)*60)
  max = math.floor((mp-mid)/80)
  needed = math.floor(tonumber(gmcp.Char.Vitals.bleeding)/20)
  if max &lt; needed then
   x = max
  else
   x = needed
  end
  if x &gt; 0 then
   snd.send("clot "..x)
   echo("(clot*"..x..")")
   snd.last_type = "clot"
   snd.last_item = "send"
   snd.waiting.focus = true
   tempTimer(snd.delay(), [[snd.waiting.clot = false]])
   snd.afflictions[current].state = "waiting"
   startStopWatch(snd.afflictions[current].timer)
  end
 end
end</script>
							<eventHandlerList />
						</Script>
						<Script isActive="yes" isFolder="no">
							<name>smoke</name>
							<packageName></packageName>
							<script>
function snd.do_smoke(current)
 if snd.can_smoke() then
  if snd.pipes_lit or (not snd.toggles.lighting) then
   snd.smoke(current)
  elseif snd.have_slow() then
   if snd.afflictions[current] ~= nil then
    snd.send("light pipes")
   elseif snd.defenses[current] ~= nil then
    snd.send("light pipes")
    return
   end
  else
   snd.light_up()
   snd.smoke(current)
  end
 end
end

function snd.smoke(current)
 if snd.afflictions[current] ~= nil then
  snd.cur.pipe = snd.afflictions[current].cures.smoke
 else
  snd.cur.pipe = snd.defenses[current].balance.smoke
 end
 if snd.afflictions[current] ~= nil then
  if snd.afflictions[current].state == "afflicted" then
   snd.send("smoke "..snd.cur.pipe)
   echo("(smoke "..snd.cur.pipe..")")
   snd.last_type = "smoke"
   snd.last_item = snd.cur.pipe
   snd.afflictions[current].state = "waiting"
   startStopWatch(snd.afflictions[current].timer)
  end
 elseif snd.defenses[current] ~= nil then
  if snd.defenses[current].state == "down" and snd.defenses[current].needit then
   snd.send("smoke "..snd.cur.pipe)
   echo("(smoke "..snd.cur.pipe..")")
   snd.last_type = "smoke"
   snd.last_item = snd.cur.pipe
   snd.defenses[current].state = "waiting"
   startStopWatch(snd.defenses[current].timer)
  end
 end
end</script>
							<eventHandlerList />
						</Script>
						<Script isActive="yes" isFolder="no">
							<name>stand</name>
							<packageName></packageName>
							<script>
function snd.do_stand(current)
 if snd.afflictions[current].state == "afflicted" and snd.toggles.standing and (not snd.waiting.stand) and snd.full_balance() and snd.can_legs() then
  snd.send("stand")
  echo("(stand)")
  snd.last_type = "stand"
  snd.last_item = "send"
  snd.waiting.stand = true
  tempTimer(snd.delay(), [[snd.waiting.stand = false]])
  snd.afflictions[current].state = "waiting"
  startStopWatch(snd.afflictions[current].timer)
 end
end
</script>
							<eventHandlerList />
						</Script>
						<Script isActive="yes" isFolder="no">
							<name>fitness</name>
							<packageName></packageName>
							<script>
function snd.do_fitness()
 if snd.can_fitness() and snd.need_fitness and snd.full_balance() then
  snd.send("fitness")
  echo("(fitness)")
  snd.last_type = "fitness"
  snd.last_item = "fitness"
  snd.waiting.balance = true
  tempTimer(snd.delay(), [[snd.waiting.balance = false]])
 end
end</script>
							<eventHandlerList />
						</Script>
						<Script isActive="yes" isFolder="no">
							<name>purge</name>
							<packageName></packageName>
							<script>
function snd.do_purge()
 if snd.balance.purge and not snd.waiting.purge then
  if snd.have_aff("paresis") then
	 snd.send("firstaid elevate paresis")
	elseif snd.have_aff("paralysis") then
	 snd.send("firstaid elevate paralysis")
	else
   found_aff = false
   for aff in pairs(snd.physical_affs) do
	  if snd.have_aff(snd.physical_affs[aff]) then
		 if string.find(snd.physical_affs[aff], "_broken") then
		  local string = string.gsub(physical_affs[aff], "_broken")
			if snd.afflictions[string.."_damaged"].state == "healed" then
			 found_aff = true
			end
		 else
	    found_aff = true
		 end
	  end
	 end
	 if found_aff then
    snd.send("soul purge")
    echo("(soul purge)")
    snd.last_type = "purge"
    snd.last_item = "purge"
	 end
	end
	snd.waiting.purge = true
  tempTimer(snd.delay(), [[snd.waiting.purge = false]])
 end
end</script>
							<eventHandlerList />
						</Script>
						<Script isActive="yes" isFolder="no">
							<name>shrugging</name>
							<packageName></packageName>
							<script>
function snd.do_shrug()
 if snd.full_balance() and snd.need_fitness and snd.can_shrug() then
  snd.send("shrug asthma")
  echo("(shrug asthma)")
  snd.last_type = "shrug"
  snd.last_item = "shrug"
  snd.waiting.balance = true
  tempTimer(snd.delay(), [[snd.waiting.balance = false]])
 end
end</script>
							<eventHandlerList />
						</Script>
						<Script isActive="yes" isFolder="no">
							<name>aegis</name>
							<packageName></packageName>
							<script>
function snd.do_aegis()
 if snd.full_balance() then
  snd.send("manipulate pylon for aegis")
  snd.last_type = "aegis"
  snd.last_item = "aegis"
  snd.waiting.balance = true
  tempTimer(snd.delay(), [[snd.waiting.balance = false]])
 end
end</script>
							<eventHandlerList />
						</Script>
					</ScriptGroup>
					<Script isActive="yes" isFolder="no">
						<name>load defenses</name>
						<packageName></packageName>
						<script>
snd.defenses_loaded = true

function snd.load_def(option)
 if snd.def_options[option] ~= nil then
  snd.message("Loading defense options for: &lt;green&gt;"..option.."&lt;white&gt;.", "echo")
  send(" ")
  snd.less_defs = {}
	if gmcp.Char.Status.race == "Azudim" then
  	snd.def_options[option]["def_miasma"] = "on"
  elseif gmcp.Char.Status.race == "Yeleni" then
  	snd.def_options[option]["def_warmth"] = "on"
  elseif gmcp.Char.Status.race == "Idreth" then
  	snd.def_options[option]["def_safeguard"] = "on"
	end 

  for i in pairs(snd.defenses) do
   snd.defenses[i].needit = false
   for h in pairs(snd.def_options[option]) do
    if snd.def_options[option][h] == "once" then
       if h == i then
        if snd.defenses[i].state ~= "deffed" then
         snd.defenses[i].needit = true
         table.insert(snd.less_defs, i)
        end
       end
    elseif snd.def_options[option][h] == "on" then
     if h == i then
		 	if i == "def_vitality" then
				if snd.balance.vitality then
					snd.defenses[i].needit = true
				end
			else
      	snd.defenses[i].needit = true
			end
     end
    end
   end
  end
 else
  snd.message("No such defense option as &lt;red&gt;"..option.."&lt;white&gt;!", "echo")
  send(" ")
 end
end
</script>
						<eventHandlerList />
					</Script>
					<Script isActive="yes" isFolder="no">
						<name>options</name>
						<packageName></packageName>
						<script>

snd.def_options = {

none = {

},

basic = {
def_thirdeye = "on",
def_mindseye_tattoo = "on",
def_cloak_tattoo = "on",
def_kola = "on",
def_deathsight = "on",
def_insomnia = "on",
def_frost = "on",
def_venom = "on",
def_levitation = "on",
def_speed = "on",
def_caloric = "on",
def_divert_melee = "on",
},

templar = {
def_thirdeye = "on",
def_mindseye_tattoo = "on",
def_cloak_tattoo = "on",
def_kola = "on",
def_deathsight = "on",
def_insomnia = "on",
def_frost = "on",
def_venom = "on",
def_levitation = "on",
def_speed = "on",
def_caloric = "on",
def_divert_melee = "on",
def_gripping = "on",
def_fitness = "once",
def_maingauche = "once",
def_dodge_melee = "on"
},

luminary = {
def_thirdeye = "on",
def_mindseye_tattoo = "on",
def_cloak_tattoo = "on",
def_kola = "on",
def_deathsight = "on",
def_insomnia = "on",
def_frost = "on",
def_venom = "on",
def_levitation = "on",
def_speed = "on",
def_caloric = "on",
def_divert_melee = "on",
def_dodge_melee = "on",
def_lightshield = "once",
def_inspiration = "once",
def_fireblock = "once",
},

syssin = {
def_thirdeye = "on",
def_mindseye_tattoo = "on",
def_cloak_tattoo = "on",
def_kola = "on",
def_deathsight = "on",
def_insomnia = "on",
def_frost = "on",
def_venom = "on",
def_levitation = "on",
def_speed = "on",
def_caloric = "on",
def_divert_melee = "on",
def_dodge_melee = "on",
def_nightsight = "once",
def_clarity = "once",
def_warding = "once",
def_finesse = "once",
def_hiding = "once",
def_shadowsight = "once",
def_ghost = "on",
def_shroud = "on",
def_shadowslip = "once",
},

monk = {
def_thirdeye = "on",
def_mindseye_tattoo = "on",
def_cloak_tattoo = "on",
def_kola = "on",
def_deathsight = "on",
def_insomnia = "on",
def_frost = "on",
def_venom = "on",
def_levitation = "on",
def_speed = "on",
def_caloric = "on",
def_weathering = "on",
def_toughness = "on",
def_vitality = "on",
def_kaido_regeneration = "on",
def_resistance = "on",
def_nightsight = "on",
def_constitution = "on",
def_split_mind = "on",
def_kaido_immunity = "on",
def_boosted_regen = "on",
def_vigor = "on",
def_divert_melee = "on",
def_fitness = "once",
def_dodge_melee = "on",
},

carnifex = {
def_fearless = "on",
def_reveling = "once",
def_recklessness = "once",
def_soul_harvest = "on",
def_soul_thirst = "on",
def_soul_fortify = "on",
--def_soul_fracture = "on",
def_soul_body = "once",
def_thirdeye = "on",
def_mindseye_tattoo = "on",
def_cloak_tattoo = "on",
def_kola = "on",
def_deathsight = "on",
def_insomnia = "on",
def_frost = "on",
def_venom = "on",
def_levitation = "on",
def_speed = "on",
def_caloric = "on",
def_divert_melee = "on",
def_dodge_melee = "on",
def_gripping = "on",
def_fitness = "once",
def_herculeanrage = "once",
},

shapeshifter = {
def_thirdeye = "on",
def_mindseye_tattoo = "on",
def_cloak_tattoo = "on",
def_kola = "on",
def_deathsight = "on",
def_insomnia = "on",
def_frost = "on",
def_venom = "on",
def_levitation = "on",
def_speed = "on",
def_caloric = "on",
def_divert_melee = "on",
def_dodge_melee = "on",
def_nightsight = "on",
def_weathering = "on",
def_bodyheat = "once",
def_metabolize = "once",
def_endurance = "once",
def_thickhide = "once",
def_corner = "once",
--def_harden = "once",
def_heatsight = "once",
},

sentinel = {
def_thirdeye = "on",
def_mindseye_tattoo = "on",
def_cloak_tattoo = "on",
def_kola = "on",
def_deathsight = "on",
def_insomnia = "on",
def_frost = "on",
def_venom = "on",
def_levitation = "on",
def_speed = "on",
def_caloric = "on",
def_divert_melee = "on",
def_dodge_melee = "on",
def_nightsight = "on",
def_gripping = "on",
def_fitness = "once",
--def_heatsight = "once",
def_lifesap = "on",
def_barkskin = "on",
def_hardiness = "on",
def_conceal = "once",
def_maskedscent = "on",
def_vitality = "on",
},

archivist = {
def_fangbarrier = "on",
def_thirdeye = "on",
def_mindseye_tattoo = "on",
def_cloak_tattoo = "on",
def_kola = "on",
def_deathsight = "on",
def_insomnia = "on",
def_frost = "on",
def_venom = "on",
def_levitation = "on",
def_speed = "on",
def_caloric = "on",
def_divert_melee = "on",
def_dodge_melee = "on",
--def_gripping = "on",
def_nightsight = "on",
def_pacing = "once",
def_heatsight = "once",
def_clarity = "on",
def_spheres =  "once",
def_linked = "once",
def_oneness = "once",
def_sublimation = "once",
def_ameliorate = "once",
def_catabolism = "once",
},

indorani = {
def_fangbarrier = "on",
def_thirdeye = "on",
def_mindseye_tattoo = "on",
def_cloak_tattoo = "on",
def_kola = "on",
def_deathsight = "on",
def_insomnia = "on",
def_frost = "on",
def_venom = "on",
def_levitation = "on",
def_speed = "on",
def_caloric = "on",
def_divert_melee = "on",
def_dodge_melee = "on",
def_gripping = "on",
def_nightsight = "on",
def_heatsight = "once",
def_deathaura = "once",
def_lifevision = "on",
def_soulmask = "on",
def_gravechill = "on",
def_vengeance = "on",
def_soulcage = "on",
def_shroud = "on",
def_hierophant = "once",
def_chariot = "on",
def_eclipse = "on",
def_devilpact = "on",
},

shaman = {
def_fangbarrier = "on",
def_thirdeye = "on",
def_mindseye_tattoo = "on",
def_cloak_tattoo = "on",
def_kola = "on",
def_deathsight = "on",
def_insomnia = "on",
def_frost = "on",
def_venom = "on",
def_levitation = "on",
def_speed = "on",
def_caloric = "on",
def_divert_melee = "on",
def_dodge_melee = "on",
def_nightsight = "on",
def_heatsight = "once",
def_lifevision = "on",
def_spiritbond = "on",
def_protection = "on",
def_shaman_spiritsight = "once",
def_lifebloom = "on",
def_shaman_warding = "on",
},

praenomen = {
def_fangbarrier = "on",
def_thirdeye = "on",
def_mindseye_tattoo = "on",
def_cloak_tattoo = "on",
def_kola = "on",
def_deathsight = "on",
def_insomnia = "on",
def_frost = "on",
def_venom = "on",
def_levitation = "on",
def_speed = "on",
def_caloric = "on",
def_divert_melee = "on",
def_dodge_melee = "on",
def_potence_constitution = "once",
def_fortify = "on",
def_corpus_warding = "on",
def_celerity = "once",
def_lifescent = "once",
def_lifevision = "once",
def_veil = "on",
def_stalk = "once",
def_concentrate = "on",
},

teradrim = {
def_fangbarrier = "on",
def_thirdeye = "on",
def_mindseye_tattoo = "on",
def_cloak_tattoo = "on",
def_kola = "on",
def_deathsight = "on",
def_insomnia = "on",
def_frost = "on",
def_venom = "on",
def_levitation = "on",
def_speed = "on",
def_caloric = "on",
def_divert_melee = "on",
def_dodge_melee = "on",
def_earthenform = "on",
def_entwine = "on",
def_ricochet = "on",
def_twinsoul = "on",
def_resonance = "on",
def_stonebind = "on",
def_earthenwill = "once",
def_stonefury = "on",
def_sand_swelter = "once",
},


wayfarer = {
def_fangbarrier = "on",
def_thirdeye = "on",
def_mindseye_tattoo = "on",
def_cloak_tattoo = "on",
def_kola = "on",
def_deathsight = "on",
def_insomnia = "on",
def_frost = "on",
def_venom = "on",
def_levitation = "on",
def_speed = "on",
def_caloric = "on",
def_divert_melee = "on",
def_dodge_melee = "on",
def_ironskin = "on",
--def_blindsense = "on",
--def_greenheart = "on",
--def_endure = "once",
--def_mountaineer = "on",
--def_dustcoat = "on",
--def_resilience = "on",
--def_desolation = "on",
--def_circulation = "on",
},

ascendril = {
def_fangbarrier = "on",
def_thirdeye = "on",
def_mindseye_tattoo = "on",
def_cloak_tattoo = "on",
def_kola = "on",
def_deathsight = "on",
def_insomnia = "on",
def_frost = "on",
def_venom = "on",
def_levitation = "on",
def_speed = "on",
def_caloric = "on",
def_divert_melee = "on",
def_dodge_melee = "on",
def_countercurrent = "on",
def_sagacity = "on",
def_arcaneskin = "on",
def_missiles = "on",
def_nightsight = "on",
def_heatsight = "once",
},

	sciomancer = {	
def_fangbarrier = "on",		
def_thirdeye = "on",		
def_mindseye_tattoo = "on",		
def_cloak_tattoo = "on",		
def_kola = "on",	
def_deathsight = "on",		
def_insomnia = "on",		
def_frost = "on",	
def_venom = "on",		
def_levitation = "on",		
def_speed = "on",		
def_caloric = "on",		
def_divert_melee = "on",	
def_dodge_melee = "on",		
def_nightsight = "on",			
def_heatsight = "once",			
def_countercurrent = "once",		
def_rigor = "once",		
def_shadow_engulf  = "once",		
def_shadow_mantle = "once",		
def_blurring = "once",		
def_sagacity = "once",

},

zealot = {
def_thirdeye = "on",
def_mindseye_tattoo = "on",
def_cloak_tattoo = "on",
def_kola = "on",
def_deathsight = "on",
def_insomnia = "on",
def_frost = "on",
def_venom = "on",
def_levitation = "on",
def_speed = "on",
def_caloric = "on",
def_divert_melee = "on",
def_dodge_melee = "on",
def_focalmark = "on",
def_tempered_body = "on",
def_haste = "on",
def_swagger = "on",
def_litheness = "on",
def_bending = "on",
def_disunion = "on",
def_clarity = "on",
def_resurgence = "on",
def_discharge = "on",
def_deflection = "on",
def_mindspark = "on",

},

}</script>
						<eventHandlerList />
					</Script>
					<Script isActive="yes" isFolder="no">
						<name>parrying</name>
						<packageName></packageName>
						<script>
function snd.parry()
	local highest = 0
	snd.toparry = "none"
	if snd.class_hitting == "knight" then
		snd.toparry = "left leg"
	elseif snd.class_hitting == "shifter" and snd.limb_damage["head"] &gt;= 33.33 then
		snd.toparry = "head"
	else
		for limb in pairs(snd.limb_damage) do
			if string.find(limb, " ") then
				x = string.gsub(limb, " ", "_")
				aff = "pre_restore_"..x
			else
				aff = "pre_restore_"..limb
			end
			if snd.limb_damage[limb] &gt; highest and snd.limb_damage[limb] &lt; 33.33 then
				highest = snd.limb_damage[limb]
				snd.toparry = limb
			end
			if snd.limb_damage[limb] &gt; 25 then
				snd.aff_have(aff)
			else
				snd.aff_remove(aff)
			end
		end
	end
	if snd.toparry ~= "none" and snd.toparry ~= snd.parrying and snd.full_balance() and not snd.waiting.parry then
		if snd.class == "Zealot" then
			snd.send("fend "..snd.toparry)
		elseif snd.class == "Monk" then
			snd.send("guard "..snd.toparry)
		else
			snd.send("parry "..snd.toparry)
		end
		snd.waiting.parry = true
		tempTimer(snd.delay(), [[snd.waiting.parry = false]])
	end
end</script>
						<eventHandlerList />
					</Script>
				</ScriptGroup>
				<ScriptGroup isActive="yes" isFolder="yes">
					<name>Offense</name>
					<packageName></packageName>
					<script>-------------------------------------------------
--         Put your Lua functions here.        --
--                                             --
-- Note that you can also use external Scripts --
-------------------------------------------------
</script>
					<eventHandlerList />
					<Script isActive="yes" isFolder="no">
						<name>PvP variables</name>
						<packageName></packageName>
						<script>
snd.offense_loaded = true
snd.enemies = {}
snd.allies = {}
snd.hitting = "none"

snd.templar_weapon_type = "shortsword" -- used for Templar offenses

snd.current_offense = ""

--Sciomancer
snd.gravity = 0

--Sentinel
snd.my_raloth = ""

--Archivest
snd.my_token = ""
snd.empowerready = true
snd.geoinvert = false
snd.geotrace = false
snd.madnessused = false
snd.conjoinready = true
snd.syncopateused = false

snd.empowertype = ""
snd.my_mutagen = false
snd.their_mutagen = false
snd.my_incite = "nil"
snd.my_impress = ""

--Shaman
snd.shamanpet = ""
snd.morphpet = true
snd.panacea = true
snd.stormcloud = false
snd.incomingomen = false

--Wayfarer
snd.highjumped = false
snd.enraged = false

--Indorani
snd.adder_attached = false
snd.adder_ready = false
snd.assaulted_limb = ""

--Monk
snd.target_numbed = false
snd.mind_locked = false
snd.attempting_lock = false
snd.mind_clamped = false
snd.stance = ""

--Ascendril
snd.flamewreathed_limb = ""
snd.glimpse = "none"
snd.gorged = ""
snd.glimpsing = false
snd.reflection_charge = 3

snd.callers = {}
snd.defended = false
snd.last_attack = "none"
snd.last_affs = {}
snd.last_cure = ""
snd.last_cured = ""
snd.mana_percent = 100
snd.health_percent = 100
snd.blazing = false
snd.jawlocked = false
snd.soul = 100
snd.implant = "none"
snd.active_hound = "none"
snd.hypno = "none"
snd.last_hypno = 0
snd.hyp = 0
snd.sleight = "void"
snd.battle_aff = "none"
snd.chasten_aff = "none"
snd.flayingfang = false
snd.class_hitting = "none"
snd.person_hitting = "none"
snd.people_hitting_me = {}
snd.players_here = {}
snd.maybe_affs = {}
snd.cureset = "none"
snd.alert_tick = 0
snd.alerts = {}
snd.oldalerts = {}
snd.panic = false
snd.alertness = {}
snd.alertnessDir = "none"
snd.enemy_restoration_balance = true
snd.enemy_used_regenerate = false

snd.disperse = "none" -- Can be set to none, callers or all.

snd.limbs = {}
snd.parried_limb = "none"
snd.last_hit_limb = "none"
snd.last_limb_dmg = 0
snd.resto_limb = "none"
snd.targeting = {
left = "none",
right = "none"
}
snd.limb_dmg = {
head = 0,
torso = 0,
["left arm"] = 0,
["right arm"] = 0,
["left leg"] = 0,
["right leg"] = 0,
total = 0,
}
snd.limb_status = {
head = "healed",
torso = "healed",
["left arm"] = "healed",
["right arm"] = "healed",
["left leg"] = "healed",
["right leg"] = "healed"
}
snd.limb_bruising = {
skin = 0,
head = 0,
torso = 0,
["left arm"] = 0,
["right arm"] = 0,
["left leg"] = 0,
["right leg"] = 0
}


snd.use_hourglass_on_prismatic = false
snd.giving = {}
snd.hound_queue = {}
snd.target_has = {}
snd.rebounded = false
snd.target_prone = false
snd.target_impaled = false


snd.effects = {
--venoms
sight = "oculus",
hearing = "prefarar",
asthma = "kalmia", --kelp
paresis = "curare", --bloodroot
clumsiness = "xentio", --kelp
sensitivity = "prefarar", --kelp
vomiting = "euphorbia", --ginseng
allergies = "darkshade", --ginseng
colocasia = "colocasia", --kelp
haemophilia = "hepafarin", --ginseng
peace = "ouabain", --bellwort

stupidity = "aconite", --goldenseal, focus
weariness = "vernalius", --kelp, focus
recklessness = "eurypteria", --lobelia, focus
dizziness = "larkspur", --goldenseal, focus
shyness = "digitalis", --goldenseal

anorexia = "slike",
belonephobia = "araceae",
slickness = "gecko",

voyria = "voyria", --immunity

squelched = "selarnia",
disfigurement = "monkshood",

thin_blood = "scytherus",
["a broken left leg"] = "epseth",
["a broken right leg"] = "epseth",
["a broken left arm"] = "epteth",
["a broken right arm"] = "epteth",

--bladefire empowers
conviction = "conviction",
["mental disruption"] = "disrupt",
["physical disruption"] = "disrupt",
crippled = "cripple",
["crippled body"] = "cripple",

rend = "rend",

}

snd.spirituality_attacks = {
paresis = "shield strike",
sight = "shield brilliance",
berserk = "shield facesmash",
weariness = "shield punch",
asthma = "shield slam",
haemophilia = "shield slam",
confusion = "perform dazzle",
}

snd.hound_attacks = {
recklessness = "growl",
dizziness = "growl",
berserking = "stare",
impairment = "stare",
weariness = "acidspit",
crippled = "acidspit",
epilepsy = "shock",
hallucinations = "shock",
rend = "poisonclaw",
blisters = "poisonclaw",
frozen = "tundralhowl"
}

snd.cures = {

amaurosis = {
"sight",
},

ototoxin = {
"hearing",
},

panacea = {
"patterns",
"shaderot_body",
"shaderot_wither",
"shaderot_heat",
"shaderot_spirit",
"shaderot_benign",
},

anabiotic = {
"plodding",
"idiocy",
},

opiate = {
"paralysis",
"paresis",
"mirroring",
"crippled body",
"crippled",
"blisters",
"slickness",
"heartflutter",
"sandrot",
},

steroid = {
"hubris",
"pacifism",
"peace",
"soulfire",
"soulburn",
"lovers_effect",
"laxity",
"supersition",
"generosity",
"justice",
"magnanimity",
},

coagulation = {
"body_odor",
"lethargy",
"allergies",
"mental_disruption",
"physical_disruption",
"vomiting",
"exhausted",
"thin_blood",
"rend",
"haemophilia",
},

depressant = {
"commitment_fear",
"merciful",
"recklessness",
"egocentric",
"masochism",
"agoraphobia",
"loneliness",
"berserking",
"vertigo",
"claustrophobia",
"nyctophobia",
},

decongestant = {
"baldness",
"clumsiness",
"hypochondria",
"weariness",
"asthma",
"sensitivity",
"ringing_ears",
"impairment",
"blood_poison",
},

euphoriant = {
"self-pity",
"stupidity",
"dizziness",
"faintness",
"shyness",
"epilepsy",
"impatience",
"dissonance",
"infested",
},

antipsychotic = {
"sadness",
"confusion",
"dementia",
"hallucinations",
"paranoia",
"hatred",
"addiction",
"hypersomnia",
"blood_curse",
"blighted",
},

willow = {
"aeon",
"hellsight",
"deadening"
},

yarrow = {
"slickness",
"withering",
"disfigurement",
"migraine",
"squelched"
},

epidermal = {
"anorexia",
"gorged",
"effused_blood",
"hypothermia",
"indifference",
"stuttering",
"blurry vision",
"blindness",
"deafness"
},

caloric = {
"frozen",
"shivering",
"no_caloric"
},

focus = {
"egocentric",
"stupidity",
"anorexia",
"epilepsy",
"mirroring",
"mental disruption",
"peace",
"paranoia",
"hallucinations",
"stuttering",
"dizziness",
"indifference",
"berserking",
"pacifism",
"lovers effect",
"laxity",
"hatred",
"generosity",
"claustrophobia",
"vertigo",
"faintness",
"loneliness",
"agoraphobia",
"masochism",
"recklessness",
"weariness",
"impatience",
"confusion",
"dementia",
"nyctophobia",
"premonition"
}

}

snd.entangleaffs = {
  "transfixed",
	"impaled",
	"webbed",
	"thighlock",
	"armpitlock",
	"necklock",
	"feed",
 }


snd.cureset_skills = {
mage = {"Elemancy", "Crystalism", "Sciomancy"},
indorani = {"Necromancy", "Tarot", "Dombination"},
praenomen = {"Corpus", "Mentis", "Sanguis"},
archivist = {"Geometrics", "Numerology", "Bioessence"},
teradrim = {"Terramancy", "Animation", "Dessication"},
luminary = {"Spirituality", "Devotation"},
sentinel = {"Dhuriv", "Woodlore", "Tracking"},
shaman = {"Primality", "Shamanism", "Naturalism"},
monk = {"Tekura", "Kaido", "Telepathy"},
syssin = {"Assassination", "Subterfuge", "Hypnosis"},
shifter = {"Ferality", "Shapeshifting", "Vocalizing"},
wayfarer = {"Tenacity", "Wayfaring", "Fury"},
knight = {"Battlefury", "Righteousness", "Bladefire", "Savagery", "Deathlore", "Warhounds"},
}</script>
						<eventHandlerList />
					</Script>
					<Script isActive="yes" isFolder="no">
						<name>tracking</name>
						<packageName></packageName>
						<script>snd.shadow_targets = {}
snd.spirit_targets = {}
snd.are_we_checking_ql = false

function snd.get_new_target()
  if snd.toggles.calling then
		snd.new_target = "none"
		snd.set_faction()
		local check = {}
		if snd.faction == "shadow" then
			check = snd.spirit_targets
		else
			check = snd.shadow_targets
		end

    for k, v in ipairs(snd.enemies) do
      if table.contains(check, v) then
      	if snd.new_target == "none" then
        	snd.new_target = v
  				if v ~= snd.target then 
						expandAlias("t " .. snd.new_target, false)
  				else
						if not snd.are_we_checking_ql then
							snd.are_we_checking_ql = true
							send("ql")
						end
					end
        end
      end
    end
		
    if snd.new_target == "none" and not snd.toggles.fasthunt then
      expandAlias("stap", false)
    end
  end
end

function snd.took_limb_dmg(limb, amount)
  snd.limb_dmg[limb] = snd.limb_dmg[limb] + amount
  if snd.limb_dmg[limb] &lt; 0 then
    snd.limb_dmg[limb] = 0
  end
  cecho("&lt;green&gt; " .. limb .. ": " .. snd.limb_dmg[limb])
  if limb == snd.resto_limb and amount == -30 then
    snd.resto_limb = "none"
    if snd.limb_status[limb] ~= "healed" then
      if snd.limb_dmg[limb] &gt;= 66.66 then
        snd.limb_status[limb] = "mangled"
      elseif snd.limb_dmg[limb] &gt;= 33.33 then
        snd.limb_status[limb] = "broken"
      else
        snd.limb_status[limb] = "healed"
      end
    end
  end
  local totaldmg = 0
	snd.limb_dmg.total = 0
  for k, v in pairs(snd.limb_dmg) do
		if v ~= "total" then
	    totaldmg = totaldmg + v
  	end
	end
  snd.limb_dmg.total = totaldmg
  color_enemy_limbs()
end

function snd.target_got(affliction)
  local target_display_table = {}
  if snd.checkAff(affliction) and affliction ~= "a broken leg" and affliction ~= "a broken arm" then
    return
  end
  if snd.defended then
    return
  end
  
  if affliction == "a broken leg" and snd.checkAff("a broken leg") then
    snd.target_cured("a broken leg")
    affliction = "a broken right leg"
    snd.target_got("a broken left leg")
  end
  
  if affliction == "a broken leg" and snd.checksomeAffs({"a broken left leg", "a broken right leg"},1) then
    if snd.checkAff("a broken right leg") then
      affliction = "a broken left leg"
    else
      affliction = "a broken right leg"
    end
  end
  
  if affliction == "a broken arm" and snd.checkAff("a broken arm") then
    snd.target_cured("a broken arm")
    affliction = "a broken right arm"
    snd.target_got("a broken left arm")
  end
  
    if affliction == "a broken arm" and snd.checksomeAffs({"a broken left arm", "a broken right arm"},1) then
    if snd.checkAff("a broken right arm") then
      affliction = "a broken left arm"
    else
      affliction = "a broken right arm"
    end
  end
  
  table.insert(snd.target_has, affliction)
  -- add affliction before displaying in pane, used to be below the gui update
  if snd.gui_loaded then
    if snd.target_prone and not table.contains(snd.target_has, "prone") then
      table.insert(snd.target_has, "prone")
    end
    if #snd.target_has &gt;= 1 then
      for _, v in ipairs(snd.target_has) do
        if v:find("broken") then
          v = v:gsub("a ", "")
          v = v:gsub("left", "L")
          v = v:gsub("right", "R")
        end
        table.insert(target_display_table, "&lt;center&gt;" .. v .. "&lt;/center&gt;")
      end
      eaffs:echo(table.concat(target_display_table))
      color_enemy_affs()
      color_enemy_limbs()
    else
      eaffs:echo("&lt;center&gt;enemy affs&lt;/center&gt;")
    end
  end
  -- if table.contains(entangleaffs, affliction) then
  -- snd.target_impaled = false
  --	snd.jawlocked = false
  -- for entangle in pairs(entangleaffs) do
  -- if snd.checkAff(entangleaffs[entangle]) then
  --  snd.target_cured(entangleaffs[entangle])
  -- end
  --end
  --end
  cecho("&lt;green&gt; " .. affliction)
  snd.waiting.queue = false
end

function snd.target_cured(affliction)
  local target_display_table = {}
  local target_aff_check = {}
  if affliction == "paralysis" then
    snd.target_cured("paresis")
  end
  if affliction == "anorexia" then
    snd.target_cured("voyria")
  end
  if affliction == "shivering" then
    snd.target_cured("frozen")
  end
  if affliction == "soulfire" then
    snd.target_cured("soulburn")
  end
  
	if snd.checkAff("a broken arm") and (affliction == "a broken right arm" or affliction == "a broken left arm") and not snd.checkAff(affliction) then
		affliction = "a broken arm"
	end
	if snd.checkAff("a broken leg") and (affliction == "a broken right leg" or affliction == "a broken left leg") and not snd.checkAff(affliction) then
		affliction = "a broken leg"
	end
  
  for i in pairs(snd.target_has) do
    if snd.target_has[i] == affliction then
      table.remove(snd.target_has, i)
      cecho("&lt;red&gt; " .. affliction)
      snd.last_cured = affliction
      if affliction == "gorged" then
        snd.gorged = ""
      end
    end
    if not snd.target_prone and snd.target_has[i] == "prone" then
      table.remove(snd.target_has, i)
    end
  end
  if #snd.target_has &gt;= 1 then
    for _, i in ipairs(snd.target_has) do
      table.insert(target_display_table, "&lt;center&gt;" .. i .. "&lt;/center&gt;")
    end
    eaffs:echo(table.concat(target_display_table))
    color_enemy_affs()
  else
    eaffs:echo("&lt;center&gt;enemy affs&lt;/center&gt;")
    color_enemy_limbs()
  end
  if not snd.target_gone then
    snd.waiting.queue = false
  end
  -- table.remove(snd.target_has, affliction)
end

function snd.target_used(curative)
  if snd.cures[curative] ~= nil then
    aff_found = false
    for affliction in pairs(snd.cures[curative]) do
      for i in pairs(snd.target_has) do
        if snd.target_has[i] == snd.cures[curative][affliction] and not aff_found then
          if curative == "epidermal" and snd.cures[curative][affliction] == "hypothermia" then
            if snd.limb_dmg.torso == 0 then
              snd.target_cured(snd.cures[curative][affliction])
              aff_found = true
            end
          elseif curative == "caloric" and snd.cures[curative][affliction] == "no_caloric" then
            if not snd.checkAff("hypothermia") then
              snd.target_cured(snd.cures[curative][affliction])
              aff_found = true
            end
          elseif curative == "panacea" then
            if snd.cures[curative][affliction] == "shaderot_body" then
              snd.target_cured("shaderot_wither")
            elseif snd.cures[curative][affliction] == "shaderot_wither" then
              snd.target_cured("shaderot_heat")
            elseif snd.cures[curative][affliction] == "shaderot_heat" then
              snd.target_cured("shaderot_spirit")
            elseif snd.cures[curative][affliction] == "shaderot_spirit" then
              snd.target_cured("shaderot_benign")
            end
            snd.target_cured(snd.cures[curative][affliction])
            aff_found = true
					elseif snd.target_has[i] == "blighted" or snd.target_has[i] == "infested" then
						if not snd.checkAff("premonition") then
            	snd.target_cured(snd.cures[curative][affliction])
           		aff_found = true
						end					
          elseif snd.target_has[i] ~= "hypothermia" then
            snd.target_cured(snd.cures[curative][affliction])
            aff_found = true
          end
        end
      end
    end
  end
  snd.last_cure = curative
end

function snd.vital_change(vital, amount)
  if vital == "health" then
    snd.health_percent = snd.health_percent + amount
    if snd.health_percent &gt; 100 then
      snd.health_percent = 100
    end
    if snd.health_percent &lt; 0 then
      snd.health_percent = 0
    end
  elseif vital == "mana" then
    snd.mana_percent = snd.mana_percent + amount
    if snd.mana_percent &gt; 100 then
      snd.mana_percent = 100
    end
    if snd.mana_percent &lt; 0 then
      snd.mana_percent = 0
    end
  end
end

function snd.alertnessHit(dir, name, type)
  if snd.alertnessDir ~= "none" and snd.alertnessDir ~= dir then
    snd.alertness = {}
  end
  table.insert(snd.alertness, name)
  snd.alertnessDir = dir
  snd.alertType = type
end

function Reverse(arr)
  local i, j = 1, #arr
  while i &lt; j do
    arr[i], arr[j] = arr[j], arr[i]
    i = i + 1
    j = j - 1
  end
end

function snd.onHit()
  if snd.toggles.atkecho then
    deleteLine()
    snd.message(snd.hitting .. " hit: " .. snd.getting_hit .. ".")
  end
  snd.last_affs = {}
  if #snd.maybe_affs &gt;= 1 and (snd.getting_hit == snd.target) then
    if snd.maybe_affs[1] == "blaze" then
      snd.used.rebounding = false
      table.remove(snd.maybe_affs, 1)
      table.insert(snd.last_affs, "blaze")
    else
      local aff = ""
      aff = snd.venomEffect(snd.maybe_affs[1])
      if aff ~= "" then
        snd.target_got(aff)
        table.remove(snd.maybe_affs, 1)
        table.insert(snd.last_affs, aff)
      end
    end
  end
end

function snd.checkAff(affliction)
  if affliction == "paresis" then
    if
      table.contains(snd.target_has, affliction) or table.contains(snd.target_has, "paralysis")
    then
      return true
    else
      return false
    end
  elseif affliction == "anorexia" then
    if
      table.contains(snd.target_has, affliction) or
      table.contains(snd.target_has, "destroyed_throat")
    then
      return true
    else
      return false
    end
  else
    if table.contains(snd.target_has, affliction) then
      return true
    else
      return false
    end
  end
end

function snd.checksomeAffs(afflictions, number)
  if number == 0 then
    return true
  end
  if number == nil then
    number = 1
  end
  if type(afflictions) == "string" then
    return snd.checkAff(afflictions)
  elseif type(afflictions) == "table" then
    local count = 0
    for i, v in ipairs(afflictions) do
      if snd.checkAff(v) then
        count = count + 1
        if count &gt;= number then
          return true
        end
      end
    end
    -- if the count of how many returned true didn't meet or exceed the number given, return false
    return false
  end
end</script>
						<eventHandlerList />
					</Script>
					<Script isActive="yes" isFolder="no">
						<name>attack function</name>
						<packageName></packageName>
						<script>
function snd.attack_function()
 echo("\nYou haven't set up an attack alias yet!")
end

function snd.attack(attack)
  local string = ""
  if snd.can_fitness() and snd.need_fitness then
 	 string = "fitness"
  elseif snd.can_shrug() and snd.need_fitness then
 	 string = "shrug asthma"
  else
 	 string = attack
  end
 	 string = "stand"..snd.sep.."g body"..snd.sep.."g husk"..snd.sep..string
  if snd.toggles.parrying and snd.toparry ~= "none" and snd.toparry ~= snd.parrying then
 	 string = "parry "..snd.toparry..snd.sep..string
  end
  if snd.emptypipe ~= "none" then
 	 string = "outc "..snd.emptypipe..snd.sep.."put "..snd.emptypipe.." in emptypipe"..snd.sep..string
  end
  if not snd.pipes_lit and snd.toggles.lighting then
 	 string = "light pipes"..snd.sep..string
  end
	if string:find("slaughter") then
		snd.send("qeb")
		snd.send("queue axes "..string)
	else
		snd.send("queue axes")
		snd.send("qeb "..string)
	end
end

function snd.starting_attack()
 snd.send("target nothing with left"..snd.sep.."target nothing with right")
 snd.toggles.attacking = true
 snd.class_hitting = "none"
 snd.person_hitting = "none"
 snd.active_hound = "none"
 snd.implant = "none"
end

function snd.handle_hounds()
 if snd.balance.hound and not snd.waiting.hound and gmcp.Char.Vitals.balance == "0" then
  local string = ""
  local hound_aff = "none"
	if snd.defenses.def_houndmark.state ~= "deffed" then
		hound_aff = "mark"
	end
  for i in pairs(snd.hound_queue) do
    if not snd.checkAff(snd.hound_queue[i]) then
      if hound_aff == "none" then
        hound_aff = snd.hound_attacks[snd.hound_queue[i]]
      end
    end
  end
  if hound_aff == "none" then
		hound_aff = "contagion"
  end
	if hound_aff ~= "none" then
   if snd.active_hound ~= snd.hounds[hound_aff] and hound_aff ~= "barrel" then
	  string = "hound switch "..snd.hounds[hound_aff]..snd.sep
	 else
	  string = ""
	 end
	 snd.send(string.."hound "..hound_aff.." "..snd.target)
	 snd.waiting.hound = true
	 tempTimer(snd.delay(), [[snd.waiting.hound = false]])
	end
 end
end</script>
						<eventHandlerList />
					</Script>
					<Script isActive="yes" isFolder="no">
						<name>shadow</name>
						<packageName></packageName>
						<script>snd.shadow = {
-- Supports
"Ayuna",
"Marin",
"Kadal",
"Zruak",
"Desidora",
"Agothaxl",
"Azami",
"Ahlysaaria",


--Callers
"Bulrok", 
"Mjoll",

--Damage
"Raynia",
"Agron",
"Kasimir",
"Savas",
"Robyn",
"Briar",
"Louse",
"Aliane",
"Rashinza",
"Asugazio",
"Vasilissa",

--Other callers
"Tatia",
"Iazamat",
"Rijetta",
"Xenia",
"Alathesia",

--Offense bots
"Kamui",
"Zarni",
"Marin",
"Ehtias",

--Meatshields
"Rebra",
"Jayke",
"Arahali",
"Liarra",
"Zenobia",
"Kanivara",
"Ishmar",
"Oriana",
"Christophe",
"Diancecht",
"Zyphen",
"Eolo",
"Ileria",
"Razhril",
"Tina",
"Marharet",
"Prucilla",
"Rhyot",
"Hitzuguya",
"Ansidia",
"Rurthina",
"Teani",
"Insadia",
"Andrus",
"Dagun",
"Nerakh",

--Whales
"Meltas", 
"Fezzix", 
"Mazzion", 

--Old/rarely fight/not dangerous
"Cariv", --damage threat
"Varel", -- 1v1 specialist but can do groups fine
"Trikal", --general annoyance
"Toz",-- if returns, move back to callers
"Borscin", -- if returns, move back to callers
"Kavithe",
"Lleminara",
"Sarisa",
"Kelliara",
"Akara",
"Canasius",
"Ensidia",
"Garn",
"Phlickerwart",
"Kaldaka",
"Mileta",
"Naida",
"Ellenia",
"Casni",
"Neoma",
"Lenina",
"Cardie",
"Coribhell",
"Xarian",
"Fyrren",
"Borgun",
"Callidora",
"Dourif",
"Gabriele",


--Non-combatant
"Zhyth",
"Hexes",
"Daegon",
"Kodaza",
"Nenelos",
"Satomi",
"Isaria,",
"Alyssn",


--Random people from Spinesreach citizens all
"Aellia", 
"Akaryuterra", 
"Aliviana", 
"Ameleia", 
"Anari", 
"Annabeth", 
"Aouri", 
"Arbre",
"Atarah",
"Atilus",
"Axius", 
"Corvo", 
"Corlin",
"Eleanor",
"Ensis", 
"Evilo", 
"Haverly",
"Jenxlyn",  
"Mariena",
"Neytiri",  
"Skiva",
"Tsyra",  
"Zhrkraal", 
"Zhukov", 
"Ruslan",
"Kovacs",
}</script>
						<eventHandlerList />
					</Script>
					<Script isActive="yes" isFolder="no">
						<name>spirit</name>
						<packageName></packageName>
						<script>snd.spirit = {
--The most spirit
"Yeras",
--Luminaries:
"Stine",
--Callers:
"Benedicto",
"Iesid",
"Valingar",
"Drystin",
"Eaku",
"Hallis",
"Falinzin",
"Varrilix",
"Adelina",
"Taaroshi",
"Kilmoner",
"Oonagh",
"Galadriel",
"Phoenecia",
"Talonnb",
"Miralla",
"Kayt",
"Lirael",
"Lyric",
"Zion",
"Belgarion",
"Zynti",
"Giliand",
"Aisei",
"Saltz",
"Kvothe",
"Kjell",
"Isia",
"Ander",
"Church",
"Rasani",
"Lexen",
"Justus",
"Eliadon",
"Ferrovax",
"Serrice",
"Aishia",
"Tenshyo",
"Aloli",
"Jami",
"Haven",
"Mosu",
"Piari",
"Tairan",
"Valeria",
"Tekias",
"Amarita",
"Zea",
"Tressa",
"Xai",
"Iatan",
"Urial",
"Rhine",
"Ainete",
"Ronon",
"Ateslemek",
"Vahn",
"Jeromy",
"Jakir",
"Aymah",
"Asmund",
"Vaeldren",
"Tyson",
"Norasi",
"Arista",
"Ranae",
"Melantha",
"Kyn",
"Aisar",
--Raw Enorian data from CITIZENS ALL to try and fill in the file. Feel free to move the targetting order around.
"Adesse",
"Aeheli",
"Aelea",
"Aeylis",
"Alamura",
"Aldan",
"Aldradh",
"Alexsandor",
"Miroslav",
"Aodhan",
"Arataziel",
"Arindalia",
"Bayla",
"Carthenian",
"Dantae",
"Demortes",
"Driga",
"Ecikoria",
"Eidas",
"Eratian",
"Eschar",
"Ianthe",
"Innuros",
"Illidan",
"Alinthrice",
"Justus",
"Jhura",
"Katie",
"Laithe",
"Lycia",
"Melantha",
"Miroslav",
"Moxie",
"Mykellah",
"Rak",
"Uisor",
"Urial", 
"Zaila",
"Reilly",
--Raw Duiran data from CITIZENS ALL to try and fill in the file. Feel free to move the targetting order around.
 "Amisi", 
 "Brae",
 "Dannon", 
 "Dennah", 
 "Elly", 
 "Evadnu", 
 "Jessie", 
 "Kaiara", 
 "Madali", 
 "Nava",	 
 "Tythos",
 "Ipz",
 "Relandroc",
 "Courene",
 "Wylliam",
 "Seraphina",
 "Xavin",
 "Elwyn",
 "Callaia",
	}</script>
						<eventHandlerList />
					</Script>
					<Script isActive="yes" isFolder="no">
						<name>alerts</name>
						<packageName></packageName>
						<script>
function snd.run_alerts()
 local string = ""
 if snd.alert_tick &gt;= 5 then
  snd.alert_tick = 0
	snd.oldalerts = snd.alerts
  snd.alerts = {}
	snd.panic = false
  if snd.have_aff("sapped_stats") then
   table.insert(snd.alerts, "\n&lt;white&gt;         SAPPED STATS GTFO")
  end
	if snd.have_aff("hypertension") then
	 table.insert(snd.alerts, "\n&lt;white&gt;         HYPERTENSION GTFO")
	end
	if snd.have_aff("soul_poison") then
	 table.insert(snd.alerts, "\n&lt;white&gt;         SOUL POISON GTFO")
	end
	--if tonumber(gmcp.Char.Vitals.soul) &lt; 50 then
	-- table.insert(snd.alerts, "\n&lt;white&gt;        SOUL LOW, SOUL LOW")
	--end
  if snd.have_aff("anorexia") and snd.have_aff("asthma") and snd.have_aff("slickness") then
   table.insert(snd.alerts, "\n&lt;yellow&gt;        YOU ARE VENOM LOCKED")
  end
  if snd.aff_tally() &gt;= 8 then
   table.insert(snd.alerts, "\n&lt;SteelBlue&gt;       YOU HAVE TOO MANY AFFS")
  end
  if (100*(gmcp.Char.Vitals.hp/gmcp.Char.Vitals.maxhp)) &lt;= 40 then
	 if snd.have_aff("sensitivity") then
	  snd.send("firstaid elevate sensitivity")
	 end
   table.insert(snd.alerts, "\n&lt;brown&gt;      YOUR HEALTH IS LOW NEWB")
  end
	if (100*(gmcp.Char.Vitals.mp/gmcp.Char.Vitals.maxmp)) &lt;= 40 then
	 table.insert(snd.alerts, "\n&lt;brown&gt;       YOUR MANA IS LOW NEWB")
	end
	if tonumber(gmcp.Char.Vitals.madness) &gt;= 60 then
	 table.insert(snd.alerts, "\n&lt;red&gt;      THE MADNESS IS COMING, EAT UP")
	end
  if #snd.alerts &gt;= 1 then
   border = "\n&lt;red&gt;*************************************"
	 string = ""
	 for i in pairs(snd.alerts) do
	  string = string..snd.alerts[i]
		if table.contains(snd.oldalerts, snd.alerts[i]) and not string.find(snd.alerts[i], "MADNESS") then
		 snd.panic = true
		end
	 end
	 string = border..string..border
	 cecho(string)
	 if snd.panic and snd.toggles.affcalling and not snd.waiting.melting then
	  if snd.toggles.attacking or (snd.toggles.bashing and #snd.group &gt;= 1) then
	   if snd.faction == "spirit" then
	    snd.send("wt I'm melting! I'm melting!")
		 elseif snd.faction == "shadow" then
		  snd.send("wt I'm really close to death.")
		 end
		 snd.waiting.melting = true
		 tempTimer(5, [[snd.waiting.melting = false]])
		end
	 end
	 if snd.class == "Templar" then
	  snd.send("undefend")
	 end
  end
 else
  snd.alert_tick = snd.alert_tick + 1
 end
end

function snd.insta(caster, attack, target)
 snd.set_faction()
 if table.contains(snd.allies, target) then
  
 end
end</script>
						<eventHandlerList />
					</Script>
					<Script isActive="yes" isFolder="no">
						<name>misc</name>
						<packageName></packageName>
						<script>
function snd.reset_target()
 snd.target_has = {}
 for limb in pairs(snd.limb_dmg) do
  snd.limb_dmg[limb] = 0
 end
 for limb in pairs(snd.limb_status) do
  snd.limb_status[limb] = "healed"
 end
 for limb in pairs(snd.limb_bruising) do
  snd.limb_bruising[limb] = 0
 end
 snd.hypno = "none"
 snd.hyp = 0
 snd.last_hypno = 0

 snd.resto_limb = "none"
 snd.used.rebounding = true
 snd.used.shield = false
 snd.used.paste = true
 snd.target_prone = false
 snd.target_impaled = false
 snd.jawlocked = false
 snd.last_attack = "none"
 snd.target_gone = false
 snd.implant = "none"
 snd.mana_percent = 100
 snd.health_percent = 100
 snd.target_numbed = false
 snd.target_has_aura = true
 snd.need_leech_aura = true
 snd.flamewreathed_limb = ""
 snd.gorged = ""
 snd.gravity = 0
 color_enemy_affs()
 color_enemy_limbs()
end

function snd.set_faction()

 if snd.city == "Spinesreach" or snd.city == "Bloodloch" then
  snd.faction = "shadow"
	snd.allies = snd.shadow
	snd.enemies = snd.spirit
 elseif snd.city == "Enorian" or snd.city == "Duiran" then
  snd.faction = "spirit"
	snd.allies = snd.spirit
	snd.enemies = snd.shadow
 end

end

function snd.target_locked()
 local lock_affs = {
  "slickness",
	"anorexia",
	"asthma",
	"paresis"
 }
 
 local locked = true
 
	for aff in pairs(lock_affs) do
		if not snd.checkAff(lock_affs[aff]) then
			locked = false
		end
	end
	
	if not snd.checkAff("stupidity") and not (snd.checkAff("impatience") or snd.checkAff("destroyed_throat")) then
		locked = false
	end
	
	return locked
end


function snd.missingAff(list, separator)
	local list = string.split(list, separator)
	local tab = {}
	for k, v in pairs(list) do
		if v == "stupidity" then
			if not snd.checkAff(v) and not snd.checkAff("impatience") then
				table.insert(tab, v)
			end
			elseif not snd.checkAff(v) then
				table.insert(tab, v)
			end
		end
	return tab
end

function snd.no_parry()
 no_parry = false
 noparryaffs = {
 "distortion",
 "frozen",
 "punished_arms",
 "paresis",
 "paralysis",
 "asleep",
 "webbed",
 "transfixed",
 }
 for aff in pairs(noparryaffs) do
  if snd.checkAff(noparryaffs[aff]) then
	 no_parry = true
	end
 end
 if (snd.limb_dmg["left arm"] &gt;= 33.33) and (snd.limb_dmg["right arm"] &gt;= 33.33) then
  no_parry = true
 end
 return no_parry
end

function snd.proned()
 prone = false
 if snd.target_prone then
  prone = true
 end
 proneaffs = {
  "frozen",
--	"paralysis",
	"transfixed",
	"webbed",
	"impaled",
	"thighlock",
	"armpitlock",
	"necklock"
 }
 for aff in pairs(proneaffs) do
  if snd.checkAff(proneaffs[aff]) then
	 prone = true
	end
 end
 return prone
end

function snd.venomEffect(venom)
	local aff = ""
	if venom == "epseth" then
		if snd.checkAff("a broken left leg") then
			aff = "a broken right leg"
		else
			aff = "a broken left leg"
		end
	elseif venom == "epteth" then
		if snd.checkAff("a broken left arm") then
			aff = "a broken right arm"
		else
			aff = "a broken left arm"
		end
	elseif venom == "prefarar" then
		if snd.checkAff("hearing") then
			aff = "sensitivity"
		else
			aff = "hearing"
		end
	elseif venom == "oculus" then
		if snd.checkAff("sight") then
			aff = "blurry vision"
		else
			aff = "sight"
		end
	elseif venom == "cripple" then
		if snd.checkAff("crippled") then
			aff = "crippled body"
		else
			aff = "crippled"
		end
	elseif venom == "disrupt" then
		if snd.checkAff("mental disruption") then
			aff = "physical disruption"
		else
			aff = "mental disruption"
		end
	else
		for i in pairs(snd.effects) do
			if snd.effects[i] == venom then
				aff = i
			end
		end
	end
	return aff
end

function snd.check_aegis()

	local reserves = tonumber(gmcp.Char.Vitals.residual)
	
	if reserves &gt;= 60 then
		return true
	else
		return false
	end

end</script>
						<eventHandlerList />
					</Script>
					<Script isActive="yes" isFolder="no">
						<name>chat_start</name>
						<packageName></packageName>
						<script>function chat_start()
--work in progress
	local channel = gmcp.Comm.Channel.Start
	local talker = gmcp.Comm.Channel.Text.talker
	local text = gmcp.Comm.Channel.Text.text

--will maybe be useful at some point but not used right now. Not sure how to append a specific set of text that isn't gotten through the append func.
--text = string.gsub (text, string.char (27) .. "%[(.-)m", "")
--demonnic.chat:append(snd.channel_list[channel], text)
	snd.channel_list = {
	["newbie"] = "Misc",
	["market"] = "Misc",
	["web"] = "Web",
	["ct"] = "City",
	["cnt"] = "Org",
	["gt"] = "Guild",
	["gts"] = "Guild",
	["clt"] = "Misc",
	["tell"] = "Tells",
	["says"] = "Local",
	["ot"] = "Misc",
}

	if channel == "web" and snd.toggles.listening and table.contains(snd.callers, talker) then
			if text:find("Target") then
				local check = string.match(text, "Target: (%w+)%.")
				if check:lower()~= snd.target:lower() then
					expandAlias("t " .. check)
				end
			end
	end

end</script>
						<eventHandlerList>
							<string>gmcp.Comm.Channel.Start</string>
						</eventHandlerList>
					</Script>
					<Script isActive="yes" isFolder="no">
						<name>randoms</name>
						<packageName></packageName>
						<script>snd.randomspirit = {}
snd.randomshadow = {}</script>
						<eventHandlerList />
					</Script>
					<ScriptGroup isActive="yes" isFolder="yes">
						<name>Class specific stuff</name>
						<packageName></packageName>
						<script></script>
						<eventHandlerList />
						<Script isActive="yes" isFolder="no">
							<name>Archivist aff picking</name>
							<packageName></packageName>
							<script>snd.shape_affs = {
		"merciful",
		"masochism",
		"berserking",
		"recklessness",
		"laxity",
		"lovers_effect",
		"peace",
		"magnanimity",
		"dizziness",
		"faintness",
		"epilepsy",
		"shyness",
}

snd.shape_attacks = {
		merciful = "circle",
		masochism = "circle",
		berserking = "circle",
		recklessness = "circle",
		laxity = "triangle",
		lovers_effect = "triangle",
		peace = "triangle",
		magnanimity = "triangle",
		dizziness = "square",
		faintness = "square",
		epilepsy = "square",
		shyness = "square",
}
</script>
							<eventHandlerList />
						</Script>
						<Script isActive="yes" isFolder="no">
							<name>Sentinel Scripts and Tables</name>
							<packageName></packageName>
							<script>snd.dhuriv_affs = {
		"impatience",
		"destroyed_throat",
		"heartflutter",
		"confusion",
		"lethargy",
		"prone",
		"impairment",
		"reave",
		"claustrophobia",
		"agoraphobia",
		"loneliness",
		"berserking",
		"frozen",
		"shivering",
}

snd.dhuriv_first = {
		"reave",
		"slash",
		"twirl",
		"weaken", 
		"trip",
		"slam",
		"crosscut",
		"throatcrush",
		"daunt",
		"icewyrm",
}

snd.dhuriv_second = {
		"stab",
		"heartbreaker",
		"gouge",
		"thrust",
		"flourish",
}

snd.dhuriv_attacks = {
		reave = "reave",
		impatience = "gouge",
		destroyed_throat = "throatcrush",
		heartflutter = "heartbreaker",
		confusion = "twirl",
		lethargy = "weaken left leg",
		prone = "trip",
		epilepsy = "slam",
		impairment = "crosscut",
		claustrophobia = "daunt",
		agoraphobia = "daunt",
		loneliness = "daunt",
		berserking = "daunt",
		frozen = "icewyrm",
		shivering = "icewyrm",
}

snd.daunt_animals = {
		["claustrophobia"] = "order bear daunt ",
		["agoraphobia"] = "order raloth daunt ",
		["loneliness"] = "order crocodile daunt ",
		["berserking"] = "order cockatrice daunt ",
		["frozen"] = "order icewyrm icebreath ",
		["shivering"] = "order icewyrm icebreath ",
		
}

function Sentinel_Attack_Choice(giving, left, right) -- requires to be sent a list of affs and 2 variables for 
																										 -- it to fill and send back with choices.

	  if snd.parried_limb == "left leg" then snd.dhuriv_attacks["lethargy"] = "weaken right leg" end --check if parrying

		local right_venom_only = false -- used for when we choose a daunt aff
		
----------An example of how you might change your aff list. If current offense mode is mental affs, we want to make sure
----------they have impatience, so check if they have impatience and paresis. If no to both, add paresis to top of stack.
	
		if not snd.checksomeAffs({"paresis", "impatience"}, 1) and snd.current_offense == "SentMental" then
			table.insert(giving, 1, "paresis")
		end
		
		if snd.current_offense == "SentVLock" then
		
			local missing = snd.missingAff("asthma/slickness", "/")
		
  		if #missing == 0 and snd.no_parry() and snd.checksomeAffs({"weariness", "clumsiness", "hypochondria"}, 1) then
  			table.insert(giving, 1, "destroyed_throat")
  		end
			
			if not snd.checkAff("destroyed_throat") and snd.checkAff("anorexia") then
				table.insert(giving, 1, "impatience")
				table.insert(giving, 1, "stupidity")
			end
	
		end
		
		if snd.current_offense == "SentImpale" or snd.current_offense == "SentSalve" then
				
			if not snd.enemy_restoration_balance then
				table.insert(giving, 1, "destroyed_throat")
			end
		
		end

		
		
----------Below here the function picks affs for you based on your aff list sent over and any changes made by checks above.

		for i, v in pairs(giving) do
			if not table.contains(snd.target_has, giving[i]) then
				if left == "none" then
					if snd.used.shield or snd.used.rebounding then
						left = "reave"
					elseif table.contains(snd.dhuriv_first, snd.dhuriv_attacks[v]) then
			  			left = v
							if left == "destroyed_throat" then right = nil end
							if (snd.dhuriv_attacks[left] == "daunt" or snd.dhuriv_attacks[left] == "icewyrm") then right_venom_only = true end

					elseif table.contains(snd.dhuriv_second, snd.dhuriv_attacks[v]) and right == "none" then
						right = v
						
					elseif table.contains(snd.effects, i) and not snd.checkAff(giving[i]) then
						if left == "none" and right ~= giving[i] then
							left = giving[i]
						end
					elseif not snd.checkAff(giving[i]) then
						left = v
					end
				end

				if right == "none" then
					if not right_venom_only and table.contains(snd.dhuriv_first, snd.dhuriv_attacks[v]) and table.contains(snd.effects, left) and left ~= "paresis" and v~= "destroyed_throat" then
						right = left
			  			left = v
								
					elseif not right_venom_only and table.contains(snd.dhuriv_second, snd.dhuriv_attacks[v]) then
						right = v
						
					elseif table.contains(snd.effects, v) and not snd.checkAff(giving[i]) then
						if left ~= giving[i] then
							right = giving[i]
						end
						
					end
				end
			end
		end
			
		return left, right ---- Return our attack choices back to the main alias.
	end</script>
							<eventHandlerList />
						</Script>
						<Script isActive="yes" isFolder="no">
							<name>Indorani card table</name>
							<packageName></packageName>
							<script>snd.indorani_cards = { 
	stupidity = "moon",
	confusion = "moon",
	epilepsy = "moon",
	anorexia = "moon",
	berserking = "moon",
	weariness = "moon",
	impatience = "moon",
	recklessness = "moon",

	paresis = "sun",
	asthma = "sun",
	clumsiness = "sun",
	vomiting = "sun",
	lethargy = "sun",
	sensitivity = "sun",
	hearing = "sun",
	hypersomnia = "sun",
	superstition = "sun",
	
}</script>
							<eventHandlerList />
						</Script>
					</ScriptGroup>
				</ScriptGroup>
				<ScriptGroup isActive="yes" isFolder="yes">
					<name>Ylem</name>
					<packageName></packageName>
					<script>-------------------------------------------------
--         Put your Lua functions here.        --
--                                             --
-- Note that you can also use external Scripts --
-------------------------------------------------
</script>
					<eventHandlerList />
					<Script isActive="yes" isFolder="no">
						<name>ylem variables</name>
						<packageName></packageName>
						<script>
snd.ylem_loaded = true

ylm = ylm or {}

ylm.active = false
ylm.next_zone = "none"
ylm.foci = 0
</script>
						<eventHandlerList />
					</Script>
					<Script isActive="yes" isFolder="no">
						<name>path</name>
						<packageName></packageName>
						<script>
ylm.path = {

--Eastern Ithmia
v5730 = "19323",
--Dolbodi Campsite
v19323 = "42831",
--Vintal Glade
v42831 = "21001",
--Maguir Fissure
v21001 = "976",
--Western Ithmia
v976 = "59912",
--Abelaas
v59912 = "767",
--Northern Ithmia
v767 = "19810",
--Kalydian Forest
v19810 = "19889",
--edge of the Kalydian
v19889 = "9930", --broke
--Dry Plains
v9930 = "62996",
--Fractal Bloom
v62996 = "4089",
--Northern Road
v4089 = "9494",
--Gilded Rose Inn
v9494 = "19987",
--Ayhesa Cliffs
v19987 = "64288",
--Tasur'ke
v64288 = "55101",
--Forgotten Dome
v55101 = "18462",
--Rebels Ridge
v18462 = "4163",
--Northern Plains
v4163 = "3273",
--Fengard Keep
v3273 = "63351",
--Dromse Thicket
v63351 = "20932",
--Caverns of Telfinne
v20932 = "20281",
--Three Rock Outpost
v20281 = "15820",
--Southern Tundra
v15820 = "21908",
--Halls of Tornos
v21908 = "53660",
--Tsinkin Municipality
v53660 = "15955",
--
v15955 = "62383",
v62383 = "50792",
v50792 = "48594",
v48594 = "48216",
v48216 = "18187",
v18187 = "25969",
v25969 = "49875",
v49875 = "18601",
v18601 = "22477",
v22477 = "1014",
v1014 = "33248",
v33248 = "13466",
v13466 = "14405",
v14405 = "8818",
v8818 = "20855",
v20855 = "58675",
v58675 = "22702",
v22702 = "13425",
v13425 = "23128",
v23128 = "23791",
v23791 = "54482",
v54482 = "22824",
v22824 = "58682",
v58682 = "16282",
v16282 = "5675",
v5675 = "23899",
v23899 = "54172",
v54172 = "32908",
v32908 = "1681",
v1681 = "20389",
v20389 = "13253",
v13253 = "26690",
v26690 = "26668",
v26668 = "46341",
v46341 = "32065",
v32065 = "45483",
v45483 = "14696",
v14696 = "10041",
v10041 = "35217",
v35217 = "60845",
v60845 = "57256",
v57256 = "35117",
v35117 = "26920",
v26920 = "1429",
v1429 = "36677",
v36677 = "20450",
v20450 = "31599",
v31599 = "19293",
v19293 = "56942",
v56942 = "1602",
v1602 = "19344",
v19344 = "57934",
v57934 = "17612",
v17612 = "62102",
v62102 = "4315",
v4315 = "15241",
v15241 = "11312",
v11312 = "19602",
v19602 = "28521",
v28521 = "25725",
v25725 = "4354",
v4354 = "32237",
v32237 = "35973",
v35973 = "16438",
v16438 = "26820",
v26820 = "38090",
v38090 = "27704",
v27704 = "18242",
v18242 = "1289",
v1289 = "47147",
v47147 = "19626",
v19626 = "56782",
v56782 = "16425",
v16425 = "283",
v283 = "10811",
v10811 = "34760",
v34760 = "11819",
v11819 = "32725",
v32725 = "1010",
v1010 = "60173",
v60173 = "4961",
v4961 = "61928",
v61928 = "4820",
v4820 = "49749",
v49749 = "36270",
v36270 = "1000",
v1000 = "25408",
v25408 = "59862",
v59862 = "56511",
v56511 = "1773",
v1773 = "3106",
v3106 = "11634",
v11634 = "11962",
v11962 = "11994",
v11994 = "12332",
v12332 = "300",
v300 = "11412",
v11412 = "19854",
v19854 = "18425",
v18425 = "55276",
v55276 = "58912",
v58912 = "4114",
v4114 = "2006",
v2006 = "24548",
v24548 = "38894",
v38894 = "16274",
v16274 = "2022",
v2022 = "19320",
v19320 = "5028",
v5028 = "3887",
v3887 = "57334",
v57334 = "20754",
v20754 = "24628",
v24628 = "23202",
v23202 = "22866",
v22866 = "21286",
v21286 = "57559",
v57559 = "4964",
v4964 = "9853",
v9853 = "15761",
v15761 = "59609",
v59609 = "10086",
v10086 = "10728",
v10728 = "16584",
v16584 = "16706",
v16706 = "60726",
v60726 = "15344",
v15344 = "17069",
v17069 = "city"
}</script>
						<eventHandlerList />
					</Script>
				</ScriptGroup>
				<ScriptGroup isActive="yes" isFolder="yes">
					<name>Questing</name>
					<packageName></packageName>
					<script>-------------------------------------------------
--         Put your Lua functions here.        --
--                                             --
-- Note that you can also use external Scripts --
-------------------------------------------------
</script>
					<eventHandlerList />
					<Script isActive="yes" isFolder="no">
						<name>quest variables</name>
						<packageName></packageName>
						<script>
snd.questing_loaded = true

snd.quest_items = {
["Three Widows"] = {"a handful of hay", "a packet of seeds", "a simple net", "a simple pickaxe", "a small grey rock"},
["Mount Humgurd"] = {"a chunk of mixed ore"},
["the Siroccian Mountains"] = {"a lump of flaking coal", "a rock of silver ore", "a hematite ore of iron", "a gold nugget"},
}</script>
						<eventHandlerList />
					</Script>
					<Script isActive="yes" isFolder="no">
						<name>run quests</name>
						<packageName></packageName>
						<script>
function snd.runQuests()
 if snd.quest_items[snd.my.area] then
  local need_items = {}
  for item in pairs(snd.items) do
	 if table.contains(snd.quest_items[snd.my.area], item) then
	  for id in pairs(snd.items[item]) do
		 table.insert(need_items, snd.items[item][id])
		end
	 end
	end
	if #need_items &gt;= 1 and not snd.waiting.quest_get then
	 snd.send("qeb get "..table.concat(need_items, snd.sep.."get "))
	 snd.waiting.quest_get = true
	 tempTimer(snd.delay(), [[snd.waiting.quest_get = false]])
	end
 end
 if snd.my.area == "the mines of Mount Helba" then
	if snd.items["a rich vein of iron ore"] or snd.items["a vein of iron ore"] then
	 snd.send("qeb mine vein")
	--elseif snd.items["a pile of rubble"] then
  -- snd.send("dig rubble")
  end
 end
end</script>
						<eventHandlerList />
					</Script>
				</ScriptGroup>
				<ScriptGroup isActive="yes" isFolder="yes">
					<name>Fishing</name>
					<packageName></packageName>
					<script>-------------------------------------------------
--         Put your Lua functions here.        --
--                                             --
-- Note that you can also use external Scripts --
-------------------------------------------------
</script>
					<eventHandlerList />
					<Script isActive="yes" isFolder="no">
						<name>GetFishingHoles</name>
						<packageName></packageName>
						<script>function get_fishing_holes(search_string, display_results, display_full_results)

	if not fishing_holes then
		load_fishing_db()
	end

	search_string = search_string:lower()
	local results = {}
	local result_strings = {}

	for k,v in pairs(fishing_holes) do 

		v.fish = v.fish or {}
		local matched_room = false
		-- Look for typetext.
		if v.type:lower():find(search_string) then
			table.insert(results, v) 
			result_strings[v.name] = v.type
			matched_room = true
		end

		-- Look for nametext.
		if not matched_room and k:lower():find(search_string) then
			table.insert(results, v) 
			result_strings[v.name] = k
			matched_room = true
		end
	
		-- Look for fish.
		if not matched_room then
			for _, fishtype in pairs(v.fish) do
				if fishtype:lower():find(search_string) then
					local found = false
					for _, j in pairs(results) do
						if j.name == v.name and j.fish == fishtype then 
							found = true
							break
						end
					end
					if not found then 
						table.insert(results, v) 
						result_strings[v.name] = fishtype
					end
				end
			end
		end
	end

	if display_results then
		if #results == 0 then
			hecho("|cccccccNo results for '" .. search_string .. "'.\n")
		else
	
			for k,v in pairs(result_strings) do
				local startstr, endstr = result_strings[k]:lower():find(search_string)
				result_strings[k] = result_strings[k]:sub(1, startstr-1) .. "|cff0000" .. result_strings[k]:sub(startstr, endstr) .. "|ccccccc" .. result_strings[k]:sub(endstr+1)
			end

			hecho("|cccccccResults for '" .. search_string .. "':\n")
			for k,v in pairs(results) do
				if display_full_results then
					hecho("   " .. v.name:title() .. string.rep(" ", 30 - v.name:len()) .. "(" .. result_strings[v.name] .. ")\n")
					hecho("     " .. v.type:title() .. ", " .. #v.fish .. " type(s) of fish, fishing vnum v" .. v.rooms[1] .. ".\n\n")
				else
					hecho("   " .. v.name:title() .. string.rep(" ", 30 - v.name:len()) .. "(" .. result_strings[v.name] .. ")\n")
				end
			end
			echo("\n")
		end
	end

	return results
end
</script>
						<eventHandlerList />
					</Script>
					<Script isActive="yes" isFolder="no">
						<name>SaveLoad</name>
						<packageName></packageName>
						<script>function load_fishing_db()
	local path = getMudletHomeDir().."/aetoliaFishingDB.sav"
	fishing_holes = {}
	if io.exists(path) then
		table.load(path,fishing_holes)
	end
end

function save_fishing_db()
  if not fishing_holes then return false end
  table.save(getMudletHomeDir().."/aetoliaFishingDB.sav", fishing_holes)
end
</script>
						<eventHandlerList />
					</Script>
					<Script isActive="yes" isFolder="no">
						<name>Fishing function</name>
						<packageName></packageName>
						<script>function Fishingfunction() 

	if not Fishingcast then
		send("qeb fishing cast")
	elseif Fishingcaught then
		if Reeling == "reel" then
			send("qeb fishing reel")
		elseif Reeling == "lead" then
		send("qeb fishing lead")
		elseif Reeling == "cut" then
			send("qeb fishing cut")
		end
		--bucket check?
	end



end</script>
						<eventHandlerList />
					</Script>
				</ScriptGroup>
			</ScriptGroup>
		</ScriptGroup>
	</ScriptPackage>
	<KeyPackage>
		<KeyGroup isActive="yes" isFolder="yes">
			<name>Sunder v4.181</name>
			<packageName>Sunder v4.181</packageName>
			<script></script>
			<command></command>
			<keyCode>0</keyCode>
			<keyModifier>0</keyModifier>
			<KeyGroup isActive="yes" isFolder="yes">
				<name>Sunder</name>
				<packageName></packageName>
				<script></script>
				<command></command>
				<keyCode>-1</keyCode>
				<keyModifier>-1</keyModifier>
				<KeyGroup isActive="yes" isFolder="yes">
					<name>Movement</name>
					<packageName></packageName>
					<script></script>
					<command></command>
					<keyCode>-1</keyCode>
					<keyModifier>-1</keyModifier>
					<Key isActive="yes" isFolder="no">
						<name>north</name>
						<packageName></packageName>
						<script>expandAlias("n", false)</script>
						<command></command>
						<keyCode>56</keyCode>
						<keyModifier>536870912</keyModifier>
					</Key>
					<Key isActive="yes" isFolder="no">
						<name>south</name>
						<packageName></packageName>
						<script>expandAlias("s", false)</script>
						<command></command>
						<keyCode>50</keyCode>
						<keyModifier>536870912</keyModifier>
					</Key>
					<Key isActive="yes" isFolder="no">
						<name>south</name>
						<packageName></packageName>
						<script>expandAlias("s", false)</script>
						<command></command>
						<keyCode>50</keyCode>
						<keyModifier>536870912</keyModifier>
					</Key>
					<Key isActive="yes" isFolder="no">
						<name>east</name>
						<packageName></packageName>
						<script>expandAlias("e", false)</script>
						<command></command>
						<keyCode>54</keyCode>
						<keyModifier>536870912</keyModifier>
					</Key>
					<Key isActive="yes" isFolder="no">
						<name>west</name>
						<packageName></packageName>
						<script>expandAlias("w", false)</script>
						<command></command>
						<keyCode>52</keyCode>
						<keyModifier>536870912</keyModifier>
					</Key>
					<Key isActive="yes" isFolder="no">
						<name>northeast</name>
						<packageName></packageName>
						<script>expandAlias("ne", false)</script>
						<command></command>
						<keyCode>57</keyCode>
						<keyModifier>536870912</keyModifier>
					</Key>
					<Key isActive="yes" isFolder="no">
						<name>northwest</name>
						<packageName></packageName>
						<script>expandAlias("nw", false)</script>
						<command></command>
						<keyCode>55</keyCode>
						<keyModifier>536870912</keyModifier>
					</Key>
					<Key isActive="yes" isFolder="no">
						<name>southeast</name>
						<packageName></packageName>
						<script>expandAlias("se", false)</script>
						<command></command>
						<keyCode>51</keyCode>
						<keyModifier>536870912</keyModifier>
					</Key>
					<Key isActive="yes" isFolder="no">
						<name>southwest</name>
						<packageName></packageName>
						<script>expandAlias("sw", false)</script>
						<command></command>
						<keyCode>49</keyCode>
						<keyModifier>536870912</keyModifier>
					</Key>
					<Key isActive="yes" isFolder="no">
						<name>in</name>
						<packageName></packageName>
						<script>expandAlias("in", false)</script>
						<command></command>
						<keyCode>53</keyCode>
						<keyModifier>536870912</keyModifier>
					</Key>
					<Key isActive="yes" isFolder="no">
						<name>out</name>
						<packageName></packageName>
						<script>expandAlias("out", false)</script>
						<command></command>
						<keyCode>43</keyCode>
						<keyModifier>536870912</keyModifier>
					</Key>
					<Key isActive="yes" isFolder="no">
						<name>up</name>
						<packageName></packageName>
						<script>expandAlias("up", false)</script>
						<command></command>
						<keyCode>48</keyCode>
						<keyModifier>536870912</keyModifier>
					</Key>
					<Key isActive="yes" isFolder="no">
						<name>down</name>
						<packageName></packageName>
						<script>expandAlias("d", false)</script>
						<command></command>
						<keyCode>46</keyCode>
						<keyModifier>536870912</keyModifier>
					</Key>
				</KeyGroup>
			</KeyGroup>
		</KeyGroup>
	</KeyPackage>
	<VariablePackage>
		<HiddenVariables>
			<name>_sep</name>
		</HiddenVariables>
	</VariablePackage>
</MudletPackage>
